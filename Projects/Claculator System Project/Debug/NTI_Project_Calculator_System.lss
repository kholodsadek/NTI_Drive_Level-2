
NTI_Project_Calculator_System.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005b32  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000016c  00800060  00005b32  00005bc6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  008001cc  008001cc  00005d32  2**0
                  ALLOC
  3 .stab         00003e40  00000000  00000000  00005d34  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000186f  00000000  00000000  00009b74  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000260  00000000  00000000  0000b3e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000002b5  00000000  00000000  0000b643  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003996  00000000  00000000  0000b8f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001ac5  00000000  00000000  0000f28e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000019a4  00000000  00000000  00010d53  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000280  00000000  00000000  000126f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000003d0  00000000  00000000  00012978  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00002508  00000000  00000000  00012d48  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000080  00000000  00000000  00015250  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 86 16 	jmp	0x2d0c	; 0x2d0c <__vector_1>
       8:	0c 94 b9 16 	jmp	0x2d72	; 0x2d72 <__vector_2>
       c:	0c 94 ec 16 	jmp	0x2dd8	; 0x2dd8 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e3       	ldi	r30, 0x32	; 50
      68:	fb e5       	ldi	r31, 0x5B	; 91
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ac 3c       	cpi	r26, 0xCC	; 204
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	ac ec       	ldi	r26, 0xCC	; 204
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a2 3d       	cpi	r26, 0xD2	; 210
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <main>
      8a:	0c 94 97 2d 	jmp	0x5b2e	; 0x5b2e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 b2 11 	call	0x2364	; 0x2364 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <__subsf3>
      be:	0e 94 70 12 	call	0x24e0	; 0x24e0 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 70 12 	call	0x24e0	; 0x24e0 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <__fixunssfdi>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 60 2d 	jmp	0x5ac0	; 0x5ac0 <__prologue_saves__>
      f6:	7b 01       	movw	r14, r22
      f8:	8c 01       	movw	r16, r24
      fa:	20 e0       	ldi	r18, 0x00	; 0
      fc:	30 e0       	ldi	r19, 0x00	; 0
      fe:	40 e8       	ldi	r20, 0x80	; 128
     100:	5f e3       	ldi	r21, 0x3F	; 63
     102:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__ltsf2>
     106:	88 23       	and	r24, r24
     108:	4c f4       	brge	.+18     	; 0x11c <__fixunssfdi+0x32>
     10a:	aa 24       	eor	r10, r10
     10c:	bb 24       	eor	r11, r11
     10e:	cc 24       	eor	r12, r12
     110:	dd 24       	eor	r13, r13
     112:	ee 24       	eor	r14, r14
     114:	ff 24       	eor	r15, r15
     116:	00 e0       	ldi	r16, 0x00	; 0
     118:	10 e0       	ldi	r17, 0x00	; 0
     11a:	86 c0       	rjmp	.+268    	; 0x228 <__fixunssfdi+0x13e>
     11c:	c8 01       	movw	r24, r16
     11e:	b7 01       	movw	r22, r14
     120:	20 e0       	ldi	r18, 0x00	; 0
     122:	30 e0       	ldi	r19, 0x00	; 0
     124:	40 e8       	ldi	r20, 0x80	; 128
     126:	5f e4       	ldi	r21, 0x4F	; 79
     128:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__ltsf2>
     12c:	88 23       	and	r24, r24
     12e:	54 f4       	brge	.+20     	; 0x144 <__fixunssfdi+0x5a>
     130:	c8 01       	movw	r24, r16
     132:	b7 01       	movw	r22, r14
     134:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     138:	5b 01       	movw	r10, r22
     13a:	6c 01       	movw	r12, r24
     13c:	ee 24       	eor	r14, r14
     13e:	ff 24       	eor	r15, r15
     140:	87 01       	movw	r16, r14
     142:	72 c0       	rjmp	.+228    	; 0x228 <__fixunssfdi+0x13e>
     144:	c8 01       	movw	r24, r16
     146:	b7 01       	movw	r22, r14
     148:	20 e0       	ldi	r18, 0x00	; 0
     14a:	30 e0       	ldi	r19, 0x00	; 0
     14c:	40 e8       	ldi	r20, 0x80	; 128
     14e:	5f e5       	ldi	r21, 0x5F	; 95
     150:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__ltsf2>
     154:	87 fd       	sbrc	r24, 7
     156:	0f c0       	rjmp	.+30     	; 0x176 <__fixunssfdi+0x8c>
     158:	aa 24       	eor	r10, r10
     15a:	aa 94       	dec	r10
     15c:	bb 24       	eor	r11, r11
     15e:	ba 94       	dec	r11
     160:	cc 24       	eor	r12, r12
     162:	ca 94       	dec	r12
     164:	dd 24       	eor	r13, r13
     166:	da 94       	dec	r13
     168:	ee 24       	eor	r14, r14
     16a:	ea 94       	dec	r14
     16c:	ff 24       	eor	r15, r15
     16e:	fa 94       	dec	r15
     170:	0f ef       	ldi	r16, 0xFF	; 255
     172:	1f ef       	ldi	r17, 0xFF	; 255
     174:	59 c0       	rjmp	.+178    	; 0x228 <__fixunssfdi+0x13e>
     176:	c8 01       	movw	r24, r16
     178:	b7 01       	movw	r22, r14
     17a:	20 e0       	ldi	r18, 0x00	; 0
     17c:	30 e0       	ldi	r19, 0x00	; 0
     17e:	40 e8       	ldi	r20, 0x80	; 128
     180:	5f e2       	ldi	r21, 0x2F	; 47
     182:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
     186:	7b 01       	movw	r14, r22
     188:	8c 01       	movw	r16, r24
     18a:	22 24       	eor	r2, r2
     18c:	33 24       	eor	r3, r3
     18e:	21 01       	movw	r4, r2
     190:	90 e1       	ldi	r25, 0x10	; 16
     192:	a9 2e       	mov	r10, r25
     194:	b1 2c       	mov	r11, r1
     196:	c1 2c       	mov	r12, r1
     198:	d1 2c       	mov	r13, r1
     19a:	c0 e0       	ldi	r28, 0x00	; 0
     19c:	d0 e0       	ldi	r29, 0x00	; 0
     19e:	61 e0       	ldi	r22, 0x01	; 1
     1a0:	70 e0       	ldi	r23, 0x00	; 0
     1a2:	80 e0       	ldi	r24, 0x00	; 0
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	0a 2c       	mov	r0, r10
     1a8:	04 c0       	rjmp	.+8      	; 0x1b2 <__fixunssfdi+0xc8>
     1aa:	66 0f       	add	r22, r22
     1ac:	77 1f       	adc	r23, r23
     1ae:	88 1f       	adc	r24, r24
     1b0:	99 1f       	adc	r25, r25
     1b2:	0a 94       	dec	r0
     1b4:	d2 f7       	brpl	.-12     	; 0x1aa <__fixunssfdi+0xc0>
     1b6:	0e 94 c4 12 	call	0x2588	; 0x2588 <__floatunsisf>
     1ba:	3b 01       	movw	r6, r22
     1bc:	4c 01       	movw	r8, r24
     1be:	c8 01       	movw	r24, r16
     1c0:	b7 01       	movw	r22, r14
     1c2:	a4 01       	movw	r20, r8
     1c4:	93 01       	movw	r18, r6
     1c6:	0e 94 b2 11 	call	0x2364	; 0x2364 <__gesf2>
     1ca:	88 23       	and	r24, r24
     1cc:	64 f0       	brlt	.+24     	; 0x1e6 <__fixunssfdi+0xfc>
     1ce:	2a 28       	or	r2, r10
     1d0:	3b 28       	or	r3, r11
     1d2:	4c 28       	or	r4, r12
     1d4:	5d 28       	or	r5, r13
     1d6:	c8 01       	movw	r24, r16
     1d8:	b7 01       	movw	r22, r14
     1da:	a4 01       	movw	r20, r8
     1dc:	93 01       	movw	r18, r6
     1de:	0e 94 a6 10 	call	0x214c	; 0x214c <__divsf3>
     1e2:	7b 01       	movw	r14, r22
     1e4:	8c 01       	movw	r16, r24
     1e6:	d6 94       	lsr	r13
     1e8:	c7 94       	ror	r12
     1ea:	b7 94       	ror	r11
     1ec:	a7 94       	ror	r10
     1ee:	21 96       	adiw	r28, 0x01	; 1
     1f0:	c5 30       	cpi	r28, 0x05	; 5
     1f2:	d1 05       	cpc	r29, r1
     1f4:	a1 f6       	brne	.-88     	; 0x19e <__fixunssfdi+0xb4>
     1f6:	c8 01       	movw	r24, r16
     1f8:	b7 01       	movw	r22, r14
     1fa:	20 e0       	ldi	r18, 0x00	; 0
     1fc:	30 e0       	ldi	r19, 0x00	; 0
     1fe:	40 e8       	ldi	r20, 0x80	; 128
     200:	5f e4       	ldi	r21, 0x4F	; 79
     202:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
     206:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     20a:	5b 01       	movw	r10, r22
     20c:	6c 01       	movw	r12, r24
     20e:	9b 01       	movw	r18, r22
     210:	a6 01       	movw	r20, r12
     212:	60 e0       	ldi	r22, 0x00	; 0
     214:	70 e0       	ldi	r23, 0x00	; 0
     216:	80 e0       	ldi	r24, 0x00	; 0
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	02 2d       	mov	r16, r2
     21c:	0e 94 3d 13 	call	0x267a	; 0x267a <__ashldi3>
     220:	59 01       	movw	r10, r18
     222:	6a 01       	movw	r12, r20
     224:	7b 01       	movw	r14, r22
     226:	8c 01       	movw	r16, r24
     228:	95 01       	movw	r18, r10
     22a:	a6 01       	movw	r20, r12
     22c:	b7 01       	movw	r22, r14
     22e:	c8 01       	movw	r24, r16
     230:	cd b7       	in	r28, 0x3d	; 61
     232:	de b7       	in	r29, 0x3e	; 62
     234:	e2 e1       	ldi	r30, 0x12	; 18
     236:	0c 94 7c 2d 	jmp	0x5af8	; 0x5af8 <__epilogue_restores__>

0000023a <__udivdi3>:
     23a:	ae e5       	ldi	r26, 0x5E	; 94
     23c:	b0 e0       	ldi	r27, 0x00	; 0
     23e:	e3 e2       	ldi	r30, 0x23	; 35
     240:	f1 e0       	ldi	r31, 0x01	; 1
     242:	0c 94 60 2d 	jmp	0x5ac0	; 0x5ac0 <__prologue_saves__>
     246:	a8 e0       	ldi	r26, 0x08	; 8
     248:	4e 01       	movw	r8, r28
     24a:	08 94       	sec
     24c:	81 1c       	adc	r8, r1
     24e:	91 1c       	adc	r9, r1
     250:	f4 01       	movw	r30, r8
     252:	6a 2e       	mov	r6, r26
     254:	11 92       	st	Z+, r1
     256:	6a 94       	dec	r6
     258:	e9 f7       	brne	.-6      	; 0x254 <__udivdi3+0x1a>
     25a:	29 83       	std	Y+1, r18	; 0x01
     25c:	3a 83       	std	Y+2, r19	; 0x02
     25e:	4b 83       	std	Y+3, r20	; 0x03
     260:	5c 83       	std	Y+4, r21	; 0x04
     262:	6d 83       	std	Y+5, r22	; 0x05
     264:	7e 83       	std	Y+6, r23	; 0x06
     266:	8f 83       	std	Y+7, r24	; 0x07
     268:	98 87       	std	Y+8, r25	; 0x08
     26a:	ce 01       	movw	r24, r28
     26c:	09 96       	adiw	r24, 0x09	; 9
     26e:	fc 01       	movw	r30, r24
     270:	11 92       	st	Z+, r1
     272:	aa 95       	dec	r26
     274:	e9 f7       	brne	.-6      	; 0x270 <__udivdi3+0x36>
     276:	a9 86       	std	Y+9, r10	; 0x09
     278:	ba 86       	std	Y+10, r11	; 0x0a
     27a:	cb 86       	std	Y+11, r12	; 0x0b
     27c:	dc 86       	std	Y+12, r13	; 0x0c
     27e:	ed 86       	std	Y+13, r14	; 0x0d
     280:	fe 86       	std	Y+14, r15	; 0x0e
     282:	0f 87       	std	Y+15, r16	; 0x0f
     284:	18 8b       	std	Y+16, r17	; 0x10
     286:	29 84       	ldd	r2, Y+9	; 0x09
     288:	3a 84       	ldd	r3, Y+10	; 0x0a
     28a:	4b 84       	ldd	r4, Y+11	; 0x0b
     28c:	5c 84       	ldd	r5, Y+12	; 0x0c
     28e:	ed 84       	ldd	r14, Y+13	; 0x0d
     290:	fe 84       	ldd	r15, Y+14	; 0x0e
     292:	0f 85       	ldd	r16, Y+15	; 0x0f
     294:	18 89       	ldd	r17, Y+16	; 0x10
     296:	69 80       	ldd	r6, Y+1	; 0x01
     298:	7a 80       	ldd	r7, Y+2	; 0x02
     29a:	8b 80       	ldd	r8, Y+3	; 0x03
     29c:	9c 80       	ldd	r9, Y+4	; 0x04
     29e:	6d a6       	std	Y+45, r6	; 0x2d
     2a0:	7e a6       	std	Y+46, r7	; 0x2e
     2a2:	8f a6       	std	Y+47, r8	; 0x2f
     2a4:	98 aa       	std	Y+48, r9	; 0x30
     2a6:	6d 80       	ldd	r6, Y+5	; 0x05
     2a8:	7e 80       	ldd	r7, Y+6	; 0x06
     2aa:	8f 80       	ldd	r8, Y+7	; 0x07
     2ac:	98 84       	ldd	r9, Y+8	; 0x08
     2ae:	e1 14       	cp	r14, r1
     2b0:	f1 04       	cpc	r15, r1
     2b2:	01 05       	cpc	r16, r1
     2b4:	11 05       	cpc	r17, r1
     2b6:	09 f0       	breq	.+2      	; 0x2ba <__udivdi3+0x80>
     2b8:	b3 c3       	rjmp	.+1894   	; 0xa20 <__stack+0x1c1>
     2ba:	62 14       	cp	r6, r2
     2bc:	73 04       	cpc	r7, r3
     2be:	84 04       	cpc	r8, r4
     2c0:	95 04       	cpc	r9, r5
     2c2:	08 f0       	brcs	.+2      	; 0x2c6 <__udivdi3+0x8c>
     2c4:	3d c1       	rjmp	.+634    	; 0x540 <__udivdi3+0x306>
     2c6:	00 e0       	ldi	r16, 0x00	; 0
     2c8:	20 16       	cp	r2, r16
     2ca:	00 e0       	ldi	r16, 0x00	; 0
     2cc:	30 06       	cpc	r3, r16
     2ce:	01 e0       	ldi	r16, 0x01	; 1
     2d0:	40 06       	cpc	r4, r16
     2d2:	00 e0       	ldi	r16, 0x00	; 0
     2d4:	50 06       	cpc	r5, r16
     2d6:	88 f4       	brcc	.+34     	; 0x2fa <__udivdi3+0xc0>
     2d8:	1f ef       	ldi	r17, 0xFF	; 255
     2da:	21 16       	cp	r2, r17
     2dc:	31 04       	cpc	r3, r1
     2de:	41 04       	cpc	r4, r1
     2e0:	51 04       	cpc	r5, r1
     2e2:	39 f0       	breq	.+14     	; 0x2f2 <__udivdi3+0xb8>
     2e4:	30 f0       	brcs	.+12     	; 0x2f2 <__udivdi3+0xb8>
     2e6:	48 e0       	ldi	r20, 0x08	; 8
     2e8:	e4 2e       	mov	r14, r20
     2ea:	f1 2c       	mov	r15, r1
     2ec:	01 2d       	mov	r16, r1
     2ee:	11 2d       	mov	r17, r1
     2f0:	18 c0       	rjmp	.+48     	; 0x322 <__udivdi3+0xe8>
     2f2:	ee 24       	eor	r14, r14
     2f4:	ff 24       	eor	r15, r15
     2f6:	87 01       	movw	r16, r14
     2f8:	14 c0       	rjmp	.+40     	; 0x322 <__udivdi3+0xe8>
     2fa:	20 e0       	ldi	r18, 0x00	; 0
     2fc:	22 16       	cp	r2, r18
     2fe:	20 e0       	ldi	r18, 0x00	; 0
     300:	32 06       	cpc	r3, r18
     302:	20 e0       	ldi	r18, 0x00	; 0
     304:	42 06       	cpc	r4, r18
     306:	21 e0       	ldi	r18, 0x01	; 1
     308:	52 06       	cpc	r5, r18
     30a:	30 f0       	brcs	.+12     	; 0x318 <__udivdi3+0xde>
     30c:	38 e1       	ldi	r19, 0x18	; 24
     30e:	e3 2e       	mov	r14, r19
     310:	f1 2c       	mov	r15, r1
     312:	01 2d       	mov	r16, r1
     314:	11 2d       	mov	r17, r1
     316:	05 c0       	rjmp	.+10     	; 0x322 <__udivdi3+0xe8>
     318:	20 e1       	ldi	r18, 0x10	; 16
     31a:	e2 2e       	mov	r14, r18
     31c:	f1 2c       	mov	r15, r1
     31e:	01 2d       	mov	r16, r1
     320:	11 2d       	mov	r17, r1
     322:	d2 01       	movw	r26, r4
     324:	c1 01       	movw	r24, r2
     326:	0e 2c       	mov	r0, r14
     328:	04 c0       	rjmp	.+8      	; 0x332 <__udivdi3+0xf8>
     32a:	b6 95       	lsr	r27
     32c:	a7 95       	ror	r26
     32e:	97 95       	ror	r25
     330:	87 95       	ror	r24
     332:	0a 94       	dec	r0
     334:	d2 f7       	brpl	.-12     	; 0x32a <__udivdi3+0xf0>
     336:	85 57       	subi	r24, 0x75	; 117
     338:	9f 4f       	sbci	r25, 0xFF	; 255
     33a:	dc 01       	movw	r26, r24
     33c:	2c 91       	ld	r18, X
     33e:	80 e2       	ldi	r24, 0x20	; 32
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	a0 e0       	ldi	r26, 0x00	; 0
     344:	b0 e0       	ldi	r27, 0x00	; 0
     346:	8e 19       	sub	r24, r14
     348:	9f 09       	sbc	r25, r15
     34a:	a0 0b       	sbc	r26, r16
     34c:	b1 0b       	sbc	r27, r17
     34e:	7c 01       	movw	r14, r24
     350:	8d 01       	movw	r16, r26
     352:	e2 1a       	sub	r14, r18
     354:	f1 08       	sbc	r15, r1
     356:	01 09       	sbc	r16, r1
     358:	11 09       	sbc	r17, r1
     35a:	e1 14       	cp	r14, r1
     35c:	f1 04       	cpc	r15, r1
     35e:	01 05       	cpc	r16, r1
     360:	11 05       	cpc	r17, r1
     362:	a1 f1       	breq	.+104    	; 0x3cc <__udivdi3+0x192>
     364:	0e 2c       	mov	r0, r14
     366:	04 c0       	rjmp	.+8      	; 0x370 <__udivdi3+0x136>
     368:	22 0c       	add	r2, r2
     36a:	33 1c       	adc	r3, r3
     36c:	44 1c       	adc	r4, r4
     36e:	55 1c       	adc	r5, r5
     370:	0a 94       	dec	r0
     372:	d2 f7       	brpl	.-12     	; 0x368 <__udivdi3+0x12e>
     374:	a4 01       	movw	r20, r8
     376:	93 01       	movw	r18, r6
     378:	0e 2c       	mov	r0, r14
     37a:	04 c0       	rjmp	.+8      	; 0x384 <__udivdi3+0x14a>
     37c:	22 0f       	add	r18, r18
     37e:	33 1f       	adc	r19, r19
     380:	44 1f       	adc	r20, r20
     382:	55 1f       	adc	r21, r21
     384:	0a 94       	dec	r0
     386:	d2 f7       	brpl	.-12     	; 0x37c <__udivdi3+0x142>
     388:	80 e2       	ldi	r24, 0x20	; 32
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	8e 19       	sub	r24, r14
     38e:	9f 09       	sbc	r25, r15
     390:	6d a4       	ldd	r6, Y+45	; 0x2d
     392:	7e a4       	ldd	r7, Y+46	; 0x2e
     394:	8f a4       	ldd	r8, Y+47	; 0x2f
     396:	98 a8       	ldd	r9, Y+48	; 0x30
     398:	04 c0       	rjmp	.+8      	; 0x3a2 <__udivdi3+0x168>
     39a:	96 94       	lsr	r9
     39c:	87 94       	ror	r8
     39e:	77 94       	ror	r7
     3a0:	67 94       	ror	r6
     3a2:	8a 95       	dec	r24
     3a4:	d2 f7       	brpl	.-12     	; 0x39a <__udivdi3+0x160>
     3a6:	62 2a       	or	r6, r18
     3a8:	73 2a       	or	r7, r19
     3aa:	84 2a       	or	r8, r20
     3ac:	95 2a       	or	r9, r21
     3ae:	ad a4       	ldd	r10, Y+45	; 0x2d
     3b0:	be a4       	ldd	r11, Y+46	; 0x2e
     3b2:	cf a4       	ldd	r12, Y+47	; 0x2f
     3b4:	d8 a8       	ldd	r13, Y+48	; 0x30
     3b6:	04 c0       	rjmp	.+8      	; 0x3c0 <__udivdi3+0x186>
     3b8:	aa 0c       	add	r10, r10
     3ba:	bb 1c       	adc	r11, r11
     3bc:	cc 1c       	adc	r12, r12
     3be:	dd 1c       	adc	r13, r13
     3c0:	ea 94       	dec	r14
     3c2:	d2 f7       	brpl	.-12     	; 0x3b8 <__udivdi3+0x17e>
     3c4:	ad a6       	std	Y+45, r10	; 0x2d
     3c6:	be a6       	std	Y+46, r11	; 0x2e
     3c8:	cf a6       	std	Y+47, r12	; 0x2f
     3ca:	d8 aa       	std	Y+48, r13	; 0x30
     3cc:	62 01       	movw	r12, r4
     3ce:	ee 24       	eor	r14, r14
     3d0:	ff 24       	eor	r15, r15
     3d2:	cd aa       	std	Y+53, r12	; 0x35
     3d4:	de aa       	std	Y+54, r13	; 0x36
     3d6:	ef aa       	std	Y+55, r14	; 0x37
     3d8:	f8 ae       	std	Y+56, r15	; 0x38
     3da:	92 01       	movw	r18, r4
     3dc:	81 01       	movw	r16, r2
     3de:	20 70       	andi	r18, 0x00	; 0
     3e0:	30 70       	andi	r19, 0x00	; 0
     3e2:	09 af       	std	Y+57, r16	; 0x39
     3e4:	1a af       	std	Y+58, r17	; 0x3a
     3e6:	2b af       	std	Y+59, r18	; 0x3b
     3e8:	3c af       	std	Y+60, r19	; 0x3c
     3ea:	c4 01       	movw	r24, r8
     3ec:	b3 01       	movw	r22, r6
     3ee:	a7 01       	movw	r20, r14
     3f0:	96 01       	movw	r18, r12
     3f2:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
     3f6:	7b 01       	movw	r14, r22
     3f8:	8c 01       	movw	r16, r24
     3fa:	c4 01       	movw	r24, r8
     3fc:	b3 01       	movw	r22, r6
     3fe:	2d a9       	ldd	r18, Y+53	; 0x35
     400:	3e a9       	ldd	r19, Y+54	; 0x36
     402:	4f a9       	ldd	r20, Y+55	; 0x37
     404:	58 ad       	ldd	r21, Y+56	; 0x38
     406:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
     40a:	c9 01       	movw	r24, r18
     40c:	da 01       	movw	r26, r20
     40e:	3c 01       	movw	r6, r24
     410:	4d 01       	movw	r8, r26
     412:	c4 01       	movw	r24, r8
     414:	b3 01       	movw	r22, r6
     416:	29 ad       	ldd	r18, Y+57	; 0x39
     418:	3a ad       	ldd	r19, Y+58	; 0x3a
     41a:	4b ad       	ldd	r20, Y+59	; 0x3b
     41c:	5c ad       	ldd	r21, Y+60	; 0x3c
     41e:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
     422:	9b 01       	movw	r18, r22
     424:	ac 01       	movw	r20, r24
     426:	87 01       	movw	r16, r14
     428:	ff 24       	eor	r15, r15
     42a:	ee 24       	eor	r14, r14
     42c:	ad a4       	ldd	r10, Y+45	; 0x2d
     42e:	be a4       	ldd	r11, Y+46	; 0x2e
     430:	cf a4       	ldd	r12, Y+47	; 0x2f
     432:	d8 a8       	ldd	r13, Y+48	; 0x30
     434:	c6 01       	movw	r24, r12
     436:	aa 27       	eor	r26, r26
     438:	bb 27       	eor	r27, r27
     43a:	57 01       	movw	r10, r14
     43c:	68 01       	movw	r12, r16
     43e:	a8 2a       	or	r10, r24
     440:	b9 2a       	or	r11, r25
     442:	ca 2a       	or	r12, r26
     444:	db 2a       	or	r13, r27
     446:	a2 16       	cp	r10, r18
     448:	b3 06       	cpc	r11, r19
     44a:	c4 06       	cpc	r12, r20
     44c:	d5 06       	cpc	r13, r21
     44e:	e0 f4       	brcc	.+56     	; 0x488 <__udivdi3+0x24e>
     450:	08 94       	sec
     452:	61 08       	sbc	r6, r1
     454:	71 08       	sbc	r7, r1
     456:	81 08       	sbc	r8, r1
     458:	91 08       	sbc	r9, r1
     45a:	a2 0c       	add	r10, r2
     45c:	b3 1c       	adc	r11, r3
     45e:	c4 1c       	adc	r12, r4
     460:	d5 1c       	adc	r13, r5
     462:	a2 14       	cp	r10, r2
     464:	b3 04       	cpc	r11, r3
     466:	c4 04       	cpc	r12, r4
     468:	d5 04       	cpc	r13, r5
     46a:	70 f0       	brcs	.+28     	; 0x488 <__udivdi3+0x24e>
     46c:	a2 16       	cp	r10, r18
     46e:	b3 06       	cpc	r11, r19
     470:	c4 06       	cpc	r12, r20
     472:	d5 06       	cpc	r13, r21
     474:	48 f4       	brcc	.+18     	; 0x488 <__udivdi3+0x24e>
     476:	08 94       	sec
     478:	61 08       	sbc	r6, r1
     47a:	71 08       	sbc	r7, r1
     47c:	81 08       	sbc	r8, r1
     47e:	91 08       	sbc	r9, r1
     480:	a2 0c       	add	r10, r2
     482:	b3 1c       	adc	r11, r3
     484:	c4 1c       	adc	r12, r4
     486:	d5 1c       	adc	r13, r5
     488:	a2 1a       	sub	r10, r18
     48a:	b3 0a       	sbc	r11, r19
     48c:	c4 0a       	sbc	r12, r20
     48e:	d5 0a       	sbc	r13, r21
     490:	c6 01       	movw	r24, r12
     492:	b5 01       	movw	r22, r10
     494:	2d a9       	ldd	r18, Y+53	; 0x35
     496:	3e a9       	ldd	r19, Y+54	; 0x36
     498:	4f a9       	ldd	r20, Y+55	; 0x37
     49a:	58 ad       	ldd	r21, Y+56	; 0x38
     49c:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
     4a0:	7b 01       	movw	r14, r22
     4a2:	8c 01       	movw	r16, r24
     4a4:	c6 01       	movw	r24, r12
     4a6:	b5 01       	movw	r22, r10
     4a8:	2d a9       	ldd	r18, Y+53	; 0x35
     4aa:	3e a9       	ldd	r19, Y+54	; 0x36
     4ac:	4f a9       	ldd	r20, Y+55	; 0x37
     4ae:	58 ad       	ldd	r21, Y+56	; 0x38
     4b0:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
     4b4:	c9 01       	movw	r24, r18
     4b6:	da 01       	movw	r26, r20
     4b8:	5c 01       	movw	r10, r24
     4ba:	6d 01       	movw	r12, r26
     4bc:	c6 01       	movw	r24, r12
     4be:	b5 01       	movw	r22, r10
     4c0:	29 ad       	ldd	r18, Y+57	; 0x39
     4c2:	3a ad       	ldd	r19, Y+58	; 0x3a
     4c4:	4b ad       	ldd	r20, Y+59	; 0x3b
     4c6:	5c ad       	ldd	r21, Y+60	; 0x3c
     4c8:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
     4cc:	9b 01       	movw	r18, r22
     4ce:	ac 01       	movw	r20, r24
     4d0:	87 01       	movw	r16, r14
     4d2:	ff 24       	eor	r15, r15
     4d4:	ee 24       	eor	r14, r14
     4d6:	8d a5       	ldd	r24, Y+45	; 0x2d
     4d8:	9e a5       	ldd	r25, Y+46	; 0x2e
     4da:	af a5       	ldd	r26, Y+47	; 0x2f
     4dc:	b8 a9       	ldd	r27, Y+48	; 0x30
     4de:	a0 70       	andi	r26, 0x00	; 0
     4e0:	b0 70       	andi	r27, 0x00	; 0
     4e2:	e8 2a       	or	r14, r24
     4e4:	f9 2a       	or	r15, r25
     4e6:	0a 2b       	or	r16, r26
     4e8:	1b 2b       	or	r17, r27
     4ea:	e2 16       	cp	r14, r18
     4ec:	f3 06       	cpc	r15, r19
     4ee:	04 07       	cpc	r16, r20
     4f0:	15 07       	cpc	r17, r21
     4f2:	c0 f4       	brcc	.+48     	; 0x524 <__udivdi3+0x2ea>
     4f4:	08 94       	sec
     4f6:	a1 08       	sbc	r10, r1
     4f8:	b1 08       	sbc	r11, r1
     4fa:	c1 08       	sbc	r12, r1
     4fc:	d1 08       	sbc	r13, r1
     4fe:	e2 0c       	add	r14, r2
     500:	f3 1c       	adc	r15, r3
     502:	04 1d       	adc	r16, r4
     504:	15 1d       	adc	r17, r5
     506:	e2 14       	cp	r14, r2
     508:	f3 04       	cpc	r15, r3
     50a:	04 05       	cpc	r16, r4
     50c:	15 05       	cpc	r17, r5
     50e:	50 f0       	brcs	.+20     	; 0x524 <__udivdi3+0x2ea>
     510:	e2 16       	cp	r14, r18
     512:	f3 06       	cpc	r15, r19
     514:	04 07       	cpc	r16, r20
     516:	15 07       	cpc	r17, r21
     518:	28 f4       	brcc	.+10     	; 0x524 <__udivdi3+0x2ea>
     51a:	08 94       	sec
     51c:	a1 08       	sbc	r10, r1
     51e:	b1 08       	sbc	r11, r1
     520:	c1 08       	sbc	r12, r1
     522:	d1 08       	sbc	r13, r1
     524:	d3 01       	movw	r26, r6
     526:	99 27       	eor	r25, r25
     528:	88 27       	eor	r24, r24
     52a:	86 01       	movw	r16, r12
     52c:	75 01       	movw	r14, r10
     52e:	e8 2a       	or	r14, r24
     530:	f9 2a       	or	r15, r25
     532:	0a 2b       	or	r16, r26
     534:	1b 2b       	or	r17, r27
     536:	e9 aa       	std	Y+49, r14	; 0x31
     538:	fa aa       	std	Y+50, r15	; 0x32
     53a:	0b ab       	std	Y+51, r16	; 0x33
     53c:	1c ab       	std	Y+52, r17	; 0x34
     53e:	cf c4       	rjmp	.+2462   	; 0xede <__stack+0x67f>
     540:	21 14       	cp	r2, r1
     542:	31 04       	cpc	r3, r1
     544:	41 04       	cpc	r4, r1
     546:	51 04       	cpc	r5, r1
     548:	71 f4       	brne	.+28     	; 0x566 <__udivdi3+0x32c>
     54a:	61 e0       	ldi	r22, 0x01	; 1
     54c:	70 e0       	ldi	r23, 0x00	; 0
     54e:	80 e0       	ldi	r24, 0x00	; 0
     550:	90 e0       	ldi	r25, 0x00	; 0
     552:	20 e0       	ldi	r18, 0x00	; 0
     554:	30 e0       	ldi	r19, 0x00	; 0
     556:	40 e0       	ldi	r20, 0x00	; 0
     558:	50 e0       	ldi	r21, 0x00	; 0
     55a:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
     55e:	c9 01       	movw	r24, r18
     560:	da 01       	movw	r26, r20
     562:	1c 01       	movw	r2, r24
     564:	2d 01       	movw	r4, r26
     566:	00 e0       	ldi	r16, 0x00	; 0
     568:	20 16       	cp	r2, r16
     56a:	00 e0       	ldi	r16, 0x00	; 0
     56c:	30 06       	cpc	r3, r16
     56e:	01 e0       	ldi	r16, 0x01	; 1
     570:	40 06       	cpc	r4, r16
     572:	00 e0       	ldi	r16, 0x00	; 0
     574:	50 06       	cpc	r5, r16
     576:	88 f4       	brcc	.+34     	; 0x59a <__udivdi3+0x360>
     578:	1f ef       	ldi	r17, 0xFF	; 255
     57a:	21 16       	cp	r2, r17
     57c:	31 04       	cpc	r3, r1
     57e:	41 04       	cpc	r4, r1
     580:	51 04       	cpc	r5, r1
     582:	31 f0       	breq	.+12     	; 0x590 <__udivdi3+0x356>
     584:	28 f0       	brcs	.+10     	; 0x590 <__udivdi3+0x356>
     586:	48 e0       	ldi	r20, 0x08	; 8
     588:	50 e0       	ldi	r21, 0x00	; 0
     58a:	60 e0       	ldi	r22, 0x00	; 0
     58c:	70 e0       	ldi	r23, 0x00	; 0
     58e:	17 c0       	rjmp	.+46     	; 0x5be <__udivdi3+0x384>
     590:	40 e0       	ldi	r20, 0x00	; 0
     592:	50 e0       	ldi	r21, 0x00	; 0
     594:	60 e0       	ldi	r22, 0x00	; 0
     596:	70 e0       	ldi	r23, 0x00	; 0
     598:	12 c0       	rjmp	.+36     	; 0x5be <__udivdi3+0x384>
     59a:	20 e0       	ldi	r18, 0x00	; 0
     59c:	22 16       	cp	r2, r18
     59e:	20 e0       	ldi	r18, 0x00	; 0
     5a0:	32 06       	cpc	r3, r18
     5a2:	20 e0       	ldi	r18, 0x00	; 0
     5a4:	42 06       	cpc	r4, r18
     5a6:	21 e0       	ldi	r18, 0x01	; 1
     5a8:	52 06       	cpc	r5, r18
     5aa:	28 f0       	brcs	.+10     	; 0x5b6 <__udivdi3+0x37c>
     5ac:	48 e1       	ldi	r20, 0x18	; 24
     5ae:	50 e0       	ldi	r21, 0x00	; 0
     5b0:	60 e0       	ldi	r22, 0x00	; 0
     5b2:	70 e0       	ldi	r23, 0x00	; 0
     5b4:	04 c0       	rjmp	.+8      	; 0x5be <__udivdi3+0x384>
     5b6:	40 e1       	ldi	r20, 0x10	; 16
     5b8:	50 e0       	ldi	r21, 0x00	; 0
     5ba:	60 e0       	ldi	r22, 0x00	; 0
     5bc:	70 e0       	ldi	r23, 0x00	; 0
     5be:	d2 01       	movw	r26, r4
     5c0:	c1 01       	movw	r24, r2
     5c2:	04 2e       	mov	r0, r20
     5c4:	04 c0       	rjmp	.+8      	; 0x5ce <__udivdi3+0x394>
     5c6:	b6 95       	lsr	r27
     5c8:	a7 95       	ror	r26
     5ca:	97 95       	ror	r25
     5cc:	87 95       	ror	r24
     5ce:	0a 94       	dec	r0
     5d0:	d2 f7       	brpl	.-12     	; 0x5c6 <__udivdi3+0x38c>
     5d2:	85 57       	subi	r24, 0x75	; 117
     5d4:	9f 4f       	sbci	r25, 0xFF	; 255
     5d6:	dc 01       	movw	r26, r24
     5d8:	2c 91       	ld	r18, X
     5da:	e0 e2       	ldi	r30, 0x20	; 32
     5dc:	ee 2e       	mov	r14, r30
     5de:	f1 2c       	mov	r15, r1
     5e0:	01 2d       	mov	r16, r1
     5e2:	11 2d       	mov	r17, r1
     5e4:	d8 01       	movw	r26, r16
     5e6:	c7 01       	movw	r24, r14
     5e8:	84 1b       	sub	r24, r20
     5ea:	95 0b       	sbc	r25, r21
     5ec:	a6 0b       	sbc	r26, r22
     5ee:	b7 0b       	sbc	r27, r23
     5f0:	82 1b       	sub	r24, r18
     5f2:	91 09       	sbc	r25, r1
     5f4:	a1 09       	sbc	r26, r1
     5f6:	b1 09       	sbc	r27, r1
     5f8:	00 97       	sbiw	r24, 0x00	; 0
     5fa:	a1 05       	cpc	r26, r1
     5fc:	b1 05       	cpc	r27, r1
     5fe:	61 f4       	brne	.+24     	; 0x618 <__udivdi3+0x3de>
     600:	64 01       	movw	r12, r8
     602:	53 01       	movw	r10, r6
     604:	a2 18       	sub	r10, r2
     606:	b3 08       	sbc	r11, r3
     608:	c4 08       	sbc	r12, r4
     60a:	d5 08       	sbc	r13, r5
     60c:	31 e0       	ldi	r19, 0x01	; 1
     60e:	63 2e       	mov	r6, r19
     610:	71 2c       	mov	r7, r1
     612:	81 2c       	mov	r8, r1
     614:	91 2c       	mov	r9, r1
     616:	1e c1       	rjmp	.+572    	; 0x854 <__udivdi3+0x61a>
     618:	6f 96       	adiw	r28, 0x1f	; 31
     61a:	8f af       	std	Y+63, r24	; 0x3f
     61c:	6f 97       	sbiw	r28, 0x1f	; 31
     61e:	08 2e       	mov	r0, r24
     620:	04 c0       	rjmp	.+8      	; 0x62a <__udivdi3+0x3f0>
     622:	22 0c       	add	r2, r2
     624:	33 1c       	adc	r3, r3
     626:	44 1c       	adc	r4, r4
     628:	55 1c       	adc	r5, r5
     62a:	0a 94       	dec	r0
     62c:	d2 f7       	brpl	.-12     	; 0x622 <__udivdi3+0x3e8>
     62e:	ee 2d       	mov	r30, r14
     630:	e8 1b       	sub	r30, r24
     632:	64 01       	movw	r12, r8
     634:	53 01       	movw	r10, r6
     636:	0e 2e       	mov	r0, r30
     638:	04 c0       	rjmp	.+8      	; 0x642 <__udivdi3+0x408>
     63a:	d6 94       	lsr	r13
     63c:	c7 94       	ror	r12
     63e:	b7 94       	ror	r11
     640:	a7 94       	ror	r10
     642:	0a 94       	dec	r0
     644:	d2 f7       	brpl	.-12     	; 0x63a <__udivdi3+0x400>
     646:	a4 01       	movw	r20, r8
     648:	93 01       	movw	r18, r6
     64a:	6f 96       	adiw	r28, 0x1f	; 31
     64c:	0f ac       	ldd	r0, Y+63	; 0x3f
     64e:	6f 97       	sbiw	r28, 0x1f	; 31
     650:	04 c0       	rjmp	.+8      	; 0x65a <__udivdi3+0x420>
     652:	22 0f       	add	r18, r18
     654:	33 1f       	adc	r19, r19
     656:	44 1f       	adc	r20, r20
     658:	55 1f       	adc	r21, r21
     65a:	0a 94       	dec	r0
     65c:	d2 f7       	brpl	.-12     	; 0x652 <__udivdi3+0x418>
     65e:	6d a4       	ldd	r6, Y+45	; 0x2d
     660:	7e a4       	ldd	r7, Y+46	; 0x2e
     662:	8f a4       	ldd	r8, Y+47	; 0x2f
     664:	98 a8       	ldd	r9, Y+48	; 0x30
     666:	0e 2e       	mov	r0, r30
     668:	04 c0       	rjmp	.+8      	; 0x672 <__udivdi3+0x438>
     66a:	96 94       	lsr	r9
     66c:	87 94       	ror	r8
     66e:	77 94       	ror	r7
     670:	67 94       	ror	r6
     672:	0a 94       	dec	r0
     674:	d2 f7       	brpl	.-12     	; 0x66a <__udivdi3+0x430>
     676:	84 01       	movw	r16, r8
     678:	73 01       	movw	r14, r6
     67a:	e2 2a       	or	r14, r18
     67c:	f3 2a       	or	r15, r19
     67e:	04 2b       	or	r16, r20
     680:	15 2b       	or	r17, r21
     682:	e9 a6       	std	Y+41, r14	; 0x29
     684:	fa a6       	std	Y+42, r15	; 0x2a
     686:	0b a7       	std	Y+43, r16	; 0x2b
     688:	1c a7       	std	Y+44, r17	; 0x2c
     68a:	32 01       	movw	r6, r4
     68c:	88 24       	eor	r8, r8
     68e:	99 24       	eor	r9, r9
     690:	92 01       	movw	r18, r4
     692:	81 01       	movw	r16, r2
     694:	20 70       	andi	r18, 0x00	; 0
     696:	30 70       	andi	r19, 0x00	; 0
     698:	21 96       	adiw	r28, 0x01	; 1
     69a:	0c af       	std	Y+60, r16	; 0x3c
     69c:	1d af       	std	Y+61, r17	; 0x3d
     69e:	2e af       	std	Y+62, r18	; 0x3e
     6a0:	3f af       	std	Y+63, r19	; 0x3f
     6a2:	21 97       	sbiw	r28, 0x01	; 1
     6a4:	c6 01       	movw	r24, r12
     6a6:	b5 01       	movw	r22, r10
     6a8:	a4 01       	movw	r20, r8
     6aa:	93 01       	movw	r18, r6
     6ac:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
     6b0:	7b 01       	movw	r14, r22
     6b2:	8c 01       	movw	r16, r24
     6b4:	c6 01       	movw	r24, r12
     6b6:	b5 01       	movw	r22, r10
     6b8:	a4 01       	movw	r20, r8
     6ba:	93 01       	movw	r18, r6
     6bc:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
     6c0:	c9 01       	movw	r24, r18
     6c2:	da 01       	movw	r26, r20
     6c4:	25 96       	adiw	r28, 0x05	; 5
     6c6:	8c af       	std	Y+60, r24	; 0x3c
     6c8:	9d af       	std	Y+61, r25	; 0x3d
     6ca:	ae af       	std	Y+62, r26	; 0x3e
     6cc:	bf af       	std	Y+63, r27	; 0x3f
     6ce:	25 97       	sbiw	r28, 0x05	; 5
     6d0:	bc 01       	movw	r22, r24
     6d2:	cd 01       	movw	r24, r26
     6d4:	21 96       	adiw	r28, 0x01	; 1
     6d6:	2c ad       	ldd	r18, Y+60	; 0x3c
     6d8:	3d ad       	ldd	r19, Y+61	; 0x3d
     6da:	4e ad       	ldd	r20, Y+62	; 0x3e
     6dc:	5f ad       	ldd	r21, Y+63	; 0x3f
     6de:	21 97       	sbiw	r28, 0x01	; 1
     6e0:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
     6e4:	9b 01       	movw	r18, r22
     6e6:	ac 01       	movw	r20, r24
     6e8:	87 01       	movw	r16, r14
     6ea:	ff 24       	eor	r15, r15
     6ec:	ee 24       	eor	r14, r14
     6ee:	a9 a4       	ldd	r10, Y+41	; 0x29
     6f0:	ba a4       	ldd	r11, Y+42	; 0x2a
     6f2:	cb a4       	ldd	r12, Y+43	; 0x2b
     6f4:	dc a4       	ldd	r13, Y+44	; 0x2c
     6f6:	c6 01       	movw	r24, r12
     6f8:	aa 27       	eor	r26, r26
     6fa:	bb 27       	eor	r27, r27
     6fc:	5c 01       	movw	r10, r24
     6fe:	6d 01       	movw	r12, r26
     700:	ae 28       	or	r10, r14
     702:	bf 28       	or	r11, r15
     704:	c0 2a       	or	r12, r16
     706:	d1 2a       	or	r13, r17
     708:	a2 16       	cp	r10, r18
     70a:	b3 06       	cpc	r11, r19
     70c:	c4 06       	cpc	r12, r20
     70e:	d5 06       	cpc	r13, r21
     710:	60 f5       	brcc	.+88     	; 0x76a <__udivdi3+0x530>
     712:	25 96       	adiw	r28, 0x05	; 5
     714:	6c ad       	ldd	r22, Y+60	; 0x3c
     716:	7d ad       	ldd	r23, Y+61	; 0x3d
     718:	8e ad       	ldd	r24, Y+62	; 0x3e
     71a:	9f ad       	ldd	r25, Y+63	; 0x3f
     71c:	25 97       	sbiw	r28, 0x05	; 5
     71e:	61 50       	subi	r22, 0x01	; 1
     720:	70 40       	sbci	r23, 0x00	; 0
     722:	80 40       	sbci	r24, 0x00	; 0
     724:	90 40       	sbci	r25, 0x00	; 0
     726:	25 96       	adiw	r28, 0x05	; 5
     728:	6c af       	std	Y+60, r22	; 0x3c
     72a:	7d af       	std	Y+61, r23	; 0x3d
     72c:	8e af       	std	Y+62, r24	; 0x3e
     72e:	9f af       	std	Y+63, r25	; 0x3f
     730:	25 97       	sbiw	r28, 0x05	; 5
     732:	a2 0c       	add	r10, r2
     734:	b3 1c       	adc	r11, r3
     736:	c4 1c       	adc	r12, r4
     738:	d5 1c       	adc	r13, r5
     73a:	a2 14       	cp	r10, r2
     73c:	b3 04       	cpc	r11, r3
     73e:	c4 04       	cpc	r12, r4
     740:	d5 04       	cpc	r13, r5
     742:	98 f0       	brcs	.+38     	; 0x76a <__udivdi3+0x530>
     744:	a2 16       	cp	r10, r18
     746:	b3 06       	cpc	r11, r19
     748:	c4 06       	cpc	r12, r20
     74a:	d5 06       	cpc	r13, r21
     74c:	70 f4       	brcc	.+28     	; 0x76a <__udivdi3+0x530>
     74e:	61 50       	subi	r22, 0x01	; 1
     750:	70 40       	sbci	r23, 0x00	; 0
     752:	80 40       	sbci	r24, 0x00	; 0
     754:	90 40       	sbci	r25, 0x00	; 0
     756:	25 96       	adiw	r28, 0x05	; 5
     758:	6c af       	std	Y+60, r22	; 0x3c
     75a:	7d af       	std	Y+61, r23	; 0x3d
     75c:	8e af       	std	Y+62, r24	; 0x3e
     75e:	9f af       	std	Y+63, r25	; 0x3f
     760:	25 97       	sbiw	r28, 0x05	; 5
     762:	a2 0c       	add	r10, r2
     764:	b3 1c       	adc	r11, r3
     766:	c4 1c       	adc	r12, r4
     768:	d5 1c       	adc	r13, r5
     76a:	a2 1a       	sub	r10, r18
     76c:	b3 0a       	sbc	r11, r19
     76e:	c4 0a       	sbc	r12, r20
     770:	d5 0a       	sbc	r13, r21
     772:	c6 01       	movw	r24, r12
     774:	b5 01       	movw	r22, r10
     776:	a4 01       	movw	r20, r8
     778:	93 01       	movw	r18, r6
     77a:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
     77e:	7b 01       	movw	r14, r22
     780:	8c 01       	movw	r16, r24
     782:	c6 01       	movw	r24, r12
     784:	b5 01       	movw	r22, r10
     786:	a4 01       	movw	r20, r8
     788:	93 01       	movw	r18, r6
     78a:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
     78e:	c9 01       	movw	r24, r18
     790:	da 01       	movw	r26, r20
     792:	3c 01       	movw	r6, r24
     794:	4d 01       	movw	r8, r26
     796:	c4 01       	movw	r24, r8
     798:	b3 01       	movw	r22, r6
     79a:	21 96       	adiw	r28, 0x01	; 1
     79c:	2c ad       	ldd	r18, Y+60	; 0x3c
     79e:	3d ad       	ldd	r19, Y+61	; 0x3d
     7a0:	4e ad       	ldd	r20, Y+62	; 0x3e
     7a2:	5f ad       	ldd	r21, Y+63	; 0x3f
     7a4:	21 97       	sbiw	r28, 0x01	; 1
     7a6:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
     7aa:	9b 01       	movw	r18, r22
     7ac:	ac 01       	movw	r20, r24
     7ae:	87 01       	movw	r16, r14
     7b0:	ff 24       	eor	r15, r15
     7b2:	ee 24       	eor	r14, r14
     7b4:	89 a5       	ldd	r24, Y+41	; 0x29
     7b6:	9a a5       	ldd	r25, Y+42	; 0x2a
     7b8:	ab a5       	ldd	r26, Y+43	; 0x2b
     7ba:	bc a5       	ldd	r27, Y+44	; 0x2c
     7bc:	a0 70       	andi	r26, 0x00	; 0
     7be:	b0 70       	andi	r27, 0x00	; 0
     7c0:	57 01       	movw	r10, r14
     7c2:	68 01       	movw	r12, r16
     7c4:	a8 2a       	or	r10, r24
     7c6:	b9 2a       	or	r11, r25
     7c8:	ca 2a       	or	r12, r26
     7ca:	db 2a       	or	r13, r27
     7cc:	a2 16       	cp	r10, r18
     7ce:	b3 06       	cpc	r11, r19
     7d0:	c4 06       	cpc	r12, r20
     7d2:	d5 06       	cpc	r13, r21
     7d4:	e0 f4       	brcc	.+56     	; 0x80e <__udivdi3+0x5d4>
     7d6:	08 94       	sec
     7d8:	61 08       	sbc	r6, r1
     7da:	71 08       	sbc	r7, r1
     7dc:	81 08       	sbc	r8, r1
     7de:	91 08       	sbc	r9, r1
     7e0:	a2 0c       	add	r10, r2
     7e2:	b3 1c       	adc	r11, r3
     7e4:	c4 1c       	adc	r12, r4
     7e6:	d5 1c       	adc	r13, r5
     7e8:	a2 14       	cp	r10, r2
     7ea:	b3 04       	cpc	r11, r3
     7ec:	c4 04       	cpc	r12, r4
     7ee:	d5 04       	cpc	r13, r5
     7f0:	70 f0       	brcs	.+28     	; 0x80e <__udivdi3+0x5d4>
     7f2:	a2 16       	cp	r10, r18
     7f4:	b3 06       	cpc	r11, r19
     7f6:	c4 06       	cpc	r12, r20
     7f8:	d5 06       	cpc	r13, r21
     7fa:	48 f4       	brcc	.+18     	; 0x80e <__udivdi3+0x5d4>
     7fc:	08 94       	sec
     7fe:	61 08       	sbc	r6, r1
     800:	71 08       	sbc	r7, r1
     802:	81 08       	sbc	r8, r1
     804:	91 08       	sbc	r9, r1
     806:	a2 0c       	add	r10, r2
     808:	b3 1c       	adc	r11, r3
     80a:	c4 1c       	adc	r12, r4
     80c:	d5 1c       	adc	r13, r5
     80e:	8d a5       	ldd	r24, Y+45	; 0x2d
     810:	9e a5       	ldd	r25, Y+46	; 0x2e
     812:	af a5       	ldd	r26, Y+47	; 0x2f
     814:	b8 a9       	ldd	r27, Y+48	; 0x30
     816:	6f 96       	adiw	r28, 0x1f	; 31
     818:	0f ac       	ldd	r0, Y+63	; 0x3f
     81a:	6f 97       	sbiw	r28, 0x1f	; 31
     81c:	04 c0       	rjmp	.+8      	; 0x826 <__udivdi3+0x5ec>
     81e:	88 0f       	add	r24, r24
     820:	99 1f       	adc	r25, r25
     822:	aa 1f       	adc	r26, r26
     824:	bb 1f       	adc	r27, r27
     826:	0a 94       	dec	r0
     828:	d2 f7       	brpl	.-12     	; 0x81e <__udivdi3+0x5e4>
     82a:	8d a7       	std	Y+45, r24	; 0x2d
     82c:	9e a7       	std	Y+46, r25	; 0x2e
     82e:	af a7       	std	Y+47, r26	; 0x2f
     830:	b8 ab       	std	Y+48, r27	; 0x30
     832:	a2 1a       	sub	r10, r18
     834:	b3 0a       	sbc	r11, r19
     836:	c4 0a       	sbc	r12, r20
     838:	d5 0a       	sbc	r13, r21
     83a:	25 96       	adiw	r28, 0x05	; 5
     83c:	ec ac       	ldd	r14, Y+60	; 0x3c
     83e:	fd ac       	ldd	r15, Y+61	; 0x3d
     840:	0e ad       	ldd	r16, Y+62	; 0x3e
     842:	1f ad       	ldd	r17, Y+63	; 0x3f
     844:	25 97       	sbiw	r28, 0x05	; 5
     846:	d7 01       	movw	r26, r14
     848:	99 27       	eor	r25, r25
     84a:	88 27       	eor	r24, r24
     84c:	68 2a       	or	r6, r24
     84e:	79 2a       	or	r7, r25
     850:	8a 2a       	or	r8, r26
     852:	9b 2a       	or	r9, r27
     854:	82 01       	movw	r16, r4
     856:	22 27       	eor	r18, r18
     858:	33 27       	eor	r19, r19
     85a:	29 96       	adiw	r28, 0x09	; 9
     85c:	0c af       	std	Y+60, r16	; 0x3c
     85e:	1d af       	std	Y+61, r17	; 0x3d
     860:	2e af       	std	Y+62, r18	; 0x3e
     862:	3f af       	std	Y+63, r19	; 0x3f
     864:	29 97       	sbiw	r28, 0x09	; 9
     866:	a2 01       	movw	r20, r4
     868:	91 01       	movw	r18, r2
     86a:	40 70       	andi	r20, 0x00	; 0
     86c:	50 70       	andi	r21, 0x00	; 0
     86e:	2d 96       	adiw	r28, 0x0d	; 13
     870:	2c af       	std	Y+60, r18	; 0x3c
     872:	3d af       	std	Y+61, r19	; 0x3d
     874:	4e af       	std	Y+62, r20	; 0x3e
     876:	5f af       	std	Y+63, r21	; 0x3f
     878:	2d 97       	sbiw	r28, 0x0d	; 13
     87a:	c6 01       	movw	r24, r12
     87c:	b5 01       	movw	r22, r10
     87e:	29 96       	adiw	r28, 0x09	; 9
     880:	2c ad       	ldd	r18, Y+60	; 0x3c
     882:	3d ad       	ldd	r19, Y+61	; 0x3d
     884:	4e ad       	ldd	r20, Y+62	; 0x3e
     886:	5f ad       	ldd	r21, Y+63	; 0x3f
     888:	29 97       	sbiw	r28, 0x09	; 9
     88a:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
     88e:	7b 01       	movw	r14, r22
     890:	8c 01       	movw	r16, r24
     892:	c6 01       	movw	r24, r12
     894:	b5 01       	movw	r22, r10
     896:	29 96       	adiw	r28, 0x09	; 9
     898:	2c ad       	ldd	r18, Y+60	; 0x3c
     89a:	3d ad       	ldd	r19, Y+61	; 0x3d
     89c:	4e ad       	ldd	r20, Y+62	; 0x3e
     89e:	5f ad       	ldd	r21, Y+63	; 0x3f
     8a0:	29 97       	sbiw	r28, 0x09	; 9
     8a2:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
     8a6:	c9 01       	movw	r24, r18
     8a8:	da 01       	movw	r26, r20
     8aa:	61 96       	adiw	r28, 0x11	; 17
     8ac:	8c af       	std	Y+60, r24	; 0x3c
     8ae:	9d af       	std	Y+61, r25	; 0x3d
     8b0:	ae af       	std	Y+62, r26	; 0x3e
     8b2:	bf af       	std	Y+63, r27	; 0x3f
     8b4:	61 97       	sbiw	r28, 0x11	; 17
     8b6:	bc 01       	movw	r22, r24
     8b8:	cd 01       	movw	r24, r26
     8ba:	2d 96       	adiw	r28, 0x0d	; 13
     8bc:	2c ad       	ldd	r18, Y+60	; 0x3c
     8be:	3d ad       	ldd	r19, Y+61	; 0x3d
     8c0:	4e ad       	ldd	r20, Y+62	; 0x3e
     8c2:	5f ad       	ldd	r21, Y+63	; 0x3f
     8c4:	2d 97       	sbiw	r28, 0x0d	; 13
     8c6:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
     8ca:	9b 01       	movw	r18, r22
     8cc:	ac 01       	movw	r20, r24
     8ce:	87 01       	movw	r16, r14
     8d0:	ff 24       	eor	r15, r15
     8d2:	ee 24       	eor	r14, r14
     8d4:	ad a4       	ldd	r10, Y+45	; 0x2d
     8d6:	be a4       	ldd	r11, Y+46	; 0x2e
     8d8:	cf a4       	ldd	r12, Y+47	; 0x2f
     8da:	d8 a8       	ldd	r13, Y+48	; 0x30
     8dc:	c6 01       	movw	r24, r12
     8de:	aa 27       	eor	r26, r26
     8e0:	bb 27       	eor	r27, r27
     8e2:	57 01       	movw	r10, r14
     8e4:	68 01       	movw	r12, r16
     8e6:	a8 2a       	or	r10, r24
     8e8:	b9 2a       	or	r11, r25
     8ea:	ca 2a       	or	r12, r26
     8ec:	db 2a       	or	r13, r27
     8ee:	a2 16       	cp	r10, r18
     8f0:	b3 06       	cpc	r11, r19
     8f2:	c4 06       	cpc	r12, r20
     8f4:	d5 06       	cpc	r13, r21
     8f6:	60 f5       	brcc	.+88     	; 0x950 <__stack+0xf1>
     8f8:	61 96       	adiw	r28, 0x11	; 17
     8fa:	6c ad       	ldd	r22, Y+60	; 0x3c
     8fc:	7d ad       	ldd	r23, Y+61	; 0x3d
     8fe:	8e ad       	ldd	r24, Y+62	; 0x3e
     900:	9f ad       	ldd	r25, Y+63	; 0x3f
     902:	61 97       	sbiw	r28, 0x11	; 17
     904:	61 50       	subi	r22, 0x01	; 1
     906:	70 40       	sbci	r23, 0x00	; 0
     908:	80 40       	sbci	r24, 0x00	; 0
     90a:	90 40       	sbci	r25, 0x00	; 0
     90c:	61 96       	adiw	r28, 0x11	; 17
     90e:	6c af       	std	Y+60, r22	; 0x3c
     910:	7d af       	std	Y+61, r23	; 0x3d
     912:	8e af       	std	Y+62, r24	; 0x3e
     914:	9f af       	std	Y+63, r25	; 0x3f
     916:	61 97       	sbiw	r28, 0x11	; 17
     918:	a2 0c       	add	r10, r2
     91a:	b3 1c       	adc	r11, r3
     91c:	c4 1c       	adc	r12, r4
     91e:	d5 1c       	adc	r13, r5
     920:	a2 14       	cp	r10, r2
     922:	b3 04       	cpc	r11, r3
     924:	c4 04       	cpc	r12, r4
     926:	d5 04       	cpc	r13, r5
     928:	98 f0       	brcs	.+38     	; 0x950 <__stack+0xf1>
     92a:	a2 16       	cp	r10, r18
     92c:	b3 06       	cpc	r11, r19
     92e:	c4 06       	cpc	r12, r20
     930:	d5 06       	cpc	r13, r21
     932:	70 f4       	brcc	.+28     	; 0x950 <__stack+0xf1>
     934:	61 50       	subi	r22, 0x01	; 1
     936:	70 40       	sbci	r23, 0x00	; 0
     938:	80 40       	sbci	r24, 0x00	; 0
     93a:	90 40       	sbci	r25, 0x00	; 0
     93c:	61 96       	adiw	r28, 0x11	; 17
     93e:	6c af       	std	Y+60, r22	; 0x3c
     940:	7d af       	std	Y+61, r23	; 0x3d
     942:	8e af       	std	Y+62, r24	; 0x3e
     944:	9f af       	std	Y+63, r25	; 0x3f
     946:	61 97       	sbiw	r28, 0x11	; 17
     948:	a2 0c       	add	r10, r2
     94a:	b3 1c       	adc	r11, r3
     94c:	c4 1c       	adc	r12, r4
     94e:	d5 1c       	adc	r13, r5
     950:	a2 1a       	sub	r10, r18
     952:	b3 0a       	sbc	r11, r19
     954:	c4 0a       	sbc	r12, r20
     956:	d5 0a       	sbc	r13, r21
     958:	c6 01       	movw	r24, r12
     95a:	b5 01       	movw	r22, r10
     95c:	29 96       	adiw	r28, 0x09	; 9
     95e:	2c ad       	ldd	r18, Y+60	; 0x3c
     960:	3d ad       	ldd	r19, Y+61	; 0x3d
     962:	4e ad       	ldd	r20, Y+62	; 0x3e
     964:	5f ad       	ldd	r21, Y+63	; 0x3f
     966:	29 97       	sbiw	r28, 0x09	; 9
     968:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
     96c:	7b 01       	movw	r14, r22
     96e:	8c 01       	movw	r16, r24
     970:	c6 01       	movw	r24, r12
     972:	b5 01       	movw	r22, r10
     974:	29 96       	adiw	r28, 0x09	; 9
     976:	2c ad       	ldd	r18, Y+60	; 0x3c
     978:	3d ad       	ldd	r19, Y+61	; 0x3d
     97a:	4e ad       	ldd	r20, Y+62	; 0x3e
     97c:	5f ad       	ldd	r21, Y+63	; 0x3f
     97e:	29 97       	sbiw	r28, 0x09	; 9
     980:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
     984:	c9 01       	movw	r24, r18
     986:	da 01       	movw	r26, r20
     988:	5c 01       	movw	r10, r24
     98a:	6d 01       	movw	r12, r26
     98c:	c6 01       	movw	r24, r12
     98e:	b5 01       	movw	r22, r10
     990:	2d 96       	adiw	r28, 0x0d	; 13
     992:	2c ad       	ldd	r18, Y+60	; 0x3c
     994:	3d ad       	ldd	r19, Y+61	; 0x3d
     996:	4e ad       	ldd	r20, Y+62	; 0x3e
     998:	5f ad       	ldd	r21, Y+63	; 0x3f
     99a:	2d 97       	sbiw	r28, 0x0d	; 13
     99c:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
     9a0:	9b 01       	movw	r18, r22
     9a2:	ac 01       	movw	r20, r24
     9a4:	87 01       	movw	r16, r14
     9a6:	ff 24       	eor	r15, r15
     9a8:	ee 24       	eor	r14, r14
     9aa:	8d a5       	ldd	r24, Y+45	; 0x2d
     9ac:	9e a5       	ldd	r25, Y+46	; 0x2e
     9ae:	af a5       	ldd	r26, Y+47	; 0x2f
     9b0:	b8 a9       	ldd	r27, Y+48	; 0x30
     9b2:	a0 70       	andi	r26, 0x00	; 0
     9b4:	b0 70       	andi	r27, 0x00	; 0
     9b6:	e8 2a       	or	r14, r24
     9b8:	f9 2a       	or	r15, r25
     9ba:	0a 2b       	or	r16, r26
     9bc:	1b 2b       	or	r17, r27
     9be:	e2 16       	cp	r14, r18
     9c0:	f3 06       	cpc	r15, r19
     9c2:	04 07       	cpc	r16, r20
     9c4:	15 07       	cpc	r17, r21
     9c6:	c0 f4       	brcc	.+48     	; 0x9f8 <__stack+0x199>
     9c8:	08 94       	sec
     9ca:	a1 08       	sbc	r10, r1
     9cc:	b1 08       	sbc	r11, r1
     9ce:	c1 08       	sbc	r12, r1
     9d0:	d1 08       	sbc	r13, r1
     9d2:	e2 0c       	add	r14, r2
     9d4:	f3 1c       	adc	r15, r3
     9d6:	04 1d       	adc	r16, r4
     9d8:	15 1d       	adc	r17, r5
     9da:	e2 14       	cp	r14, r2
     9dc:	f3 04       	cpc	r15, r3
     9de:	04 05       	cpc	r16, r4
     9e0:	15 05       	cpc	r17, r5
     9e2:	50 f0       	brcs	.+20     	; 0x9f8 <__stack+0x199>
     9e4:	e2 16       	cp	r14, r18
     9e6:	f3 06       	cpc	r15, r19
     9e8:	04 07       	cpc	r16, r20
     9ea:	15 07       	cpc	r17, r21
     9ec:	28 f4       	brcc	.+10     	; 0x9f8 <__stack+0x199>
     9ee:	08 94       	sec
     9f0:	a1 08       	sbc	r10, r1
     9f2:	b1 08       	sbc	r11, r1
     9f4:	c1 08       	sbc	r12, r1
     9f6:	d1 08       	sbc	r13, r1
     9f8:	61 96       	adiw	r28, 0x11	; 17
     9fa:	ec ac       	ldd	r14, Y+60	; 0x3c
     9fc:	fd ac       	ldd	r15, Y+61	; 0x3d
     9fe:	0e ad       	ldd	r16, Y+62	; 0x3e
     a00:	1f ad       	ldd	r17, Y+63	; 0x3f
     a02:	61 97       	sbiw	r28, 0x11	; 17
     a04:	d7 01       	movw	r26, r14
     a06:	99 27       	eor	r25, r25
     a08:	88 27       	eor	r24, r24
     a0a:	96 01       	movw	r18, r12
     a0c:	85 01       	movw	r16, r10
     a0e:	08 2b       	or	r16, r24
     a10:	19 2b       	or	r17, r25
     a12:	2a 2b       	or	r18, r26
     a14:	3b 2b       	or	r19, r27
     a16:	09 ab       	std	Y+49, r16	; 0x31
     a18:	1a ab       	std	Y+50, r17	; 0x32
     a1a:	2b ab       	std	Y+51, r18	; 0x33
     a1c:	3c ab       	std	Y+52, r19	; 0x34
     a1e:	62 c2       	rjmp	.+1220   	; 0xee4 <__stack+0x685>
     a20:	6e 14       	cp	r6, r14
     a22:	7f 04       	cpc	r7, r15
     a24:	80 06       	cpc	r8, r16
     a26:	91 06       	cpc	r9, r17
     a28:	08 f4       	brcc	.+2      	; 0xa2c <__stack+0x1cd>
     a2a:	51 c2       	rjmp	.+1186   	; 0xece <__stack+0x66f>
     a2c:	20 e0       	ldi	r18, 0x00	; 0
     a2e:	e2 16       	cp	r14, r18
     a30:	20 e0       	ldi	r18, 0x00	; 0
     a32:	f2 06       	cpc	r15, r18
     a34:	21 e0       	ldi	r18, 0x01	; 1
     a36:	02 07       	cpc	r16, r18
     a38:	20 e0       	ldi	r18, 0x00	; 0
     a3a:	12 07       	cpc	r17, r18
     a3c:	88 f4       	brcc	.+34     	; 0xa60 <__stack+0x201>
     a3e:	3f ef       	ldi	r19, 0xFF	; 255
     a40:	e3 16       	cp	r14, r19
     a42:	f1 04       	cpc	r15, r1
     a44:	01 05       	cpc	r16, r1
     a46:	11 05       	cpc	r17, r1
     a48:	31 f0       	breq	.+12     	; 0xa56 <__stack+0x1f7>
     a4a:	28 f0       	brcs	.+10     	; 0xa56 <__stack+0x1f7>
     a4c:	48 e0       	ldi	r20, 0x08	; 8
     a4e:	50 e0       	ldi	r21, 0x00	; 0
     a50:	60 e0       	ldi	r22, 0x00	; 0
     a52:	70 e0       	ldi	r23, 0x00	; 0
     a54:	17 c0       	rjmp	.+46     	; 0xa84 <__stack+0x225>
     a56:	40 e0       	ldi	r20, 0x00	; 0
     a58:	50 e0       	ldi	r21, 0x00	; 0
     a5a:	60 e0       	ldi	r22, 0x00	; 0
     a5c:	70 e0       	ldi	r23, 0x00	; 0
     a5e:	12 c0       	rjmp	.+36     	; 0xa84 <__stack+0x225>
     a60:	40 e0       	ldi	r20, 0x00	; 0
     a62:	e4 16       	cp	r14, r20
     a64:	40 e0       	ldi	r20, 0x00	; 0
     a66:	f4 06       	cpc	r15, r20
     a68:	40 e0       	ldi	r20, 0x00	; 0
     a6a:	04 07       	cpc	r16, r20
     a6c:	41 e0       	ldi	r20, 0x01	; 1
     a6e:	14 07       	cpc	r17, r20
     a70:	28 f0       	brcs	.+10     	; 0xa7c <__stack+0x21d>
     a72:	48 e1       	ldi	r20, 0x18	; 24
     a74:	50 e0       	ldi	r21, 0x00	; 0
     a76:	60 e0       	ldi	r22, 0x00	; 0
     a78:	70 e0       	ldi	r23, 0x00	; 0
     a7a:	04 c0       	rjmp	.+8      	; 0xa84 <__stack+0x225>
     a7c:	40 e1       	ldi	r20, 0x10	; 16
     a7e:	50 e0       	ldi	r21, 0x00	; 0
     a80:	60 e0       	ldi	r22, 0x00	; 0
     a82:	70 e0       	ldi	r23, 0x00	; 0
     a84:	d8 01       	movw	r26, r16
     a86:	c7 01       	movw	r24, r14
     a88:	04 2e       	mov	r0, r20
     a8a:	04 c0       	rjmp	.+8      	; 0xa94 <__stack+0x235>
     a8c:	b6 95       	lsr	r27
     a8e:	a7 95       	ror	r26
     a90:	97 95       	ror	r25
     a92:	87 95       	ror	r24
     a94:	0a 94       	dec	r0
     a96:	d2 f7       	brpl	.-12     	; 0xa8c <__stack+0x22d>
     a98:	85 57       	subi	r24, 0x75	; 117
     a9a:	9f 4f       	sbci	r25, 0xFF	; 255
     a9c:	dc 01       	movw	r26, r24
     a9e:	2c 91       	ld	r18, X
     aa0:	30 e2       	ldi	r19, 0x20	; 32
     aa2:	a3 2e       	mov	r10, r19
     aa4:	b1 2c       	mov	r11, r1
     aa6:	c1 2c       	mov	r12, r1
     aa8:	d1 2c       	mov	r13, r1
     aaa:	d6 01       	movw	r26, r12
     aac:	c5 01       	movw	r24, r10
     aae:	84 1b       	sub	r24, r20
     ab0:	95 0b       	sbc	r25, r21
     ab2:	a6 0b       	sbc	r26, r22
     ab4:	b7 0b       	sbc	r27, r23
     ab6:	82 1b       	sub	r24, r18
     ab8:	91 09       	sbc	r25, r1
     aba:	a1 09       	sbc	r26, r1
     abc:	b1 09       	sbc	r27, r1
     abe:	00 97       	sbiw	r24, 0x00	; 0
     ac0:	a1 05       	cpc	r26, r1
     ac2:	b1 05       	cpc	r27, r1
     ac4:	89 f4       	brne	.+34     	; 0xae8 <__stack+0x289>
     ac6:	e6 14       	cp	r14, r6
     ac8:	f7 04       	cpc	r15, r7
     aca:	08 05       	cpc	r16, r8
     acc:	19 05       	cpc	r17, r9
     ace:	08 f4       	brcc	.+2      	; 0xad2 <__stack+0x273>
     ad0:	f2 c1       	rjmp	.+996    	; 0xeb6 <__stack+0x657>
     ad2:	6d a4       	ldd	r6, Y+45	; 0x2d
     ad4:	7e a4       	ldd	r7, Y+46	; 0x2e
     ad6:	8f a4       	ldd	r8, Y+47	; 0x2f
     ad8:	98 a8       	ldd	r9, Y+48	; 0x30
     ada:	62 14       	cp	r6, r2
     adc:	73 04       	cpc	r7, r3
     ade:	84 04       	cpc	r8, r4
     ae0:	95 04       	cpc	r9, r5
     ae2:	08 f0       	brcs	.+2      	; 0xae6 <__stack+0x287>
     ae4:	e8 c1       	rjmp	.+976    	; 0xeb6 <__stack+0x657>
     ae6:	f3 c1       	rjmp	.+998    	; 0xece <__stack+0x66f>
     ae8:	6e 96       	adiw	r28, 0x1e	; 30
     aea:	8f af       	std	Y+63, r24	; 0x3f
     aec:	6e 97       	sbiw	r28, 0x1e	; 30
     aee:	08 2e       	mov	r0, r24
     af0:	04 c0       	rjmp	.+8      	; 0xafa <__stack+0x29b>
     af2:	ee 0c       	add	r14, r14
     af4:	ff 1c       	adc	r15, r15
     af6:	00 1f       	adc	r16, r16
     af8:	11 1f       	adc	r17, r17
     afa:	0a 94       	dec	r0
     afc:	d2 f7       	brpl	.-12     	; 0xaf2 <__stack+0x293>
     afe:	6a 2d       	mov	r22, r10
     b00:	68 1b       	sub	r22, r24
     b02:	d2 01       	movw	r26, r4
     b04:	c1 01       	movw	r24, r2
     b06:	06 2e       	mov	r0, r22
     b08:	04 c0       	rjmp	.+8      	; 0xb12 <__stack+0x2b3>
     b0a:	b6 95       	lsr	r27
     b0c:	a7 95       	ror	r26
     b0e:	97 95       	ror	r25
     b10:	87 95       	ror	r24
     b12:	0a 94       	dec	r0
     b14:	d2 f7       	brpl	.-12     	; 0xb0a <__stack+0x2ab>
     b16:	5c 01       	movw	r10, r24
     b18:	6d 01       	movw	r12, r26
     b1a:	ae 28       	or	r10, r14
     b1c:	bf 28       	or	r11, r15
     b1e:	c0 2a       	or	r12, r16
     b20:	d1 2a       	or	r13, r17
     b22:	ad a2       	std	Y+37, r10	; 0x25
     b24:	be a2       	std	Y+38, r11	; 0x26
     b26:	cf a2       	std	Y+39, r12	; 0x27
     b28:	d8 a6       	std	Y+40, r13	; 0x28
     b2a:	72 01       	movw	r14, r4
     b2c:	61 01       	movw	r12, r2
     b2e:	6e 96       	adiw	r28, 0x1e	; 30
     b30:	0f ac       	ldd	r0, Y+63	; 0x3f
     b32:	6e 97       	sbiw	r28, 0x1e	; 30
     b34:	04 c0       	rjmp	.+8      	; 0xb3e <__stack+0x2df>
     b36:	cc 0c       	add	r12, r12
     b38:	dd 1c       	adc	r13, r13
     b3a:	ee 1c       	adc	r14, r14
     b3c:	ff 1c       	adc	r15, r15
     b3e:	0a 94       	dec	r0
     b40:	d2 f7       	brpl	.-12     	; 0xb36 <__stack+0x2d7>
     b42:	c9 a2       	std	Y+33, r12	; 0x21
     b44:	da a2       	std	Y+34, r13	; 0x22
     b46:	eb a2       	std	Y+35, r14	; 0x23
     b48:	fc a2       	std	Y+36, r15	; 0x24
     b4a:	64 01       	movw	r12, r8
     b4c:	53 01       	movw	r10, r6
     b4e:	06 2e       	mov	r0, r22
     b50:	04 c0       	rjmp	.+8      	; 0xb5a <__stack+0x2fb>
     b52:	d6 94       	lsr	r13
     b54:	c7 94       	ror	r12
     b56:	b7 94       	ror	r11
     b58:	a7 94       	ror	r10
     b5a:	0a 94       	dec	r0
     b5c:	d2 f7       	brpl	.-12     	; 0xb52 <__stack+0x2f3>
     b5e:	d4 01       	movw	r26, r8
     b60:	c3 01       	movw	r24, r6
     b62:	6e 96       	adiw	r28, 0x1e	; 30
     b64:	0f ac       	ldd	r0, Y+63	; 0x3f
     b66:	6e 97       	sbiw	r28, 0x1e	; 30
     b68:	04 c0       	rjmp	.+8      	; 0xb72 <__stack+0x313>
     b6a:	88 0f       	add	r24, r24
     b6c:	99 1f       	adc	r25, r25
     b6e:	aa 1f       	adc	r26, r26
     b70:	bb 1f       	adc	r27, r27
     b72:	0a 94       	dec	r0
     b74:	d2 f7       	brpl	.-12     	; 0xb6a <__stack+0x30b>
     b76:	ed a4       	ldd	r14, Y+45	; 0x2d
     b78:	fe a4       	ldd	r15, Y+46	; 0x2e
     b7a:	0f a5       	ldd	r16, Y+47	; 0x2f
     b7c:	18 a9       	ldd	r17, Y+48	; 0x30
     b7e:	04 c0       	rjmp	.+8      	; 0xb88 <__stack+0x329>
     b80:	16 95       	lsr	r17
     b82:	07 95       	ror	r16
     b84:	f7 94       	ror	r15
     b86:	e7 94       	ror	r14
     b88:	6a 95       	dec	r22
     b8a:	d2 f7       	brpl	.-12     	; 0xb80 <__stack+0x321>
     b8c:	37 01       	movw	r6, r14
     b8e:	48 01       	movw	r8, r16
     b90:	68 2a       	or	r6, r24
     b92:	79 2a       	or	r7, r25
     b94:	8a 2a       	or	r8, r26
     b96:	9b 2a       	or	r9, r27
     b98:	6d 8e       	std	Y+29, r6	; 0x1d
     b9a:	7e 8e       	std	Y+30, r7	; 0x1e
     b9c:	8f 8e       	std	Y+31, r8	; 0x1f
     b9e:	98 a2       	std	Y+32, r9	; 0x20
     ba0:	ed a0       	ldd	r14, Y+37	; 0x25
     ba2:	fe a0       	ldd	r15, Y+38	; 0x26
     ba4:	0f a1       	ldd	r16, Y+39	; 0x27
     ba6:	18 a5       	ldd	r17, Y+40	; 0x28
     ba8:	38 01       	movw	r6, r16
     baa:	88 24       	eor	r8, r8
     bac:	99 24       	eor	r9, r9
     bae:	98 01       	movw	r18, r16
     bb0:	87 01       	movw	r16, r14
     bb2:	20 70       	andi	r18, 0x00	; 0
     bb4:	30 70       	andi	r19, 0x00	; 0
     bb6:	65 96       	adiw	r28, 0x15	; 21
     bb8:	0c af       	std	Y+60, r16	; 0x3c
     bba:	1d af       	std	Y+61, r17	; 0x3d
     bbc:	2e af       	std	Y+62, r18	; 0x3e
     bbe:	3f af       	std	Y+63, r19	; 0x3f
     bc0:	65 97       	sbiw	r28, 0x15	; 21
     bc2:	c6 01       	movw	r24, r12
     bc4:	b5 01       	movw	r22, r10
     bc6:	a4 01       	movw	r20, r8
     bc8:	93 01       	movw	r18, r6
     bca:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
     bce:	7b 01       	movw	r14, r22
     bd0:	8c 01       	movw	r16, r24
     bd2:	c6 01       	movw	r24, r12
     bd4:	b5 01       	movw	r22, r10
     bd6:	a4 01       	movw	r20, r8
     bd8:	93 01       	movw	r18, r6
     bda:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
     bde:	c9 01       	movw	r24, r18
     be0:	da 01       	movw	r26, r20
     be2:	1c 01       	movw	r2, r24
     be4:	2d 01       	movw	r4, r26
     be6:	c2 01       	movw	r24, r4
     be8:	b1 01       	movw	r22, r2
     bea:	65 96       	adiw	r28, 0x15	; 21
     bec:	2c ad       	ldd	r18, Y+60	; 0x3c
     bee:	3d ad       	ldd	r19, Y+61	; 0x3d
     bf0:	4e ad       	ldd	r20, Y+62	; 0x3e
     bf2:	5f ad       	ldd	r21, Y+63	; 0x3f
     bf4:	65 97       	sbiw	r28, 0x15	; 21
     bf6:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
     bfa:	9b 01       	movw	r18, r22
     bfc:	ac 01       	movw	r20, r24
     bfe:	87 01       	movw	r16, r14
     c00:	ff 24       	eor	r15, r15
     c02:	ee 24       	eor	r14, r14
     c04:	ad 8c       	ldd	r10, Y+29	; 0x1d
     c06:	be 8c       	ldd	r11, Y+30	; 0x1e
     c08:	cf 8c       	ldd	r12, Y+31	; 0x1f
     c0a:	d8 a0       	ldd	r13, Y+32	; 0x20
     c0c:	c6 01       	movw	r24, r12
     c0e:	aa 27       	eor	r26, r26
     c10:	bb 27       	eor	r27, r27
     c12:	57 01       	movw	r10, r14
     c14:	68 01       	movw	r12, r16
     c16:	a8 2a       	or	r10, r24
     c18:	b9 2a       	or	r11, r25
     c1a:	ca 2a       	or	r12, r26
     c1c:	db 2a       	or	r13, r27
     c1e:	a2 16       	cp	r10, r18
     c20:	b3 06       	cpc	r11, r19
     c22:	c4 06       	cpc	r12, r20
     c24:	d5 06       	cpc	r13, r21
     c26:	00 f5       	brcc	.+64     	; 0xc68 <__stack+0x409>
     c28:	08 94       	sec
     c2a:	21 08       	sbc	r2, r1
     c2c:	31 08       	sbc	r3, r1
     c2e:	41 08       	sbc	r4, r1
     c30:	51 08       	sbc	r5, r1
     c32:	ed a0       	ldd	r14, Y+37	; 0x25
     c34:	fe a0       	ldd	r15, Y+38	; 0x26
     c36:	0f a1       	ldd	r16, Y+39	; 0x27
     c38:	18 a5       	ldd	r17, Y+40	; 0x28
     c3a:	ae 0c       	add	r10, r14
     c3c:	bf 1c       	adc	r11, r15
     c3e:	c0 1e       	adc	r12, r16
     c40:	d1 1e       	adc	r13, r17
     c42:	ae 14       	cp	r10, r14
     c44:	bf 04       	cpc	r11, r15
     c46:	c0 06       	cpc	r12, r16
     c48:	d1 06       	cpc	r13, r17
     c4a:	70 f0       	brcs	.+28     	; 0xc68 <__stack+0x409>
     c4c:	a2 16       	cp	r10, r18
     c4e:	b3 06       	cpc	r11, r19
     c50:	c4 06       	cpc	r12, r20
     c52:	d5 06       	cpc	r13, r21
     c54:	48 f4       	brcc	.+18     	; 0xc68 <__stack+0x409>
     c56:	08 94       	sec
     c58:	21 08       	sbc	r2, r1
     c5a:	31 08       	sbc	r3, r1
     c5c:	41 08       	sbc	r4, r1
     c5e:	51 08       	sbc	r5, r1
     c60:	ae 0c       	add	r10, r14
     c62:	bf 1c       	adc	r11, r15
     c64:	c0 1e       	adc	r12, r16
     c66:	d1 1e       	adc	r13, r17
     c68:	a2 1a       	sub	r10, r18
     c6a:	b3 0a       	sbc	r11, r19
     c6c:	c4 0a       	sbc	r12, r20
     c6e:	d5 0a       	sbc	r13, r21
     c70:	c6 01       	movw	r24, r12
     c72:	b5 01       	movw	r22, r10
     c74:	a4 01       	movw	r20, r8
     c76:	93 01       	movw	r18, r6
     c78:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
     c7c:	7b 01       	movw	r14, r22
     c7e:	8c 01       	movw	r16, r24
     c80:	c6 01       	movw	r24, r12
     c82:	b5 01       	movw	r22, r10
     c84:	a4 01       	movw	r20, r8
     c86:	93 01       	movw	r18, r6
     c88:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
     c8c:	c9 01       	movw	r24, r18
     c8e:	da 01       	movw	r26, r20
     c90:	3c 01       	movw	r6, r24
     c92:	4d 01       	movw	r8, r26
     c94:	c4 01       	movw	r24, r8
     c96:	b3 01       	movw	r22, r6
     c98:	65 96       	adiw	r28, 0x15	; 21
     c9a:	2c ad       	ldd	r18, Y+60	; 0x3c
     c9c:	3d ad       	ldd	r19, Y+61	; 0x3d
     c9e:	4e ad       	ldd	r20, Y+62	; 0x3e
     ca0:	5f ad       	ldd	r21, Y+63	; 0x3f
     ca2:	65 97       	sbiw	r28, 0x15	; 21
     ca4:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
     ca8:	9b 01       	movw	r18, r22
     caa:	ac 01       	movw	r20, r24
     cac:	87 01       	movw	r16, r14
     cae:	ff 24       	eor	r15, r15
     cb0:	ee 24       	eor	r14, r14
     cb2:	8d 8d       	ldd	r24, Y+29	; 0x1d
     cb4:	9e 8d       	ldd	r25, Y+30	; 0x1e
     cb6:	af 8d       	ldd	r26, Y+31	; 0x1f
     cb8:	b8 a1       	ldd	r27, Y+32	; 0x20
     cba:	a0 70       	andi	r26, 0x00	; 0
     cbc:	b0 70       	andi	r27, 0x00	; 0
     cbe:	57 01       	movw	r10, r14
     cc0:	68 01       	movw	r12, r16
     cc2:	a8 2a       	or	r10, r24
     cc4:	b9 2a       	or	r11, r25
     cc6:	ca 2a       	or	r12, r26
     cc8:	db 2a       	or	r13, r27
     cca:	a2 16       	cp	r10, r18
     ccc:	b3 06       	cpc	r11, r19
     cce:	c4 06       	cpc	r12, r20
     cd0:	d5 06       	cpc	r13, r21
     cd2:	00 f5       	brcc	.+64     	; 0xd14 <__stack+0x4b5>
     cd4:	08 94       	sec
     cd6:	61 08       	sbc	r6, r1
     cd8:	71 08       	sbc	r7, r1
     cda:	81 08       	sbc	r8, r1
     cdc:	91 08       	sbc	r9, r1
     cde:	6d a1       	ldd	r22, Y+37	; 0x25
     ce0:	7e a1       	ldd	r23, Y+38	; 0x26
     ce2:	8f a1       	ldd	r24, Y+39	; 0x27
     ce4:	98 a5       	ldd	r25, Y+40	; 0x28
     ce6:	a6 0e       	add	r10, r22
     ce8:	b7 1e       	adc	r11, r23
     cea:	c8 1e       	adc	r12, r24
     cec:	d9 1e       	adc	r13, r25
     cee:	a6 16       	cp	r10, r22
     cf0:	b7 06       	cpc	r11, r23
     cf2:	c8 06       	cpc	r12, r24
     cf4:	d9 06       	cpc	r13, r25
     cf6:	70 f0       	brcs	.+28     	; 0xd14 <__stack+0x4b5>
     cf8:	a2 16       	cp	r10, r18
     cfa:	b3 06       	cpc	r11, r19
     cfc:	c4 06       	cpc	r12, r20
     cfe:	d5 06       	cpc	r13, r21
     d00:	48 f4       	brcc	.+18     	; 0xd14 <__stack+0x4b5>
     d02:	08 94       	sec
     d04:	61 08       	sbc	r6, r1
     d06:	71 08       	sbc	r7, r1
     d08:	81 08       	sbc	r8, r1
     d0a:	91 08       	sbc	r9, r1
     d0c:	a6 0e       	add	r10, r22
     d0e:	b7 1e       	adc	r11, r23
     d10:	c8 1e       	adc	r12, r24
     d12:	d9 1e       	adc	r13, r25
     d14:	d6 01       	movw	r26, r12
     d16:	c5 01       	movw	r24, r10
     d18:	82 1b       	sub	r24, r18
     d1a:	93 0b       	sbc	r25, r19
     d1c:	a4 0b       	sbc	r26, r20
     d1e:	b5 0b       	sbc	r27, r21
     d20:	89 8f       	std	Y+25, r24	; 0x19
     d22:	9a 8f       	std	Y+26, r25	; 0x1a
     d24:	ab 8f       	std	Y+27, r26	; 0x1b
     d26:	bc 8f       	std	Y+28, r27	; 0x1c
     d28:	d1 01       	movw	r26, r2
     d2a:	99 27       	eor	r25, r25
     d2c:	88 27       	eor	r24, r24
     d2e:	64 01       	movw	r12, r8
     d30:	53 01       	movw	r10, r6
     d32:	a8 2a       	or	r10, r24
     d34:	b9 2a       	or	r11, r25
     d36:	ca 2a       	or	r12, r26
     d38:	db 2a       	or	r13, r27
     d3a:	a9 aa       	std	Y+49, r10	; 0x31
     d3c:	ba aa       	std	Y+50, r11	; 0x32
     d3e:	cb aa       	std	Y+51, r12	; 0x33
     d40:	dc aa       	std	Y+52, r13	; 0x34
     d42:	86 01       	movw	r16, r12
     d44:	75 01       	movw	r14, r10
     d46:	2f ef       	ldi	r18, 0xFF	; 255
     d48:	3f ef       	ldi	r19, 0xFF	; 255
     d4a:	40 e0       	ldi	r20, 0x00	; 0
     d4c:	50 e0       	ldi	r21, 0x00	; 0
     d4e:	e2 22       	and	r14, r18
     d50:	f3 22       	and	r15, r19
     d52:	04 23       	and	r16, r20
     d54:	15 23       	and	r17, r21
     d56:	a6 01       	movw	r20, r12
     d58:	66 27       	eor	r22, r22
     d5a:	77 27       	eor	r23, r23
     d5c:	6d 96       	adiw	r28, 0x1d	; 29
     d5e:	4c af       	std	Y+60, r20	; 0x3c
     d60:	5d af       	std	Y+61, r21	; 0x3d
     d62:	6e af       	std	Y+62, r22	; 0x3e
     d64:	7f af       	std	Y+63, r23	; 0x3f
     d66:	6d 97       	sbiw	r28, 0x1d	; 29
     d68:	a9 a0       	ldd	r10, Y+33	; 0x21
     d6a:	ba a0       	ldd	r11, Y+34	; 0x22
     d6c:	cb a0       	ldd	r12, Y+35	; 0x23
     d6e:	dc a0       	ldd	r13, Y+36	; 0x24
     d70:	6f ef       	ldi	r22, 0xFF	; 255
     d72:	7f ef       	ldi	r23, 0xFF	; 255
     d74:	80 e0       	ldi	r24, 0x00	; 0
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	a6 22       	and	r10, r22
     d7a:	b7 22       	and	r11, r23
     d7c:	c8 22       	and	r12, r24
     d7e:	d9 22       	and	r13, r25
     d80:	89 a1       	ldd	r24, Y+33	; 0x21
     d82:	9a a1       	ldd	r25, Y+34	; 0x22
     d84:	ab a1       	ldd	r26, Y+35	; 0x23
     d86:	bc a1       	ldd	r27, Y+36	; 0x24
     d88:	1d 01       	movw	r2, r26
     d8a:	44 24       	eor	r4, r4
     d8c:	55 24       	eor	r5, r5
     d8e:	c8 01       	movw	r24, r16
     d90:	b7 01       	movw	r22, r14
     d92:	a6 01       	movw	r20, r12
     d94:	95 01       	movw	r18, r10
     d96:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
     d9a:	69 96       	adiw	r28, 0x19	; 25
     d9c:	6c af       	std	Y+60, r22	; 0x3c
     d9e:	7d af       	std	Y+61, r23	; 0x3d
     da0:	8e af       	std	Y+62, r24	; 0x3e
     da2:	9f af       	std	Y+63, r25	; 0x3f
     da4:	69 97       	sbiw	r28, 0x19	; 25
     da6:	c8 01       	movw	r24, r16
     da8:	b7 01       	movw	r22, r14
     daa:	a2 01       	movw	r20, r4
     dac:	91 01       	movw	r18, r2
     dae:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
     db2:	3b 01       	movw	r6, r22
     db4:	4c 01       	movw	r8, r24
     db6:	6d 96       	adiw	r28, 0x1d	; 29
     db8:	6c ad       	ldd	r22, Y+60	; 0x3c
     dba:	7d ad       	ldd	r23, Y+61	; 0x3d
     dbc:	8e ad       	ldd	r24, Y+62	; 0x3e
     dbe:	9f ad       	ldd	r25, Y+63	; 0x3f
     dc0:	6d 97       	sbiw	r28, 0x1d	; 29
     dc2:	a6 01       	movw	r20, r12
     dc4:	95 01       	movw	r18, r10
     dc6:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
     dca:	7b 01       	movw	r14, r22
     dcc:	8c 01       	movw	r16, r24
     dce:	6d 96       	adiw	r28, 0x1d	; 29
     dd0:	6c ad       	ldd	r22, Y+60	; 0x3c
     dd2:	7d ad       	ldd	r23, Y+61	; 0x3d
     dd4:	8e ad       	ldd	r24, Y+62	; 0x3e
     dd6:	9f ad       	ldd	r25, Y+63	; 0x3f
     dd8:	6d 97       	sbiw	r28, 0x1d	; 29
     dda:	a2 01       	movw	r20, r4
     ddc:	91 01       	movw	r18, r2
     dde:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
     de2:	5b 01       	movw	r10, r22
     de4:	6c 01       	movw	r12, r24
     de6:	a8 01       	movw	r20, r16
     de8:	97 01       	movw	r18, r14
     dea:	26 0d       	add	r18, r6
     dec:	37 1d       	adc	r19, r7
     dee:	48 1d       	adc	r20, r8
     df0:	59 1d       	adc	r21, r9
     df2:	69 96       	adiw	r28, 0x19	; 25
     df4:	6c ac       	ldd	r6, Y+60	; 0x3c
     df6:	7d ac       	ldd	r7, Y+61	; 0x3d
     df8:	8e ac       	ldd	r8, Y+62	; 0x3e
     dfa:	9f ac       	ldd	r9, Y+63	; 0x3f
     dfc:	69 97       	sbiw	r28, 0x19	; 25
     dfe:	c4 01       	movw	r24, r8
     e00:	aa 27       	eor	r26, r26
     e02:	bb 27       	eor	r27, r27
     e04:	28 0f       	add	r18, r24
     e06:	39 1f       	adc	r19, r25
     e08:	4a 1f       	adc	r20, r26
     e0a:	5b 1f       	adc	r21, r27
     e0c:	2e 15       	cp	r18, r14
     e0e:	3f 05       	cpc	r19, r15
     e10:	40 07       	cpc	r20, r16
     e12:	51 07       	cpc	r21, r17
     e14:	48 f4       	brcc	.+18     	; 0xe28 <__stack+0x5c9>
     e16:	e1 2c       	mov	r14, r1
     e18:	f1 2c       	mov	r15, r1
     e1a:	61 e0       	ldi	r22, 0x01	; 1
     e1c:	06 2f       	mov	r16, r22
     e1e:	11 2d       	mov	r17, r1
     e20:	ae 0c       	add	r10, r14
     e22:	bf 1c       	adc	r11, r15
     e24:	c0 1e       	adc	r12, r16
     e26:	d1 1e       	adc	r13, r17
     e28:	ca 01       	movw	r24, r20
     e2a:	aa 27       	eor	r26, r26
     e2c:	bb 27       	eor	r27, r27
     e2e:	bc 01       	movw	r22, r24
     e30:	cd 01       	movw	r24, r26
     e32:	6a 0d       	add	r22, r10
     e34:	7b 1d       	adc	r23, r11
     e36:	8c 1d       	adc	r24, r12
     e38:	9d 1d       	adc	r25, r13
     e3a:	69 8c       	ldd	r6, Y+25	; 0x19
     e3c:	7a 8c       	ldd	r7, Y+26	; 0x1a
     e3e:	8b 8c       	ldd	r8, Y+27	; 0x1b
     e40:	9c 8c       	ldd	r9, Y+28	; 0x1c
     e42:	66 16       	cp	r6, r22
     e44:	77 06       	cpc	r7, r23
     e46:	88 06       	cpc	r8, r24
     e48:	99 06       	cpc	r9, r25
     e4a:	40 f1       	brcs	.+80     	; 0xe9c <__stack+0x63d>
     e4c:	66 15       	cp	r22, r6
     e4e:	77 05       	cpc	r23, r7
     e50:	88 05       	cpc	r24, r8
     e52:	99 05       	cpc	r25, r9
     e54:	09 f0       	breq	.+2      	; 0xe58 <__stack+0x5f9>
     e56:	43 c0       	rjmp	.+134    	; 0xede <__stack+0x67f>
     e58:	d9 01       	movw	r26, r18
     e5a:	99 27       	eor	r25, r25
     e5c:	88 27       	eor	r24, r24
     e5e:	69 96       	adiw	r28, 0x19	; 25
     e60:	2c ad       	ldd	r18, Y+60	; 0x3c
     e62:	3d ad       	ldd	r19, Y+61	; 0x3d
     e64:	4e ad       	ldd	r20, Y+62	; 0x3e
     e66:	5f ad       	ldd	r21, Y+63	; 0x3f
     e68:	69 97       	sbiw	r28, 0x19	; 25
     e6a:	40 70       	andi	r20, 0x00	; 0
     e6c:	50 70       	andi	r21, 0x00	; 0
     e6e:	82 0f       	add	r24, r18
     e70:	93 1f       	adc	r25, r19
     e72:	a4 1f       	adc	r26, r20
     e74:	b5 1f       	adc	r27, r21
     e76:	2d a5       	ldd	r18, Y+45	; 0x2d
     e78:	3e a5       	ldd	r19, Y+46	; 0x2e
     e7a:	4f a5       	ldd	r20, Y+47	; 0x2f
     e7c:	58 a9       	ldd	r21, Y+48	; 0x30
     e7e:	6e 96       	adiw	r28, 0x1e	; 30
     e80:	0f ac       	ldd	r0, Y+63	; 0x3f
     e82:	6e 97       	sbiw	r28, 0x1e	; 30
     e84:	04 c0       	rjmp	.+8      	; 0xe8e <__stack+0x62f>
     e86:	22 0f       	add	r18, r18
     e88:	33 1f       	adc	r19, r19
     e8a:	44 1f       	adc	r20, r20
     e8c:	55 1f       	adc	r21, r21
     e8e:	0a 94       	dec	r0
     e90:	d2 f7       	brpl	.-12     	; 0xe86 <__stack+0x627>
     e92:	28 17       	cp	r18, r24
     e94:	39 07       	cpc	r19, r25
     e96:	4a 07       	cpc	r20, r26
     e98:	5b 07       	cpc	r21, r27
     e9a:	08 f5       	brcc	.+66     	; 0xede <__stack+0x67f>
     e9c:	09 a9       	ldd	r16, Y+49	; 0x31
     e9e:	1a a9       	ldd	r17, Y+50	; 0x32
     ea0:	2b a9       	ldd	r18, Y+51	; 0x33
     ea2:	3c a9       	ldd	r19, Y+52	; 0x34
     ea4:	01 50       	subi	r16, 0x01	; 1
     ea6:	10 40       	sbci	r17, 0x00	; 0
     ea8:	20 40       	sbci	r18, 0x00	; 0
     eaa:	30 40       	sbci	r19, 0x00	; 0
     eac:	09 ab       	std	Y+49, r16	; 0x31
     eae:	1a ab       	std	Y+50, r17	; 0x32
     eb0:	2b ab       	std	Y+51, r18	; 0x33
     eb2:	3c ab       	std	Y+52, r19	; 0x34
     eb4:	14 c0       	rjmp	.+40     	; 0xede <__stack+0x67f>
     eb6:	66 24       	eor	r6, r6
     eb8:	77 24       	eor	r7, r7
     eba:	43 01       	movw	r8, r6
     ebc:	21 e0       	ldi	r18, 0x01	; 1
     ebe:	30 e0       	ldi	r19, 0x00	; 0
     ec0:	40 e0       	ldi	r20, 0x00	; 0
     ec2:	50 e0       	ldi	r21, 0x00	; 0
     ec4:	29 ab       	std	Y+49, r18	; 0x31
     ec6:	3a ab       	std	Y+50, r19	; 0x32
     ec8:	4b ab       	std	Y+51, r20	; 0x33
     eca:	5c ab       	std	Y+52, r21	; 0x34
     ecc:	0b c0       	rjmp	.+22     	; 0xee4 <__stack+0x685>
     ece:	66 24       	eor	r6, r6
     ed0:	77 24       	eor	r7, r7
     ed2:	43 01       	movw	r8, r6
     ed4:	19 aa       	std	Y+49, r1	; 0x31
     ed6:	1a aa       	std	Y+50, r1	; 0x32
     ed8:	1b aa       	std	Y+51, r1	; 0x33
     eda:	1c aa       	std	Y+52, r1	; 0x34
     edc:	03 c0       	rjmp	.+6      	; 0xee4 <__stack+0x685>
     ede:	66 24       	eor	r6, r6
     ee0:	77 24       	eor	r7, r7
     ee2:	43 01       	movw	r8, r6
     ee4:	fe 01       	movw	r30, r28
     ee6:	71 96       	adiw	r30, 0x11	; 17
     ee8:	88 e0       	ldi	r24, 0x08	; 8
     eea:	df 01       	movw	r26, r30
     eec:	1d 92       	st	X+, r1
     eee:	8a 95       	dec	r24
     ef0:	e9 f7       	brne	.-6      	; 0xeec <__stack+0x68d>
     ef2:	a9 a8       	ldd	r10, Y+49	; 0x31
     ef4:	ba a8       	ldd	r11, Y+50	; 0x32
     ef6:	cb a8       	ldd	r12, Y+51	; 0x33
     ef8:	dc a8       	ldd	r13, Y+52	; 0x34
     efa:	a9 8a       	std	Y+17, r10	; 0x11
     efc:	ba 8a       	std	Y+18, r11	; 0x12
     efe:	cb 8a       	std	Y+19, r12	; 0x13
     f00:	dc 8a       	std	Y+20, r13	; 0x14
     f02:	6d 8a       	std	Y+21, r6	; 0x15
     f04:	7e 8a       	std	Y+22, r7	; 0x16
     f06:	8f 8a       	std	Y+23, r8	; 0x17
     f08:	98 8e       	std	Y+24, r9	; 0x18
     f0a:	29 a9       	ldd	r18, Y+49	; 0x31
     f0c:	3a 89       	ldd	r19, Y+18	; 0x12
     f0e:	4b 89       	ldd	r20, Y+19	; 0x13
     f10:	5c 89       	ldd	r21, Y+20	; 0x14
     f12:	66 2d       	mov	r22, r6
     f14:	7e 89       	ldd	r23, Y+22	; 0x16
     f16:	8f 89       	ldd	r24, Y+23	; 0x17
     f18:	98 8d       	ldd	r25, Y+24	; 0x18
     f1a:	c2 5a       	subi	r28, 0xA2	; 162
     f1c:	df 4f       	sbci	r29, 0xFF	; 255
     f1e:	e2 e1       	ldi	r30, 0x12	; 18
     f20:	0c 94 7c 2d 	jmp	0x5af8	; 0x5af8 <__epilogue_restores__>

00000f24 <__umoddi3>:
     f24:	ab e5       	ldi	r26, 0x5B	; 91
     f26:	b0 e0       	ldi	r27, 0x00	; 0
     f28:	e8 e9       	ldi	r30, 0x98	; 152
     f2a:	f7 e0       	ldi	r31, 0x07	; 7
     f2c:	0c 94 60 2d 	jmp	0x5ac0	; 0x5ac0 <__prologue_saves__>
     f30:	a8 e0       	ldi	r26, 0x08	; 8
     f32:	4e 01       	movw	r8, r28
     f34:	08 94       	sec
     f36:	81 1c       	adc	r8, r1
     f38:	91 1c       	adc	r9, r1
     f3a:	f4 01       	movw	r30, r8
     f3c:	6a 2e       	mov	r6, r26
     f3e:	11 92       	st	Z+, r1
     f40:	6a 94       	dec	r6
     f42:	e9 f7       	brne	.-6      	; 0xf3e <__umoddi3+0x1a>
     f44:	29 83       	std	Y+1, r18	; 0x01
     f46:	3a 83       	std	Y+2, r19	; 0x02
     f48:	4b 83       	std	Y+3, r20	; 0x03
     f4a:	5c 83       	std	Y+4, r21	; 0x04
     f4c:	6d 83       	std	Y+5, r22	; 0x05
     f4e:	7e 83       	std	Y+6, r23	; 0x06
     f50:	8f 83       	std	Y+7, r24	; 0x07
     f52:	98 87       	std	Y+8, r25	; 0x08
     f54:	ce 01       	movw	r24, r28
     f56:	09 96       	adiw	r24, 0x09	; 9
     f58:	fc 01       	movw	r30, r24
     f5a:	11 92       	st	Z+, r1
     f5c:	aa 95       	dec	r26
     f5e:	e9 f7       	brne	.-6      	; 0xf5a <__umoddi3+0x36>
     f60:	a9 86       	std	Y+9, r10	; 0x09
     f62:	ba 86       	std	Y+10, r11	; 0x0a
     f64:	cb 86       	std	Y+11, r12	; 0x0b
     f66:	dc 86       	std	Y+12, r13	; 0x0c
     f68:	ed 86       	std	Y+13, r14	; 0x0d
     f6a:	fe 86       	std	Y+14, r15	; 0x0e
     f6c:	0f 87       	std	Y+15, r16	; 0x0f
     f6e:	18 8b       	std	Y+16, r17	; 0x10
     f70:	29 84       	ldd	r2, Y+9	; 0x09
     f72:	3a 84       	ldd	r3, Y+10	; 0x0a
     f74:	4b 84       	ldd	r4, Y+11	; 0x0b
     f76:	5c 84       	ldd	r5, Y+12	; 0x0c
     f78:	ad 84       	ldd	r10, Y+13	; 0x0d
     f7a:	be 84       	ldd	r11, Y+14	; 0x0e
     f7c:	cf 84       	ldd	r12, Y+15	; 0x0f
     f7e:	d8 88       	ldd	r13, Y+16	; 0x10
     f80:	29 81       	ldd	r18, Y+1	; 0x01
     f82:	3a 81       	ldd	r19, Y+2	; 0x02
     f84:	4b 81       	ldd	r20, Y+3	; 0x03
     f86:	5c 81       	ldd	r21, Y+4	; 0x04
     f88:	69 96       	adiw	r28, 0x19	; 25
     f8a:	2f af       	std	Y+63, r18	; 0x3f
     f8c:	69 97       	sbiw	r28, 0x19	; 25
     f8e:	6a 96       	adiw	r28, 0x1a	; 26
     f90:	3f af       	std	Y+63, r19	; 0x3f
     f92:	6a 97       	sbiw	r28, 0x1a	; 26
     f94:	6b 96       	adiw	r28, 0x1b	; 27
     f96:	4f af       	std	Y+63, r20	; 0x3f
     f98:	6b 97       	sbiw	r28, 0x1b	; 27
     f9a:	6c 96       	adiw	r28, 0x1c	; 28
     f9c:	5f af       	std	Y+63, r21	; 0x3f
     f9e:	6c 97       	sbiw	r28, 0x1c	; 28
     fa0:	6c 96       	adiw	r28, 0x1c	; 28
     fa2:	6c ac       	ldd	r6, Y+60	; 0x3c
     fa4:	7d ac       	ldd	r7, Y+61	; 0x3d
     fa6:	8e ac       	ldd	r8, Y+62	; 0x3e
     fa8:	9f ac       	ldd	r9, Y+63	; 0x3f
     faa:	6c 97       	sbiw	r28, 0x1c	; 28
     fac:	69 aa       	std	Y+49, r6	; 0x31
     fae:	7a aa       	std	Y+50, r7	; 0x32
     fb0:	8b aa       	std	Y+51, r8	; 0x33
     fb2:	9c aa       	std	Y+52, r9	; 0x34
     fb4:	6d 81       	ldd	r22, Y+5	; 0x05
     fb6:	7e 81       	ldd	r23, Y+6	; 0x06
     fb8:	8f 81       	ldd	r24, Y+7	; 0x07
     fba:	98 85       	ldd	r25, Y+8	; 0x08
     fbc:	3b 01       	movw	r6, r22
     fbe:	4c 01       	movw	r8, r24
     fc0:	6d aa       	std	Y+53, r6	; 0x35
     fc2:	7e aa       	std	Y+54, r7	; 0x36
     fc4:	8f aa       	std	Y+55, r8	; 0x37
     fc6:	98 ae       	std	Y+56, r9	; 0x38
     fc8:	a1 14       	cp	r10, r1
     fca:	b1 04       	cpc	r11, r1
     fcc:	c1 04       	cpc	r12, r1
     fce:	d1 04       	cpc	r13, r1
     fd0:	09 f0       	breq	.+2      	; 0xfd4 <__umoddi3+0xb0>
     fd2:	04 c3       	rjmp	.+1544   	; 0x15dc <__umoddi3+0x6b8>
     fd4:	62 14       	cp	r6, r2
     fd6:	73 04       	cpc	r7, r3
     fd8:	84 04       	cpc	r8, r4
     fda:	95 04       	cpc	r9, r5
     fdc:	08 f0       	brcs	.+2      	; 0xfe0 <__umoddi3+0xbc>
     fde:	00 c1       	rjmp	.+512    	; 0x11e0 <__umoddi3+0x2bc>
     fe0:	00 e0       	ldi	r16, 0x00	; 0
     fe2:	20 16       	cp	r2, r16
     fe4:	00 e0       	ldi	r16, 0x00	; 0
     fe6:	30 06       	cpc	r3, r16
     fe8:	01 e0       	ldi	r16, 0x01	; 1
     fea:	40 06       	cpc	r4, r16
     fec:	00 e0       	ldi	r16, 0x00	; 0
     fee:	50 06       	cpc	r5, r16
     ff0:	88 f4       	brcc	.+34     	; 0x1014 <__umoddi3+0xf0>
     ff2:	1f ef       	ldi	r17, 0xFF	; 255
     ff4:	21 16       	cp	r2, r17
     ff6:	31 04       	cpc	r3, r1
     ff8:	41 04       	cpc	r4, r1
     ffa:	51 04       	cpc	r5, r1
     ffc:	39 f0       	breq	.+14     	; 0x100c <__umoddi3+0xe8>
     ffe:	30 f0       	brcs	.+12     	; 0x100c <__umoddi3+0xe8>
    1000:	88 e0       	ldi	r24, 0x08	; 8
    1002:	e8 2e       	mov	r14, r24
    1004:	f1 2c       	mov	r15, r1
    1006:	01 2d       	mov	r16, r1
    1008:	11 2d       	mov	r17, r1
    100a:	18 c0       	rjmp	.+48     	; 0x103c <__umoddi3+0x118>
    100c:	ee 24       	eor	r14, r14
    100e:	ff 24       	eor	r15, r15
    1010:	87 01       	movw	r16, r14
    1012:	14 c0       	rjmp	.+40     	; 0x103c <__umoddi3+0x118>
    1014:	40 e0       	ldi	r20, 0x00	; 0
    1016:	24 16       	cp	r2, r20
    1018:	40 e0       	ldi	r20, 0x00	; 0
    101a:	34 06       	cpc	r3, r20
    101c:	40 e0       	ldi	r20, 0x00	; 0
    101e:	44 06       	cpc	r4, r20
    1020:	41 e0       	ldi	r20, 0x01	; 1
    1022:	54 06       	cpc	r5, r20
    1024:	30 f0       	brcs	.+12     	; 0x1032 <__umoddi3+0x10e>
    1026:	b8 e1       	ldi	r27, 0x18	; 24
    1028:	eb 2e       	mov	r14, r27
    102a:	f1 2c       	mov	r15, r1
    102c:	01 2d       	mov	r16, r1
    102e:	11 2d       	mov	r17, r1
    1030:	05 c0       	rjmp	.+10     	; 0x103c <__umoddi3+0x118>
    1032:	a0 e1       	ldi	r26, 0x10	; 16
    1034:	ea 2e       	mov	r14, r26
    1036:	f1 2c       	mov	r15, r1
    1038:	01 2d       	mov	r16, r1
    103a:	11 2d       	mov	r17, r1
    103c:	d2 01       	movw	r26, r4
    103e:	c1 01       	movw	r24, r2
    1040:	0e 2c       	mov	r0, r14
    1042:	04 c0       	rjmp	.+8      	; 0x104c <__umoddi3+0x128>
    1044:	b6 95       	lsr	r27
    1046:	a7 95       	ror	r26
    1048:	97 95       	ror	r25
    104a:	87 95       	ror	r24
    104c:	0a 94       	dec	r0
    104e:	d2 f7       	brpl	.-12     	; 0x1044 <__umoddi3+0x120>
    1050:	85 57       	subi	r24, 0x75	; 117
    1052:	9f 4f       	sbci	r25, 0xFF	; 255
    1054:	dc 01       	movw	r26, r24
    1056:	2c 91       	ld	r18, X
    1058:	80 e2       	ldi	r24, 0x20	; 32
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	a0 e0       	ldi	r26, 0x00	; 0
    105e:	b0 e0       	ldi	r27, 0x00	; 0
    1060:	8e 19       	sub	r24, r14
    1062:	9f 09       	sbc	r25, r15
    1064:	a0 0b       	sbc	r26, r16
    1066:	b1 0b       	sbc	r27, r17
    1068:	5c 01       	movw	r10, r24
    106a:	6d 01       	movw	r12, r26
    106c:	a2 1a       	sub	r10, r18
    106e:	b1 08       	sbc	r11, r1
    1070:	c1 08       	sbc	r12, r1
    1072:	d1 08       	sbc	r13, r1
    1074:	a9 ae       	std	Y+57, r10	; 0x39
    1076:	ba ae       	std	Y+58, r11	; 0x3a
    1078:	cb ae       	std	Y+59, r12	; 0x3b
    107a:	dc ae       	std	Y+60, r13	; 0x3c
    107c:	a1 14       	cp	r10, r1
    107e:	b1 04       	cpc	r11, r1
    1080:	c1 04       	cpc	r12, r1
    1082:	d1 04       	cpc	r13, r1
    1084:	09 f4       	brne	.+2      	; 0x1088 <__umoddi3+0x164>
    1086:	3f c0       	rjmp	.+126    	; 0x1106 <__umoddi3+0x1e2>
    1088:	69 ad       	ldd	r22, Y+57	; 0x39
    108a:	06 2e       	mov	r0, r22
    108c:	04 c0       	rjmp	.+8      	; 0x1096 <__umoddi3+0x172>
    108e:	22 0c       	add	r2, r2
    1090:	33 1c       	adc	r3, r3
    1092:	44 1c       	adc	r4, r4
    1094:	55 1c       	adc	r5, r5
    1096:	0a 94       	dec	r0
    1098:	d2 f7       	brpl	.-12     	; 0x108e <__umoddi3+0x16a>
    109a:	a4 01       	movw	r20, r8
    109c:	93 01       	movw	r18, r6
    109e:	06 2e       	mov	r0, r22
    10a0:	04 c0       	rjmp	.+8      	; 0x10aa <__umoddi3+0x186>
    10a2:	22 0f       	add	r18, r18
    10a4:	33 1f       	adc	r19, r19
    10a6:	44 1f       	adc	r20, r20
    10a8:	55 1f       	adc	r21, r21
    10aa:	0a 94       	dec	r0
    10ac:	d2 f7       	brpl	.-12     	; 0x10a2 <__umoddi3+0x17e>
    10ae:	80 e2       	ldi	r24, 0x20	; 32
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	8a 19       	sub	r24, r10
    10b4:	9b 09       	sbc	r25, r11
    10b6:	6c 96       	adiw	r28, 0x1c	; 28
    10b8:	cc ac       	ldd	r12, Y+60	; 0x3c
    10ba:	dd ac       	ldd	r13, Y+61	; 0x3d
    10bc:	ee ac       	ldd	r14, Y+62	; 0x3e
    10be:	ff ac       	ldd	r15, Y+63	; 0x3f
    10c0:	6c 97       	sbiw	r28, 0x1c	; 28
    10c2:	04 c0       	rjmp	.+8      	; 0x10cc <__umoddi3+0x1a8>
    10c4:	f6 94       	lsr	r15
    10c6:	e7 94       	ror	r14
    10c8:	d7 94       	ror	r13
    10ca:	c7 94       	ror	r12
    10cc:	8a 95       	dec	r24
    10ce:	d2 f7       	brpl	.-12     	; 0x10c4 <__umoddi3+0x1a0>
    10d0:	87 01       	movw	r16, r14
    10d2:	76 01       	movw	r14, r12
    10d4:	e2 2a       	or	r14, r18
    10d6:	f3 2a       	or	r15, r19
    10d8:	04 2b       	or	r16, r20
    10da:	15 2b       	or	r17, r21
    10dc:	ed aa       	std	Y+53, r14	; 0x35
    10de:	fe aa       	std	Y+54, r15	; 0x36
    10e0:	0f ab       	std	Y+55, r16	; 0x37
    10e2:	18 af       	std	Y+56, r17	; 0x38
    10e4:	6c 96       	adiw	r28, 0x1c	; 28
    10e6:	8c ad       	ldd	r24, Y+60	; 0x3c
    10e8:	9d ad       	ldd	r25, Y+61	; 0x3d
    10ea:	ae ad       	ldd	r26, Y+62	; 0x3e
    10ec:	bf ad       	ldd	r27, Y+63	; 0x3f
    10ee:	6c 97       	sbiw	r28, 0x1c	; 28
    10f0:	04 c0       	rjmp	.+8      	; 0x10fa <__umoddi3+0x1d6>
    10f2:	88 0f       	add	r24, r24
    10f4:	99 1f       	adc	r25, r25
    10f6:	aa 1f       	adc	r26, r26
    10f8:	bb 1f       	adc	r27, r27
    10fa:	6a 95       	dec	r22
    10fc:	d2 f7       	brpl	.-12     	; 0x10f2 <__umoddi3+0x1ce>
    10fe:	89 ab       	std	Y+49, r24	; 0x31
    1100:	9a ab       	std	Y+50, r25	; 0x32
    1102:	ab ab       	std	Y+51, r26	; 0x33
    1104:	bc ab       	std	Y+52, r27	; 0x34
    1106:	32 01       	movw	r6, r4
    1108:	88 24       	eor	r8, r8
    110a:	99 24       	eor	r9, r9
    110c:	b2 01       	movw	r22, r4
    110e:	a1 01       	movw	r20, r2
    1110:	60 70       	andi	r22, 0x00	; 0
    1112:	70 70       	andi	r23, 0x00	; 0
    1114:	21 96       	adiw	r28, 0x01	; 1
    1116:	4c af       	std	Y+60, r20	; 0x3c
    1118:	5d af       	std	Y+61, r21	; 0x3d
    111a:	6e af       	std	Y+62, r22	; 0x3e
    111c:	7f af       	std	Y+63, r23	; 0x3f
    111e:	21 97       	sbiw	r28, 0x01	; 1
    1120:	6d a9       	ldd	r22, Y+53	; 0x35
    1122:	7e a9       	ldd	r23, Y+54	; 0x36
    1124:	8f a9       	ldd	r24, Y+55	; 0x37
    1126:	98 ad       	ldd	r25, Y+56	; 0x38
    1128:	a4 01       	movw	r20, r8
    112a:	93 01       	movw	r18, r6
    112c:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    1130:	7b 01       	movw	r14, r22
    1132:	8c 01       	movw	r16, r24
    1134:	6d a9       	ldd	r22, Y+53	; 0x35
    1136:	7e a9       	ldd	r23, Y+54	; 0x36
    1138:	8f a9       	ldd	r24, Y+55	; 0x37
    113a:	98 ad       	ldd	r25, Y+56	; 0x38
    113c:	a4 01       	movw	r20, r8
    113e:	93 01       	movw	r18, r6
    1140:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    1144:	ca 01       	movw	r24, r20
    1146:	b9 01       	movw	r22, r18
    1148:	21 96       	adiw	r28, 0x01	; 1
    114a:	2c ad       	ldd	r18, Y+60	; 0x3c
    114c:	3d ad       	ldd	r19, Y+61	; 0x3d
    114e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1150:	5f ad       	ldd	r21, Y+63	; 0x3f
    1152:	21 97       	sbiw	r28, 0x01	; 1
    1154:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
    1158:	9b 01       	movw	r18, r22
    115a:	ac 01       	movw	r20, r24
    115c:	87 01       	movw	r16, r14
    115e:	ff 24       	eor	r15, r15
    1160:	ee 24       	eor	r14, r14
    1162:	a9 a8       	ldd	r10, Y+49	; 0x31
    1164:	ba a8       	ldd	r11, Y+50	; 0x32
    1166:	cb a8       	ldd	r12, Y+51	; 0x33
    1168:	dc a8       	ldd	r13, Y+52	; 0x34
    116a:	c6 01       	movw	r24, r12
    116c:	aa 27       	eor	r26, r26
    116e:	bb 27       	eor	r27, r27
    1170:	57 01       	movw	r10, r14
    1172:	68 01       	movw	r12, r16
    1174:	a8 2a       	or	r10, r24
    1176:	b9 2a       	or	r11, r25
    1178:	ca 2a       	or	r12, r26
    117a:	db 2a       	or	r13, r27
    117c:	a2 16       	cp	r10, r18
    117e:	b3 06       	cpc	r11, r19
    1180:	c4 06       	cpc	r12, r20
    1182:	d5 06       	cpc	r13, r21
    1184:	90 f4       	brcc	.+36     	; 0x11aa <__umoddi3+0x286>
    1186:	a2 0c       	add	r10, r2
    1188:	b3 1c       	adc	r11, r3
    118a:	c4 1c       	adc	r12, r4
    118c:	d5 1c       	adc	r13, r5
    118e:	a2 14       	cp	r10, r2
    1190:	b3 04       	cpc	r11, r3
    1192:	c4 04       	cpc	r12, r4
    1194:	d5 04       	cpc	r13, r5
    1196:	48 f0       	brcs	.+18     	; 0x11aa <__umoddi3+0x286>
    1198:	a2 16       	cp	r10, r18
    119a:	b3 06       	cpc	r11, r19
    119c:	c4 06       	cpc	r12, r20
    119e:	d5 06       	cpc	r13, r21
    11a0:	20 f4       	brcc	.+8      	; 0x11aa <__umoddi3+0x286>
    11a2:	a2 0c       	add	r10, r2
    11a4:	b3 1c       	adc	r11, r3
    11a6:	c4 1c       	adc	r12, r4
    11a8:	d5 1c       	adc	r13, r5
    11aa:	a2 1a       	sub	r10, r18
    11ac:	b3 0a       	sbc	r11, r19
    11ae:	c4 0a       	sbc	r12, r20
    11b0:	d5 0a       	sbc	r13, r21
    11b2:	c6 01       	movw	r24, r12
    11b4:	b5 01       	movw	r22, r10
    11b6:	a4 01       	movw	r20, r8
    11b8:	93 01       	movw	r18, r6
    11ba:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    11be:	7b 01       	movw	r14, r22
    11c0:	8c 01       	movw	r16, r24
    11c2:	c6 01       	movw	r24, r12
    11c4:	b5 01       	movw	r22, r10
    11c6:	a4 01       	movw	r20, r8
    11c8:	93 01       	movw	r18, r6
    11ca:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    11ce:	ca 01       	movw	r24, r20
    11d0:	b9 01       	movw	r22, r18
    11d2:	21 96       	adiw	r28, 0x01	; 1
    11d4:	2c ad       	ldd	r18, Y+60	; 0x3c
    11d6:	3d ad       	ldd	r19, Y+61	; 0x3d
    11d8:	4e ad       	ldd	r20, Y+62	; 0x3e
    11da:	5f ad       	ldd	r21, Y+63	; 0x3f
    11dc:	21 97       	sbiw	r28, 0x01	; 1
    11de:	ba c1       	rjmp	.+884    	; 0x1554 <__umoddi3+0x630>
    11e0:	21 14       	cp	r2, r1
    11e2:	31 04       	cpc	r3, r1
    11e4:	41 04       	cpc	r4, r1
    11e6:	51 04       	cpc	r5, r1
    11e8:	71 f4       	brne	.+28     	; 0x1206 <__umoddi3+0x2e2>
    11ea:	61 e0       	ldi	r22, 0x01	; 1
    11ec:	70 e0       	ldi	r23, 0x00	; 0
    11ee:	80 e0       	ldi	r24, 0x00	; 0
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	20 e0       	ldi	r18, 0x00	; 0
    11f4:	30 e0       	ldi	r19, 0x00	; 0
    11f6:	40 e0       	ldi	r20, 0x00	; 0
    11f8:	50 e0       	ldi	r21, 0x00	; 0
    11fa:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    11fe:	c9 01       	movw	r24, r18
    1200:	da 01       	movw	r26, r20
    1202:	1c 01       	movw	r2, r24
    1204:	2d 01       	movw	r4, r26
    1206:	00 e0       	ldi	r16, 0x00	; 0
    1208:	20 16       	cp	r2, r16
    120a:	00 e0       	ldi	r16, 0x00	; 0
    120c:	30 06       	cpc	r3, r16
    120e:	01 e0       	ldi	r16, 0x01	; 1
    1210:	40 06       	cpc	r4, r16
    1212:	00 e0       	ldi	r16, 0x00	; 0
    1214:	50 06       	cpc	r5, r16
    1216:	88 f4       	brcc	.+34     	; 0x123a <__umoddi3+0x316>
    1218:	1f ef       	ldi	r17, 0xFF	; 255
    121a:	21 16       	cp	r2, r17
    121c:	31 04       	cpc	r3, r1
    121e:	41 04       	cpc	r4, r1
    1220:	51 04       	cpc	r5, r1
    1222:	39 f0       	breq	.+14     	; 0x1232 <__umoddi3+0x30e>
    1224:	30 f0       	brcs	.+12     	; 0x1232 <__umoddi3+0x30e>
    1226:	68 e0       	ldi	r22, 0x08	; 8
    1228:	e6 2e       	mov	r14, r22
    122a:	f1 2c       	mov	r15, r1
    122c:	01 2d       	mov	r16, r1
    122e:	11 2d       	mov	r17, r1
    1230:	18 c0       	rjmp	.+48     	; 0x1262 <__umoddi3+0x33e>
    1232:	ee 24       	eor	r14, r14
    1234:	ff 24       	eor	r15, r15
    1236:	87 01       	movw	r16, r14
    1238:	14 c0       	rjmp	.+40     	; 0x1262 <__umoddi3+0x33e>
    123a:	40 e0       	ldi	r20, 0x00	; 0
    123c:	24 16       	cp	r2, r20
    123e:	40 e0       	ldi	r20, 0x00	; 0
    1240:	34 06       	cpc	r3, r20
    1242:	40 e0       	ldi	r20, 0x00	; 0
    1244:	44 06       	cpc	r4, r20
    1246:	41 e0       	ldi	r20, 0x01	; 1
    1248:	54 06       	cpc	r5, r20
    124a:	30 f0       	brcs	.+12     	; 0x1258 <__umoddi3+0x334>
    124c:	58 e1       	ldi	r21, 0x18	; 24
    124e:	e5 2e       	mov	r14, r21
    1250:	f1 2c       	mov	r15, r1
    1252:	01 2d       	mov	r16, r1
    1254:	11 2d       	mov	r17, r1
    1256:	05 c0       	rjmp	.+10     	; 0x1262 <__umoddi3+0x33e>
    1258:	40 e1       	ldi	r20, 0x10	; 16
    125a:	e4 2e       	mov	r14, r20
    125c:	f1 2c       	mov	r15, r1
    125e:	01 2d       	mov	r16, r1
    1260:	11 2d       	mov	r17, r1
    1262:	d2 01       	movw	r26, r4
    1264:	c1 01       	movw	r24, r2
    1266:	0e 2c       	mov	r0, r14
    1268:	04 c0       	rjmp	.+8      	; 0x1272 <__umoddi3+0x34e>
    126a:	b6 95       	lsr	r27
    126c:	a7 95       	ror	r26
    126e:	97 95       	ror	r25
    1270:	87 95       	ror	r24
    1272:	0a 94       	dec	r0
    1274:	d2 f7       	brpl	.-12     	; 0x126a <__umoddi3+0x346>
    1276:	85 57       	subi	r24, 0x75	; 117
    1278:	9f 4f       	sbci	r25, 0xFF	; 255
    127a:	dc 01       	movw	r26, r24
    127c:	2c 91       	ld	r18, X
    127e:	30 e2       	ldi	r19, 0x20	; 32
    1280:	a3 2e       	mov	r10, r19
    1282:	b1 2c       	mov	r11, r1
    1284:	c1 2c       	mov	r12, r1
    1286:	d1 2c       	mov	r13, r1
    1288:	d6 01       	movw	r26, r12
    128a:	c5 01       	movw	r24, r10
    128c:	8e 19       	sub	r24, r14
    128e:	9f 09       	sbc	r25, r15
    1290:	a0 0b       	sbc	r26, r16
    1292:	b1 0b       	sbc	r27, r17
    1294:	7c 01       	movw	r14, r24
    1296:	8d 01       	movw	r16, r26
    1298:	e2 1a       	sub	r14, r18
    129a:	f1 08       	sbc	r15, r1
    129c:	01 09       	sbc	r16, r1
    129e:	11 09       	sbc	r17, r1
    12a0:	e9 ae       	std	Y+57, r14	; 0x39
    12a2:	fa ae       	std	Y+58, r15	; 0x3a
    12a4:	0b af       	std	Y+59, r16	; 0x3b
    12a6:	1c af       	std	Y+60, r17	; 0x3c
    12a8:	e1 14       	cp	r14, r1
    12aa:	f1 04       	cpc	r15, r1
    12ac:	01 05       	cpc	r16, r1
    12ae:	11 05       	cpc	r17, r1
    12b0:	39 f4       	brne	.+14     	; 0x12c0 <__umoddi3+0x39c>
    12b2:	64 01       	movw	r12, r8
    12b4:	53 01       	movw	r10, r6
    12b6:	a2 18       	sub	r10, r2
    12b8:	b3 08       	sbc	r11, r3
    12ba:	c4 08       	sbc	r12, r4
    12bc:	d5 08       	sbc	r13, r5
    12be:	e2 c0       	rjmp	.+452    	; 0x1484 <__umoddi3+0x560>
    12c0:	f9 ac       	ldd	r15, Y+57	; 0x39
    12c2:	68 96       	adiw	r28, 0x18	; 24
    12c4:	ff ae       	std	Y+63, r15	; 0x3f
    12c6:	68 97       	sbiw	r28, 0x18	; 24
    12c8:	0f 2c       	mov	r0, r15
    12ca:	04 c0       	rjmp	.+8      	; 0x12d4 <__umoddi3+0x3b0>
    12cc:	22 0c       	add	r2, r2
    12ce:	33 1c       	adc	r3, r3
    12d0:	44 1c       	adc	r4, r4
    12d2:	55 1c       	adc	r5, r5
    12d4:	0a 94       	dec	r0
    12d6:	d2 f7       	brpl	.-12     	; 0x12cc <__umoddi3+0x3a8>
    12d8:	8a 2d       	mov	r24, r10
    12da:	8f 19       	sub	r24, r15
    12dc:	64 01       	movw	r12, r8
    12de:	53 01       	movw	r10, r6
    12e0:	08 2e       	mov	r0, r24
    12e2:	04 c0       	rjmp	.+8      	; 0x12ec <__umoddi3+0x3c8>
    12e4:	d6 94       	lsr	r13
    12e6:	c7 94       	ror	r12
    12e8:	b7 94       	ror	r11
    12ea:	a7 94       	ror	r10
    12ec:	0a 94       	dec	r0
    12ee:	d2 f7       	brpl	.-12     	; 0x12e4 <__umoddi3+0x3c0>
    12f0:	a4 01       	movw	r20, r8
    12f2:	93 01       	movw	r18, r6
    12f4:	04 c0       	rjmp	.+8      	; 0x12fe <__umoddi3+0x3da>
    12f6:	22 0f       	add	r18, r18
    12f8:	33 1f       	adc	r19, r19
    12fa:	44 1f       	adc	r20, r20
    12fc:	55 1f       	adc	r21, r21
    12fe:	fa 94       	dec	r15
    1300:	d2 f7       	brpl	.-12     	; 0x12f6 <__umoddi3+0x3d2>
    1302:	6c 96       	adiw	r28, 0x1c	; 28
    1304:	6c ac       	ldd	r6, Y+60	; 0x3c
    1306:	7d ac       	ldd	r7, Y+61	; 0x3d
    1308:	8e ac       	ldd	r8, Y+62	; 0x3e
    130a:	9f ac       	ldd	r9, Y+63	; 0x3f
    130c:	6c 97       	sbiw	r28, 0x1c	; 28
    130e:	04 c0       	rjmp	.+8      	; 0x1318 <__umoddi3+0x3f4>
    1310:	96 94       	lsr	r9
    1312:	87 94       	ror	r8
    1314:	77 94       	ror	r7
    1316:	67 94       	ror	r6
    1318:	8a 95       	dec	r24
    131a:	d2 f7       	brpl	.-12     	; 0x1310 <__umoddi3+0x3ec>
    131c:	84 01       	movw	r16, r8
    131e:	73 01       	movw	r14, r6
    1320:	e2 2a       	or	r14, r18
    1322:	f3 2a       	or	r15, r19
    1324:	04 2b       	or	r16, r20
    1326:	15 2b       	or	r17, r21
    1328:	ed a6       	std	Y+45, r14	; 0x2d
    132a:	fe a6       	std	Y+46, r15	; 0x2e
    132c:	0f a7       	std	Y+47, r16	; 0x2f
    132e:	18 ab       	std	Y+48, r17	; 0x30
    1330:	32 01       	movw	r6, r4
    1332:	88 24       	eor	r8, r8
    1334:	99 24       	eor	r9, r9
    1336:	b2 01       	movw	r22, r4
    1338:	a1 01       	movw	r20, r2
    133a:	60 70       	andi	r22, 0x00	; 0
    133c:	70 70       	andi	r23, 0x00	; 0
    133e:	25 96       	adiw	r28, 0x05	; 5
    1340:	4c af       	std	Y+60, r20	; 0x3c
    1342:	5d af       	std	Y+61, r21	; 0x3d
    1344:	6e af       	std	Y+62, r22	; 0x3e
    1346:	7f af       	std	Y+63, r23	; 0x3f
    1348:	25 97       	sbiw	r28, 0x05	; 5
    134a:	c6 01       	movw	r24, r12
    134c:	b5 01       	movw	r22, r10
    134e:	a4 01       	movw	r20, r8
    1350:	93 01       	movw	r18, r6
    1352:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    1356:	7b 01       	movw	r14, r22
    1358:	8c 01       	movw	r16, r24
    135a:	c6 01       	movw	r24, r12
    135c:	b5 01       	movw	r22, r10
    135e:	a4 01       	movw	r20, r8
    1360:	93 01       	movw	r18, r6
    1362:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    1366:	ca 01       	movw	r24, r20
    1368:	b9 01       	movw	r22, r18
    136a:	25 96       	adiw	r28, 0x05	; 5
    136c:	2c ad       	ldd	r18, Y+60	; 0x3c
    136e:	3d ad       	ldd	r19, Y+61	; 0x3d
    1370:	4e ad       	ldd	r20, Y+62	; 0x3e
    1372:	5f ad       	ldd	r21, Y+63	; 0x3f
    1374:	25 97       	sbiw	r28, 0x05	; 5
    1376:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
    137a:	9b 01       	movw	r18, r22
    137c:	ac 01       	movw	r20, r24
    137e:	87 01       	movw	r16, r14
    1380:	ff 24       	eor	r15, r15
    1382:	ee 24       	eor	r14, r14
    1384:	ad a4       	ldd	r10, Y+45	; 0x2d
    1386:	be a4       	ldd	r11, Y+46	; 0x2e
    1388:	cf a4       	ldd	r12, Y+47	; 0x2f
    138a:	d8 a8       	ldd	r13, Y+48	; 0x30
    138c:	c6 01       	movw	r24, r12
    138e:	aa 27       	eor	r26, r26
    1390:	bb 27       	eor	r27, r27
    1392:	5c 01       	movw	r10, r24
    1394:	6d 01       	movw	r12, r26
    1396:	ae 28       	or	r10, r14
    1398:	bf 28       	or	r11, r15
    139a:	c0 2a       	or	r12, r16
    139c:	d1 2a       	or	r13, r17
    139e:	a2 16       	cp	r10, r18
    13a0:	b3 06       	cpc	r11, r19
    13a2:	c4 06       	cpc	r12, r20
    13a4:	d5 06       	cpc	r13, r21
    13a6:	90 f4       	brcc	.+36     	; 0x13cc <__umoddi3+0x4a8>
    13a8:	a2 0c       	add	r10, r2
    13aa:	b3 1c       	adc	r11, r3
    13ac:	c4 1c       	adc	r12, r4
    13ae:	d5 1c       	adc	r13, r5
    13b0:	a2 14       	cp	r10, r2
    13b2:	b3 04       	cpc	r11, r3
    13b4:	c4 04       	cpc	r12, r4
    13b6:	d5 04       	cpc	r13, r5
    13b8:	48 f0       	brcs	.+18     	; 0x13cc <__umoddi3+0x4a8>
    13ba:	a2 16       	cp	r10, r18
    13bc:	b3 06       	cpc	r11, r19
    13be:	c4 06       	cpc	r12, r20
    13c0:	d5 06       	cpc	r13, r21
    13c2:	20 f4       	brcc	.+8      	; 0x13cc <__umoddi3+0x4a8>
    13c4:	a2 0c       	add	r10, r2
    13c6:	b3 1c       	adc	r11, r3
    13c8:	c4 1c       	adc	r12, r4
    13ca:	d5 1c       	adc	r13, r5
    13cc:	a2 1a       	sub	r10, r18
    13ce:	b3 0a       	sbc	r11, r19
    13d0:	c4 0a       	sbc	r12, r20
    13d2:	d5 0a       	sbc	r13, r21
    13d4:	c6 01       	movw	r24, r12
    13d6:	b5 01       	movw	r22, r10
    13d8:	a4 01       	movw	r20, r8
    13da:	93 01       	movw	r18, r6
    13dc:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    13e0:	7b 01       	movw	r14, r22
    13e2:	8c 01       	movw	r16, r24
    13e4:	c6 01       	movw	r24, r12
    13e6:	b5 01       	movw	r22, r10
    13e8:	a4 01       	movw	r20, r8
    13ea:	93 01       	movw	r18, r6
    13ec:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    13f0:	ca 01       	movw	r24, r20
    13f2:	b9 01       	movw	r22, r18
    13f4:	25 96       	adiw	r28, 0x05	; 5
    13f6:	2c ad       	ldd	r18, Y+60	; 0x3c
    13f8:	3d ad       	ldd	r19, Y+61	; 0x3d
    13fa:	4e ad       	ldd	r20, Y+62	; 0x3e
    13fc:	5f ad       	ldd	r21, Y+63	; 0x3f
    13fe:	25 97       	sbiw	r28, 0x05	; 5
    1400:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
    1404:	9b 01       	movw	r18, r22
    1406:	ac 01       	movw	r20, r24
    1408:	87 01       	movw	r16, r14
    140a:	ff 24       	eor	r15, r15
    140c:	ee 24       	eor	r14, r14
    140e:	8d a5       	ldd	r24, Y+45	; 0x2d
    1410:	9e a5       	ldd	r25, Y+46	; 0x2e
    1412:	af a5       	ldd	r26, Y+47	; 0x2f
    1414:	b8 a9       	ldd	r27, Y+48	; 0x30
    1416:	a0 70       	andi	r26, 0x00	; 0
    1418:	b0 70       	andi	r27, 0x00	; 0
    141a:	57 01       	movw	r10, r14
    141c:	68 01       	movw	r12, r16
    141e:	a8 2a       	or	r10, r24
    1420:	b9 2a       	or	r11, r25
    1422:	ca 2a       	or	r12, r26
    1424:	db 2a       	or	r13, r27
    1426:	a2 16       	cp	r10, r18
    1428:	b3 06       	cpc	r11, r19
    142a:	c4 06       	cpc	r12, r20
    142c:	d5 06       	cpc	r13, r21
    142e:	90 f4       	brcc	.+36     	; 0x1454 <__umoddi3+0x530>
    1430:	a2 0c       	add	r10, r2
    1432:	b3 1c       	adc	r11, r3
    1434:	c4 1c       	adc	r12, r4
    1436:	d5 1c       	adc	r13, r5
    1438:	a2 14       	cp	r10, r2
    143a:	b3 04       	cpc	r11, r3
    143c:	c4 04       	cpc	r12, r4
    143e:	d5 04       	cpc	r13, r5
    1440:	48 f0       	brcs	.+18     	; 0x1454 <__umoddi3+0x530>
    1442:	a2 16       	cp	r10, r18
    1444:	b3 06       	cpc	r11, r19
    1446:	c4 06       	cpc	r12, r20
    1448:	d5 06       	cpc	r13, r21
    144a:	20 f4       	brcc	.+8      	; 0x1454 <__umoddi3+0x530>
    144c:	a2 0c       	add	r10, r2
    144e:	b3 1c       	adc	r11, r3
    1450:	c4 1c       	adc	r12, r4
    1452:	d5 1c       	adc	r13, r5
    1454:	6c 96       	adiw	r28, 0x1c	; 28
    1456:	ec ac       	ldd	r14, Y+60	; 0x3c
    1458:	fd ac       	ldd	r15, Y+61	; 0x3d
    145a:	0e ad       	ldd	r16, Y+62	; 0x3e
    145c:	1f ad       	ldd	r17, Y+63	; 0x3f
    145e:	6c 97       	sbiw	r28, 0x1c	; 28
    1460:	68 96       	adiw	r28, 0x18	; 24
    1462:	0f ac       	ldd	r0, Y+63	; 0x3f
    1464:	68 97       	sbiw	r28, 0x18	; 24
    1466:	04 c0       	rjmp	.+8      	; 0x1470 <__umoddi3+0x54c>
    1468:	ee 0c       	add	r14, r14
    146a:	ff 1c       	adc	r15, r15
    146c:	00 1f       	adc	r16, r16
    146e:	11 1f       	adc	r17, r17
    1470:	0a 94       	dec	r0
    1472:	d2 f7       	brpl	.-12     	; 0x1468 <__umoddi3+0x544>
    1474:	e9 aa       	std	Y+49, r14	; 0x31
    1476:	fa aa       	std	Y+50, r15	; 0x32
    1478:	0b ab       	std	Y+51, r16	; 0x33
    147a:	1c ab       	std	Y+52, r17	; 0x34
    147c:	a2 1a       	sub	r10, r18
    147e:	b3 0a       	sbc	r11, r19
    1480:	c4 0a       	sbc	r12, r20
    1482:	d5 0a       	sbc	r13, r21
    1484:	32 01       	movw	r6, r4
    1486:	88 24       	eor	r8, r8
    1488:	99 24       	eor	r9, r9
    148a:	b2 01       	movw	r22, r4
    148c:	a1 01       	movw	r20, r2
    148e:	60 70       	andi	r22, 0x00	; 0
    1490:	70 70       	andi	r23, 0x00	; 0
    1492:	29 96       	adiw	r28, 0x09	; 9
    1494:	4c af       	std	Y+60, r20	; 0x3c
    1496:	5d af       	std	Y+61, r21	; 0x3d
    1498:	6e af       	std	Y+62, r22	; 0x3e
    149a:	7f af       	std	Y+63, r23	; 0x3f
    149c:	29 97       	sbiw	r28, 0x09	; 9
    149e:	c6 01       	movw	r24, r12
    14a0:	b5 01       	movw	r22, r10
    14a2:	a4 01       	movw	r20, r8
    14a4:	93 01       	movw	r18, r6
    14a6:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    14aa:	7b 01       	movw	r14, r22
    14ac:	8c 01       	movw	r16, r24
    14ae:	c6 01       	movw	r24, r12
    14b0:	b5 01       	movw	r22, r10
    14b2:	a4 01       	movw	r20, r8
    14b4:	93 01       	movw	r18, r6
    14b6:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    14ba:	ca 01       	movw	r24, r20
    14bc:	b9 01       	movw	r22, r18
    14be:	29 96       	adiw	r28, 0x09	; 9
    14c0:	2c ad       	ldd	r18, Y+60	; 0x3c
    14c2:	3d ad       	ldd	r19, Y+61	; 0x3d
    14c4:	4e ad       	ldd	r20, Y+62	; 0x3e
    14c6:	5f ad       	ldd	r21, Y+63	; 0x3f
    14c8:	29 97       	sbiw	r28, 0x09	; 9
    14ca:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
    14ce:	9b 01       	movw	r18, r22
    14d0:	ac 01       	movw	r20, r24
    14d2:	87 01       	movw	r16, r14
    14d4:	ff 24       	eor	r15, r15
    14d6:	ee 24       	eor	r14, r14
    14d8:	a9 a8       	ldd	r10, Y+49	; 0x31
    14da:	ba a8       	ldd	r11, Y+50	; 0x32
    14dc:	cb a8       	ldd	r12, Y+51	; 0x33
    14de:	dc a8       	ldd	r13, Y+52	; 0x34
    14e0:	c6 01       	movw	r24, r12
    14e2:	aa 27       	eor	r26, r26
    14e4:	bb 27       	eor	r27, r27
    14e6:	57 01       	movw	r10, r14
    14e8:	68 01       	movw	r12, r16
    14ea:	a8 2a       	or	r10, r24
    14ec:	b9 2a       	or	r11, r25
    14ee:	ca 2a       	or	r12, r26
    14f0:	db 2a       	or	r13, r27
    14f2:	a2 16       	cp	r10, r18
    14f4:	b3 06       	cpc	r11, r19
    14f6:	c4 06       	cpc	r12, r20
    14f8:	d5 06       	cpc	r13, r21
    14fa:	90 f4       	brcc	.+36     	; 0x1520 <__umoddi3+0x5fc>
    14fc:	a2 0c       	add	r10, r2
    14fe:	b3 1c       	adc	r11, r3
    1500:	c4 1c       	adc	r12, r4
    1502:	d5 1c       	adc	r13, r5
    1504:	a2 14       	cp	r10, r2
    1506:	b3 04       	cpc	r11, r3
    1508:	c4 04       	cpc	r12, r4
    150a:	d5 04       	cpc	r13, r5
    150c:	48 f0       	brcs	.+18     	; 0x1520 <__umoddi3+0x5fc>
    150e:	a2 16       	cp	r10, r18
    1510:	b3 06       	cpc	r11, r19
    1512:	c4 06       	cpc	r12, r20
    1514:	d5 06       	cpc	r13, r21
    1516:	20 f4       	brcc	.+8      	; 0x1520 <__umoddi3+0x5fc>
    1518:	a2 0c       	add	r10, r2
    151a:	b3 1c       	adc	r11, r3
    151c:	c4 1c       	adc	r12, r4
    151e:	d5 1c       	adc	r13, r5
    1520:	a2 1a       	sub	r10, r18
    1522:	b3 0a       	sbc	r11, r19
    1524:	c4 0a       	sbc	r12, r20
    1526:	d5 0a       	sbc	r13, r21
    1528:	c6 01       	movw	r24, r12
    152a:	b5 01       	movw	r22, r10
    152c:	a4 01       	movw	r20, r8
    152e:	93 01       	movw	r18, r6
    1530:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    1534:	7b 01       	movw	r14, r22
    1536:	8c 01       	movw	r16, r24
    1538:	c6 01       	movw	r24, r12
    153a:	b5 01       	movw	r22, r10
    153c:	a4 01       	movw	r20, r8
    153e:	93 01       	movw	r18, r6
    1540:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    1544:	ca 01       	movw	r24, r20
    1546:	b9 01       	movw	r22, r18
    1548:	29 96       	adiw	r28, 0x09	; 9
    154a:	2c ad       	ldd	r18, Y+60	; 0x3c
    154c:	3d ad       	ldd	r19, Y+61	; 0x3d
    154e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1550:	5f ad       	ldd	r21, Y+63	; 0x3f
    1552:	29 97       	sbiw	r28, 0x09	; 9
    1554:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
    1558:	9b 01       	movw	r18, r22
    155a:	ac 01       	movw	r20, r24
    155c:	87 01       	movw	r16, r14
    155e:	ff 24       	eor	r15, r15
    1560:	ee 24       	eor	r14, r14
    1562:	89 a9       	ldd	r24, Y+49	; 0x31
    1564:	9a a9       	ldd	r25, Y+50	; 0x32
    1566:	ab a9       	ldd	r26, Y+51	; 0x33
    1568:	bc a9       	ldd	r27, Y+52	; 0x34
    156a:	a0 70       	andi	r26, 0x00	; 0
    156c:	b0 70       	andi	r27, 0x00	; 0
    156e:	e8 2a       	or	r14, r24
    1570:	f9 2a       	or	r15, r25
    1572:	0a 2b       	or	r16, r26
    1574:	1b 2b       	or	r17, r27
    1576:	e2 16       	cp	r14, r18
    1578:	f3 06       	cpc	r15, r19
    157a:	04 07       	cpc	r16, r20
    157c:	15 07       	cpc	r17, r21
    157e:	90 f4       	brcc	.+36     	; 0x15a4 <__umoddi3+0x680>
    1580:	e2 0c       	add	r14, r2
    1582:	f3 1c       	adc	r15, r3
    1584:	04 1d       	adc	r16, r4
    1586:	15 1d       	adc	r17, r5
    1588:	e2 14       	cp	r14, r2
    158a:	f3 04       	cpc	r15, r3
    158c:	04 05       	cpc	r16, r4
    158e:	15 05       	cpc	r17, r5
    1590:	48 f0       	brcs	.+18     	; 0x15a4 <__umoddi3+0x680>
    1592:	e2 16       	cp	r14, r18
    1594:	f3 06       	cpc	r15, r19
    1596:	04 07       	cpc	r16, r20
    1598:	15 07       	cpc	r17, r21
    159a:	20 f4       	brcc	.+8      	; 0x15a4 <__umoddi3+0x680>
    159c:	e2 0c       	add	r14, r2
    159e:	f3 1c       	adc	r15, r3
    15a0:	04 1d       	adc	r16, r4
    15a2:	15 1d       	adc	r17, r5
    15a4:	e2 1a       	sub	r14, r18
    15a6:	f3 0a       	sbc	r15, r19
    15a8:	04 0b       	sbc	r16, r20
    15aa:	15 0b       	sbc	r17, r21
    15ac:	d8 01       	movw	r26, r16
    15ae:	c7 01       	movw	r24, r14
    15b0:	09 ac       	ldd	r0, Y+57	; 0x39
    15b2:	04 c0       	rjmp	.+8      	; 0x15bc <__umoddi3+0x698>
    15b4:	b6 95       	lsr	r27
    15b6:	a7 95       	ror	r26
    15b8:	97 95       	ror	r25
    15ba:	87 95       	ror	r24
    15bc:	0a 94       	dec	r0
    15be:	d2 f7       	brpl	.-12     	; 0x15b4 <__umoddi3+0x690>
    15c0:	89 8b       	std	Y+17, r24	; 0x11
    15c2:	9a 8b       	std	Y+18, r25	; 0x12
    15c4:	ab 8b       	std	Y+19, r26	; 0x13
    15c6:	bc 8b       	std	Y+20, r27	; 0x14
    15c8:	1d 8a       	std	Y+21, r1	; 0x15
    15ca:	1e 8a       	std	Y+22, r1	; 0x16
    15cc:	1f 8a       	std	Y+23, r1	; 0x17
    15ce:	18 8e       	std	Y+24, r1	; 0x18
    15d0:	28 2f       	mov	r18, r24
    15d2:	3a 89       	ldd	r19, Y+18	; 0x12
    15d4:	4b 89       	ldd	r20, Y+19	; 0x13
    15d6:	5c 89       	ldd	r21, Y+20	; 0x14
    15d8:	6d 89       	ldd	r22, Y+21	; 0x15
    15da:	0c c3       	rjmp	.+1560   	; 0x1bf4 <__umoddi3+0xcd0>
    15dc:	6a 14       	cp	r6, r10
    15de:	7b 04       	cpc	r7, r11
    15e0:	8c 04       	cpc	r8, r12
    15e2:	9d 04       	cpc	r9, r13
    15e4:	08 f4       	brcc	.+2      	; 0x15e8 <__umoddi3+0x6c4>
    15e6:	09 c3       	rjmp	.+1554   	; 0x1bfa <__umoddi3+0xcd6>
    15e8:	00 e0       	ldi	r16, 0x00	; 0
    15ea:	a0 16       	cp	r10, r16
    15ec:	00 e0       	ldi	r16, 0x00	; 0
    15ee:	b0 06       	cpc	r11, r16
    15f0:	01 e0       	ldi	r16, 0x01	; 1
    15f2:	c0 06       	cpc	r12, r16
    15f4:	00 e0       	ldi	r16, 0x00	; 0
    15f6:	d0 06       	cpc	r13, r16
    15f8:	88 f4       	brcc	.+34     	; 0x161c <__umoddi3+0x6f8>
    15fa:	1f ef       	ldi	r17, 0xFF	; 255
    15fc:	a1 16       	cp	r10, r17
    15fe:	b1 04       	cpc	r11, r1
    1600:	c1 04       	cpc	r12, r1
    1602:	d1 04       	cpc	r13, r1
    1604:	39 f0       	breq	.+14     	; 0x1614 <__umoddi3+0x6f0>
    1606:	30 f0       	brcs	.+12     	; 0x1614 <__umoddi3+0x6f0>
    1608:	28 e0       	ldi	r18, 0x08	; 8
    160a:	e2 2e       	mov	r14, r18
    160c:	f1 2c       	mov	r15, r1
    160e:	01 2d       	mov	r16, r1
    1610:	11 2d       	mov	r17, r1
    1612:	18 c0       	rjmp	.+48     	; 0x1644 <__umoddi3+0x720>
    1614:	ee 24       	eor	r14, r14
    1616:	ff 24       	eor	r15, r15
    1618:	87 01       	movw	r16, r14
    161a:	14 c0       	rjmp	.+40     	; 0x1644 <__umoddi3+0x720>
    161c:	40 e0       	ldi	r20, 0x00	; 0
    161e:	a4 16       	cp	r10, r20
    1620:	40 e0       	ldi	r20, 0x00	; 0
    1622:	b4 06       	cpc	r11, r20
    1624:	40 e0       	ldi	r20, 0x00	; 0
    1626:	c4 06       	cpc	r12, r20
    1628:	41 e0       	ldi	r20, 0x01	; 1
    162a:	d4 06       	cpc	r13, r20
    162c:	30 f0       	brcs	.+12     	; 0x163a <__umoddi3+0x716>
    162e:	98 e1       	ldi	r25, 0x18	; 24
    1630:	e9 2e       	mov	r14, r25
    1632:	f1 2c       	mov	r15, r1
    1634:	01 2d       	mov	r16, r1
    1636:	11 2d       	mov	r17, r1
    1638:	05 c0       	rjmp	.+10     	; 0x1644 <__umoddi3+0x720>
    163a:	80 e1       	ldi	r24, 0x10	; 16
    163c:	e8 2e       	mov	r14, r24
    163e:	f1 2c       	mov	r15, r1
    1640:	01 2d       	mov	r16, r1
    1642:	11 2d       	mov	r17, r1
    1644:	d6 01       	movw	r26, r12
    1646:	c5 01       	movw	r24, r10
    1648:	0e 2c       	mov	r0, r14
    164a:	04 c0       	rjmp	.+8      	; 0x1654 <__umoddi3+0x730>
    164c:	b6 95       	lsr	r27
    164e:	a7 95       	ror	r26
    1650:	97 95       	ror	r25
    1652:	87 95       	ror	r24
    1654:	0a 94       	dec	r0
    1656:	d2 f7       	brpl	.-12     	; 0x164c <__umoddi3+0x728>
    1658:	85 57       	subi	r24, 0x75	; 117
    165a:	9f 4f       	sbci	r25, 0xFF	; 255
    165c:	dc 01       	movw	r26, r24
    165e:	2c 91       	ld	r18, X
    1660:	80 e2       	ldi	r24, 0x20	; 32
    1662:	90 e0       	ldi	r25, 0x00	; 0
    1664:	a0 e0       	ldi	r26, 0x00	; 0
    1666:	b0 e0       	ldi	r27, 0x00	; 0
    1668:	8e 19       	sub	r24, r14
    166a:	9f 09       	sbc	r25, r15
    166c:	a0 0b       	sbc	r26, r16
    166e:	b1 0b       	sbc	r27, r17
    1670:	82 1b       	sub	r24, r18
    1672:	91 09       	sbc	r25, r1
    1674:	a1 09       	sbc	r26, r1
    1676:	b1 09       	sbc	r27, r1
    1678:	00 97       	sbiw	r24, 0x00	; 0
    167a:	a1 05       	cpc	r26, r1
    167c:	b1 05       	cpc	r27, r1
    167e:	09 f0       	breq	.+2      	; 0x1682 <__umoddi3+0x75e>
    1680:	4f c0       	rjmp	.+158    	; 0x1720 <__umoddi3+0x7fc>
    1682:	a6 14       	cp	r10, r6
    1684:	b7 04       	cpc	r11, r7
    1686:	c8 04       	cpc	r12, r8
    1688:	d9 04       	cpc	r13, r9
    168a:	58 f0       	brcs	.+22     	; 0x16a2 <__umoddi3+0x77e>
    168c:	6c 96       	adiw	r28, 0x1c	; 28
    168e:	ec ac       	ldd	r14, Y+60	; 0x3c
    1690:	fd ac       	ldd	r15, Y+61	; 0x3d
    1692:	0e ad       	ldd	r16, Y+62	; 0x3e
    1694:	1f ad       	ldd	r17, Y+63	; 0x3f
    1696:	6c 97       	sbiw	r28, 0x1c	; 28
    1698:	e2 14       	cp	r14, r2
    169a:	f3 04       	cpc	r15, r3
    169c:	04 05       	cpc	r16, r4
    169e:	15 05       	cpc	r17, r5
    16a0:	68 f1       	brcs	.+90     	; 0x16fc <__umoddi3+0x7d8>
    16a2:	6c 96       	adiw	r28, 0x1c	; 28
    16a4:	ec ac       	ldd	r14, Y+60	; 0x3c
    16a6:	fd ac       	ldd	r15, Y+61	; 0x3d
    16a8:	0e ad       	ldd	r16, Y+62	; 0x3e
    16aa:	1f ad       	ldd	r17, Y+63	; 0x3f
    16ac:	6c 97       	sbiw	r28, 0x1c	; 28
    16ae:	e2 18       	sub	r14, r2
    16b0:	f3 08       	sbc	r15, r3
    16b2:	04 09       	sbc	r16, r4
    16b4:	15 09       	sbc	r17, r5
    16b6:	a4 01       	movw	r20, r8
    16b8:	93 01       	movw	r18, r6
    16ba:	2a 19       	sub	r18, r10
    16bc:	3b 09       	sbc	r19, r11
    16be:	4c 09       	sbc	r20, r12
    16c0:	5d 09       	sbc	r21, r13
    16c2:	aa 24       	eor	r10, r10
    16c4:	bb 24       	eor	r11, r11
    16c6:	65 01       	movw	r12, r10
    16c8:	6c 96       	adiw	r28, 0x1c	; 28
    16ca:	6c ad       	ldd	r22, Y+60	; 0x3c
    16cc:	7d ad       	ldd	r23, Y+61	; 0x3d
    16ce:	8e ad       	ldd	r24, Y+62	; 0x3e
    16d0:	9f ad       	ldd	r25, Y+63	; 0x3f
    16d2:	6c 97       	sbiw	r28, 0x1c	; 28
    16d4:	6e 15       	cp	r22, r14
    16d6:	7f 05       	cpc	r23, r15
    16d8:	80 07       	cpc	r24, r16
    16da:	91 07       	cpc	r25, r17
    16dc:	28 f4       	brcc	.+10     	; 0x16e8 <__umoddi3+0x7c4>
    16de:	b1 e0       	ldi	r27, 0x01	; 1
    16e0:	ab 2e       	mov	r10, r27
    16e2:	b1 2c       	mov	r11, r1
    16e4:	c1 2c       	mov	r12, r1
    16e6:	d1 2c       	mov	r13, r1
    16e8:	da 01       	movw	r26, r20
    16ea:	c9 01       	movw	r24, r18
    16ec:	8a 19       	sub	r24, r10
    16ee:	9b 09       	sbc	r25, r11
    16f0:	ac 09       	sbc	r26, r12
    16f2:	bd 09       	sbc	r27, r13
    16f4:	8d ab       	std	Y+53, r24	; 0x35
    16f6:	9e ab       	std	Y+54, r25	; 0x36
    16f8:	af ab       	std	Y+55, r26	; 0x37
    16fa:	b8 af       	std	Y+56, r27	; 0x38
    16fc:	e9 8a       	std	Y+17, r14	; 0x11
    16fe:	fa 8a       	std	Y+18, r15	; 0x12
    1700:	0b 8b       	std	Y+19, r16	; 0x13
    1702:	1c 8b       	std	Y+20, r17	; 0x14
    1704:	6d a8       	ldd	r6, Y+53	; 0x35
    1706:	7e a8       	ldd	r7, Y+54	; 0x36
    1708:	8f a8       	ldd	r8, Y+55	; 0x37
    170a:	98 ac       	ldd	r9, Y+56	; 0x38
    170c:	6d 8a       	std	Y+21, r6	; 0x15
    170e:	7e 8a       	std	Y+22, r7	; 0x16
    1710:	8f 8a       	std	Y+23, r8	; 0x17
    1712:	98 8e       	std	Y+24, r9	; 0x18
    1714:	2e 2d       	mov	r18, r14
    1716:	3a 89       	ldd	r19, Y+18	; 0x12
    1718:	4b 89       	ldd	r20, Y+19	; 0x13
    171a:	5c 89       	ldd	r21, Y+20	; 0x14
    171c:	6d a9       	ldd	r22, Y+53	; 0x35
    171e:	6a c2       	rjmp	.+1236   	; 0x1bf4 <__umoddi3+0xcd0>
    1720:	67 96       	adiw	r28, 0x17	; 23
    1722:	8f af       	std	Y+63, r24	; 0x3f
    1724:	67 97       	sbiw	r28, 0x17	; 23
    1726:	a6 01       	movw	r20, r12
    1728:	95 01       	movw	r18, r10
    172a:	08 2e       	mov	r0, r24
    172c:	04 c0       	rjmp	.+8      	; 0x1736 <__umoddi3+0x812>
    172e:	22 0f       	add	r18, r18
    1730:	33 1f       	adc	r19, r19
    1732:	44 1f       	adc	r20, r20
    1734:	55 1f       	adc	r21, r21
    1736:	0a 94       	dec	r0
    1738:	d2 f7       	brpl	.-12     	; 0x172e <__umoddi3+0x80a>
    173a:	a0 e2       	ldi	r26, 0x20	; 32
    173c:	aa 2e       	mov	r10, r26
    173e:	a8 1a       	sub	r10, r24
    1740:	66 96       	adiw	r28, 0x16	; 22
    1742:	af ae       	std	Y+63, r10	; 0x3f
    1744:	66 97       	sbiw	r28, 0x16	; 22
    1746:	d2 01       	movw	r26, r4
    1748:	c1 01       	movw	r24, r2
    174a:	04 c0       	rjmp	.+8      	; 0x1754 <__umoddi3+0x830>
    174c:	b6 95       	lsr	r27
    174e:	a7 95       	ror	r26
    1750:	97 95       	ror	r25
    1752:	87 95       	ror	r24
    1754:	aa 94       	dec	r10
    1756:	d2 f7       	brpl	.-12     	; 0x174c <__umoddi3+0x828>
    1758:	6c 01       	movw	r12, r24
    175a:	7d 01       	movw	r14, r26
    175c:	c2 2a       	or	r12, r18
    175e:	d3 2a       	or	r13, r19
    1760:	e4 2a       	or	r14, r20
    1762:	f5 2a       	or	r15, r21
    1764:	c9 a6       	std	Y+41, r12	; 0x29
    1766:	da a6       	std	Y+42, r13	; 0x2a
    1768:	eb a6       	std	Y+43, r14	; 0x2b
    176a:	fc a6       	std	Y+44, r15	; 0x2c
    176c:	82 01       	movw	r16, r4
    176e:	71 01       	movw	r14, r2
    1770:	67 96       	adiw	r28, 0x17	; 23
    1772:	0f ac       	ldd	r0, Y+63	; 0x3f
    1774:	67 97       	sbiw	r28, 0x17	; 23
    1776:	04 c0       	rjmp	.+8      	; 0x1780 <__umoddi3+0x85c>
    1778:	ee 0c       	add	r14, r14
    177a:	ff 1c       	adc	r15, r15
    177c:	00 1f       	adc	r16, r16
    177e:	11 1f       	adc	r17, r17
    1780:	0a 94       	dec	r0
    1782:	d2 f7       	brpl	.-12     	; 0x1778 <__umoddi3+0x854>
    1784:	ed a2       	std	Y+37, r14	; 0x25
    1786:	fe a2       	std	Y+38, r15	; 0x26
    1788:	0f a3       	std	Y+39, r16	; 0x27
    178a:	18 a7       	std	Y+40, r17	; 0x28
    178c:	64 01       	movw	r12, r8
    178e:	53 01       	movw	r10, r6
    1790:	66 96       	adiw	r28, 0x16	; 22
    1792:	0f ac       	ldd	r0, Y+63	; 0x3f
    1794:	66 97       	sbiw	r28, 0x16	; 22
    1796:	04 c0       	rjmp	.+8      	; 0x17a0 <__umoddi3+0x87c>
    1798:	d6 94       	lsr	r13
    179a:	c7 94       	ror	r12
    179c:	b7 94       	ror	r11
    179e:	a7 94       	ror	r10
    17a0:	0a 94       	dec	r0
    17a2:	d2 f7       	brpl	.-12     	; 0x1798 <__umoddi3+0x874>
    17a4:	a4 01       	movw	r20, r8
    17a6:	93 01       	movw	r18, r6
    17a8:	67 96       	adiw	r28, 0x17	; 23
    17aa:	0f ac       	ldd	r0, Y+63	; 0x3f
    17ac:	67 97       	sbiw	r28, 0x17	; 23
    17ae:	04 c0       	rjmp	.+8      	; 0x17b8 <__umoddi3+0x894>
    17b0:	22 0f       	add	r18, r18
    17b2:	33 1f       	adc	r19, r19
    17b4:	44 1f       	adc	r20, r20
    17b6:	55 1f       	adc	r21, r21
    17b8:	0a 94       	dec	r0
    17ba:	d2 f7       	brpl	.-12     	; 0x17b0 <__umoddi3+0x88c>
    17bc:	6c 96       	adiw	r28, 0x1c	; 28
    17be:	8c ad       	ldd	r24, Y+60	; 0x3c
    17c0:	9d ad       	ldd	r25, Y+61	; 0x3d
    17c2:	ae ad       	ldd	r26, Y+62	; 0x3e
    17c4:	bf ad       	ldd	r27, Y+63	; 0x3f
    17c6:	6c 97       	sbiw	r28, 0x1c	; 28
    17c8:	66 96       	adiw	r28, 0x16	; 22
    17ca:	0f ac       	ldd	r0, Y+63	; 0x3f
    17cc:	66 97       	sbiw	r28, 0x16	; 22
    17ce:	04 c0       	rjmp	.+8      	; 0x17d8 <__umoddi3+0x8b4>
    17d0:	b6 95       	lsr	r27
    17d2:	a7 95       	ror	r26
    17d4:	97 95       	ror	r25
    17d6:	87 95       	ror	r24
    17d8:	0a 94       	dec	r0
    17da:	d2 f7       	brpl	.-12     	; 0x17d0 <__umoddi3+0x8ac>
    17dc:	3c 01       	movw	r6, r24
    17de:	4d 01       	movw	r8, r26
    17e0:	62 2a       	or	r6, r18
    17e2:	73 2a       	or	r7, r19
    17e4:	84 2a       	or	r8, r20
    17e6:	95 2a       	or	r9, r21
    17e8:	69 a2       	std	Y+33, r6	; 0x21
    17ea:	7a a2       	std	Y+34, r7	; 0x22
    17ec:	8b a2       	std	Y+35, r8	; 0x23
    17ee:	9c a2       	std	Y+36, r9	; 0x24
    17f0:	6c 96       	adiw	r28, 0x1c	; 28
    17f2:	ec ac       	ldd	r14, Y+60	; 0x3c
    17f4:	fd ac       	ldd	r15, Y+61	; 0x3d
    17f6:	0e ad       	ldd	r16, Y+62	; 0x3e
    17f8:	1f ad       	ldd	r17, Y+63	; 0x3f
    17fa:	6c 97       	sbiw	r28, 0x1c	; 28
    17fc:	67 96       	adiw	r28, 0x17	; 23
    17fe:	0f ac       	ldd	r0, Y+63	; 0x3f
    1800:	67 97       	sbiw	r28, 0x17	; 23
    1802:	04 c0       	rjmp	.+8      	; 0x180c <__umoddi3+0x8e8>
    1804:	ee 0c       	add	r14, r14
    1806:	ff 1c       	adc	r15, r15
    1808:	00 1f       	adc	r16, r16
    180a:	11 1f       	adc	r17, r17
    180c:	0a 94       	dec	r0
    180e:	d2 f7       	brpl	.-12     	; 0x1804 <__umoddi3+0x8e0>
    1810:	ed 8e       	std	Y+29, r14	; 0x1d
    1812:	fe 8e       	std	Y+30, r15	; 0x1e
    1814:	0f 8f       	std	Y+31, r16	; 0x1f
    1816:	18 a3       	std	Y+32, r17	; 0x20
    1818:	49 a5       	ldd	r20, Y+41	; 0x29
    181a:	5a a5       	ldd	r21, Y+42	; 0x2a
    181c:	6b a5       	ldd	r22, Y+43	; 0x2b
    181e:	7c a5       	ldd	r23, Y+44	; 0x2c
    1820:	3b 01       	movw	r6, r22
    1822:	88 24       	eor	r8, r8
    1824:	99 24       	eor	r9, r9
    1826:	60 70       	andi	r22, 0x00	; 0
    1828:	70 70       	andi	r23, 0x00	; 0
    182a:	2d 96       	adiw	r28, 0x0d	; 13
    182c:	4c af       	std	Y+60, r20	; 0x3c
    182e:	5d af       	std	Y+61, r21	; 0x3d
    1830:	6e af       	std	Y+62, r22	; 0x3e
    1832:	7f af       	std	Y+63, r23	; 0x3f
    1834:	2d 97       	sbiw	r28, 0x0d	; 13
    1836:	c6 01       	movw	r24, r12
    1838:	b5 01       	movw	r22, r10
    183a:	a4 01       	movw	r20, r8
    183c:	93 01       	movw	r18, r6
    183e:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    1842:	7b 01       	movw	r14, r22
    1844:	8c 01       	movw	r16, r24
    1846:	c6 01       	movw	r24, r12
    1848:	b5 01       	movw	r22, r10
    184a:	a4 01       	movw	r20, r8
    184c:	93 01       	movw	r18, r6
    184e:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    1852:	c9 01       	movw	r24, r18
    1854:	da 01       	movw	r26, r20
    1856:	1c 01       	movw	r2, r24
    1858:	2d 01       	movw	r4, r26
    185a:	c2 01       	movw	r24, r4
    185c:	b1 01       	movw	r22, r2
    185e:	2d 96       	adiw	r28, 0x0d	; 13
    1860:	2c ad       	ldd	r18, Y+60	; 0x3c
    1862:	3d ad       	ldd	r19, Y+61	; 0x3d
    1864:	4e ad       	ldd	r20, Y+62	; 0x3e
    1866:	5f ad       	ldd	r21, Y+63	; 0x3f
    1868:	2d 97       	sbiw	r28, 0x0d	; 13
    186a:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
    186e:	9b 01       	movw	r18, r22
    1870:	ac 01       	movw	r20, r24
    1872:	87 01       	movw	r16, r14
    1874:	ff 24       	eor	r15, r15
    1876:	ee 24       	eor	r14, r14
    1878:	a9 a0       	ldd	r10, Y+33	; 0x21
    187a:	ba a0       	ldd	r11, Y+34	; 0x22
    187c:	cb a0       	ldd	r12, Y+35	; 0x23
    187e:	dc a0       	ldd	r13, Y+36	; 0x24
    1880:	c6 01       	movw	r24, r12
    1882:	aa 27       	eor	r26, r26
    1884:	bb 27       	eor	r27, r27
    1886:	57 01       	movw	r10, r14
    1888:	68 01       	movw	r12, r16
    188a:	a8 2a       	or	r10, r24
    188c:	b9 2a       	or	r11, r25
    188e:	ca 2a       	or	r12, r26
    1890:	db 2a       	or	r13, r27
    1892:	a2 16       	cp	r10, r18
    1894:	b3 06       	cpc	r11, r19
    1896:	c4 06       	cpc	r12, r20
    1898:	d5 06       	cpc	r13, r21
    189a:	00 f5       	brcc	.+64     	; 0x18dc <__umoddi3+0x9b8>
    189c:	08 94       	sec
    189e:	21 08       	sbc	r2, r1
    18a0:	31 08       	sbc	r3, r1
    18a2:	41 08       	sbc	r4, r1
    18a4:	51 08       	sbc	r5, r1
    18a6:	e9 a4       	ldd	r14, Y+41	; 0x29
    18a8:	fa a4       	ldd	r15, Y+42	; 0x2a
    18aa:	0b a5       	ldd	r16, Y+43	; 0x2b
    18ac:	1c a5       	ldd	r17, Y+44	; 0x2c
    18ae:	ae 0c       	add	r10, r14
    18b0:	bf 1c       	adc	r11, r15
    18b2:	c0 1e       	adc	r12, r16
    18b4:	d1 1e       	adc	r13, r17
    18b6:	ae 14       	cp	r10, r14
    18b8:	bf 04       	cpc	r11, r15
    18ba:	c0 06       	cpc	r12, r16
    18bc:	d1 06       	cpc	r13, r17
    18be:	70 f0       	brcs	.+28     	; 0x18dc <__umoddi3+0x9b8>
    18c0:	a2 16       	cp	r10, r18
    18c2:	b3 06       	cpc	r11, r19
    18c4:	c4 06       	cpc	r12, r20
    18c6:	d5 06       	cpc	r13, r21
    18c8:	48 f4       	brcc	.+18     	; 0x18dc <__umoddi3+0x9b8>
    18ca:	08 94       	sec
    18cc:	21 08       	sbc	r2, r1
    18ce:	31 08       	sbc	r3, r1
    18d0:	41 08       	sbc	r4, r1
    18d2:	51 08       	sbc	r5, r1
    18d4:	ae 0c       	add	r10, r14
    18d6:	bf 1c       	adc	r11, r15
    18d8:	c0 1e       	adc	r12, r16
    18da:	d1 1e       	adc	r13, r17
    18dc:	a2 1a       	sub	r10, r18
    18de:	b3 0a       	sbc	r11, r19
    18e0:	c4 0a       	sbc	r12, r20
    18e2:	d5 0a       	sbc	r13, r21
    18e4:	c6 01       	movw	r24, r12
    18e6:	b5 01       	movw	r22, r10
    18e8:	a4 01       	movw	r20, r8
    18ea:	93 01       	movw	r18, r6
    18ec:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    18f0:	7b 01       	movw	r14, r22
    18f2:	8c 01       	movw	r16, r24
    18f4:	c6 01       	movw	r24, r12
    18f6:	b5 01       	movw	r22, r10
    18f8:	a4 01       	movw	r20, r8
    18fa:	93 01       	movw	r18, r6
    18fc:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    1900:	c9 01       	movw	r24, r18
    1902:	da 01       	movw	r26, r20
    1904:	3c 01       	movw	r6, r24
    1906:	4d 01       	movw	r8, r26
    1908:	c4 01       	movw	r24, r8
    190a:	b3 01       	movw	r22, r6
    190c:	2d 96       	adiw	r28, 0x0d	; 13
    190e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1910:	3d ad       	ldd	r19, Y+61	; 0x3d
    1912:	4e ad       	ldd	r20, Y+62	; 0x3e
    1914:	5f ad       	ldd	r21, Y+63	; 0x3f
    1916:	2d 97       	sbiw	r28, 0x0d	; 13
    1918:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
    191c:	9b 01       	movw	r18, r22
    191e:	ac 01       	movw	r20, r24
    1920:	87 01       	movw	r16, r14
    1922:	ff 24       	eor	r15, r15
    1924:	ee 24       	eor	r14, r14
    1926:	89 a1       	ldd	r24, Y+33	; 0x21
    1928:	9a a1       	ldd	r25, Y+34	; 0x22
    192a:	ab a1       	ldd	r26, Y+35	; 0x23
    192c:	bc a1       	ldd	r27, Y+36	; 0x24
    192e:	a0 70       	andi	r26, 0x00	; 0
    1930:	b0 70       	andi	r27, 0x00	; 0
    1932:	57 01       	movw	r10, r14
    1934:	68 01       	movw	r12, r16
    1936:	a8 2a       	or	r10, r24
    1938:	b9 2a       	or	r11, r25
    193a:	ca 2a       	or	r12, r26
    193c:	db 2a       	or	r13, r27
    193e:	a2 16       	cp	r10, r18
    1940:	b3 06       	cpc	r11, r19
    1942:	c4 06       	cpc	r12, r20
    1944:	d5 06       	cpc	r13, r21
    1946:	00 f5       	brcc	.+64     	; 0x1988 <__umoddi3+0xa64>
    1948:	08 94       	sec
    194a:	61 08       	sbc	r6, r1
    194c:	71 08       	sbc	r7, r1
    194e:	81 08       	sbc	r8, r1
    1950:	91 08       	sbc	r9, r1
    1952:	69 a5       	ldd	r22, Y+41	; 0x29
    1954:	7a a5       	ldd	r23, Y+42	; 0x2a
    1956:	8b a5       	ldd	r24, Y+43	; 0x2b
    1958:	9c a5       	ldd	r25, Y+44	; 0x2c
    195a:	a6 0e       	add	r10, r22
    195c:	b7 1e       	adc	r11, r23
    195e:	c8 1e       	adc	r12, r24
    1960:	d9 1e       	adc	r13, r25
    1962:	a6 16       	cp	r10, r22
    1964:	b7 06       	cpc	r11, r23
    1966:	c8 06       	cpc	r12, r24
    1968:	d9 06       	cpc	r13, r25
    196a:	70 f0       	brcs	.+28     	; 0x1988 <__umoddi3+0xa64>
    196c:	a2 16       	cp	r10, r18
    196e:	b3 06       	cpc	r11, r19
    1970:	c4 06       	cpc	r12, r20
    1972:	d5 06       	cpc	r13, r21
    1974:	48 f4       	brcc	.+18     	; 0x1988 <__umoddi3+0xa64>
    1976:	08 94       	sec
    1978:	61 08       	sbc	r6, r1
    197a:	71 08       	sbc	r7, r1
    197c:	81 08       	sbc	r8, r1
    197e:	91 08       	sbc	r9, r1
    1980:	a6 0e       	add	r10, r22
    1982:	b7 1e       	adc	r11, r23
    1984:	c8 1e       	adc	r12, r24
    1986:	d9 1e       	adc	r13, r25
    1988:	d6 01       	movw	r26, r12
    198a:	c5 01       	movw	r24, r10
    198c:	82 1b       	sub	r24, r18
    198e:	93 0b       	sbc	r25, r19
    1990:	a4 0b       	sbc	r26, r20
    1992:	b5 0b       	sbc	r27, r21
    1994:	89 8f       	std	Y+25, r24	; 0x19
    1996:	9a 8f       	std	Y+26, r25	; 0x1a
    1998:	ab 8f       	std	Y+27, r26	; 0x1b
    199a:	bc 8f       	std	Y+28, r27	; 0x1c
    199c:	d1 01       	movw	r26, r2
    199e:	99 27       	eor	r25, r25
    19a0:	88 27       	eor	r24, r24
    19a2:	84 01       	movw	r16, r8
    19a4:	73 01       	movw	r14, r6
    19a6:	e8 2a       	or	r14, r24
    19a8:	f9 2a       	or	r15, r25
    19aa:	0a 2b       	or	r16, r26
    19ac:	1b 2b       	or	r17, r27
    19ae:	4f ef       	ldi	r20, 0xFF	; 255
    19b0:	a4 2e       	mov	r10, r20
    19b2:	4f ef       	ldi	r20, 0xFF	; 255
    19b4:	b4 2e       	mov	r11, r20
    19b6:	c1 2c       	mov	r12, r1
    19b8:	d1 2c       	mov	r13, r1
    19ba:	ae 20       	and	r10, r14
    19bc:	bf 20       	and	r11, r15
    19be:	c0 22       	and	r12, r16
    19c0:	d1 22       	and	r13, r17
    19c2:	78 01       	movw	r14, r16
    19c4:	00 27       	eor	r16, r16
    19c6:	11 27       	eor	r17, r17
    19c8:	6d a0       	ldd	r6, Y+37	; 0x25
    19ca:	7e a0       	ldd	r7, Y+38	; 0x26
    19cc:	8f a0       	ldd	r8, Y+39	; 0x27
    19ce:	98 a4       	ldd	r9, Y+40	; 0x28
    19d0:	4f ef       	ldi	r20, 0xFF	; 255
    19d2:	5f ef       	ldi	r21, 0xFF	; 255
    19d4:	60 e0       	ldi	r22, 0x00	; 0
    19d6:	70 e0       	ldi	r23, 0x00	; 0
    19d8:	64 22       	and	r6, r20
    19da:	75 22       	and	r7, r21
    19dc:	86 22       	and	r8, r22
    19de:	97 22       	and	r9, r23
    19e0:	8d a1       	ldd	r24, Y+37	; 0x25
    19e2:	9e a1       	ldd	r25, Y+38	; 0x26
    19e4:	af a1       	ldd	r26, Y+39	; 0x27
    19e6:	b8 a5       	ldd	r27, Y+40	; 0x28
    19e8:	bd 01       	movw	r22, r26
    19ea:	88 27       	eor	r24, r24
    19ec:	99 27       	eor	r25, r25
    19ee:	65 96       	adiw	r28, 0x15	; 21
    19f0:	6c af       	std	Y+60, r22	; 0x3c
    19f2:	7d af       	std	Y+61, r23	; 0x3d
    19f4:	8e af       	std	Y+62, r24	; 0x3e
    19f6:	9f af       	std	Y+63, r25	; 0x3f
    19f8:	65 97       	sbiw	r28, 0x15	; 21
    19fa:	c6 01       	movw	r24, r12
    19fc:	b5 01       	movw	r22, r10
    19fe:	a4 01       	movw	r20, r8
    1a00:	93 01       	movw	r18, r6
    1a02:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
    1a06:	61 96       	adiw	r28, 0x11	; 17
    1a08:	6c af       	std	Y+60, r22	; 0x3c
    1a0a:	7d af       	std	Y+61, r23	; 0x3d
    1a0c:	8e af       	std	Y+62, r24	; 0x3e
    1a0e:	9f af       	std	Y+63, r25	; 0x3f
    1a10:	61 97       	sbiw	r28, 0x11	; 17
    1a12:	c6 01       	movw	r24, r12
    1a14:	b5 01       	movw	r22, r10
    1a16:	65 96       	adiw	r28, 0x15	; 21
    1a18:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a1a:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a1c:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a1e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a20:	65 97       	sbiw	r28, 0x15	; 21
    1a22:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
    1a26:	1b 01       	movw	r2, r22
    1a28:	2c 01       	movw	r4, r24
    1a2a:	c8 01       	movw	r24, r16
    1a2c:	b7 01       	movw	r22, r14
    1a2e:	a4 01       	movw	r20, r8
    1a30:	93 01       	movw	r18, r6
    1a32:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
    1a36:	5b 01       	movw	r10, r22
    1a38:	6c 01       	movw	r12, r24
    1a3a:	c8 01       	movw	r24, r16
    1a3c:	b7 01       	movw	r22, r14
    1a3e:	65 96       	adiw	r28, 0x15	; 21
    1a40:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a42:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a44:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a46:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a48:	65 97       	sbiw	r28, 0x15	; 21
    1a4a:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
    1a4e:	7b 01       	movw	r14, r22
    1a50:	8c 01       	movw	r16, r24
    1a52:	a6 01       	movw	r20, r12
    1a54:	95 01       	movw	r18, r10
    1a56:	22 0d       	add	r18, r2
    1a58:	33 1d       	adc	r19, r3
    1a5a:	44 1d       	adc	r20, r4
    1a5c:	55 1d       	adc	r21, r5
    1a5e:	61 96       	adiw	r28, 0x11	; 17
    1a60:	6c ac       	ldd	r6, Y+60	; 0x3c
    1a62:	7d ac       	ldd	r7, Y+61	; 0x3d
    1a64:	8e ac       	ldd	r8, Y+62	; 0x3e
    1a66:	9f ac       	ldd	r9, Y+63	; 0x3f
    1a68:	61 97       	sbiw	r28, 0x11	; 17
    1a6a:	c4 01       	movw	r24, r8
    1a6c:	aa 27       	eor	r26, r26
    1a6e:	bb 27       	eor	r27, r27
    1a70:	28 0f       	add	r18, r24
    1a72:	39 1f       	adc	r19, r25
    1a74:	4a 1f       	adc	r20, r26
    1a76:	5b 1f       	adc	r21, r27
    1a78:	2a 15       	cp	r18, r10
    1a7a:	3b 05       	cpc	r19, r11
    1a7c:	4c 05       	cpc	r20, r12
    1a7e:	5d 05       	cpc	r21, r13
    1a80:	48 f4       	brcc	.+18     	; 0x1a94 <__umoddi3+0xb70>
    1a82:	81 2c       	mov	r8, r1
    1a84:	91 2c       	mov	r9, r1
    1a86:	e1 e0       	ldi	r30, 0x01	; 1
    1a88:	ae 2e       	mov	r10, r30
    1a8a:	b1 2c       	mov	r11, r1
    1a8c:	e8 0c       	add	r14, r8
    1a8e:	f9 1c       	adc	r15, r9
    1a90:	0a 1d       	adc	r16, r10
    1a92:	1b 1d       	adc	r17, r11
    1a94:	ca 01       	movw	r24, r20
    1a96:	aa 27       	eor	r26, r26
    1a98:	bb 27       	eor	r27, r27
    1a9a:	57 01       	movw	r10, r14
    1a9c:	68 01       	movw	r12, r16
    1a9e:	a8 0e       	add	r10, r24
    1aa0:	b9 1e       	adc	r11, r25
    1aa2:	ca 1e       	adc	r12, r26
    1aa4:	db 1e       	adc	r13, r27
    1aa6:	a9 01       	movw	r20, r18
    1aa8:	33 27       	eor	r19, r19
    1aaa:	22 27       	eor	r18, r18
    1aac:	61 96       	adiw	r28, 0x11	; 17
    1aae:	8c ad       	ldd	r24, Y+60	; 0x3c
    1ab0:	9d ad       	ldd	r25, Y+61	; 0x3d
    1ab2:	ae ad       	ldd	r26, Y+62	; 0x3e
    1ab4:	bf ad       	ldd	r27, Y+63	; 0x3f
    1ab6:	61 97       	sbiw	r28, 0x11	; 17
    1ab8:	a0 70       	andi	r26, 0x00	; 0
    1aba:	b0 70       	andi	r27, 0x00	; 0
    1abc:	28 0f       	add	r18, r24
    1abe:	39 1f       	adc	r19, r25
    1ac0:	4a 1f       	adc	r20, r26
    1ac2:	5b 1f       	adc	r21, r27
    1ac4:	e9 8c       	ldd	r14, Y+25	; 0x19
    1ac6:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1ac8:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1aca:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1acc:	ea 14       	cp	r14, r10
    1ace:	fb 04       	cpc	r15, r11
    1ad0:	0c 05       	cpc	r16, r12
    1ad2:	1d 05       	cpc	r17, r13
    1ad4:	70 f0       	brcs	.+28     	; 0x1af2 <__umoddi3+0xbce>
    1ad6:	ae 14       	cp	r10, r14
    1ad8:	bf 04       	cpc	r11, r15
    1ada:	c0 06       	cpc	r12, r16
    1adc:	d1 06       	cpc	r13, r17
    1ade:	69 f5       	brne	.+90     	; 0x1b3a <__umoddi3+0xc16>
    1ae0:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1ae2:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1ae4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1ae6:	98 a1       	ldd	r25, Y+32	; 0x20
    1ae8:	62 17       	cp	r22, r18
    1aea:	73 07       	cpc	r23, r19
    1aec:	84 07       	cpc	r24, r20
    1aee:	95 07       	cpc	r25, r21
    1af0:	20 f5       	brcc	.+72     	; 0x1b3a <__umoddi3+0xc16>
    1af2:	da 01       	movw	r26, r20
    1af4:	c9 01       	movw	r24, r18
    1af6:	6d a0       	ldd	r6, Y+37	; 0x25
    1af8:	7e a0       	ldd	r7, Y+38	; 0x26
    1afa:	8f a0       	ldd	r8, Y+39	; 0x27
    1afc:	98 a4       	ldd	r9, Y+40	; 0x28
    1afe:	86 19       	sub	r24, r6
    1b00:	97 09       	sbc	r25, r7
    1b02:	a8 09       	sbc	r26, r8
    1b04:	b9 09       	sbc	r27, r9
    1b06:	e9 a4       	ldd	r14, Y+41	; 0x29
    1b08:	fa a4       	ldd	r15, Y+42	; 0x2a
    1b0a:	0b a5       	ldd	r16, Y+43	; 0x2b
    1b0c:	1c a5       	ldd	r17, Y+44	; 0x2c
    1b0e:	ae 18       	sub	r10, r14
    1b10:	bf 08       	sbc	r11, r15
    1b12:	c0 0a       	sbc	r12, r16
    1b14:	d1 0a       	sbc	r13, r17
    1b16:	ee 24       	eor	r14, r14
    1b18:	ff 24       	eor	r15, r15
    1b1a:	87 01       	movw	r16, r14
    1b1c:	28 17       	cp	r18, r24
    1b1e:	39 07       	cpc	r19, r25
    1b20:	4a 07       	cpc	r20, r26
    1b22:	5b 07       	cpc	r21, r27
    1b24:	28 f4       	brcc	.+10     	; 0x1b30 <__umoddi3+0xc0c>
    1b26:	21 e0       	ldi	r18, 0x01	; 1
    1b28:	e2 2e       	mov	r14, r18
    1b2a:	f1 2c       	mov	r15, r1
    1b2c:	01 2d       	mov	r16, r1
    1b2e:	11 2d       	mov	r17, r1
    1b30:	ae 18       	sub	r10, r14
    1b32:	bf 08       	sbc	r11, r15
    1b34:	c0 0a       	sbc	r12, r16
    1b36:	d1 0a       	sbc	r13, r17
    1b38:	02 c0       	rjmp	.+4      	; 0x1b3e <__umoddi3+0xc1a>
    1b3a:	da 01       	movw	r26, r20
    1b3c:	c9 01       	movw	r24, r18
    1b3e:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1b40:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1b42:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1b44:	98 a0       	ldd	r9, Y+32	; 0x20
    1b46:	68 1a       	sub	r6, r24
    1b48:	79 0a       	sbc	r7, r25
    1b4a:	8a 0a       	sbc	r8, r26
    1b4c:	9b 0a       	sbc	r9, r27
    1b4e:	49 8d       	ldd	r20, Y+25	; 0x19
    1b50:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1b52:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1b54:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1b56:	4a 19       	sub	r20, r10
    1b58:	5b 09       	sbc	r21, r11
    1b5a:	6c 09       	sbc	r22, r12
    1b5c:	7d 09       	sbc	r23, r13
    1b5e:	5a 01       	movw	r10, r20
    1b60:	6b 01       	movw	r12, r22
    1b62:	22 24       	eor	r2, r2
    1b64:	33 24       	eor	r3, r3
    1b66:	21 01       	movw	r4, r2
    1b68:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1b6a:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1b6c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1b6e:	98 a1       	ldd	r25, Y+32	; 0x20
    1b70:	66 15       	cp	r22, r6
    1b72:	77 05       	cpc	r23, r7
    1b74:	88 05       	cpc	r24, r8
    1b76:	99 05       	cpc	r25, r9
    1b78:	28 f4       	brcc	.+10     	; 0x1b84 <__umoddi3+0xc60>
    1b7a:	81 e0       	ldi	r24, 0x01	; 1
    1b7c:	28 2e       	mov	r2, r24
    1b7e:	31 2c       	mov	r3, r1
    1b80:	41 2c       	mov	r4, r1
    1b82:	51 2c       	mov	r5, r1
    1b84:	86 01       	movw	r16, r12
    1b86:	75 01       	movw	r14, r10
    1b88:	e2 18       	sub	r14, r2
    1b8a:	f3 08       	sbc	r15, r3
    1b8c:	04 09       	sbc	r16, r4
    1b8e:	15 09       	sbc	r17, r5
    1b90:	a8 01       	movw	r20, r16
    1b92:	97 01       	movw	r18, r14
    1b94:	66 96       	adiw	r28, 0x16	; 22
    1b96:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b98:	66 97       	sbiw	r28, 0x16	; 22
    1b9a:	04 c0       	rjmp	.+8      	; 0x1ba4 <__umoddi3+0xc80>
    1b9c:	22 0f       	add	r18, r18
    1b9e:	33 1f       	adc	r19, r19
    1ba0:	44 1f       	adc	r20, r20
    1ba2:	55 1f       	adc	r21, r21
    1ba4:	0a 94       	dec	r0
    1ba6:	d2 f7       	brpl	.-12     	; 0x1b9c <__umoddi3+0xc78>
    1ba8:	d4 01       	movw	r26, r8
    1baa:	c3 01       	movw	r24, r6
    1bac:	67 96       	adiw	r28, 0x17	; 23
    1bae:	0f ac       	ldd	r0, Y+63	; 0x3f
    1bb0:	67 97       	sbiw	r28, 0x17	; 23
    1bb2:	04 c0       	rjmp	.+8      	; 0x1bbc <__umoddi3+0xc98>
    1bb4:	b6 95       	lsr	r27
    1bb6:	a7 95       	ror	r26
    1bb8:	97 95       	ror	r25
    1bba:	87 95       	ror	r24
    1bbc:	0a 94       	dec	r0
    1bbe:	d2 f7       	brpl	.-12     	; 0x1bb4 <__umoddi3+0xc90>
    1bc0:	28 2b       	or	r18, r24
    1bc2:	39 2b       	or	r19, r25
    1bc4:	4a 2b       	or	r20, r26
    1bc6:	5b 2b       	or	r21, r27
    1bc8:	29 8b       	std	Y+17, r18	; 0x11
    1bca:	3a 8b       	std	Y+18, r19	; 0x12
    1bcc:	4b 8b       	std	Y+19, r20	; 0x13
    1bce:	5c 8b       	std	Y+20, r21	; 0x14
    1bd0:	67 96       	adiw	r28, 0x17	; 23
    1bd2:	0f ac       	ldd	r0, Y+63	; 0x3f
    1bd4:	67 97       	sbiw	r28, 0x17	; 23
    1bd6:	04 c0       	rjmp	.+8      	; 0x1be0 <__umoddi3+0xcbc>
    1bd8:	16 95       	lsr	r17
    1bda:	07 95       	ror	r16
    1bdc:	f7 94       	ror	r15
    1bde:	e7 94       	ror	r14
    1be0:	0a 94       	dec	r0
    1be2:	d2 f7       	brpl	.-12     	; 0x1bd8 <__umoddi3+0xcb4>
    1be4:	ed 8a       	std	Y+21, r14	; 0x15
    1be6:	fe 8a       	std	Y+22, r15	; 0x16
    1be8:	0f 8b       	std	Y+23, r16	; 0x17
    1bea:	18 8f       	std	Y+24, r17	; 0x18
    1bec:	3a 89       	ldd	r19, Y+18	; 0x12
    1bee:	4b 89       	ldd	r20, Y+19	; 0x13
    1bf0:	5c 89       	ldd	r21, Y+20	; 0x14
    1bf2:	6e 2d       	mov	r22, r14
    1bf4:	7e 89       	ldd	r23, Y+22	; 0x16
    1bf6:	8f 89       	ldd	r24, Y+23	; 0x17
    1bf8:	98 8d       	ldd	r25, Y+24	; 0x18
    1bfa:	c5 5a       	subi	r28, 0xA5	; 165
    1bfc:	df 4f       	sbci	r29, 0xFF	; 255
    1bfe:	e2 e1       	ldi	r30, 0x12	; 18
    1c00:	0c 94 7c 2d 	jmp	0x5af8	; 0x5af8 <__epilogue_restores__>

00001c04 <_fpadd_parts>:
    1c04:	a0 e0       	ldi	r26, 0x00	; 0
    1c06:	b0 e0       	ldi	r27, 0x00	; 0
    1c08:	e8 e0       	ldi	r30, 0x08	; 8
    1c0a:	fe e0       	ldi	r31, 0x0E	; 14
    1c0c:	0c 94 60 2d 	jmp	0x5ac0	; 0x5ac0 <__prologue_saves__>
    1c10:	dc 01       	movw	r26, r24
    1c12:	2b 01       	movw	r4, r22
    1c14:	fa 01       	movw	r30, r20
    1c16:	9c 91       	ld	r25, X
    1c18:	92 30       	cpi	r25, 0x02	; 2
    1c1a:	08 f4       	brcc	.+2      	; 0x1c1e <_fpadd_parts+0x1a>
    1c1c:	39 c1       	rjmp	.+626    	; 0x1e90 <_fpadd_parts+0x28c>
    1c1e:	eb 01       	movw	r28, r22
    1c20:	88 81       	ld	r24, Y
    1c22:	82 30       	cpi	r24, 0x02	; 2
    1c24:	08 f4       	brcc	.+2      	; 0x1c28 <_fpadd_parts+0x24>
    1c26:	33 c1       	rjmp	.+614    	; 0x1e8e <_fpadd_parts+0x28a>
    1c28:	94 30       	cpi	r25, 0x04	; 4
    1c2a:	69 f4       	brne	.+26     	; 0x1c46 <_fpadd_parts+0x42>
    1c2c:	84 30       	cpi	r24, 0x04	; 4
    1c2e:	09 f0       	breq	.+2      	; 0x1c32 <_fpadd_parts+0x2e>
    1c30:	2f c1       	rjmp	.+606    	; 0x1e90 <_fpadd_parts+0x28c>
    1c32:	11 96       	adiw	r26, 0x01	; 1
    1c34:	9c 91       	ld	r25, X
    1c36:	11 97       	sbiw	r26, 0x01	; 1
    1c38:	89 81       	ldd	r24, Y+1	; 0x01
    1c3a:	98 17       	cp	r25, r24
    1c3c:	09 f4       	brne	.+2      	; 0x1c40 <_fpadd_parts+0x3c>
    1c3e:	28 c1       	rjmp	.+592    	; 0x1e90 <_fpadd_parts+0x28c>
    1c40:	a3 e8       	ldi	r26, 0x83	; 131
    1c42:	b0 e0       	ldi	r27, 0x00	; 0
    1c44:	25 c1       	rjmp	.+586    	; 0x1e90 <_fpadd_parts+0x28c>
    1c46:	84 30       	cpi	r24, 0x04	; 4
    1c48:	09 f4       	brne	.+2      	; 0x1c4c <_fpadd_parts+0x48>
    1c4a:	21 c1       	rjmp	.+578    	; 0x1e8e <_fpadd_parts+0x28a>
    1c4c:	82 30       	cpi	r24, 0x02	; 2
    1c4e:	a9 f4       	brne	.+42     	; 0x1c7a <_fpadd_parts+0x76>
    1c50:	92 30       	cpi	r25, 0x02	; 2
    1c52:	09 f0       	breq	.+2      	; 0x1c56 <_fpadd_parts+0x52>
    1c54:	1d c1       	rjmp	.+570    	; 0x1e90 <_fpadd_parts+0x28c>
    1c56:	9a 01       	movw	r18, r20
    1c58:	ad 01       	movw	r20, r26
    1c5a:	88 e0       	ldi	r24, 0x08	; 8
    1c5c:	ea 01       	movw	r28, r20
    1c5e:	09 90       	ld	r0, Y+
    1c60:	ae 01       	movw	r20, r28
    1c62:	e9 01       	movw	r28, r18
    1c64:	09 92       	st	Y+, r0
    1c66:	9e 01       	movw	r18, r28
    1c68:	81 50       	subi	r24, 0x01	; 1
    1c6a:	c1 f7       	brne	.-16     	; 0x1c5c <_fpadd_parts+0x58>
    1c6c:	e2 01       	movw	r28, r4
    1c6e:	89 81       	ldd	r24, Y+1	; 0x01
    1c70:	11 96       	adiw	r26, 0x01	; 1
    1c72:	9c 91       	ld	r25, X
    1c74:	89 23       	and	r24, r25
    1c76:	81 83       	std	Z+1, r24	; 0x01
    1c78:	08 c1       	rjmp	.+528    	; 0x1e8a <_fpadd_parts+0x286>
    1c7a:	92 30       	cpi	r25, 0x02	; 2
    1c7c:	09 f4       	brne	.+2      	; 0x1c80 <_fpadd_parts+0x7c>
    1c7e:	07 c1       	rjmp	.+526    	; 0x1e8e <_fpadd_parts+0x28a>
    1c80:	12 96       	adiw	r26, 0x02	; 2
    1c82:	2d 90       	ld	r2, X+
    1c84:	3c 90       	ld	r3, X
    1c86:	13 97       	sbiw	r26, 0x03	; 3
    1c88:	eb 01       	movw	r28, r22
    1c8a:	8a 81       	ldd	r24, Y+2	; 0x02
    1c8c:	9b 81       	ldd	r25, Y+3	; 0x03
    1c8e:	14 96       	adiw	r26, 0x04	; 4
    1c90:	ad 90       	ld	r10, X+
    1c92:	bd 90       	ld	r11, X+
    1c94:	cd 90       	ld	r12, X+
    1c96:	dc 90       	ld	r13, X
    1c98:	17 97       	sbiw	r26, 0x07	; 7
    1c9a:	ec 80       	ldd	r14, Y+4	; 0x04
    1c9c:	fd 80       	ldd	r15, Y+5	; 0x05
    1c9e:	0e 81       	ldd	r16, Y+6	; 0x06
    1ca0:	1f 81       	ldd	r17, Y+7	; 0x07
    1ca2:	91 01       	movw	r18, r2
    1ca4:	28 1b       	sub	r18, r24
    1ca6:	39 0b       	sbc	r19, r25
    1ca8:	b9 01       	movw	r22, r18
    1caa:	37 ff       	sbrs	r19, 7
    1cac:	04 c0       	rjmp	.+8      	; 0x1cb6 <_fpadd_parts+0xb2>
    1cae:	66 27       	eor	r22, r22
    1cb0:	77 27       	eor	r23, r23
    1cb2:	62 1b       	sub	r22, r18
    1cb4:	73 0b       	sbc	r23, r19
    1cb6:	60 32       	cpi	r22, 0x20	; 32
    1cb8:	71 05       	cpc	r23, r1
    1cba:	0c f0       	brlt	.+2      	; 0x1cbe <_fpadd_parts+0xba>
    1cbc:	61 c0       	rjmp	.+194    	; 0x1d80 <_fpadd_parts+0x17c>
    1cbe:	12 16       	cp	r1, r18
    1cc0:	13 06       	cpc	r1, r19
    1cc2:	6c f5       	brge	.+90     	; 0x1d1e <_fpadd_parts+0x11a>
    1cc4:	37 01       	movw	r6, r14
    1cc6:	48 01       	movw	r8, r16
    1cc8:	06 2e       	mov	r0, r22
    1cca:	04 c0       	rjmp	.+8      	; 0x1cd4 <_fpadd_parts+0xd0>
    1ccc:	96 94       	lsr	r9
    1cce:	87 94       	ror	r8
    1cd0:	77 94       	ror	r7
    1cd2:	67 94       	ror	r6
    1cd4:	0a 94       	dec	r0
    1cd6:	d2 f7       	brpl	.-12     	; 0x1ccc <_fpadd_parts+0xc8>
    1cd8:	21 e0       	ldi	r18, 0x01	; 1
    1cda:	30 e0       	ldi	r19, 0x00	; 0
    1cdc:	40 e0       	ldi	r20, 0x00	; 0
    1cde:	50 e0       	ldi	r21, 0x00	; 0
    1ce0:	04 c0       	rjmp	.+8      	; 0x1cea <_fpadd_parts+0xe6>
    1ce2:	22 0f       	add	r18, r18
    1ce4:	33 1f       	adc	r19, r19
    1ce6:	44 1f       	adc	r20, r20
    1ce8:	55 1f       	adc	r21, r21
    1cea:	6a 95       	dec	r22
    1cec:	d2 f7       	brpl	.-12     	; 0x1ce2 <_fpadd_parts+0xde>
    1cee:	21 50       	subi	r18, 0x01	; 1
    1cf0:	30 40       	sbci	r19, 0x00	; 0
    1cf2:	40 40       	sbci	r20, 0x00	; 0
    1cf4:	50 40       	sbci	r21, 0x00	; 0
    1cf6:	2e 21       	and	r18, r14
    1cf8:	3f 21       	and	r19, r15
    1cfa:	40 23       	and	r20, r16
    1cfc:	51 23       	and	r21, r17
    1cfe:	21 15       	cp	r18, r1
    1d00:	31 05       	cpc	r19, r1
    1d02:	41 05       	cpc	r20, r1
    1d04:	51 05       	cpc	r21, r1
    1d06:	21 f0       	breq	.+8      	; 0x1d10 <_fpadd_parts+0x10c>
    1d08:	21 e0       	ldi	r18, 0x01	; 1
    1d0a:	30 e0       	ldi	r19, 0x00	; 0
    1d0c:	40 e0       	ldi	r20, 0x00	; 0
    1d0e:	50 e0       	ldi	r21, 0x00	; 0
    1d10:	79 01       	movw	r14, r18
    1d12:	8a 01       	movw	r16, r20
    1d14:	e6 28       	or	r14, r6
    1d16:	f7 28       	or	r15, r7
    1d18:	08 29       	or	r16, r8
    1d1a:	19 29       	or	r17, r9
    1d1c:	3c c0       	rjmp	.+120    	; 0x1d96 <_fpadd_parts+0x192>
    1d1e:	23 2b       	or	r18, r19
    1d20:	d1 f1       	breq	.+116    	; 0x1d96 <_fpadd_parts+0x192>
    1d22:	26 0e       	add	r2, r22
    1d24:	37 1e       	adc	r3, r23
    1d26:	35 01       	movw	r6, r10
    1d28:	46 01       	movw	r8, r12
    1d2a:	06 2e       	mov	r0, r22
    1d2c:	04 c0       	rjmp	.+8      	; 0x1d36 <_fpadd_parts+0x132>
    1d2e:	96 94       	lsr	r9
    1d30:	87 94       	ror	r8
    1d32:	77 94       	ror	r7
    1d34:	67 94       	ror	r6
    1d36:	0a 94       	dec	r0
    1d38:	d2 f7       	brpl	.-12     	; 0x1d2e <_fpadd_parts+0x12a>
    1d3a:	21 e0       	ldi	r18, 0x01	; 1
    1d3c:	30 e0       	ldi	r19, 0x00	; 0
    1d3e:	40 e0       	ldi	r20, 0x00	; 0
    1d40:	50 e0       	ldi	r21, 0x00	; 0
    1d42:	04 c0       	rjmp	.+8      	; 0x1d4c <_fpadd_parts+0x148>
    1d44:	22 0f       	add	r18, r18
    1d46:	33 1f       	adc	r19, r19
    1d48:	44 1f       	adc	r20, r20
    1d4a:	55 1f       	adc	r21, r21
    1d4c:	6a 95       	dec	r22
    1d4e:	d2 f7       	brpl	.-12     	; 0x1d44 <_fpadd_parts+0x140>
    1d50:	21 50       	subi	r18, 0x01	; 1
    1d52:	30 40       	sbci	r19, 0x00	; 0
    1d54:	40 40       	sbci	r20, 0x00	; 0
    1d56:	50 40       	sbci	r21, 0x00	; 0
    1d58:	2a 21       	and	r18, r10
    1d5a:	3b 21       	and	r19, r11
    1d5c:	4c 21       	and	r20, r12
    1d5e:	5d 21       	and	r21, r13
    1d60:	21 15       	cp	r18, r1
    1d62:	31 05       	cpc	r19, r1
    1d64:	41 05       	cpc	r20, r1
    1d66:	51 05       	cpc	r21, r1
    1d68:	21 f0       	breq	.+8      	; 0x1d72 <_fpadd_parts+0x16e>
    1d6a:	21 e0       	ldi	r18, 0x01	; 1
    1d6c:	30 e0       	ldi	r19, 0x00	; 0
    1d6e:	40 e0       	ldi	r20, 0x00	; 0
    1d70:	50 e0       	ldi	r21, 0x00	; 0
    1d72:	59 01       	movw	r10, r18
    1d74:	6a 01       	movw	r12, r20
    1d76:	a6 28       	or	r10, r6
    1d78:	b7 28       	or	r11, r7
    1d7a:	c8 28       	or	r12, r8
    1d7c:	d9 28       	or	r13, r9
    1d7e:	0b c0       	rjmp	.+22     	; 0x1d96 <_fpadd_parts+0x192>
    1d80:	82 15       	cp	r24, r2
    1d82:	93 05       	cpc	r25, r3
    1d84:	2c f0       	brlt	.+10     	; 0x1d90 <_fpadd_parts+0x18c>
    1d86:	1c 01       	movw	r2, r24
    1d88:	aa 24       	eor	r10, r10
    1d8a:	bb 24       	eor	r11, r11
    1d8c:	65 01       	movw	r12, r10
    1d8e:	03 c0       	rjmp	.+6      	; 0x1d96 <_fpadd_parts+0x192>
    1d90:	ee 24       	eor	r14, r14
    1d92:	ff 24       	eor	r15, r15
    1d94:	87 01       	movw	r16, r14
    1d96:	11 96       	adiw	r26, 0x01	; 1
    1d98:	9c 91       	ld	r25, X
    1d9a:	d2 01       	movw	r26, r4
    1d9c:	11 96       	adiw	r26, 0x01	; 1
    1d9e:	8c 91       	ld	r24, X
    1da0:	98 17       	cp	r25, r24
    1da2:	09 f4       	brne	.+2      	; 0x1da6 <_fpadd_parts+0x1a2>
    1da4:	45 c0       	rjmp	.+138    	; 0x1e30 <_fpadd_parts+0x22c>
    1da6:	99 23       	and	r25, r25
    1da8:	39 f0       	breq	.+14     	; 0x1db8 <_fpadd_parts+0x1b4>
    1daa:	a8 01       	movw	r20, r16
    1dac:	97 01       	movw	r18, r14
    1dae:	2a 19       	sub	r18, r10
    1db0:	3b 09       	sbc	r19, r11
    1db2:	4c 09       	sbc	r20, r12
    1db4:	5d 09       	sbc	r21, r13
    1db6:	06 c0       	rjmp	.+12     	; 0x1dc4 <_fpadd_parts+0x1c0>
    1db8:	a6 01       	movw	r20, r12
    1dba:	95 01       	movw	r18, r10
    1dbc:	2e 19       	sub	r18, r14
    1dbe:	3f 09       	sbc	r19, r15
    1dc0:	40 0b       	sbc	r20, r16
    1dc2:	51 0b       	sbc	r21, r17
    1dc4:	57 fd       	sbrc	r21, 7
    1dc6:	08 c0       	rjmp	.+16     	; 0x1dd8 <_fpadd_parts+0x1d4>
    1dc8:	11 82       	std	Z+1, r1	; 0x01
    1dca:	33 82       	std	Z+3, r3	; 0x03
    1dcc:	22 82       	std	Z+2, r2	; 0x02
    1dce:	24 83       	std	Z+4, r18	; 0x04
    1dd0:	35 83       	std	Z+5, r19	; 0x05
    1dd2:	46 83       	std	Z+6, r20	; 0x06
    1dd4:	57 83       	std	Z+7, r21	; 0x07
    1dd6:	1d c0       	rjmp	.+58     	; 0x1e12 <_fpadd_parts+0x20e>
    1dd8:	81 e0       	ldi	r24, 0x01	; 1
    1dda:	81 83       	std	Z+1, r24	; 0x01
    1ddc:	33 82       	std	Z+3, r3	; 0x03
    1dde:	22 82       	std	Z+2, r2	; 0x02
    1de0:	88 27       	eor	r24, r24
    1de2:	99 27       	eor	r25, r25
    1de4:	dc 01       	movw	r26, r24
    1de6:	82 1b       	sub	r24, r18
    1de8:	93 0b       	sbc	r25, r19
    1dea:	a4 0b       	sbc	r26, r20
    1dec:	b5 0b       	sbc	r27, r21
    1dee:	84 83       	std	Z+4, r24	; 0x04
    1df0:	95 83       	std	Z+5, r25	; 0x05
    1df2:	a6 83       	std	Z+6, r26	; 0x06
    1df4:	b7 83       	std	Z+7, r27	; 0x07
    1df6:	0d c0       	rjmp	.+26     	; 0x1e12 <_fpadd_parts+0x20e>
    1df8:	22 0f       	add	r18, r18
    1dfa:	33 1f       	adc	r19, r19
    1dfc:	44 1f       	adc	r20, r20
    1dfe:	55 1f       	adc	r21, r21
    1e00:	24 83       	std	Z+4, r18	; 0x04
    1e02:	35 83       	std	Z+5, r19	; 0x05
    1e04:	46 83       	std	Z+6, r20	; 0x06
    1e06:	57 83       	std	Z+7, r21	; 0x07
    1e08:	82 81       	ldd	r24, Z+2	; 0x02
    1e0a:	93 81       	ldd	r25, Z+3	; 0x03
    1e0c:	01 97       	sbiw	r24, 0x01	; 1
    1e0e:	93 83       	std	Z+3, r25	; 0x03
    1e10:	82 83       	std	Z+2, r24	; 0x02
    1e12:	24 81       	ldd	r18, Z+4	; 0x04
    1e14:	35 81       	ldd	r19, Z+5	; 0x05
    1e16:	46 81       	ldd	r20, Z+6	; 0x06
    1e18:	57 81       	ldd	r21, Z+7	; 0x07
    1e1a:	da 01       	movw	r26, r20
    1e1c:	c9 01       	movw	r24, r18
    1e1e:	01 97       	sbiw	r24, 0x01	; 1
    1e20:	a1 09       	sbc	r26, r1
    1e22:	b1 09       	sbc	r27, r1
    1e24:	8f 5f       	subi	r24, 0xFF	; 255
    1e26:	9f 4f       	sbci	r25, 0xFF	; 255
    1e28:	af 4f       	sbci	r26, 0xFF	; 255
    1e2a:	bf 43       	sbci	r27, 0x3F	; 63
    1e2c:	28 f3       	brcs	.-54     	; 0x1df8 <_fpadd_parts+0x1f4>
    1e2e:	0b c0       	rjmp	.+22     	; 0x1e46 <_fpadd_parts+0x242>
    1e30:	91 83       	std	Z+1, r25	; 0x01
    1e32:	33 82       	std	Z+3, r3	; 0x03
    1e34:	22 82       	std	Z+2, r2	; 0x02
    1e36:	ea 0c       	add	r14, r10
    1e38:	fb 1c       	adc	r15, r11
    1e3a:	0c 1d       	adc	r16, r12
    1e3c:	1d 1d       	adc	r17, r13
    1e3e:	e4 82       	std	Z+4, r14	; 0x04
    1e40:	f5 82       	std	Z+5, r15	; 0x05
    1e42:	06 83       	std	Z+6, r16	; 0x06
    1e44:	17 83       	std	Z+7, r17	; 0x07
    1e46:	83 e0       	ldi	r24, 0x03	; 3
    1e48:	80 83       	st	Z, r24
    1e4a:	24 81       	ldd	r18, Z+4	; 0x04
    1e4c:	35 81       	ldd	r19, Z+5	; 0x05
    1e4e:	46 81       	ldd	r20, Z+6	; 0x06
    1e50:	57 81       	ldd	r21, Z+7	; 0x07
    1e52:	57 ff       	sbrs	r21, 7
    1e54:	1a c0       	rjmp	.+52     	; 0x1e8a <_fpadd_parts+0x286>
    1e56:	c9 01       	movw	r24, r18
    1e58:	aa 27       	eor	r26, r26
    1e5a:	97 fd       	sbrc	r25, 7
    1e5c:	a0 95       	com	r26
    1e5e:	ba 2f       	mov	r27, r26
    1e60:	81 70       	andi	r24, 0x01	; 1
    1e62:	90 70       	andi	r25, 0x00	; 0
    1e64:	a0 70       	andi	r26, 0x00	; 0
    1e66:	b0 70       	andi	r27, 0x00	; 0
    1e68:	56 95       	lsr	r21
    1e6a:	47 95       	ror	r20
    1e6c:	37 95       	ror	r19
    1e6e:	27 95       	ror	r18
    1e70:	82 2b       	or	r24, r18
    1e72:	93 2b       	or	r25, r19
    1e74:	a4 2b       	or	r26, r20
    1e76:	b5 2b       	or	r27, r21
    1e78:	84 83       	std	Z+4, r24	; 0x04
    1e7a:	95 83       	std	Z+5, r25	; 0x05
    1e7c:	a6 83       	std	Z+6, r26	; 0x06
    1e7e:	b7 83       	std	Z+7, r27	; 0x07
    1e80:	82 81       	ldd	r24, Z+2	; 0x02
    1e82:	93 81       	ldd	r25, Z+3	; 0x03
    1e84:	01 96       	adiw	r24, 0x01	; 1
    1e86:	93 83       	std	Z+3, r25	; 0x03
    1e88:	82 83       	std	Z+2, r24	; 0x02
    1e8a:	df 01       	movw	r26, r30
    1e8c:	01 c0       	rjmp	.+2      	; 0x1e90 <_fpadd_parts+0x28c>
    1e8e:	d2 01       	movw	r26, r4
    1e90:	cd 01       	movw	r24, r26
    1e92:	cd b7       	in	r28, 0x3d	; 61
    1e94:	de b7       	in	r29, 0x3e	; 62
    1e96:	e2 e1       	ldi	r30, 0x12	; 18
    1e98:	0c 94 7c 2d 	jmp	0x5af8	; 0x5af8 <__epilogue_restores__>

00001e9c <__subsf3>:
    1e9c:	a0 e2       	ldi	r26, 0x20	; 32
    1e9e:	b0 e0       	ldi	r27, 0x00	; 0
    1ea0:	e4 e5       	ldi	r30, 0x54	; 84
    1ea2:	ff e0       	ldi	r31, 0x0F	; 15
    1ea4:	0c 94 6c 2d 	jmp	0x5ad8	; 0x5ad8 <__prologue_saves__+0x18>
    1ea8:	69 83       	std	Y+1, r22	; 0x01
    1eaa:	7a 83       	std	Y+2, r23	; 0x02
    1eac:	8b 83       	std	Y+3, r24	; 0x03
    1eae:	9c 83       	std	Y+4, r25	; 0x04
    1eb0:	2d 83       	std	Y+5, r18	; 0x05
    1eb2:	3e 83       	std	Y+6, r19	; 0x06
    1eb4:	4f 83       	std	Y+7, r20	; 0x07
    1eb6:	58 87       	std	Y+8, r21	; 0x08
    1eb8:	e9 e0       	ldi	r30, 0x09	; 9
    1eba:	ee 2e       	mov	r14, r30
    1ebc:	f1 2c       	mov	r15, r1
    1ebe:	ec 0e       	add	r14, r28
    1ec0:	fd 1e       	adc	r15, r29
    1ec2:	ce 01       	movw	r24, r28
    1ec4:	01 96       	adiw	r24, 0x01	; 1
    1ec6:	b7 01       	movw	r22, r14
    1ec8:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <__unpack_f>
    1ecc:	8e 01       	movw	r16, r28
    1ece:	0f 5e       	subi	r16, 0xEF	; 239
    1ed0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ed2:	ce 01       	movw	r24, r28
    1ed4:	05 96       	adiw	r24, 0x05	; 5
    1ed6:	b8 01       	movw	r22, r16
    1ed8:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <__unpack_f>
    1edc:	8a 89       	ldd	r24, Y+18	; 0x12
    1ede:	91 e0       	ldi	r25, 0x01	; 1
    1ee0:	89 27       	eor	r24, r25
    1ee2:	8a 8b       	std	Y+18, r24	; 0x12
    1ee4:	c7 01       	movw	r24, r14
    1ee6:	b8 01       	movw	r22, r16
    1ee8:	ae 01       	movw	r20, r28
    1eea:	47 5e       	subi	r20, 0xE7	; 231
    1eec:	5f 4f       	sbci	r21, 0xFF	; 255
    1eee:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <_fpadd_parts>
    1ef2:	0e 94 0b 14 	call	0x2816	; 0x2816 <__pack_f>
    1ef6:	a0 96       	adiw	r28, 0x20	; 32
    1ef8:	e6 e0       	ldi	r30, 0x06	; 6
    1efa:	0c 94 88 2d 	jmp	0x5b10	; 0x5b10 <__epilogue_restores__+0x18>

00001efe <__addsf3>:
    1efe:	a0 e2       	ldi	r26, 0x20	; 32
    1f00:	b0 e0       	ldi	r27, 0x00	; 0
    1f02:	e5 e8       	ldi	r30, 0x85	; 133
    1f04:	ff e0       	ldi	r31, 0x0F	; 15
    1f06:	0c 94 6c 2d 	jmp	0x5ad8	; 0x5ad8 <__prologue_saves__+0x18>
    1f0a:	69 83       	std	Y+1, r22	; 0x01
    1f0c:	7a 83       	std	Y+2, r23	; 0x02
    1f0e:	8b 83       	std	Y+3, r24	; 0x03
    1f10:	9c 83       	std	Y+4, r25	; 0x04
    1f12:	2d 83       	std	Y+5, r18	; 0x05
    1f14:	3e 83       	std	Y+6, r19	; 0x06
    1f16:	4f 83       	std	Y+7, r20	; 0x07
    1f18:	58 87       	std	Y+8, r21	; 0x08
    1f1a:	f9 e0       	ldi	r31, 0x09	; 9
    1f1c:	ef 2e       	mov	r14, r31
    1f1e:	f1 2c       	mov	r15, r1
    1f20:	ec 0e       	add	r14, r28
    1f22:	fd 1e       	adc	r15, r29
    1f24:	ce 01       	movw	r24, r28
    1f26:	01 96       	adiw	r24, 0x01	; 1
    1f28:	b7 01       	movw	r22, r14
    1f2a:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <__unpack_f>
    1f2e:	8e 01       	movw	r16, r28
    1f30:	0f 5e       	subi	r16, 0xEF	; 239
    1f32:	1f 4f       	sbci	r17, 0xFF	; 255
    1f34:	ce 01       	movw	r24, r28
    1f36:	05 96       	adiw	r24, 0x05	; 5
    1f38:	b8 01       	movw	r22, r16
    1f3a:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <__unpack_f>
    1f3e:	c7 01       	movw	r24, r14
    1f40:	b8 01       	movw	r22, r16
    1f42:	ae 01       	movw	r20, r28
    1f44:	47 5e       	subi	r20, 0xE7	; 231
    1f46:	5f 4f       	sbci	r21, 0xFF	; 255
    1f48:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <_fpadd_parts>
    1f4c:	0e 94 0b 14 	call	0x2816	; 0x2816 <__pack_f>
    1f50:	a0 96       	adiw	r28, 0x20	; 32
    1f52:	e6 e0       	ldi	r30, 0x06	; 6
    1f54:	0c 94 88 2d 	jmp	0x5b10	; 0x5b10 <__epilogue_restores__+0x18>

00001f58 <__mulsf3>:
    1f58:	a0 e2       	ldi	r26, 0x20	; 32
    1f5a:	b0 e0       	ldi	r27, 0x00	; 0
    1f5c:	e2 eb       	ldi	r30, 0xB2	; 178
    1f5e:	ff e0       	ldi	r31, 0x0F	; 15
    1f60:	0c 94 60 2d 	jmp	0x5ac0	; 0x5ac0 <__prologue_saves__>
    1f64:	69 83       	std	Y+1, r22	; 0x01
    1f66:	7a 83       	std	Y+2, r23	; 0x02
    1f68:	8b 83       	std	Y+3, r24	; 0x03
    1f6a:	9c 83       	std	Y+4, r25	; 0x04
    1f6c:	2d 83       	std	Y+5, r18	; 0x05
    1f6e:	3e 83       	std	Y+6, r19	; 0x06
    1f70:	4f 83       	std	Y+7, r20	; 0x07
    1f72:	58 87       	std	Y+8, r21	; 0x08
    1f74:	ce 01       	movw	r24, r28
    1f76:	01 96       	adiw	r24, 0x01	; 1
    1f78:	be 01       	movw	r22, r28
    1f7a:	67 5f       	subi	r22, 0xF7	; 247
    1f7c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f7e:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <__unpack_f>
    1f82:	ce 01       	movw	r24, r28
    1f84:	05 96       	adiw	r24, 0x05	; 5
    1f86:	be 01       	movw	r22, r28
    1f88:	6f 5e       	subi	r22, 0xEF	; 239
    1f8a:	7f 4f       	sbci	r23, 0xFF	; 255
    1f8c:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <__unpack_f>
    1f90:	99 85       	ldd	r25, Y+9	; 0x09
    1f92:	92 30       	cpi	r25, 0x02	; 2
    1f94:	88 f0       	brcs	.+34     	; 0x1fb8 <__mulsf3+0x60>
    1f96:	89 89       	ldd	r24, Y+17	; 0x11
    1f98:	82 30       	cpi	r24, 0x02	; 2
    1f9a:	c8 f0       	brcs	.+50     	; 0x1fce <__mulsf3+0x76>
    1f9c:	94 30       	cpi	r25, 0x04	; 4
    1f9e:	19 f4       	brne	.+6      	; 0x1fa6 <__mulsf3+0x4e>
    1fa0:	82 30       	cpi	r24, 0x02	; 2
    1fa2:	51 f4       	brne	.+20     	; 0x1fb8 <__mulsf3+0x60>
    1fa4:	04 c0       	rjmp	.+8      	; 0x1fae <__mulsf3+0x56>
    1fa6:	84 30       	cpi	r24, 0x04	; 4
    1fa8:	29 f4       	brne	.+10     	; 0x1fb4 <__mulsf3+0x5c>
    1faa:	92 30       	cpi	r25, 0x02	; 2
    1fac:	81 f4       	brne	.+32     	; 0x1fce <__mulsf3+0x76>
    1fae:	83 e8       	ldi	r24, 0x83	; 131
    1fb0:	90 e0       	ldi	r25, 0x00	; 0
    1fb2:	c6 c0       	rjmp	.+396    	; 0x2140 <__mulsf3+0x1e8>
    1fb4:	92 30       	cpi	r25, 0x02	; 2
    1fb6:	49 f4       	brne	.+18     	; 0x1fca <__mulsf3+0x72>
    1fb8:	20 e0       	ldi	r18, 0x00	; 0
    1fba:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fbc:	8a 89       	ldd	r24, Y+18	; 0x12
    1fbe:	98 13       	cpse	r25, r24
    1fc0:	21 e0       	ldi	r18, 0x01	; 1
    1fc2:	2a 87       	std	Y+10, r18	; 0x0a
    1fc4:	ce 01       	movw	r24, r28
    1fc6:	09 96       	adiw	r24, 0x09	; 9
    1fc8:	bb c0       	rjmp	.+374    	; 0x2140 <__mulsf3+0x1e8>
    1fca:	82 30       	cpi	r24, 0x02	; 2
    1fcc:	49 f4       	brne	.+18     	; 0x1fe0 <__mulsf3+0x88>
    1fce:	20 e0       	ldi	r18, 0x00	; 0
    1fd0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fd2:	8a 89       	ldd	r24, Y+18	; 0x12
    1fd4:	98 13       	cpse	r25, r24
    1fd6:	21 e0       	ldi	r18, 0x01	; 1
    1fd8:	2a 8b       	std	Y+18, r18	; 0x12
    1fda:	ce 01       	movw	r24, r28
    1fdc:	41 96       	adiw	r24, 0x11	; 17
    1fde:	b0 c0       	rjmp	.+352    	; 0x2140 <__mulsf3+0x1e8>
    1fe0:	2d 84       	ldd	r2, Y+13	; 0x0d
    1fe2:	3e 84       	ldd	r3, Y+14	; 0x0e
    1fe4:	4f 84       	ldd	r4, Y+15	; 0x0f
    1fe6:	58 88       	ldd	r5, Y+16	; 0x10
    1fe8:	6d 88       	ldd	r6, Y+21	; 0x15
    1fea:	7e 88       	ldd	r7, Y+22	; 0x16
    1fec:	8f 88       	ldd	r8, Y+23	; 0x17
    1fee:	98 8c       	ldd	r9, Y+24	; 0x18
    1ff0:	ee 24       	eor	r14, r14
    1ff2:	ff 24       	eor	r15, r15
    1ff4:	87 01       	movw	r16, r14
    1ff6:	aa 24       	eor	r10, r10
    1ff8:	bb 24       	eor	r11, r11
    1ffa:	65 01       	movw	r12, r10
    1ffc:	40 e0       	ldi	r20, 0x00	; 0
    1ffe:	50 e0       	ldi	r21, 0x00	; 0
    2000:	60 e0       	ldi	r22, 0x00	; 0
    2002:	70 e0       	ldi	r23, 0x00	; 0
    2004:	e0 e0       	ldi	r30, 0x00	; 0
    2006:	f0 e0       	ldi	r31, 0x00	; 0
    2008:	c1 01       	movw	r24, r2
    200a:	81 70       	andi	r24, 0x01	; 1
    200c:	90 70       	andi	r25, 0x00	; 0
    200e:	89 2b       	or	r24, r25
    2010:	e9 f0       	breq	.+58     	; 0x204c <__mulsf3+0xf4>
    2012:	e6 0c       	add	r14, r6
    2014:	f7 1c       	adc	r15, r7
    2016:	08 1d       	adc	r16, r8
    2018:	19 1d       	adc	r17, r9
    201a:	9a 01       	movw	r18, r20
    201c:	ab 01       	movw	r20, r22
    201e:	2a 0d       	add	r18, r10
    2020:	3b 1d       	adc	r19, r11
    2022:	4c 1d       	adc	r20, r12
    2024:	5d 1d       	adc	r21, r13
    2026:	80 e0       	ldi	r24, 0x00	; 0
    2028:	90 e0       	ldi	r25, 0x00	; 0
    202a:	a0 e0       	ldi	r26, 0x00	; 0
    202c:	b0 e0       	ldi	r27, 0x00	; 0
    202e:	e6 14       	cp	r14, r6
    2030:	f7 04       	cpc	r15, r7
    2032:	08 05       	cpc	r16, r8
    2034:	19 05       	cpc	r17, r9
    2036:	20 f4       	brcc	.+8      	; 0x2040 <__mulsf3+0xe8>
    2038:	81 e0       	ldi	r24, 0x01	; 1
    203a:	90 e0       	ldi	r25, 0x00	; 0
    203c:	a0 e0       	ldi	r26, 0x00	; 0
    203e:	b0 e0       	ldi	r27, 0x00	; 0
    2040:	ba 01       	movw	r22, r20
    2042:	a9 01       	movw	r20, r18
    2044:	48 0f       	add	r20, r24
    2046:	59 1f       	adc	r21, r25
    2048:	6a 1f       	adc	r22, r26
    204a:	7b 1f       	adc	r23, r27
    204c:	aa 0c       	add	r10, r10
    204e:	bb 1c       	adc	r11, r11
    2050:	cc 1c       	adc	r12, r12
    2052:	dd 1c       	adc	r13, r13
    2054:	97 fe       	sbrs	r9, 7
    2056:	08 c0       	rjmp	.+16     	; 0x2068 <__mulsf3+0x110>
    2058:	81 e0       	ldi	r24, 0x01	; 1
    205a:	90 e0       	ldi	r25, 0x00	; 0
    205c:	a0 e0       	ldi	r26, 0x00	; 0
    205e:	b0 e0       	ldi	r27, 0x00	; 0
    2060:	a8 2a       	or	r10, r24
    2062:	b9 2a       	or	r11, r25
    2064:	ca 2a       	or	r12, r26
    2066:	db 2a       	or	r13, r27
    2068:	31 96       	adiw	r30, 0x01	; 1
    206a:	e0 32       	cpi	r30, 0x20	; 32
    206c:	f1 05       	cpc	r31, r1
    206e:	49 f0       	breq	.+18     	; 0x2082 <__mulsf3+0x12a>
    2070:	66 0c       	add	r6, r6
    2072:	77 1c       	adc	r7, r7
    2074:	88 1c       	adc	r8, r8
    2076:	99 1c       	adc	r9, r9
    2078:	56 94       	lsr	r5
    207a:	47 94       	ror	r4
    207c:	37 94       	ror	r3
    207e:	27 94       	ror	r2
    2080:	c3 cf       	rjmp	.-122    	; 0x2008 <__mulsf3+0xb0>
    2082:	fa 85       	ldd	r31, Y+10	; 0x0a
    2084:	ea 89       	ldd	r30, Y+18	; 0x12
    2086:	2b 89       	ldd	r18, Y+19	; 0x13
    2088:	3c 89       	ldd	r19, Y+20	; 0x14
    208a:	8b 85       	ldd	r24, Y+11	; 0x0b
    208c:	9c 85       	ldd	r25, Y+12	; 0x0c
    208e:	28 0f       	add	r18, r24
    2090:	39 1f       	adc	r19, r25
    2092:	2e 5f       	subi	r18, 0xFE	; 254
    2094:	3f 4f       	sbci	r19, 0xFF	; 255
    2096:	17 c0       	rjmp	.+46     	; 0x20c6 <__mulsf3+0x16e>
    2098:	ca 01       	movw	r24, r20
    209a:	81 70       	andi	r24, 0x01	; 1
    209c:	90 70       	andi	r25, 0x00	; 0
    209e:	89 2b       	or	r24, r25
    20a0:	61 f0       	breq	.+24     	; 0x20ba <__mulsf3+0x162>
    20a2:	16 95       	lsr	r17
    20a4:	07 95       	ror	r16
    20a6:	f7 94       	ror	r15
    20a8:	e7 94       	ror	r14
    20aa:	80 e0       	ldi	r24, 0x00	; 0
    20ac:	90 e0       	ldi	r25, 0x00	; 0
    20ae:	a0 e0       	ldi	r26, 0x00	; 0
    20b0:	b0 e8       	ldi	r27, 0x80	; 128
    20b2:	e8 2a       	or	r14, r24
    20b4:	f9 2a       	or	r15, r25
    20b6:	0a 2b       	or	r16, r26
    20b8:	1b 2b       	or	r17, r27
    20ba:	76 95       	lsr	r23
    20bc:	67 95       	ror	r22
    20be:	57 95       	ror	r21
    20c0:	47 95       	ror	r20
    20c2:	2f 5f       	subi	r18, 0xFF	; 255
    20c4:	3f 4f       	sbci	r19, 0xFF	; 255
    20c6:	77 fd       	sbrc	r23, 7
    20c8:	e7 cf       	rjmp	.-50     	; 0x2098 <__mulsf3+0x140>
    20ca:	0c c0       	rjmp	.+24     	; 0x20e4 <__mulsf3+0x18c>
    20cc:	44 0f       	add	r20, r20
    20ce:	55 1f       	adc	r21, r21
    20d0:	66 1f       	adc	r22, r22
    20d2:	77 1f       	adc	r23, r23
    20d4:	17 fd       	sbrc	r17, 7
    20d6:	41 60       	ori	r20, 0x01	; 1
    20d8:	ee 0c       	add	r14, r14
    20da:	ff 1c       	adc	r15, r15
    20dc:	00 1f       	adc	r16, r16
    20de:	11 1f       	adc	r17, r17
    20e0:	21 50       	subi	r18, 0x01	; 1
    20e2:	30 40       	sbci	r19, 0x00	; 0
    20e4:	40 30       	cpi	r20, 0x00	; 0
    20e6:	90 e0       	ldi	r25, 0x00	; 0
    20e8:	59 07       	cpc	r21, r25
    20ea:	90 e0       	ldi	r25, 0x00	; 0
    20ec:	69 07       	cpc	r22, r25
    20ee:	90 e4       	ldi	r25, 0x40	; 64
    20f0:	79 07       	cpc	r23, r25
    20f2:	60 f3       	brcs	.-40     	; 0x20cc <__mulsf3+0x174>
    20f4:	2b 8f       	std	Y+27, r18	; 0x1b
    20f6:	3c 8f       	std	Y+28, r19	; 0x1c
    20f8:	db 01       	movw	r26, r22
    20fa:	ca 01       	movw	r24, r20
    20fc:	8f 77       	andi	r24, 0x7F	; 127
    20fe:	90 70       	andi	r25, 0x00	; 0
    2100:	a0 70       	andi	r26, 0x00	; 0
    2102:	b0 70       	andi	r27, 0x00	; 0
    2104:	80 34       	cpi	r24, 0x40	; 64
    2106:	91 05       	cpc	r25, r1
    2108:	a1 05       	cpc	r26, r1
    210a:	b1 05       	cpc	r27, r1
    210c:	61 f4       	brne	.+24     	; 0x2126 <__mulsf3+0x1ce>
    210e:	47 fd       	sbrc	r20, 7
    2110:	0a c0       	rjmp	.+20     	; 0x2126 <__mulsf3+0x1ce>
    2112:	e1 14       	cp	r14, r1
    2114:	f1 04       	cpc	r15, r1
    2116:	01 05       	cpc	r16, r1
    2118:	11 05       	cpc	r17, r1
    211a:	29 f0       	breq	.+10     	; 0x2126 <__mulsf3+0x1ce>
    211c:	40 5c       	subi	r20, 0xC0	; 192
    211e:	5f 4f       	sbci	r21, 0xFF	; 255
    2120:	6f 4f       	sbci	r22, 0xFF	; 255
    2122:	7f 4f       	sbci	r23, 0xFF	; 255
    2124:	40 78       	andi	r20, 0x80	; 128
    2126:	1a 8e       	std	Y+26, r1	; 0x1a
    2128:	fe 17       	cp	r31, r30
    212a:	11 f0       	breq	.+4      	; 0x2130 <__mulsf3+0x1d8>
    212c:	81 e0       	ldi	r24, 0x01	; 1
    212e:	8a 8f       	std	Y+26, r24	; 0x1a
    2130:	4d 8f       	std	Y+29, r20	; 0x1d
    2132:	5e 8f       	std	Y+30, r21	; 0x1e
    2134:	6f 8f       	std	Y+31, r22	; 0x1f
    2136:	78 a3       	std	Y+32, r23	; 0x20
    2138:	83 e0       	ldi	r24, 0x03	; 3
    213a:	89 8f       	std	Y+25, r24	; 0x19
    213c:	ce 01       	movw	r24, r28
    213e:	49 96       	adiw	r24, 0x19	; 25
    2140:	0e 94 0b 14 	call	0x2816	; 0x2816 <__pack_f>
    2144:	a0 96       	adiw	r28, 0x20	; 32
    2146:	e2 e1       	ldi	r30, 0x12	; 18
    2148:	0c 94 7c 2d 	jmp	0x5af8	; 0x5af8 <__epilogue_restores__>

0000214c <__divsf3>:
    214c:	a8 e1       	ldi	r26, 0x18	; 24
    214e:	b0 e0       	ldi	r27, 0x00	; 0
    2150:	ec ea       	ldi	r30, 0xAC	; 172
    2152:	f0 e1       	ldi	r31, 0x10	; 16
    2154:	0c 94 68 2d 	jmp	0x5ad0	; 0x5ad0 <__prologue_saves__+0x10>
    2158:	69 83       	std	Y+1, r22	; 0x01
    215a:	7a 83       	std	Y+2, r23	; 0x02
    215c:	8b 83       	std	Y+3, r24	; 0x03
    215e:	9c 83       	std	Y+4, r25	; 0x04
    2160:	2d 83       	std	Y+5, r18	; 0x05
    2162:	3e 83       	std	Y+6, r19	; 0x06
    2164:	4f 83       	std	Y+7, r20	; 0x07
    2166:	58 87       	std	Y+8, r21	; 0x08
    2168:	b9 e0       	ldi	r27, 0x09	; 9
    216a:	eb 2e       	mov	r14, r27
    216c:	f1 2c       	mov	r15, r1
    216e:	ec 0e       	add	r14, r28
    2170:	fd 1e       	adc	r15, r29
    2172:	ce 01       	movw	r24, r28
    2174:	01 96       	adiw	r24, 0x01	; 1
    2176:	b7 01       	movw	r22, r14
    2178:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <__unpack_f>
    217c:	8e 01       	movw	r16, r28
    217e:	0f 5e       	subi	r16, 0xEF	; 239
    2180:	1f 4f       	sbci	r17, 0xFF	; 255
    2182:	ce 01       	movw	r24, r28
    2184:	05 96       	adiw	r24, 0x05	; 5
    2186:	b8 01       	movw	r22, r16
    2188:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <__unpack_f>
    218c:	29 85       	ldd	r18, Y+9	; 0x09
    218e:	22 30       	cpi	r18, 0x02	; 2
    2190:	08 f4       	brcc	.+2      	; 0x2194 <__divsf3+0x48>
    2192:	7e c0       	rjmp	.+252    	; 0x2290 <__divsf3+0x144>
    2194:	39 89       	ldd	r19, Y+17	; 0x11
    2196:	32 30       	cpi	r19, 0x02	; 2
    2198:	10 f4       	brcc	.+4      	; 0x219e <__divsf3+0x52>
    219a:	b8 01       	movw	r22, r16
    219c:	7c c0       	rjmp	.+248    	; 0x2296 <__divsf3+0x14a>
    219e:	8a 85       	ldd	r24, Y+10	; 0x0a
    21a0:	9a 89       	ldd	r25, Y+18	; 0x12
    21a2:	89 27       	eor	r24, r25
    21a4:	8a 87       	std	Y+10, r24	; 0x0a
    21a6:	24 30       	cpi	r18, 0x04	; 4
    21a8:	11 f0       	breq	.+4      	; 0x21ae <__divsf3+0x62>
    21aa:	22 30       	cpi	r18, 0x02	; 2
    21ac:	31 f4       	brne	.+12     	; 0x21ba <__divsf3+0x6e>
    21ae:	23 17       	cp	r18, r19
    21b0:	09 f0       	breq	.+2      	; 0x21b4 <__divsf3+0x68>
    21b2:	6e c0       	rjmp	.+220    	; 0x2290 <__divsf3+0x144>
    21b4:	63 e8       	ldi	r22, 0x83	; 131
    21b6:	70 e0       	ldi	r23, 0x00	; 0
    21b8:	6e c0       	rjmp	.+220    	; 0x2296 <__divsf3+0x14a>
    21ba:	34 30       	cpi	r19, 0x04	; 4
    21bc:	39 f4       	brne	.+14     	; 0x21cc <__divsf3+0x80>
    21be:	1d 86       	std	Y+13, r1	; 0x0d
    21c0:	1e 86       	std	Y+14, r1	; 0x0e
    21c2:	1f 86       	std	Y+15, r1	; 0x0f
    21c4:	18 8a       	std	Y+16, r1	; 0x10
    21c6:	1c 86       	std	Y+12, r1	; 0x0c
    21c8:	1b 86       	std	Y+11, r1	; 0x0b
    21ca:	04 c0       	rjmp	.+8      	; 0x21d4 <__divsf3+0x88>
    21cc:	32 30       	cpi	r19, 0x02	; 2
    21ce:	21 f4       	brne	.+8      	; 0x21d8 <__divsf3+0x8c>
    21d0:	84 e0       	ldi	r24, 0x04	; 4
    21d2:	89 87       	std	Y+9, r24	; 0x09
    21d4:	b7 01       	movw	r22, r14
    21d6:	5f c0       	rjmp	.+190    	; 0x2296 <__divsf3+0x14a>
    21d8:	2b 85       	ldd	r18, Y+11	; 0x0b
    21da:	3c 85       	ldd	r19, Y+12	; 0x0c
    21dc:	8b 89       	ldd	r24, Y+19	; 0x13
    21de:	9c 89       	ldd	r25, Y+20	; 0x14
    21e0:	28 1b       	sub	r18, r24
    21e2:	39 0b       	sbc	r19, r25
    21e4:	3c 87       	std	Y+12, r19	; 0x0c
    21e6:	2b 87       	std	Y+11, r18	; 0x0b
    21e8:	ed 84       	ldd	r14, Y+13	; 0x0d
    21ea:	fe 84       	ldd	r15, Y+14	; 0x0e
    21ec:	0f 85       	ldd	r16, Y+15	; 0x0f
    21ee:	18 89       	ldd	r17, Y+16	; 0x10
    21f0:	ad 88       	ldd	r10, Y+21	; 0x15
    21f2:	be 88       	ldd	r11, Y+22	; 0x16
    21f4:	cf 88       	ldd	r12, Y+23	; 0x17
    21f6:	d8 8c       	ldd	r13, Y+24	; 0x18
    21f8:	ea 14       	cp	r14, r10
    21fa:	fb 04       	cpc	r15, r11
    21fc:	0c 05       	cpc	r16, r12
    21fe:	1d 05       	cpc	r17, r13
    2200:	40 f4       	brcc	.+16     	; 0x2212 <__divsf3+0xc6>
    2202:	ee 0c       	add	r14, r14
    2204:	ff 1c       	adc	r15, r15
    2206:	00 1f       	adc	r16, r16
    2208:	11 1f       	adc	r17, r17
    220a:	21 50       	subi	r18, 0x01	; 1
    220c:	30 40       	sbci	r19, 0x00	; 0
    220e:	3c 87       	std	Y+12, r19	; 0x0c
    2210:	2b 87       	std	Y+11, r18	; 0x0b
    2212:	20 e0       	ldi	r18, 0x00	; 0
    2214:	30 e0       	ldi	r19, 0x00	; 0
    2216:	40 e0       	ldi	r20, 0x00	; 0
    2218:	50 e0       	ldi	r21, 0x00	; 0
    221a:	80 e0       	ldi	r24, 0x00	; 0
    221c:	90 e0       	ldi	r25, 0x00	; 0
    221e:	a0 e0       	ldi	r26, 0x00	; 0
    2220:	b0 e4       	ldi	r27, 0x40	; 64
    2222:	60 e0       	ldi	r22, 0x00	; 0
    2224:	70 e0       	ldi	r23, 0x00	; 0
    2226:	ea 14       	cp	r14, r10
    2228:	fb 04       	cpc	r15, r11
    222a:	0c 05       	cpc	r16, r12
    222c:	1d 05       	cpc	r17, r13
    222e:	40 f0       	brcs	.+16     	; 0x2240 <__divsf3+0xf4>
    2230:	28 2b       	or	r18, r24
    2232:	39 2b       	or	r19, r25
    2234:	4a 2b       	or	r20, r26
    2236:	5b 2b       	or	r21, r27
    2238:	ea 18       	sub	r14, r10
    223a:	fb 08       	sbc	r15, r11
    223c:	0c 09       	sbc	r16, r12
    223e:	1d 09       	sbc	r17, r13
    2240:	b6 95       	lsr	r27
    2242:	a7 95       	ror	r26
    2244:	97 95       	ror	r25
    2246:	87 95       	ror	r24
    2248:	ee 0c       	add	r14, r14
    224a:	ff 1c       	adc	r15, r15
    224c:	00 1f       	adc	r16, r16
    224e:	11 1f       	adc	r17, r17
    2250:	6f 5f       	subi	r22, 0xFF	; 255
    2252:	7f 4f       	sbci	r23, 0xFF	; 255
    2254:	6f 31       	cpi	r22, 0x1F	; 31
    2256:	71 05       	cpc	r23, r1
    2258:	31 f7       	brne	.-52     	; 0x2226 <__divsf3+0xda>
    225a:	da 01       	movw	r26, r20
    225c:	c9 01       	movw	r24, r18
    225e:	8f 77       	andi	r24, 0x7F	; 127
    2260:	90 70       	andi	r25, 0x00	; 0
    2262:	a0 70       	andi	r26, 0x00	; 0
    2264:	b0 70       	andi	r27, 0x00	; 0
    2266:	80 34       	cpi	r24, 0x40	; 64
    2268:	91 05       	cpc	r25, r1
    226a:	a1 05       	cpc	r26, r1
    226c:	b1 05       	cpc	r27, r1
    226e:	61 f4       	brne	.+24     	; 0x2288 <__divsf3+0x13c>
    2270:	27 fd       	sbrc	r18, 7
    2272:	0a c0       	rjmp	.+20     	; 0x2288 <__divsf3+0x13c>
    2274:	e1 14       	cp	r14, r1
    2276:	f1 04       	cpc	r15, r1
    2278:	01 05       	cpc	r16, r1
    227a:	11 05       	cpc	r17, r1
    227c:	29 f0       	breq	.+10     	; 0x2288 <__divsf3+0x13c>
    227e:	20 5c       	subi	r18, 0xC0	; 192
    2280:	3f 4f       	sbci	r19, 0xFF	; 255
    2282:	4f 4f       	sbci	r20, 0xFF	; 255
    2284:	5f 4f       	sbci	r21, 0xFF	; 255
    2286:	20 78       	andi	r18, 0x80	; 128
    2288:	2d 87       	std	Y+13, r18	; 0x0d
    228a:	3e 87       	std	Y+14, r19	; 0x0e
    228c:	4f 87       	std	Y+15, r20	; 0x0f
    228e:	58 8b       	std	Y+16, r21	; 0x10
    2290:	be 01       	movw	r22, r28
    2292:	67 5f       	subi	r22, 0xF7	; 247
    2294:	7f 4f       	sbci	r23, 0xFF	; 255
    2296:	cb 01       	movw	r24, r22
    2298:	0e 94 0b 14 	call	0x2816	; 0x2816 <__pack_f>
    229c:	68 96       	adiw	r28, 0x18	; 24
    229e:	ea e0       	ldi	r30, 0x0A	; 10
    22a0:	0c 94 84 2d 	jmp	0x5b08	; 0x5b08 <__epilogue_restores__+0x10>

000022a4 <__eqsf2>:
    22a4:	a8 e1       	ldi	r26, 0x18	; 24
    22a6:	b0 e0       	ldi	r27, 0x00	; 0
    22a8:	e8 e5       	ldi	r30, 0x58	; 88
    22aa:	f1 e1       	ldi	r31, 0x11	; 17
    22ac:	0c 94 6c 2d 	jmp	0x5ad8	; 0x5ad8 <__prologue_saves__+0x18>
    22b0:	69 83       	std	Y+1, r22	; 0x01
    22b2:	7a 83       	std	Y+2, r23	; 0x02
    22b4:	8b 83       	std	Y+3, r24	; 0x03
    22b6:	9c 83       	std	Y+4, r25	; 0x04
    22b8:	2d 83       	std	Y+5, r18	; 0x05
    22ba:	3e 83       	std	Y+6, r19	; 0x06
    22bc:	4f 83       	std	Y+7, r20	; 0x07
    22be:	58 87       	std	Y+8, r21	; 0x08
    22c0:	89 e0       	ldi	r24, 0x09	; 9
    22c2:	e8 2e       	mov	r14, r24
    22c4:	f1 2c       	mov	r15, r1
    22c6:	ec 0e       	add	r14, r28
    22c8:	fd 1e       	adc	r15, r29
    22ca:	ce 01       	movw	r24, r28
    22cc:	01 96       	adiw	r24, 0x01	; 1
    22ce:	b7 01       	movw	r22, r14
    22d0:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <__unpack_f>
    22d4:	8e 01       	movw	r16, r28
    22d6:	0f 5e       	subi	r16, 0xEF	; 239
    22d8:	1f 4f       	sbci	r17, 0xFF	; 255
    22da:	ce 01       	movw	r24, r28
    22dc:	05 96       	adiw	r24, 0x05	; 5
    22de:	b8 01       	movw	r22, r16
    22e0:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <__unpack_f>
    22e4:	89 85       	ldd	r24, Y+9	; 0x09
    22e6:	82 30       	cpi	r24, 0x02	; 2
    22e8:	40 f0       	brcs	.+16     	; 0x22fa <__eqsf2+0x56>
    22ea:	89 89       	ldd	r24, Y+17	; 0x11
    22ec:	82 30       	cpi	r24, 0x02	; 2
    22ee:	28 f0       	brcs	.+10     	; 0x22fa <__eqsf2+0x56>
    22f0:	c7 01       	movw	r24, r14
    22f2:	b8 01       	movw	r22, r16
    22f4:	0e 94 58 15 	call	0x2ab0	; 0x2ab0 <__fpcmp_parts_f>
    22f8:	01 c0       	rjmp	.+2      	; 0x22fc <__eqsf2+0x58>
    22fa:	81 e0       	ldi	r24, 0x01	; 1
    22fc:	68 96       	adiw	r28, 0x18	; 24
    22fe:	e6 e0       	ldi	r30, 0x06	; 6
    2300:	0c 94 88 2d 	jmp	0x5b10	; 0x5b10 <__epilogue_restores__+0x18>

00002304 <__gtsf2>:
    2304:	a8 e1       	ldi	r26, 0x18	; 24
    2306:	b0 e0       	ldi	r27, 0x00	; 0
    2308:	e8 e8       	ldi	r30, 0x88	; 136
    230a:	f1 e1       	ldi	r31, 0x11	; 17
    230c:	0c 94 6c 2d 	jmp	0x5ad8	; 0x5ad8 <__prologue_saves__+0x18>
    2310:	69 83       	std	Y+1, r22	; 0x01
    2312:	7a 83       	std	Y+2, r23	; 0x02
    2314:	8b 83       	std	Y+3, r24	; 0x03
    2316:	9c 83       	std	Y+4, r25	; 0x04
    2318:	2d 83       	std	Y+5, r18	; 0x05
    231a:	3e 83       	std	Y+6, r19	; 0x06
    231c:	4f 83       	std	Y+7, r20	; 0x07
    231e:	58 87       	std	Y+8, r21	; 0x08
    2320:	89 e0       	ldi	r24, 0x09	; 9
    2322:	e8 2e       	mov	r14, r24
    2324:	f1 2c       	mov	r15, r1
    2326:	ec 0e       	add	r14, r28
    2328:	fd 1e       	adc	r15, r29
    232a:	ce 01       	movw	r24, r28
    232c:	01 96       	adiw	r24, 0x01	; 1
    232e:	b7 01       	movw	r22, r14
    2330:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <__unpack_f>
    2334:	8e 01       	movw	r16, r28
    2336:	0f 5e       	subi	r16, 0xEF	; 239
    2338:	1f 4f       	sbci	r17, 0xFF	; 255
    233a:	ce 01       	movw	r24, r28
    233c:	05 96       	adiw	r24, 0x05	; 5
    233e:	b8 01       	movw	r22, r16
    2340:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <__unpack_f>
    2344:	89 85       	ldd	r24, Y+9	; 0x09
    2346:	82 30       	cpi	r24, 0x02	; 2
    2348:	40 f0       	brcs	.+16     	; 0x235a <__gtsf2+0x56>
    234a:	89 89       	ldd	r24, Y+17	; 0x11
    234c:	82 30       	cpi	r24, 0x02	; 2
    234e:	28 f0       	brcs	.+10     	; 0x235a <__gtsf2+0x56>
    2350:	c7 01       	movw	r24, r14
    2352:	b8 01       	movw	r22, r16
    2354:	0e 94 58 15 	call	0x2ab0	; 0x2ab0 <__fpcmp_parts_f>
    2358:	01 c0       	rjmp	.+2      	; 0x235c <__gtsf2+0x58>
    235a:	8f ef       	ldi	r24, 0xFF	; 255
    235c:	68 96       	adiw	r28, 0x18	; 24
    235e:	e6 e0       	ldi	r30, 0x06	; 6
    2360:	0c 94 88 2d 	jmp	0x5b10	; 0x5b10 <__epilogue_restores__+0x18>

00002364 <__gesf2>:
    2364:	a8 e1       	ldi	r26, 0x18	; 24
    2366:	b0 e0       	ldi	r27, 0x00	; 0
    2368:	e8 eb       	ldi	r30, 0xB8	; 184
    236a:	f1 e1       	ldi	r31, 0x11	; 17
    236c:	0c 94 6c 2d 	jmp	0x5ad8	; 0x5ad8 <__prologue_saves__+0x18>
    2370:	69 83       	std	Y+1, r22	; 0x01
    2372:	7a 83       	std	Y+2, r23	; 0x02
    2374:	8b 83       	std	Y+3, r24	; 0x03
    2376:	9c 83       	std	Y+4, r25	; 0x04
    2378:	2d 83       	std	Y+5, r18	; 0x05
    237a:	3e 83       	std	Y+6, r19	; 0x06
    237c:	4f 83       	std	Y+7, r20	; 0x07
    237e:	58 87       	std	Y+8, r21	; 0x08
    2380:	89 e0       	ldi	r24, 0x09	; 9
    2382:	e8 2e       	mov	r14, r24
    2384:	f1 2c       	mov	r15, r1
    2386:	ec 0e       	add	r14, r28
    2388:	fd 1e       	adc	r15, r29
    238a:	ce 01       	movw	r24, r28
    238c:	01 96       	adiw	r24, 0x01	; 1
    238e:	b7 01       	movw	r22, r14
    2390:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <__unpack_f>
    2394:	8e 01       	movw	r16, r28
    2396:	0f 5e       	subi	r16, 0xEF	; 239
    2398:	1f 4f       	sbci	r17, 0xFF	; 255
    239a:	ce 01       	movw	r24, r28
    239c:	05 96       	adiw	r24, 0x05	; 5
    239e:	b8 01       	movw	r22, r16
    23a0:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <__unpack_f>
    23a4:	89 85       	ldd	r24, Y+9	; 0x09
    23a6:	82 30       	cpi	r24, 0x02	; 2
    23a8:	40 f0       	brcs	.+16     	; 0x23ba <__gesf2+0x56>
    23aa:	89 89       	ldd	r24, Y+17	; 0x11
    23ac:	82 30       	cpi	r24, 0x02	; 2
    23ae:	28 f0       	brcs	.+10     	; 0x23ba <__gesf2+0x56>
    23b0:	c7 01       	movw	r24, r14
    23b2:	b8 01       	movw	r22, r16
    23b4:	0e 94 58 15 	call	0x2ab0	; 0x2ab0 <__fpcmp_parts_f>
    23b8:	01 c0       	rjmp	.+2      	; 0x23bc <__gesf2+0x58>
    23ba:	8f ef       	ldi	r24, 0xFF	; 255
    23bc:	68 96       	adiw	r28, 0x18	; 24
    23be:	e6 e0       	ldi	r30, 0x06	; 6
    23c0:	0c 94 88 2d 	jmp	0x5b10	; 0x5b10 <__epilogue_restores__+0x18>

000023c4 <__ltsf2>:
    23c4:	a8 e1       	ldi	r26, 0x18	; 24
    23c6:	b0 e0       	ldi	r27, 0x00	; 0
    23c8:	e8 ee       	ldi	r30, 0xE8	; 232
    23ca:	f1 e1       	ldi	r31, 0x11	; 17
    23cc:	0c 94 6c 2d 	jmp	0x5ad8	; 0x5ad8 <__prologue_saves__+0x18>
    23d0:	69 83       	std	Y+1, r22	; 0x01
    23d2:	7a 83       	std	Y+2, r23	; 0x02
    23d4:	8b 83       	std	Y+3, r24	; 0x03
    23d6:	9c 83       	std	Y+4, r25	; 0x04
    23d8:	2d 83       	std	Y+5, r18	; 0x05
    23da:	3e 83       	std	Y+6, r19	; 0x06
    23dc:	4f 83       	std	Y+7, r20	; 0x07
    23de:	58 87       	std	Y+8, r21	; 0x08
    23e0:	89 e0       	ldi	r24, 0x09	; 9
    23e2:	e8 2e       	mov	r14, r24
    23e4:	f1 2c       	mov	r15, r1
    23e6:	ec 0e       	add	r14, r28
    23e8:	fd 1e       	adc	r15, r29
    23ea:	ce 01       	movw	r24, r28
    23ec:	01 96       	adiw	r24, 0x01	; 1
    23ee:	b7 01       	movw	r22, r14
    23f0:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <__unpack_f>
    23f4:	8e 01       	movw	r16, r28
    23f6:	0f 5e       	subi	r16, 0xEF	; 239
    23f8:	1f 4f       	sbci	r17, 0xFF	; 255
    23fa:	ce 01       	movw	r24, r28
    23fc:	05 96       	adiw	r24, 0x05	; 5
    23fe:	b8 01       	movw	r22, r16
    2400:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <__unpack_f>
    2404:	89 85       	ldd	r24, Y+9	; 0x09
    2406:	82 30       	cpi	r24, 0x02	; 2
    2408:	40 f0       	brcs	.+16     	; 0x241a <__ltsf2+0x56>
    240a:	89 89       	ldd	r24, Y+17	; 0x11
    240c:	82 30       	cpi	r24, 0x02	; 2
    240e:	28 f0       	brcs	.+10     	; 0x241a <__ltsf2+0x56>
    2410:	c7 01       	movw	r24, r14
    2412:	b8 01       	movw	r22, r16
    2414:	0e 94 58 15 	call	0x2ab0	; 0x2ab0 <__fpcmp_parts_f>
    2418:	01 c0       	rjmp	.+2      	; 0x241c <__ltsf2+0x58>
    241a:	81 e0       	ldi	r24, 0x01	; 1
    241c:	68 96       	adiw	r28, 0x18	; 24
    241e:	e6 e0       	ldi	r30, 0x06	; 6
    2420:	0c 94 88 2d 	jmp	0x5b10	; 0x5b10 <__epilogue_restores__+0x18>

00002424 <__floatsisf>:
    2424:	a8 e0       	ldi	r26, 0x08	; 8
    2426:	b0 e0       	ldi	r27, 0x00	; 0
    2428:	e8 e1       	ldi	r30, 0x18	; 24
    242a:	f2 e1       	ldi	r31, 0x12	; 18
    242c:	0c 94 69 2d 	jmp	0x5ad2	; 0x5ad2 <__prologue_saves__+0x12>
    2430:	9b 01       	movw	r18, r22
    2432:	ac 01       	movw	r20, r24
    2434:	83 e0       	ldi	r24, 0x03	; 3
    2436:	89 83       	std	Y+1, r24	; 0x01
    2438:	da 01       	movw	r26, r20
    243a:	c9 01       	movw	r24, r18
    243c:	88 27       	eor	r24, r24
    243e:	b7 fd       	sbrc	r27, 7
    2440:	83 95       	inc	r24
    2442:	99 27       	eor	r25, r25
    2444:	aa 27       	eor	r26, r26
    2446:	bb 27       	eor	r27, r27
    2448:	b8 2e       	mov	r11, r24
    244a:	21 15       	cp	r18, r1
    244c:	31 05       	cpc	r19, r1
    244e:	41 05       	cpc	r20, r1
    2450:	51 05       	cpc	r21, r1
    2452:	19 f4       	brne	.+6      	; 0x245a <__floatsisf+0x36>
    2454:	82 e0       	ldi	r24, 0x02	; 2
    2456:	89 83       	std	Y+1, r24	; 0x01
    2458:	3a c0       	rjmp	.+116    	; 0x24ce <__floatsisf+0xaa>
    245a:	88 23       	and	r24, r24
    245c:	a9 f0       	breq	.+42     	; 0x2488 <__floatsisf+0x64>
    245e:	20 30       	cpi	r18, 0x00	; 0
    2460:	80 e0       	ldi	r24, 0x00	; 0
    2462:	38 07       	cpc	r19, r24
    2464:	80 e0       	ldi	r24, 0x00	; 0
    2466:	48 07       	cpc	r20, r24
    2468:	80 e8       	ldi	r24, 0x80	; 128
    246a:	58 07       	cpc	r21, r24
    246c:	29 f4       	brne	.+10     	; 0x2478 <__floatsisf+0x54>
    246e:	60 e0       	ldi	r22, 0x00	; 0
    2470:	70 e0       	ldi	r23, 0x00	; 0
    2472:	80 e0       	ldi	r24, 0x00	; 0
    2474:	9f ec       	ldi	r25, 0xCF	; 207
    2476:	30 c0       	rjmp	.+96     	; 0x24d8 <__floatsisf+0xb4>
    2478:	ee 24       	eor	r14, r14
    247a:	ff 24       	eor	r15, r15
    247c:	87 01       	movw	r16, r14
    247e:	e2 1a       	sub	r14, r18
    2480:	f3 0a       	sbc	r15, r19
    2482:	04 0b       	sbc	r16, r20
    2484:	15 0b       	sbc	r17, r21
    2486:	02 c0       	rjmp	.+4      	; 0x248c <__floatsisf+0x68>
    2488:	79 01       	movw	r14, r18
    248a:	8a 01       	movw	r16, r20
    248c:	8e e1       	ldi	r24, 0x1E	; 30
    248e:	c8 2e       	mov	r12, r24
    2490:	d1 2c       	mov	r13, r1
    2492:	dc 82       	std	Y+4, r13	; 0x04
    2494:	cb 82       	std	Y+3, r12	; 0x03
    2496:	ed 82       	std	Y+5, r14	; 0x05
    2498:	fe 82       	std	Y+6, r15	; 0x06
    249a:	0f 83       	std	Y+7, r16	; 0x07
    249c:	18 87       	std	Y+8, r17	; 0x08
    249e:	c8 01       	movw	r24, r16
    24a0:	b7 01       	movw	r22, r14
    24a2:	0e 94 bc 13 	call	0x2778	; 0x2778 <__clzsi2>
    24a6:	01 97       	sbiw	r24, 0x01	; 1
    24a8:	18 16       	cp	r1, r24
    24aa:	19 06       	cpc	r1, r25
    24ac:	84 f4       	brge	.+32     	; 0x24ce <__floatsisf+0xaa>
    24ae:	08 2e       	mov	r0, r24
    24b0:	04 c0       	rjmp	.+8      	; 0x24ba <__floatsisf+0x96>
    24b2:	ee 0c       	add	r14, r14
    24b4:	ff 1c       	adc	r15, r15
    24b6:	00 1f       	adc	r16, r16
    24b8:	11 1f       	adc	r17, r17
    24ba:	0a 94       	dec	r0
    24bc:	d2 f7       	brpl	.-12     	; 0x24b2 <__floatsisf+0x8e>
    24be:	ed 82       	std	Y+5, r14	; 0x05
    24c0:	fe 82       	std	Y+6, r15	; 0x06
    24c2:	0f 83       	std	Y+7, r16	; 0x07
    24c4:	18 87       	std	Y+8, r17	; 0x08
    24c6:	c8 1a       	sub	r12, r24
    24c8:	d9 0a       	sbc	r13, r25
    24ca:	dc 82       	std	Y+4, r13	; 0x04
    24cc:	cb 82       	std	Y+3, r12	; 0x03
    24ce:	ba 82       	std	Y+2, r11	; 0x02
    24d0:	ce 01       	movw	r24, r28
    24d2:	01 96       	adiw	r24, 0x01	; 1
    24d4:	0e 94 0b 14 	call	0x2816	; 0x2816 <__pack_f>
    24d8:	28 96       	adiw	r28, 0x08	; 8
    24da:	e9 e0       	ldi	r30, 0x09	; 9
    24dc:	0c 94 85 2d 	jmp	0x5b0a	; 0x5b0a <__epilogue_restores__+0x12>

000024e0 <__fixsfsi>:
    24e0:	ac e0       	ldi	r26, 0x0C	; 12
    24e2:	b0 e0       	ldi	r27, 0x00	; 0
    24e4:	e6 e7       	ldi	r30, 0x76	; 118
    24e6:	f2 e1       	ldi	r31, 0x12	; 18
    24e8:	0c 94 70 2d 	jmp	0x5ae0	; 0x5ae0 <__prologue_saves__+0x20>
    24ec:	69 83       	std	Y+1, r22	; 0x01
    24ee:	7a 83       	std	Y+2, r23	; 0x02
    24f0:	8b 83       	std	Y+3, r24	; 0x03
    24f2:	9c 83       	std	Y+4, r25	; 0x04
    24f4:	ce 01       	movw	r24, r28
    24f6:	01 96       	adiw	r24, 0x01	; 1
    24f8:	be 01       	movw	r22, r28
    24fa:	6b 5f       	subi	r22, 0xFB	; 251
    24fc:	7f 4f       	sbci	r23, 0xFF	; 255
    24fe:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <__unpack_f>
    2502:	8d 81       	ldd	r24, Y+5	; 0x05
    2504:	82 30       	cpi	r24, 0x02	; 2
    2506:	61 f1       	breq	.+88     	; 0x2560 <__fixsfsi+0x80>
    2508:	82 30       	cpi	r24, 0x02	; 2
    250a:	50 f1       	brcs	.+84     	; 0x2560 <__fixsfsi+0x80>
    250c:	84 30       	cpi	r24, 0x04	; 4
    250e:	21 f4       	brne	.+8      	; 0x2518 <__fixsfsi+0x38>
    2510:	8e 81       	ldd	r24, Y+6	; 0x06
    2512:	88 23       	and	r24, r24
    2514:	51 f1       	breq	.+84     	; 0x256a <__fixsfsi+0x8a>
    2516:	2e c0       	rjmp	.+92     	; 0x2574 <__fixsfsi+0x94>
    2518:	2f 81       	ldd	r18, Y+7	; 0x07
    251a:	38 85       	ldd	r19, Y+8	; 0x08
    251c:	37 fd       	sbrc	r19, 7
    251e:	20 c0       	rjmp	.+64     	; 0x2560 <__fixsfsi+0x80>
    2520:	6e 81       	ldd	r22, Y+6	; 0x06
    2522:	2f 31       	cpi	r18, 0x1F	; 31
    2524:	31 05       	cpc	r19, r1
    2526:	1c f0       	brlt	.+6      	; 0x252e <__fixsfsi+0x4e>
    2528:	66 23       	and	r22, r22
    252a:	f9 f0       	breq	.+62     	; 0x256a <__fixsfsi+0x8a>
    252c:	23 c0       	rjmp	.+70     	; 0x2574 <__fixsfsi+0x94>
    252e:	8e e1       	ldi	r24, 0x1E	; 30
    2530:	90 e0       	ldi	r25, 0x00	; 0
    2532:	82 1b       	sub	r24, r18
    2534:	93 0b       	sbc	r25, r19
    2536:	29 85       	ldd	r18, Y+9	; 0x09
    2538:	3a 85       	ldd	r19, Y+10	; 0x0a
    253a:	4b 85       	ldd	r20, Y+11	; 0x0b
    253c:	5c 85       	ldd	r21, Y+12	; 0x0c
    253e:	04 c0       	rjmp	.+8      	; 0x2548 <__fixsfsi+0x68>
    2540:	56 95       	lsr	r21
    2542:	47 95       	ror	r20
    2544:	37 95       	ror	r19
    2546:	27 95       	ror	r18
    2548:	8a 95       	dec	r24
    254a:	d2 f7       	brpl	.-12     	; 0x2540 <__fixsfsi+0x60>
    254c:	66 23       	and	r22, r22
    254e:	b1 f0       	breq	.+44     	; 0x257c <__fixsfsi+0x9c>
    2550:	50 95       	com	r21
    2552:	40 95       	com	r20
    2554:	30 95       	com	r19
    2556:	21 95       	neg	r18
    2558:	3f 4f       	sbci	r19, 0xFF	; 255
    255a:	4f 4f       	sbci	r20, 0xFF	; 255
    255c:	5f 4f       	sbci	r21, 0xFF	; 255
    255e:	0e c0       	rjmp	.+28     	; 0x257c <__fixsfsi+0x9c>
    2560:	20 e0       	ldi	r18, 0x00	; 0
    2562:	30 e0       	ldi	r19, 0x00	; 0
    2564:	40 e0       	ldi	r20, 0x00	; 0
    2566:	50 e0       	ldi	r21, 0x00	; 0
    2568:	09 c0       	rjmp	.+18     	; 0x257c <__fixsfsi+0x9c>
    256a:	2f ef       	ldi	r18, 0xFF	; 255
    256c:	3f ef       	ldi	r19, 0xFF	; 255
    256e:	4f ef       	ldi	r20, 0xFF	; 255
    2570:	5f e7       	ldi	r21, 0x7F	; 127
    2572:	04 c0       	rjmp	.+8      	; 0x257c <__fixsfsi+0x9c>
    2574:	20 e0       	ldi	r18, 0x00	; 0
    2576:	30 e0       	ldi	r19, 0x00	; 0
    2578:	40 e0       	ldi	r20, 0x00	; 0
    257a:	50 e8       	ldi	r21, 0x80	; 128
    257c:	b9 01       	movw	r22, r18
    257e:	ca 01       	movw	r24, r20
    2580:	2c 96       	adiw	r28, 0x0c	; 12
    2582:	e2 e0       	ldi	r30, 0x02	; 2
    2584:	0c 94 8c 2d 	jmp	0x5b18	; 0x5b18 <__epilogue_restores__+0x20>

00002588 <__floatunsisf>:
    2588:	a8 e0       	ldi	r26, 0x08	; 8
    258a:	b0 e0       	ldi	r27, 0x00	; 0
    258c:	ea ec       	ldi	r30, 0xCA	; 202
    258e:	f2 e1       	ldi	r31, 0x12	; 18
    2590:	0c 94 68 2d 	jmp	0x5ad0	; 0x5ad0 <__prologue_saves__+0x10>
    2594:	7b 01       	movw	r14, r22
    2596:	8c 01       	movw	r16, r24
    2598:	61 15       	cp	r22, r1
    259a:	71 05       	cpc	r23, r1
    259c:	81 05       	cpc	r24, r1
    259e:	91 05       	cpc	r25, r1
    25a0:	19 f4       	brne	.+6      	; 0x25a8 <__floatunsisf+0x20>
    25a2:	82 e0       	ldi	r24, 0x02	; 2
    25a4:	89 83       	std	Y+1, r24	; 0x01
    25a6:	60 c0       	rjmp	.+192    	; 0x2668 <__floatunsisf+0xe0>
    25a8:	83 e0       	ldi	r24, 0x03	; 3
    25aa:	89 83       	std	Y+1, r24	; 0x01
    25ac:	8e e1       	ldi	r24, 0x1E	; 30
    25ae:	c8 2e       	mov	r12, r24
    25b0:	d1 2c       	mov	r13, r1
    25b2:	dc 82       	std	Y+4, r13	; 0x04
    25b4:	cb 82       	std	Y+3, r12	; 0x03
    25b6:	ed 82       	std	Y+5, r14	; 0x05
    25b8:	fe 82       	std	Y+6, r15	; 0x06
    25ba:	0f 83       	std	Y+7, r16	; 0x07
    25bc:	18 87       	std	Y+8, r17	; 0x08
    25be:	c8 01       	movw	r24, r16
    25c0:	b7 01       	movw	r22, r14
    25c2:	0e 94 bc 13 	call	0x2778	; 0x2778 <__clzsi2>
    25c6:	fc 01       	movw	r30, r24
    25c8:	31 97       	sbiw	r30, 0x01	; 1
    25ca:	f7 ff       	sbrs	r31, 7
    25cc:	3b c0       	rjmp	.+118    	; 0x2644 <__floatunsisf+0xbc>
    25ce:	22 27       	eor	r18, r18
    25d0:	33 27       	eor	r19, r19
    25d2:	2e 1b       	sub	r18, r30
    25d4:	3f 0b       	sbc	r19, r31
    25d6:	57 01       	movw	r10, r14
    25d8:	68 01       	movw	r12, r16
    25da:	02 2e       	mov	r0, r18
    25dc:	04 c0       	rjmp	.+8      	; 0x25e6 <__floatunsisf+0x5e>
    25de:	d6 94       	lsr	r13
    25e0:	c7 94       	ror	r12
    25e2:	b7 94       	ror	r11
    25e4:	a7 94       	ror	r10
    25e6:	0a 94       	dec	r0
    25e8:	d2 f7       	brpl	.-12     	; 0x25de <__floatunsisf+0x56>
    25ea:	40 e0       	ldi	r20, 0x00	; 0
    25ec:	50 e0       	ldi	r21, 0x00	; 0
    25ee:	60 e0       	ldi	r22, 0x00	; 0
    25f0:	70 e0       	ldi	r23, 0x00	; 0
    25f2:	81 e0       	ldi	r24, 0x01	; 1
    25f4:	90 e0       	ldi	r25, 0x00	; 0
    25f6:	a0 e0       	ldi	r26, 0x00	; 0
    25f8:	b0 e0       	ldi	r27, 0x00	; 0
    25fa:	04 c0       	rjmp	.+8      	; 0x2604 <__floatunsisf+0x7c>
    25fc:	88 0f       	add	r24, r24
    25fe:	99 1f       	adc	r25, r25
    2600:	aa 1f       	adc	r26, r26
    2602:	bb 1f       	adc	r27, r27
    2604:	2a 95       	dec	r18
    2606:	d2 f7       	brpl	.-12     	; 0x25fc <__floatunsisf+0x74>
    2608:	01 97       	sbiw	r24, 0x01	; 1
    260a:	a1 09       	sbc	r26, r1
    260c:	b1 09       	sbc	r27, r1
    260e:	8e 21       	and	r24, r14
    2610:	9f 21       	and	r25, r15
    2612:	a0 23       	and	r26, r16
    2614:	b1 23       	and	r27, r17
    2616:	00 97       	sbiw	r24, 0x00	; 0
    2618:	a1 05       	cpc	r26, r1
    261a:	b1 05       	cpc	r27, r1
    261c:	21 f0       	breq	.+8      	; 0x2626 <__floatunsisf+0x9e>
    261e:	41 e0       	ldi	r20, 0x01	; 1
    2620:	50 e0       	ldi	r21, 0x00	; 0
    2622:	60 e0       	ldi	r22, 0x00	; 0
    2624:	70 e0       	ldi	r23, 0x00	; 0
    2626:	4a 29       	or	r20, r10
    2628:	5b 29       	or	r21, r11
    262a:	6c 29       	or	r22, r12
    262c:	7d 29       	or	r23, r13
    262e:	4d 83       	std	Y+5, r20	; 0x05
    2630:	5e 83       	std	Y+6, r21	; 0x06
    2632:	6f 83       	std	Y+7, r22	; 0x07
    2634:	78 87       	std	Y+8, r23	; 0x08
    2636:	8e e1       	ldi	r24, 0x1E	; 30
    2638:	90 e0       	ldi	r25, 0x00	; 0
    263a:	8e 1b       	sub	r24, r30
    263c:	9f 0b       	sbc	r25, r31
    263e:	9c 83       	std	Y+4, r25	; 0x04
    2640:	8b 83       	std	Y+3, r24	; 0x03
    2642:	12 c0       	rjmp	.+36     	; 0x2668 <__floatunsisf+0xe0>
    2644:	30 97       	sbiw	r30, 0x00	; 0
    2646:	81 f0       	breq	.+32     	; 0x2668 <__floatunsisf+0xe0>
    2648:	0e 2e       	mov	r0, r30
    264a:	04 c0       	rjmp	.+8      	; 0x2654 <__floatunsisf+0xcc>
    264c:	ee 0c       	add	r14, r14
    264e:	ff 1c       	adc	r15, r15
    2650:	00 1f       	adc	r16, r16
    2652:	11 1f       	adc	r17, r17
    2654:	0a 94       	dec	r0
    2656:	d2 f7       	brpl	.-12     	; 0x264c <__floatunsisf+0xc4>
    2658:	ed 82       	std	Y+5, r14	; 0x05
    265a:	fe 82       	std	Y+6, r15	; 0x06
    265c:	0f 83       	std	Y+7, r16	; 0x07
    265e:	18 87       	std	Y+8, r17	; 0x08
    2660:	ce 1a       	sub	r12, r30
    2662:	df 0a       	sbc	r13, r31
    2664:	dc 82       	std	Y+4, r13	; 0x04
    2666:	cb 82       	std	Y+3, r12	; 0x03
    2668:	1a 82       	std	Y+2, r1	; 0x02
    266a:	ce 01       	movw	r24, r28
    266c:	01 96       	adiw	r24, 0x01	; 1
    266e:	0e 94 0b 14 	call	0x2816	; 0x2816 <__pack_f>
    2672:	28 96       	adiw	r28, 0x08	; 8
    2674:	ea e0       	ldi	r30, 0x0A	; 10
    2676:	0c 94 84 2d 	jmp	0x5b08	; 0x5b08 <__epilogue_restores__+0x10>

0000267a <__ashldi3>:
    267a:	ef 92       	push	r14
    267c:	ff 92       	push	r15
    267e:	0f 93       	push	r16
    2680:	df 93       	push	r29
    2682:	cf 93       	push	r28
    2684:	cd b7       	in	r28, 0x3d	; 61
    2686:	de b7       	in	r29, 0x3e	; 62
    2688:	60 97       	sbiw	r28, 0x10	; 16
    268a:	0f b6       	in	r0, 0x3f	; 63
    268c:	f8 94       	cli
    268e:	de bf       	out	0x3e, r29	; 62
    2690:	0f be       	out	0x3f, r0	; 63
    2692:	cd bf       	out	0x3d, r28	; 61
    2694:	a8 2f       	mov	r26, r24
    2696:	00 23       	and	r16, r16
    2698:	09 f4       	brne	.+2      	; 0x269c <__ashldi3+0x22>
    269a:	61 c0       	rjmp	.+194    	; 0x275e <__ashldi3+0xe4>
    269c:	7e 01       	movw	r14, r28
    269e:	08 94       	sec
    26a0:	e1 1c       	adc	r14, r1
    26a2:	f1 1c       	adc	r15, r1
    26a4:	88 e0       	ldi	r24, 0x08	; 8
    26a6:	f7 01       	movw	r30, r14
    26a8:	11 92       	st	Z+, r1
    26aa:	8a 95       	dec	r24
    26ac:	e9 f7       	brne	.-6      	; 0x26a8 <__ashldi3+0x2e>
    26ae:	29 83       	std	Y+1, r18	; 0x01
    26b0:	3a 83       	std	Y+2, r19	; 0x02
    26b2:	4b 83       	std	Y+3, r20	; 0x03
    26b4:	5c 83       	std	Y+4, r21	; 0x04
    26b6:	6d 83       	std	Y+5, r22	; 0x05
    26b8:	7e 83       	std	Y+6, r23	; 0x06
    26ba:	af 83       	std	Y+7, r26	; 0x07
    26bc:	98 87       	std	Y+8, r25	; 0x08
    26be:	80 e2       	ldi	r24, 0x20	; 32
    26c0:	80 1b       	sub	r24, r16
    26c2:	e8 2f       	mov	r30, r24
    26c4:	ff 27       	eor	r31, r31
    26c6:	e7 fd       	sbrc	r30, 7
    26c8:	f0 95       	com	r31
    26ca:	49 81       	ldd	r20, Y+1	; 0x01
    26cc:	5a 81       	ldd	r21, Y+2	; 0x02
    26ce:	6b 81       	ldd	r22, Y+3	; 0x03
    26d0:	7c 81       	ldd	r23, Y+4	; 0x04
    26d2:	18 16       	cp	r1, r24
    26d4:	84 f0       	brlt	.+32     	; 0x26f6 <__ashldi3+0x7c>
    26d6:	19 86       	std	Y+9, r1	; 0x09
    26d8:	1a 86       	std	Y+10, r1	; 0x0a
    26da:	1b 86       	std	Y+11, r1	; 0x0b
    26dc:	1c 86       	std	Y+12, r1	; 0x0c
    26de:	88 27       	eor	r24, r24
    26e0:	99 27       	eor	r25, r25
    26e2:	8e 1b       	sub	r24, r30
    26e4:	9f 0b       	sbc	r25, r31
    26e6:	04 c0       	rjmp	.+8      	; 0x26f0 <__ashldi3+0x76>
    26e8:	44 0f       	add	r20, r20
    26ea:	55 1f       	adc	r21, r21
    26ec:	66 1f       	adc	r22, r22
    26ee:	77 1f       	adc	r23, r23
    26f0:	8a 95       	dec	r24
    26f2:	d2 f7       	brpl	.-12     	; 0x26e8 <__ashldi3+0x6e>
    26f4:	28 c0       	rjmp	.+80     	; 0x2746 <__ashldi3+0xcc>
    26f6:	20 2f       	mov	r18, r16
    26f8:	33 27       	eor	r19, r19
    26fa:	27 fd       	sbrc	r18, 7
    26fc:	30 95       	com	r19
    26fe:	db 01       	movw	r26, r22
    2700:	ca 01       	movw	r24, r20
    2702:	02 2e       	mov	r0, r18
    2704:	04 c0       	rjmp	.+8      	; 0x270e <__ashldi3+0x94>
    2706:	88 0f       	add	r24, r24
    2708:	99 1f       	adc	r25, r25
    270a:	aa 1f       	adc	r26, r26
    270c:	bb 1f       	adc	r27, r27
    270e:	0a 94       	dec	r0
    2710:	d2 f7       	brpl	.-12     	; 0x2706 <__ashldi3+0x8c>
    2712:	89 87       	std	Y+9, r24	; 0x09
    2714:	9a 87       	std	Y+10, r25	; 0x0a
    2716:	ab 87       	std	Y+11, r26	; 0x0b
    2718:	bc 87       	std	Y+12, r27	; 0x0c
    271a:	04 c0       	rjmp	.+8      	; 0x2724 <__ashldi3+0xaa>
    271c:	76 95       	lsr	r23
    271e:	67 95       	ror	r22
    2720:	57 95       	ror	r21
    2722:	47 95       	ror	r20
    2724:	ea 95       	dec	r30
    2726:	d2 f7       	brpl	.-12     	; 0x271c <__ashldi3+0xa2>
    2728:	8d 81       	ldd	r24, Y+5	; 0x05
    272a:	9e 81       	ldd	r25, Y+6	; 0x06
    272c:	af 81       	ldd	r26, Y+7	; 0x07
    272e:	b8 85       	ldd	r27, Y+8	; 0x08
    2730:	04 c0       	rjmp	.+8      	; 0x273a <__ashldi3+0xc0>
    2732:	88 0f       	add	r24, r24
    2734:	99 1f       	adc	r25, r25
    2736:	aa 1f       	adc	r26, r26
    2738:	bb 1f       	adc	r27, r27
    273a:	2a 95       	dec	r18
    273c:	d2 f7       	brpl	.-12     	; 0x2732 <__ashldi3+0xb8>
    273e:	48 2b       	or	r20, r24
    2740:	59 2b       	or	r21, r25
    2742:	6a 2b       	or	r22, r26
    2744:	7b 2b       	or	r23, r27
    2746:	4d 87       	std	Y+13, r20	; 0x0d
    2748:	5e 87       	std	Y+14, r21	; 0x0e
    274a:	6f 87       	std	Y+15, r22	; 0x0f
    274c:	78 8b       	std	Y+16, r23	; 0x10
    274e:	29 85       	ldd	r18, Y+9	; 0x09
    2750:	3a 85       	ldd	r19, Y+10	; 0x0a
    2752:	4b 85       	ldd	r20, Y+11	; 0x0b
    2754:	5c 85       	ldd	r21, Y+12	; 0x0c
    2756:	6d 85       	ldd	r22, Y+13	; 0x0d
    2758:	7e 85       	ldd	r23, Y+14	; 0x0e
    275a:	af 85       	ldd	r26, Y+15	; 0x0f
    275c:	98 89       	ldd	r25, Y+16	; 0x10
    275e:	8a 2f       	mov	r24, r26
    2760:	60 96       	adiw	r28, 0x10	; 16
    2762:	0f b6       	in	r0, 0x3f	; 63
    2764:	f8 94       	cli
    2766:	de bf       	out	0x3e, r29	; 62
    2768:	0f be       	out	0x3f, r0	; 63
    276a:	cd bf       	out	0x3d, r28	; 61
    276c:	cf 91       	pop	r28
    276e:	df 91       	pop	r29
    2770:	0f 91       	pop	r16
    2772:	ff 90       	pop	r15
    2774:	ef 90       	pop	r14
    2776:	08 95       	ret

00002778 <__clzsi2>:
    2778:	ef 92       	push	r14
    277a:	ff 92       	push	r15
    277c:	0f 93       	push	r16
    277e:	1f 93       	push	r17
    2780:	7b 01       	movw	r14, r22
    2782:	8c 01       	movw	r16, r24
    2784:	80 e0       	ldi	r24, 0x00	; 0
    2786:	e8 16       	cp	r14, r24
    2788:	80 e0       	ldi	r24, 0x00	; 0
    278a:	f8 06       	cpc	r15, r24
    278c:	81 e0       	ldi	r24, 0x01	; 1
    278e:	08 07       	cpc	r16, r24
    2790:	80 e0       	ldi	r24, 0x00	; 0
    2792:	18 07       	cpc	r17, r24
    2794:	88 f4       	brcc	.+34     	; 0x27b8 <__clzsi2+0x40>
    2796:	8f ef       	ldi	r24, 0xFF	; 255
    2798:	e8 16       	cp	r14, r24
    279a:	f1 04       	cpc	r15, r1
    279c:	01 05       	cpc	r16, r1
    279e:	11 05       	cpc	r17, r1
    27a0:	31 f0       	breq	.+12     	; 0x27ae <__clzsi2+0x36>
    27a2:	28 f0       	brcs	.+10     	; 0x27ae <__clzsi2+0x36>
    27a4:	88 e0       	ldi	r24, 0x08	; 8
    27a6:	90 e0       	ldi	r25, 0x00	; 0
    27a8:	a0 e0       	ldi	r26, 0x00	; 0
    27aa:	b0 e0       	ldi	r27, 0x00	; 0
    27ac:	17 c0       	rjmp	.+46     	; 0x27dc <__clzsi2+0x64>
    27ae:	80 e0       	ldi	r24, 0x00	; 0
    27b0:	90 e0       	ldi	r25, 0x00	; 0
    27b2:	a0 e0       	ldi	r26, 0x00	; 0
    27b4:	b0 e0       	ldi	r27, 0x00	; 0
    27b6:	12 c0       	rjmp	.+36     	; 0x27dc <__clzsi2+0x64>
    27b8:	80 e0       	ldi	r24, 0x00	; 0
    27ba:	e8 16       	cp	r14, r24
    27bc:	80 e0       	ldi	r24, 0x00	; 0
    27be:	f8 06       	cpc	r15, r24
    27c0:	80 e0       	ldi	r24, 0x00	; 0
    27c2:	08 07       	cpc	r16, r24
    27c4:	81 e0       	ldi	r24, 0x01	; 1
    27c6:	18 07       	cpc	r17, r24
    27c8:	28 f0       	brcs	.+10     	; 0x27d4 <__clzsi2+0x5c>
    27ca:	88 e1       	ldi	r24, 0x18	; 24
    27cc:	90 e0       	ldi	r25, 0x00	; 0
    27ce:	a0 e0       	ldi	r26, 0x00	; 0
    27d0:	b0 e0       	ldi	r27, 0x00	; 0
    27d2:	04 c0       	rjmp	.+8      	; 0x27dc <__clzsi2+0x64>
    27d4:	80 e1       	ldi	r24, 0x10	; 16
    27d6:	90 e0       	ldi	r25, 0x00	; 0
    27d8:	a0 e0       	ldi	r26, 0x00	; 0
    27da:	b0 e0       	ldi	r27, 0x00	; 0
    27dc:	20 e2       	ldi	r18, 0x20	; 32
    27de:	30 e0       	ldi	r19, 0x00	; 0
    27e0:	40 e0       	ldi	r20, 0x00	; 0
    27e2:	50 e0       	ldi	r21, 0x00	; 0
    27e4:	28 1b       	sub	r18, r24
    27e6:	39 0b       	sbc	r19, r25
    27e8:	4a 0b       	sbc	r20, r26
    27ea:	5b 0b       	sbc	r21, r27
    27ec:	04 c0       	rjmp	.+8      	; 0x27f6 <__clzsi2+0x7e>
    27ee:	16 95       	lsr	r17
    27f0:	07 95       	ror	r16
    27f2:	f7 94       	ror	r15
    27f4:	e7 94       	ror	r14
    27f6:	8a 95       	dec	r24
    27f8:	d2 f7       	brpl	.-12     	; 0x27ee <__clzsi2+0x76>
    27fa:	f7 01       	movw	r30, r14
    27fc:	e5 57       	subi	r30, 0x75	; 117
    27fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2800:	80 81       	ld	r24, Z
    2802:	28 1b       	sub	r18, r24
    2804:	31 09       	sbc	r19, r1
    2806:	41 09       	sbc	r20, r1
    2808:	51 09       	sbc	r21, r1
    280a:	c9 01       	movw	r24, r18
    280c:	1f 91       	pop	r17
    280e:	0f 91       	pop	r16
    2810:	ff 90       	pop	r15
    2812:	ef 90       	pop	r14
    2814:	08 95       	ret

00002816 <__pack_f>:
    2816:	df 92       	push	r13
    2818:	ef 92       	push	r14
    281a:	ff 92       	push	r15
    281c:	0f 93       	push	r16
    281e:	1f 93       	push	r17
    2820:	fc 01       	movw	r30, r24
    2822:	e4 80       	ldd	r14, Z+4	; 0x04
    2824:	f5 80       	ldd	r15, Z+5	; 0x05
    2826:	06 81       	ldd	r16, Z+6	; 0x06
    2828:	17 81       	ldd	r17, Z+7	; 0x07
    282a:	d1 80       	ldd	r13, Z+1	; 0x01
    282c:	80 81       	ld	r24, Z
    282e:	82 30       	cpi	r24, 0x02	; 2
    2830:	48 f4       	brcc	.+18     	; 0x2844 <__pack_f+0x2e>
    2832:	80 e0       	ldi	r24, 0x00	; 0
    2834:	90 e0       	ldi	r25, 0x00	; 0
    2836:	a0 e1       	ldi	r26, 0x10	; 16
    2838:	b0 e0       	ldi	r27, 0x00	; 0
    283a:	e8 2a       	or	r14, r24
    283c:	f9 2a       	or	r15, r25
    283e:	0a 2b       	or	r16, r26
    2840:	1b 2b       	or	r17, r27
    2842:	a5 c0       	rjmp	.+330    	; 0x298e <__pack_f+0x178>
    2844:	84 30       	cpi	r24, 0x04	; 4
    2846:	09 f4       	brne	.+2      	; 0x284a <__pack_f+0x34>
    2848:	9f c0       	rjmp	.+318    	; 0x2988 <__pack_f+0x172>
    284a:	82 30       	cpi	r24, 0x02	; 2
    284c:	21 f4       	brne	.+8      	; 0x2856 <__pack_f+0x40>
    284e:	ee 24       	eor	r14, r14
    2850:	ff 24       	eor	r15, r15
    2852:	87 01       	movw	r16, r14
    2854:	05 c0       	rjmp	.+10     	; 0x2860 <__pack_f+0x4a>
    2856:	e1 14       	cp	r14, r1
    2858:	f1 04       	cpc	r15, r1
    285a:	01 05       	cpc	r16, r1
    285c:	11 05       	cpc	r17, r1
    285e:	19 f4       	brne	.+6      	; 0x2866 <__pack_f+0x50>
    2860:	e0 e0       	ldi	r30, 0x00	; 0
    2862:	f0 e0       	ldi	r31, 0x00	; 0
    2864:	96 c0       	rjmp	.+300    	; 0x2992 <__pack_f+0x17c>
    2866:	62 81       	ldd	r22, Z+2	; 0x02
    2868:	73 81       	ldd	r23, Z+3	; 0x03
    286a:	9f ef       	ldi	r25, 0xFF	; 255
    286c:	62 38       	cpi	r22, 0x82	; 130
    286e:	79 07       	cpc	r23, r25
    2870:	0c f0       	brlt	.+2      	; 0x2874 <__pack_f+0x5e>
    2872:	5b c0       	rjmp	.+182    	; 0x292a <__pack_f+0x114>
    2874:	22 e8       	ldi	r18, 0x82	; 130
    2876:	3f ef       	ldi	r19, 0xFF	; 255
    2878:	26 1b       	sub	r18, r22
    287a:	37 0b       	sbc	r19, r23
    287c:	2a 31       	cpi	r18, 0x1A	; 26
    287e:	31 05       	cpc	r19, r1
    2880:	2c f0       	brlt	.+10     	; 0x288c <__pack_f+0x76>
    2882:	20 e0       	ldi	r18, 0x00	; 0
    2884:	30 e0       	ldi	r19, 0x00	; 0
    2886:	40 e0       	ldi	r20, 0x00	; 0
    2888:	50 e0       	ldi	r21, 0x00	; 0
    288a:	2a c0       	rjmp	.+84     	; 0x28e0 <__pack_f+0xca>
    288c:	b8 01       	movw	r22, r16
    288e:	a7 01       	movw	r20, r14
    2890:	02 2e       	mov	r0, r18
    2892:	04 c0       	rjmp	.+8      	; 0x289c <__pack_f+0x86>
    2894:	76 95       	lsr	r23
    2896:	67 95       	ror	r22
    2898:	57 95       	ror	r21
    289a:	47 95       	ror	r20
    289c:	0a 94       	dec	r0
    289e:	d2 f7       	brpl	.-12     	; 0x2894 <__pack_f+0x7e>
    28a0:	81 e0       	ldi	r24, 0x01	; 1
    28a2:	90 e0       	ldi	r25, 0x00	; 0
    28a4:	a0 e0       	ldi	r26, 0x00	; 0
    28a6:	b0 e0       	ldi	r27, 0x00	; 0
    28a8:	04 c0       	rjmp	.+8      	; 0x28b2 <__pack_f+0x9c>
    28aa:	88 0f       	add	r24, r24
    28ac:	99 1f       	adc	r25, r25
    28ae:	aa 1f       	adc	r26, r26
    28b0:	bb 1f       	adc	r27, r27
    28b2:	2a 95       	dec	r18
    28b4:	d2 f7       	brpl	.-12     	; 0x28aa <__pack_f+0x94>
    28b6:	01 97       	sbiw	r24, 0x01	; 1
    28b8:	a1 09       	sbc	r26, r1
    28ba:	b1 09       	sbc	r27, r1
    28bc:	8e 21       	and	r24, r14
    28be:	9f 21       	and	r25, r15
    28c0:	a0 23       	and	r26, r16
    28c2:	b1 23       	and	r27, r17
    28c4:	00 97       	sbiw	r24, 0x00	; 0
    28c6:	a1 05       	cpc	r26, r1
    28c8:	b1 05       	cpc	r27, r1
    28ca:	21 f0       	breq	.+8      	; 0x28d4 <__pack_f+0xbe>
    28cc:	81 e0       	ldi	r24, 0x01	; 1
    28ce:	90 e0       	ldi	r25, 0x00	; 0
    28d0:	a0 e0       	ldi	r26, 0x00	; 0
    28d2:	b0 e0       	ldi	r27, 0x00	; 0
    28d4:	9a 01       	movw	r18, r20
    28d6:	ab 01       	movw	r20, r22
    28d8:	28 2b       	or	r18, r24
    28da:	39 2b       	or	r19, r25
    28dc:	4a 2b       	or	r20, r26
    28de:	5b 2b       	or	r21, r27
    28e0:	da 01       	movw	r26, r20
    28e2:	c9 01       	movw	r24, r18
    28e4:	8f 77       	andi	r24, 0x7F	; 127
    28e6:	90 70       	andi	r25, 0x00	; 0
    28e8:	a0 70       	andi	r26, 0x00	; 0
    28ea:	b0 70       	andi	r27, 0x00	; 0
    28ec:	80 34       	cpi	r24, 0x40	; 64
    28ee:	91 05       	cpc	r25, r1
    28f0:	a1 05       	cpc	r26, r1
    28f2:	b1 05       	cpc	r27, r1
    28f4:	39 f4       	brne	.+14     	; 0x2904 <__pack_f+0xee>
    28f6:	27 ff       	sbrs	r18, 7
    28f8:	09 c0       	rjmp	.+18     	; 0x290c <__pack_f+0xf6>
    28fa:	20 5c       	subi	r18, 0xC0	; 192
    28fc:	3f 4f       	sbci	r19, 0xFF	; 255
    28fe:	4f 4f       	sbci	r20, 0xFF	; 255
    2900:	5f 4f       	sbci	r21, 0xFF	; 255
    2902:	04 c0       	rjmp	.+8      	; 0x290c <__pack_f+0xf6>
    2904:	21 5c       	subi	r18, 0xC1	; 193
    2906:	3f 4f       	sbci	r19, 0xFF	; 255
    2908:	4f 4f       	sbci	r20, 0xFF	; 255
    290a:	5f 4f       	sbci	r21, 0xFF	; 255
    290c:	e0 e0       	ldi	r30, 0x00	; 0
    290e:	f0 e0       	ldi	r31, 0x00	; 0
    2910:	20 30       	cpi	r18, 0x00	; 0
    2912:	a0 e0       	ldi	r26, 0x00	; 0
    2914:	3a 07       	cpc	r19, r26
    2916:	a0 e0       	ldi	r26, 0x00	; 0
    2918:	4a 07       	cpc	r20, r26
    291a:	a0 e4       	ldi	r26, 0x40	; 64
    291c:	5a 07       	cpc	r21, r26
    291e:	10 f0       	brcs	.+4      	; 0x2924 <__pack_f+0x10e>
    2920:	e1 e0       	ldi	r30, 0x01	; 1
    2922:	f0 e0       	ldi	r31, 0x00	; 0
    2924:	79 01       	movw	r14, r18
    2926:	8a 01       	movw	r16, r20
    2928:	27 c0       	rjmp	.+78     	; 0x2978 <__pack_f+0x162>
    292a:	60 38       	cpi	r22, 0x80	; 128
    292c:	71 05       	cpc	r23, r1
    292e:	64 f5       	brge	.+88     	; 0x2988 <__pack_f+0x172>
    2930:	fb 01       	movw	r30, r22
    2932:	e1 58       	subi	r30, 0x81	; 129
    2934:	ff 4f       	sbci	r31, 0xFF	; 255
    2936:	d8 01       	movw	r26, r16
    2938:	c7 01       	movw	r24, r14
    293a:	8f 77       	andi	r24, 0x7F	; 127
    293c:	90 70       	andi	r25, 0x00	; 0
    293e:	a0 70       	andi	r26, 0x00	; 0
    2940:	b0 70       	andi	r27, 0x00	; 0
    2942:	80 34       	cpi	r24, 0x40	; 64
    2944:	91 05       	cpc	r25, r1
    2946:	a1 05       	cpc	r26, r1
    2948:	b1 05       	cpc	r27, r1
    294a:	39 f4       	brne	.+14     	; 0x295a <__pack_f+0x144>
    294c:	e7 fe       	sbrs	r14, 7
    294e:	0d c0       	rjmp	.+26     	; 0x296a <__pack_f+0x154>
    2950:	80 e4       	ldi	r24, 0x40	; 64
    2952:	90 e0       	ldi	r25, 0x00	; 0
    2954:	a0 e0       	ldi	r26, 0x00	; 0
    2956:	b0 e0       	ldi	r27, 0x00	; 0
    2958:	04 c0       	rjmp	.+8      	; 0x2962 <__pack_f+0x14c>
    295a:	8f e3       	ldi	r24, 0x3F	; 63
    295c:	90 e0       	ldi	r25, 0x00	; 0
    295e:	a0 e0       	ldi	r26, 0x00	; 0
    2960:	b0 e0       	ldi	r27, 0x00	; 0
    2962:	e8 0e       	add	r14, r24
    2964:	f9 1e       	adc	r15, r25
    2966:	0a 1f       	adc	r16, r26
    2968:	1b 1f       	adc	r17, r27
    296a:	17 ff       	sbrs	r17, 7
    296c:	05 c0       	rjmp	.+10     	; 0x2978 <__pack_f+0x162>
    296e:	16 95       	lsr	r17
    2970:	07 95       	ror	r16
    2972:	f7 94       	ror	r15
    2974:	e7 94       	ror	r14
    2976:	31 96       	adiw	r30, 0x01	; 1
    2978:	87 e0       	ldi	r24, 0x07	; 7
    297a:	16 95       	lsr	r17
    297c:	07 95       	ror	r16
    297e:	f7 94       	ror	r15
    2980:	e7 94       	ror	r14
    2982:	8a 95       	dec	r24
    2984:	d1 f7       	brne	.-12     	; 0x297a <__pack_f+0x164>
    2986:	05 c0       	rjmp	.+10     	; 0x2992 <__pack_f+0x17c>
    2988:	ee 24       	eor	r14, r14
    298a:	ff 24       	eor	r15, r15
    298c:	87 01       	movw	r16, r14
    298e:	ef ef       	ldi	r30, 0xFF	; 255
    2990:	f0 e0       	ldi	r31, 0x00	; 0
    2992:	6e 2f       	mov	r22, r30
    2994:	67 95       	ror	r22
    2996:	66 27       	eor	r22, r22
    2998:	67 95       	ror	r22
    299a:	90 2f       	mov	r25, r16
    299c:	9f 77       	andi	r25, 0x7F	; 127
    299e:	d7 94       	ror	r13
    29a0:	dd 24       	eor	r13, r13
    29a2:	d7 94       	ror	r13
    29a4:	8e 2f       	mov	r24, r30
    29a6:	86 95       	lsr	r24
    29a8:	49 2f       	mov	r20, r25
    29aa:	46 2b       	or	r20, r22
    29ac:	58 2f       	mov	r21, r24
    29ae:	5d 29       	or	r21, r13
    29b0:	b7 01       	movw	r22, r14
    29b2:	ca 01       	movw	r24, r20
    29b4:	1f 91       	pop	r17
    29b6:	0f 91       	pop	r16
    29b8:	ff 90       	pop	r15
    29ba:	ef 90       	pop	r14
    29bc:	df 90       	pop	r13
    29be:	08 95       	ret

000029c0 <__unpack_f>:
    29c0:	fc 01       	movw	r30, r24
    29c2:	db 01       	movw	r26, r22
    29c4:	40 81       	ld	r20, Z
    29c6:	51 81       	ldd	r21, Z+1	; 0x01
    29c8:	22 81       	ldd	r18, Z+2	; 0x02
    29ca:	62 2f       	mov	r22, r18
    29cc:	6f 77       	andi	r22, 0x7F	; 127
    29ce:	70 e0       	ldi	r23, 0x00	; 0
    29d0:	22 1f       	adc	r18, r18
    29d2:	22 27       	eor	r18, r18
    29d4:	22 1f       	adc	r18, r18
    29d6:	93 81       	ldd	r25, Z+3	; 0x03
    29d8:	89 2f       	mov	r24, r25
    29da:	88 0f       	add	r24, r24
    29dc:	82 2b       	or	r24, r18
    29de:	28 2f       	mov	r18, r24
    29e0:	30 e0       	ldi	r19, 0x00	; 0
    29e2:	99 1f       	adc	r25, r25
    29e4:	99 27       	eor	r25, r25
    29e6:	99 1f       	adc	r25, r25
    29e8:	11 96       	adiw	r26, 0x01	; 1
    29ea:	9c 93       	st	X, r25
    29ec:	11 97       	sbiw	r26, 0x01	; 1
    29ee:	21 15       	cp	r18, r1
    29f0:	31 05       	cpc	r19, r1
    29f2:	a9 f5       	brne	.+106    	; 0x2a5e <__unpack_f+0x9e>
    29f4:	41 15       	cp	r20, r1
    29f6:	51 05       	cpc	r21, r1
    29f8:	61 05       	cpc	r22, r1
    29fa:	71 05       	cpc	r23, r1
    29fc:	11 f4       	brne	.+4      	; 0x2a02 <__unpack_f+0x42>
    29fe:	82 e0       	ldi	r24, 0x02	; 2
    2a00:	37 c0       	rjmp	.+110    	; 0x2a70 <__unpack_f+0xb0>
    2a02:	82 e8       	ldi	r24, 0x82	; 130
    2a04:	9f ef       	ldi	r25, 0xFF	; 255
    2a06:	13 96       	adiw	r26, 0x03	; 3
    2a08:	9c 93       	st	X, r25
    2a0a:	8e 93       	st	-X, r24
    2a0c:	12 97       	sbiw	r26, 0x02	; 2
    2a0e:	9a 01       	movw	r18, r20
    2a10:	ab 01       	movw	r20, r22
    2a12:	67 e0       	ldi	r22, 0x07	; 7
    2a14:	22 0f       	add	r18, r18
    2a16:	33 1f       	adc	r19, r19
    2a18:	44 1f       	adc	r20, r20
    2a1a:	55 1f       	adc	r21, r21
    2a1c:	6a 95       	dec	r22
    2a1e:	d1 f7       	brne	.-12     	; 0x2a14 <__unpack_f+0x54>
    2a20:	83 e0       	ldi	r24, 0x03	; 3
    2a22:	8c 93       	st	X, r24
    2a24:	0d c0       	rjmp	.+26     	; 0x2a40 <__unpack_f+0x80>
    2a26:	22 0f       	add	r18, r18
    2a28:	33 1f       	adc	r19, r19
    2a2a:	44 1f       	adc	r20, r20
    2a2c:	55 1f       	adc	r21, r21
    2a2e:	12 96       	adiw	r26, 0x02	; 2
    2a30:	8d 91       	ld	r24, X+
    2a32:	9c 91       	ld	r25, X
    2a34:	13 97       	sbiw	r26, 0x03	; 3
    2a36:	01 97       	sbiw	r24, 0x01	; 1
    2a38:	13 96       	adiw	r26, 0x03	; 3
    2a3a:	9c 93       	st	X, r25
    2a3c:	8e 93       	st	-X, r24
    2a3e:	12 97       	sbiw	r26, 0x02	; 2
    2a40:	20 30       	cpi	r18, 0x00	; 0
    2a42:	80 e0       	ldi	r24, 0x00	; 0
    2a44:	38 07       	cpc	r19, r24
    2a46:	80 e0       	ldi	r24, 0x00	; 0
    2a48:	48 07       	cpc	r20, r24
    2a4a:	80 e4       	ldi	r24, 0x40	; 64
    2a4c:	58 07       	cpc	r21, r24
    2a4e:	58 f3       	brcs	.-42     	; 0x2a26 <__unpack_f+0x66>
    2a50:	14 96       	adiw	r26, 0x04	; 4
    2a52:	2d 93       	st	X+, r18
    2a54:	3d 93       	st	X+, r19
    2a56:	4d 93       	st	X+, r20
    2a58:	5c 93       	st	X, r21
    2a5a:	17 97       	sbiw	r26, 0x07	; 7
    2a5c:	08 95       	ret
    2a5e:	2f 3f       	cpi	r18, 0xFF	; 255
    2a60:	31 05       	cpc	r19, r1
    2a62:	79 f4       	brne	.+30     	; 0x2a82 <__unpack_f+0xc2>
    2a64:	41 15       	cp	r20, r1
    2a66:	51 05       	cpc	r21, r1
    2a68:	61 05       	cpc	r22, r1
    2a6a:	71 05       	cpc	r23, r1
    2a6c:	19 f4       	brne	.+6      	; 0x2a74 <__unpack_f+0xb4>
    2a6e:	84 e0       	ldi	r24, 0x04	; 4
    2a70:	8c 93       	st	X, r24
    2a72:	08 95       	ret
    2a74:	64 ff       	sbrs	r22, 4
    2a76:	03 c0       	rjmp	.+6      	; 0x2a7e <__unpack_f+0xbe>
    2a78:	81 e0       	ldi	r24, 0x01	; 1
    2a7a:	8c 93       	st	X, r24
    2a7c:	12 c0       	rjmp	.+36     	; 0x2aa2 <__unpack_f+0xe2>
    2a7e:	1c 92       	st	X, r1
    2a80:	10 c0       	rjmp	.+32     	; 0x2aa2 <__unpack_f+0xe2>
    2a82:	2f 57       	subi	r18, 0x7F	; 127
    2a84:	30 40       	sbci	r19, 0x00	; 0
    2a86:	13 96       	adiw	r26, 0x03	; 3
    2a88:	3c 93       	st	X, r19
    2a8a:	2e 93       	st	-X, r18
    2a8c:	12 97       	sbiw	r26, 0x02	; 2
    2a8e:	83 e0       	ldi	r24, 0x03	; 3
    2a90:	8c 93       	st	X, r24
    2a92:	87 e0       	ldi	r24, 0x07	; 7
    2a94:	44 0f       	add	r20, r20
    2a96:	55 1f       	adc	r21, r21
    2a98:	66 1f       	adc	r22, r22
    2a9a:	77 1f       	adc	r23, r23
    2a9c:	8a 95       	dec	r24
    2a9e:	d1 f7       	brne	.-12     	; 0x2a94 <__unpack_f+0xd4>
    2aa0:	70 64       	ori	r23, 0x40	; 64
    2aa2:	14 96       	adiw	r26, 0x04	; 4
    2aa4:	4d 93       	st	X+, r20
    2aa6:	5d 93       	st	X+, r21
    2aa8:	6d 93       	st	X+, r22
    2aaa:	7c 93       	st	X, r23
    2aac:	17 97       	sbiw	r26, 0x07	; 7
    2aae:	08 95       	ret

00002ab0 <__fpcmp_parts_f>:
    2ab0:	1f 93       	push	r17
    2ab2:	dc 01       	movw	r26, r24
    2ab4:	fb 01       	movw	r30, r22
    2ab6:	9c 91       	ld	r25, X
    2ab8:	92 30       	cpi	r25, 0x02	; 2
    2aba:	08 f4       	brcc	.+2      	; 0x2abe <__fpcmp_parts_f+0xe>
    2abc:	47 c0       	rjmp	.+142    	; 0x2b4c <__fpcmp_parts_f+0x9c>
    2abe:	80 81       	ld	r24, Z
    2ac0:	82 30       	cpi	r24, 0x02	; 2
    2ac2:	08 f4       	brcc	.+2      	; 0x2ac6 <__fpcmp_parts_f+0x16>
    2ac4:	43 c0       	rjmp	.+134    	; 0x2b4c <__fpcmp_parts_f+0x9c>
    2ac6:	94 30       	cpi	r25, 0x04	; 4
    2ac8:	51 f4       	brne	.+20     	; 0x2ade <__fpcmp_parts_f+0x2e>
    2aca:	11 96       	adiw	r26, 0x01	; 1
    2acc:	1c 91       	ld	r17, X
    2ace:	84 30       	cpi	r24, 0x04	; 4
    2ad0:	99 f5       	brne	.+102    	; 0x2b38 <__fpcmp_parts_f+0x88>
    2ad2:	81 81       	ldd	r24, Z+1	; 0x01
    2ad4:	68 2f       	mov	r22, r24
    2ad6:	70 e0       	ldi	r23, 0x00	; 0
    2ad8:	61 1b       	sub	r22, r17
    2ada:	71 09       	sbc	r23, r1
    2adc:	3f c0       	rjmp	.+126    	; 0x2b5c <__fpcmp_parts_f+0xac>
    2ade:	84 30       	cpi	r24, 0x04	; 4
    2ae0:	21 f0       	breq	.+8      	; 0x2aea <__fpcmp_parts_f+0x3a>
    2ae2:	92 30       	cpi	r25, 0x02	; 2
    2ae4:	31 f4       	brne	.+12     	; 0x2af2 <__fpcmp_parts_f+0x42>
    2ae6:	82 30       	cpi	r24, 0x02	; 2
    2ae8:	b9 f1       	breq	.+110    	; 0x2b58 <__fpcmp_parts_f+0xa8>
    2aea:	81 81       	ldd	r24, Z+1	; 0x01
    2aec:	88 23       	and	r24, r24
    2aee:	89 f1       	breq	.+98     	; 0x2b52 <__fpcmp_parts_f+0xa2>
    2af0:	2d c0       	rjmp	.+90     	; 0x2b4c <__fpcmp_parts_f+0x9c>
    2af2:	11 96       	adiw	r26, 0x01	; 1
    2af4:	1c 91       	ld	r17, X
    2af6:	11 97       	sbiw	r26, 0x01	; 1
    2af8:	82 30       	cpi	r24, 0x02	; 2
    2afa:	f1 f0       	breq	.+60     	; 0x2b38 <__fpcmp_parts_f+0x88>
    2afc:	81 81       	ldd	r24, Z+1	; 0x01
    2afe:	18 17       	cp	r17, r24
    2b00:	d9 f4       	brne	.+54     	; 0x2b38 <__fpcmp_parts_f+0x88>
    2b02:	12 96       	adiw	r26, 0x02	; 2
    2b04:	2d 91       	ld	r18, X+
    2b06:	3c 91       	ld	r19, X
    2b08:	13 97       	sbiw	r26, 0x03	; 3
    2b0a:	82 81       	ldd	r24, Z+2	; 0x02
    2b0c:	93 81       	ldd	r25, Z+3	; 0x03
    2b0e:	82 17       	cp	r24, r18
    2b10:	93 07       	cpc	r25, r19
    2b12:	94 f0       	brlt	.+36     	; 0x2b38 <__fpcmp_parts_f+0x88>
    2b14:	28 17       	cp	r18, r24
    2b16:	39 07       	cpc	r19, r25
    2b18:	bc f0       	brlt	.+46     	; 0x2b48 <__fpcmp_parts_f+0x98>
    2b1a:	14 96       	adiw	r26, 0x04	; 4
    2b1c:	8d 91       	ld	r24, X+
    2b1e:	9d 91       	ld	r25, X+
    2b20:	0d 90       	ld	r0, X+
    2b22:	bc 91       	ld	r27, X
    2b24:	a0 2d       	mov	r26, r0
    2b26:	24 81       	ldd	r18, Z+4	; 0x04
    2b28:	35 81       	ldd	r19, Z+5	; 0x05
    2b2a:	46 81       	ldd	r20, Z+6	; 0x06
    2b2c:	57 81       	ldd	r21, Z+7	; 0x07
    2b2e:	28 17       	cp	r18, r24
    2b30:	39 07       	cpc	r19, r25
    2b32:	4a 07       	cpc	r20, r26
    2b34:	5b 07       	cpc	r21, r27
    2b36:	18 f4       	brcc	.+6      	; 0x2b3e <__fpcmp_parts_f+0x8e>
    2b38:	11 23       	and	r17, r17
    2b3a:	41 f0       	breq	.+16     	; 0x2b4c <__fpcmp_parts_f+0x9c>
    2b3c:	0a c0       	rjmp	.+20     	; 0x2b52 <__fpcmp_parts_f+0xa2>
    2b3e:	82 17       	cp	r24, r18
    2b40:	93 07       	cpc	r25, r19
    2b42:	a4 07       	cpc	r26, r20
    2b44:	b5 07       	cpc	r27, r21
    2b46:	40 f4       	brcc	.+16     	; 0x2b58 <__fpcmp_parts_f+0xa8>
    2b48:	11 23       	and	r17, r17
    2b4a:	19 f0       	breq	.+6      	; 0x2b52 <__fpcmp_parts_f+0xa2>
    2b4c:	61 e0       	ldi	r22, 0x01	; 1
    2b4e:	70 e0       	ldi	r23, 0x00	; 0
    2b50:	05 c0       	rjmp	.+10     	; 0x2b5c <__fpcmp_parts_f+0xac>
    2b52:	6f ef       	ldi	r22, 0xFF	; 255
    2b54:	7f ef       	ldi	r23, 0xFF	; 255
    2b56:	02 c0       	rjmp	.+4      	; 0x2b5c <__fpcmp_parts_f+0xac>
    2b58:	60 e0       	ldi	r22, 0x00	; 0
    2b5a:	70 e0       	ldi	r23, 0x00	; 0
    2b5c:	cb 01       	movw	r24, r22
    2b5e:	1f 91       	pop	r17
    2b60:	08 95       	ret

00002b62 <ADC_voidInit>:

#include "ADC_Interface.h"
#include "ADC_Private.h"
#include "ADC_Config.h"

void ADC_voidInit(void){
    2b62:	df 93       	push	r29
    2b64:	cf 93       	push	r28
    2b66:	cd b7       	in	r28, 0x3d	; 61
    2b68:	de b7       	in	r29, 0x3e	; 62
 	 /*select vref : AVCC at reference voltage*/
	SET_BIT(ADMUX, ADMUX_REFS0);
    2b6a:	a7 e2       	ldi	r26, 0x27	; 39
    2b6c:	b0 e0       	ldi	r27, 0x00	; 0
    2b6e:	e7 e2       	ldi	r30, 0x27	; 39
    2b70:	f0 e0       	ldi	r31, 0x00	; 0
    2b72:	80 81       	ld	r24, Z
    2b74:	80 64       	ori	r24, 0x40	; 64
    2b76:	8c 93       	st	X, r24
	CLR_BIT(ADMUX, ADMUX_REFS1);
    2b78:	a7 e2       	ldi	r26, 0x27	; 39
    2b7a:	b0 e0       	ldi	r27, 0x00	; 0
    2b7c:	e7 e2       	ldi	r30, 0x27	; 39
    2b7e:	f0 e0       	ldi	r31, 0x00	; 0
    2b80:	80 81       	ld	r24, Z
    2b82:	8f 77       	andi	r24, 0x7F	; 127
    2b84:	8c 93       	st	X, r24

	 /*Activate left adjust result*/
	//CLR_BIT(ADMUX, ADMUX_ADLAR);

	/* no auto trigger */
	CLR_BIT(ADCSRA, ADCSRA_ADATE);
    2b86:	a6 e2       	ldi	r26, 0x26	; 38
    2b88:	b0 e0       	ldi	r27, 0x00	; 0
    2b8a:	e6 e2       	ldi	r30, 0x26	; 38
    2b8c:	f0 e0       	ldi	r31, 0x00	; 0
    2b8e:	80 81       	ld	r24, Z
    2b90:	8f 7d       	andi	r24, 0xDF	; 223
    2b92:	8c 93       	st	X, r24

	/* ADC Prescaler Select Bits*/
	SET_BIT(ADCSRA, ADCSRA_ADPS0);
    2b94:	a6 e2       	ldi	r26, 0x26	; 38
    2b96:	b0 e0       	ldi	r27, 0x00	; 0
    2b98:	e6 e2       	ldi	r30, 0x26	; 38
    2b9a:	f0 e0       	ldi	r31, 0x00	; 0
    2b9c:	80 81       	ld	r24, Z
    2b9e:	81 60       	ori	r24, 0x01	; 1
    2ba0:	8c 93       	st	X, r24
	SET_BIT(ADCSRA, ADCSRA_ADPS1);
    2ba2:	a6 e2       	ldi	r26, 0x26	; 38
    2ba4:	b0 e0       	ldi	r27, 0x00	; 0
    2ba6:	e6 e2       	ldi	r30, 0x26	; 38
    2ba8:	f0 e0       	ldi	r31, 0x00	; 0
    2baa:	80 81       	ld	r24, Z
    2bac:	82 60       	ori	r24, 0x02	; 2
    2bae:	8c 93       	st	X, r24
	SET_BIT(ADCSRA, ADCSRA_ADPS2);
    2bb0:	a6 e2       	ldi	r26, 0x26	; 38
    2bb2:	b0 e0       	ldi	r27, 0x00	; 0
    2bb4:	e6 e2       	ldi	r30, 0x26	; 38
    2bb6:	f0 e0       	ldi	r31, 0x00	; 0
    2bb8:	80 81       	ld	r24, Z
    2bba:	84 60       	ori	r24, 0x04	; 4
    2bbc:	8c 93       	st	X, r24


	ADCSRA &= ADC_PRESC_MASK;
    2bbe:	a6 e2       	ldi	r26, 0x26	; 38
    2bc0:	b0 e0       	ldi	r27, 0x00	; 0
    2bc2:	e6 e2       	ldi	r30, 0x26	; 38
    2bc4:	f0 e0       	ldi	r31, 0x00	; 0
    2bc6:	80 81       	ld	r24, Z
    2bc8:	88 7f       	andi	r24, 0xF8	; 248
    2bca:	8c 93       	st	X, r24
	ADCSRA |= ADC_PRESC;
    2bcc:	a6 e2       	ldi	r26, 0x26	; 38
    2bce:	b0 e0       	ldi	r27, 0x00	; 0
    2bd0:	e6 e2       	ldi	r30, 0x26	; 38
    2bd2:	f0 e0       	ldi	r31, 0x00	; 0
    2bd4:	80 81       	ld	r24, Z
    2bd6:	87 60       	ori	r24, 0x07	; 7
    2bd8:	8c 93       	st	X, r24

	/*ADC Enable*/
	SET_BIT(ADCSRA, ADCSRA_ADEN);
    2bda:	a6 e2       	ldi	r26, 0x26	; 38
    2bdc:	b0 e0       	ldi	r27, 0x00	; 0
    2bde:	e6 e2       	ldi	r30, 0x26	; 38
    2be0:	f0 e0       	ldi	r31, 0x00	; 0
    2be2:	80 81       	ld	r24, Z
    2be4:	80 68       	ori	r24, 0x80	; 128
    2be6:	8c 93       	st	X, r24
}
    2be8:	cf 91       	pop	r28
    2bea:	df 91       	pop	r29
    2bec:	08 95       	ret

00002bee <ADC_u8StartConversion>:

u16 ADC_u8StartConversion(u8 Copy_u8ChannelNumber){
    2bee:	df 93       	push	r29
    2bf0:	cf 93       	push	r28
    2bf2:	0f 92       	push	r0
    2bf4:	cd b7       	in	r28, 0x3d	; 61
    2bf6:	de b7       	in	r29, 0x3e	; 62
    2bf8:	89 83       	std	Y+1, r24	; 0x01

     Copy_u8ChannelNumber &= ADC_CHANNEL_MASK;
    2bfa:	89 81       	ldd	r24, Y+1	; 0x01
    2bfc:	80 7e       	andi	r24, 0xE0	; 224
    2bfe:	89 83       	std	Y+1, r24	; 0x01

	/* ADC Set Channel*/
	ADMUX &= ADC_CHANNEL_MASK;
    2c00:	a7 e2       	ldi	r26, 0x27	; 39
    2c02:	b0 e0       	ldi	r27, 0x00	; 0
    2c04:	e7 e2       	ldi	r30, 0x27	; 39
    2c06:	f0 e0       	ldi	r31, 0x00	; 0
    2c08:	80 81       	ld	r24, Z
    2c0a:	80 7e       	andi	r24, 0xE0	; 224
    2c0c:	8c 93       	st	X, r24
	ADMUX |= Copy_u8ChannelNumber;
    2c0e:	a7 e2       	ldi	r26, 0x27	; 39
    2c10:	b0 e0       	ldi	r27, 0x00	; 0
    2c12:	e7 e2       	ldi	r30, 0x27	; 39
    2c14:	f0 e0       	ldi	r31, 0x00	; 0
    2c16:	90 81       	ld	r25, Z
    2c18:	89 81       	ldd	r24, Y+1	; 0x01
    2c1a:	89 2b       	or	r24, r25
    2c1c:	8c 93       	st	X, r24

	/* ENABLE ADC*/
	SET_BIT(ADCSRA, ADCSRA_ADEN);
    2c1e:	a6 e2       	ldi	r26, 0x26	; 38
    2c20:	b0 e0       	ldi	r27, 0x00	; 0
    2c22:	e6 e2       	ldi	r30, 0x26	; 38
    2c24:	f0 e0       	ldi	r31, 0x00	; 0
    2c26:	80 81       	ld	r24, Z
    2c28:	80 68       	ori	r24, 0x80	; 128
    2c2a:	8c 93       	st	X, r24

	 /*ADC Start Conversion*/
	SET_BIT(ADCSRA, ADCSRA_ADSC);
    2c2c:	a6 e2       	ldi	r26, 0x26	; 38
    2c2e:	b0 e0       	ldi	r27, 0x00	; 0
    2c30:	e6 e2       	ldi	r30, 0x26	; 38
    2c32:	f0 e0       	ldi	r31, 0x00	; 0
    2c34:	80 81       	ld	r24, Z
    2c36:	80 64       	ori	r24, 0x40	; 64
    2c38:	8c 93       	st	X, r24


	/* Wait for conversion Complete flag*/
	while(GET_BIT(ADCSRA, ADCSRA_ADIF) == 0);
    2c3a:	e6 e2       	ldi	r30, 0x26	; 38
    2c3c:	f0 e0       	ldi	r31, 0x00	; 0
    2c3e:	80 81       	ld	r24, Z
    2c40:	82 95       	swap	r24
    2c42:	8f 70       	andi	r24, 0x0F	; 15
    2c44:	88 2f       	mov	r24, r24
    2c46:	90 e0       	ldi	r25, 0x00	; 0
    2c48:	81 70       	andi	r24, 0x01	; 1
    2c4a:	90 70       	andi	r25, 0x00	; 0
    2c4c:	00 97       	sbiw	r24, 0x00	; 0
    2c4e:	a9 f3       	breq	.-22     	; 0x2c3a <ADC_u8StartConversion+0x4c>
	SET_BIT(ADCSRA, ADCSRA_ADIF);
    2c50:	a6 e2       	ldi	r26, 0x26	; 38
    2c52:	b0 e0       	ldi	r27, 0x00	; 0
    2c54:	e6 e2       	ldi	r30, 0x26	; 38
    2c56:	f0 e0       	ldi	r31, 0x00	; 0
    2c58:	80 81       	ld	r24, Z
    2c5a:	80 61       	ori	r24, 0x10	; 16
    2c5c:	8c 93       	st	X, r24

	return ADC; //ADC Value
    2c5e:	e4 e2       	ldi	r30, 0x24	; 36
    2c60:	f0 e0       	ldi	r31, 0x00	; 0
    2c62:	80 81       	ld	r24, Z
    2c64:	91 81       	ldd	r25, Z+1	; 0x01

}
    2c66:	0f 90       	pop	r0
    2c68:	cf 91       	pop	r28
    2c6a:	df 91       	pop	r29
    2c6c:	08 95       	ret

00002c6e <EXTI_init>:

void (*Ptr_To_Int0)(void) = NULL;
void (*Ptr_To_Int1)(void) = NULL;
void (*Ptr_To_Int2)(void) = NULL;

void EXTI_init(void){
    2c6e:	df 93       	push	r29
    2c70:	cf 93       	push	r28
    2c72:	cd b7       	in	r28, 0x3d	; 61
    2c74:	de b7       	in	r29, 0x3e	; 62
#if (INT0_ENABLE == ENABLE)
	/* SET INTERRUPT 0 TO FALLING EDGE */
	SET_BIT(MCUCR,ISC01);
    2c76:	a5 e5       	ldi	r26, 0x55	; 85
    2c78:	b0 e0       	ldi	r27, 0x00	; 0
    2c7a:	e5 e5       	ldi	r30, 0x55	; 85
    2c7c:	f0 e0       	ldi	r31, 0x00	; 0
    2c7e:	80 81       	ld	r24, Z
    2c80:	82 60       	ori	r24, 0x02	; 2
    2c82:	8c 93       	st	X, r24
	CLR_BIT(MCUCR,ISC00);
    2c84:	a5 e5       	ldi	r26, 0x55	; 85
    2c86:	b0 e0       	ldi	r27, 0x00	; 0
    2c88:	e5 e5       	ldi	r30, 0x55	; 85
    2c8a:	f0 e0       	ldi	r31, 0x00	; 0
    2c8c:	80 81       	ld	r24, Z
    2c8e:	8e 7f       	andi	r24, 0xFE	; 254
    2c90:	8c 93       	st	X, r24
	/* Enable INT0 */
	SET_BIT(GICR,INT0); //PIE
    2c92:	ab e5       	ldi	r26, 0x5B	; 91
    2c94:	b0 e0       	ldi	r27, 0x00	; 0
    2c96:	eb e5       	ldi	r30, 0x5B	; 91
    2c98:	f0 e0       	ldi	r31, 0x00	; 0
    2c9a:	80 81       	ld	r24, Z
    2c9c:	80 64       	ori	r24, 0x40	; 64
    2c9e:	8c 93       	st	X, r24
	SET_BIT(SREG, 7);  //GIE
    2ca0:	af e5       	ldi	r26, 0x5F	; 95
    2ca2:	b0 e0       	ldi	r27, 0x00	; 0
    2ca4:	ef e5       	ldi	r30, 0x5F	; 95
    2ca6:	f0 e0       	ldi	r31, 0x00	; 0
    2ca8:	80 81       	ld	r24, Z
    2caa:	80 68       	ori	r24, 0x80	; 128
    2cac:	8c 93       	st	X, r24
	/* SET INTERRUPT 2 TO FALLING EDGE */
	SET_BIT(MCUCR,ISC2);
	/* Enable INT2 */
	SET_BIT(GICR,INT2);
#endif
}
    2cae:	cf 91       	pop	r28
    2cb0:	df 91       	pop	r29
    2cb2:	08 95       	ret

00002cb4 <EXTI_SetCallBack>:

void EXTI_SetCallBack(void (*ptr_to_fun)(void),u8 A_IntID){
    2cb4:	df 93       	push	r29
    2cb6:	cf 93       	push	r28
    2cb8:	00 d0       	rcall	.+0      	; 0x2cba <EXTI_SetCallBack+0x6>
    2cba:	0f 92       	push	r0
    2cbc:	cd b7       	in	r28, 0x3d	; 61
    2cbe:	de b7       	in	r29, 0x3e	; 62
    2cc0:	9a 83       	std	Y+2, r25	; 0x02
    2cc2:	89 83       	std	Y+1, r24	; 0x01
    2cc4:	6b 83       	std	Y+3, r22	; 0x03
	if (A_IntID == 0){
    2cc6:	8b 81       	ldd	r24, Y+3	; 0x03
    2cc8:	88 23       	and	r24, r24
    2cca:	39 f4       	brne	.+14     	; 0x2cda <EXTI_SetCallBack+0x26>
		Ptr_To_Int0 = ptr_to_fun;
    2ccc:	89 81       	ldd	r24, Y+1	; 0x01
    2cce:	9a 81       	ldd	r25, Y+2	; 0x02
    2cd0:	90 93 cd 01 	sts	0x01CD, r25
    2cd4:	80 93 cc 01 	sts	0x01CC, r24
    2cd8:	13 c0       	rjmp	.+38     	; 0x2d00 <EXTI_SetCallBack+0x4c>
	}else if (A_IntID == 1){
    2cda:	8b 81       	ldd	r24, Y+3	; 0x03
    2cdc:	81 30       	cpi	r24, 0x01	; 1
    2cde:	39 f4       	brne	.+14     	; 0x2cee <EXTI_SetCallBack+0x3a>
		Ptr_To_Int1 = ptr_to_fun;
    2ce0:	89 81       	ldd	r24, Y+1	; 0x01
    2ce2:	9a 81       	ldd	r25, Y+2	; 0x02
    2ce4:	90 93 cf 01 	sts	0x01CF, r25
    2ce8:	80 93 ce 01 	sts	0x01CE, r24
    2cec:	09 c0       	rjmp	.+18     	; 0x2d00 <EXTI_SetCallBack+0x4c>
	}else if (A_IntID == 2){
    2cee:	8b 81       	ldd	r24, Y+3	; 0x03
    2cf0:	82 30       	cpi	r24, 0x02	; 2
    2cf2:	31 f4       	brne	.+12     	; 0x2d00 <EXTI_SetCallBack+0x4c>
		Ptr_To_Int2 = ptr_to_fun;
    2cf4:	89 81       	ldd	r24, Y+1	; 0x01
    2cf6:	9a 81       	ldd	r25, Y+2	; 0x02
    2cf8:	90 93 d1 01 	sts	0x01D1, r25
    2cfc:	80 93 d0 01 	sts	0x01D0, r24
	}
}
    2d00:	0f 90       	pop	r0
    2d02:	0f 90       	pop	r0
    2d04:	0f 90       	pop	r0
    2d06:	cf 91       	pop	r28
    2d08:	df 91       	pop	r29
    2d0a:	08 95       	ret

00002d0c <__vector_1>:

// INT 0
void __vector_1 (void){
    2d0c:	1f 92       	push	r1
    2d0e:	0f 92       	push	r0
    2d10:	0f b6       	in	r0, 0x3f	; 63
    2d12:	0f 92       	push	r0
    2d14:	11 24       	eor	r1, r1
    2d16:	2f 93       	push	r18
    2d18:	3f 93       	push	r19
    2d1a:	4f 93       	push	r20
    2d1c:	5f 93       	push	r21
    2d1e:	6f 93       	push	r22
    2d20:	7f 93       	push	r23
    2d22:	8f 93       	push	r24
    2d24:	9f 93       	push	r25
    2d26:	af 93       	push	r26
    2d28:	bf 93       	push	r27
    2d2a:	ef 93       	push	r30
    2d2c:	ff 93       	push	r31
    2d2e:	df 93       	push	r29
    2d30:	cf 93       	push	r28
    2d32:	cd b7       	in	r28, 0x3d	; 61
    2d34:	de b7       	in	r29, 0x3e	; 62
	if (Ptr_To_Int0 != NULL){
    2d36:	80 91 cc 01 	lds	r24, 0x01CC
    2d3a:	90 91 cd 01 	lds	r25, 0x01CD
    2d3e:	00 97       	sbiw	r24, 0x00	; 0
    2d40:	29 f0       	breq	.+10     	; 0x2d4c <__vector_1+0x40>
		Ptr_To_Int0();
    2d42:	e0 91 cc 01 	lds	r30, 0x01CC
    2d46:	f0 91 cd 01 	lds	r31, 0x01CD
    2d4a:	09 95       	icall
	}
}
    2d4c:	cf 91       	pop	r28
    2d4e:	df 91       	pop	r29
    2d50:	ff 91       	pop	r31
    2d52:	ef 91       	pop	r30
    2d54:	bf 91       	pop	r27
    2d56:	af 91       	pop	r26
    2d58:	9f 91       	pop	r25
    2d5a:	8f 91       	pop	r24
    2d5c:	7f 91       	pop	r23
    2d5e:	6f 91       	pop	r22
    2d60:	5f 91       	pop	r21
    2d62:	4f 91       	pop	r20
    2d64:	3f 91       	pop	r19
    2d66:	2f 91       	pop	r18
    2d68:	0f 90       	pop	r0
    2d6a:	0f be       	out	0x3f, r0	; 63
    2d6c:	0f 90       	pop	r0
    2d6e:	1f 90       	pop	r1
    2d70:	18 95       	reti

00002d72 <__vector_2>:

// INT 1
void __vector_2 (void){
    2d72:	1f 92       	push	r1
    2d74:	0f 92       	push	r0
    2d76:	0f b6       	in	r0, 0x3f	; 63
    2d78:	0f 92       	push	r0
    2d7a:	11 24       	eor	r1, r1
    2d7c:	2f 93       	push	r18
    2d7e:	3f 93       	push	r19
    2d80:	4f 93       	push	r20
    2d82:	5f 93       	push	r21
    2d84:	6f 93       	push	r22
    2d86:	7f 93       	push	r23
    2d88:	8f 93       	push	r24
    2d8a:	9f 93       	push	r25
    2d8c:	af 93       	push	r26
    2d8e:	bf 93       	push	r27
    2d90:	ef 93       	push	r30
    2d92:	ff 93       	push	r31
    2d94:	df 93       	push	r29
    2d96:	cf 93       	push	r28
    2d98:	cd b7       	in	r28, 0x3d	; 61
    2d9a:	de b7       	in	r29, 0x3e	; 62
	if (Ptr_To_Int1 != NULL){
    2d9c:	80 91 ce 01 	lds	r24, 0x01CE
    2da0:	90 91 cf 01 	lds	r25, 0x01CF
    2da4:	00 97       	sbiw	r24, 0x00	; 0
    2da6:	29 f0       	breq	.+10     	; 0x2db2 <__vector_2+0x40>
		Ptr_To_Int1();
    2da8:	e0 91 ce 01 	lds	r30, 0x01CE
    2dac:	f0 91 cf 01 	lds	r31, 0x01CF
    2db0:	09 95       	icall
	}
}
    2db2:	cf 91       	pop	r28
    2db4:	df 91       	pop	r29
    2db6:	ff 91       	pop	r31
    2db8:	ef 91       	pop	r30
    2dba:	bf 91       	pop	r27
    2dbc:	af 91       	pop	r26
    2dbe:	9f 91       	pop	r25
    2dc0:	8f 91       	pop	r24
    2dc2:	7f 91       	pop	r23
    2dc4:	6f 91       	pop	r22
    2dc6:	5f 91       	pop	r21
    2dc8:	4f 91       	pop	r20
    2dca:	3f 91       	pop	r19
    2dcc:	2f 91       	pop	r18
    2dce:	0f 90       	pop	r0
    2dd0:	0f be       	out	0x3f, r0	; 63
    2dd2:	0f 90       	pop	r0
    2dd4:	1f 90       	pop	r1
    2dd6:	18 95       	reti

00002dd8 <__vector_3>:

// INT 2
void __vector_3 (void){
    2dd8:	1f 92       	push	r1
    2dda:	0f 92       	push	r0
    2ddc:	0f b6       	in	r0, 0x3f	; 63
    2dde:	0f 92       	push	r0
    2de0:	11 24       	eor	r1, r1
    2de2:	2f 93       	push	r18
    2de4:	3f 93       	push	r19
    2de6:	4f 93       	push	r20
    2de8:	5f 93       	push	r21
    2dea:	6f 93       	push	r22
    2dec:	7f 93       	push	r23
    2dee:	8f 93       	push	r24
    2df0:	9f 93       	push	r25
    2df2:	af 93       	push	r26
    2df4:	bf 93       	push	r27
    2df6:	ef 93       	push	r30
    2df8:	ff 93       	push	r31
    2dfa:	df 93       	push	r29
    2dfc:	cf 93       	push	r28
    2dfe:	cd b7       	in	r28, 0x3d	; 61
    2e00:	de b7       	in	r29, 0x3e	; 62
	if (Ptr_To_Int2 != NULL){
    2e02:	80 91 d0 01 	lds	r24, 0x01D0
    2e06:	90 91 d1 01 	lds	r25, 0x01D1
    2e0a:	00 97       	sbiw	r24, 0x00	; 0
    2e0c:	29 f0       	breq	.+10     	; 0x2e18 <__vector_3+0x40>
		Ptr_To_Int2();
    2e0e:	e0 91 d0 01 	lds	r30, 0x01D0
    2e12:	f0 91 d1 01 	lds	r31, 0x01D1
    2e16:	09 95       	icall
	}
}
    2e18:	cf 91       	pop	r28
    2e1a:	df 91       	pop	r29
    2e1c:	ff 91       	pop	r31
    2e1e:	ef 91       	pop	r30
    2e20:	bf 91       	pop	r27
    2e22:	af 91       	pop	r26
    2e24:	9f 91       	pop	r25
    2e26:	8f 91       	pop	r24
    2e28:	7f 91       	pop	r23
    2e2a:	6f 91       	pop	r22
    2e2c:	5f 91       	pop	r21
    2e2e:	4f 91       	pop	r20
    2e30:	3f 91       	pop	r19
    2e32:	2f 91       	pop	r18
    2e34:	0f 90       	pop	r0
    2e36:	0f be       	out	0x3f, r0	; 63
    2e38:	0f 90       	pop	r0
    2e3a:	1f 90       	pop	r1
    2e3c:	18 95       	reti

00002e3e <DIO_voidSetPinDirection>:
#include "../../01-LIB/BIT_MATH.h"
#include "DIO_Config.h"
#include "DIO_Interface.h"
#include "DIO_Private.h"

void DIO_voidSetPinDirection(u8 Copy_u8PortNum, u8 Copy_u8PinNum, u8 Copy_u8Mode){
    2e3e:	df 93       	push	r29
    2e40:	cf 93       	push	r28
    2e42:	cd b7       	in	r28, 0x3d	; 61
    2e44:	de b7       	in	r29, 0x3e	; 62
    2e46:	27 97       	sbiw	r28, 0x07	; 7
    2e48:	0f b6       	in	r0, 0x3f	; 63
    2e4a:	f8 94       	cli
    2e4c:	de bf       	out	0x3e, r29	; 62
    2e4e:	0f be       	out	0x3f, r0	; 63
    2e50:	cd bf       	out	0x3d, r28	; 61
    2e52:	89 83       	std	Y+1, r24	; 0x01
    2e54:	6a 83       	std	Y+2, r22	; 0x02
    2e56:	4b 83       	std	Y+3, r20	; 0x03
	if (Copy_u8Mode == DIO_u8OUTPUT){
    2e58:	8b 81       	ldd	r24, Y+3	; 0x03
    2e5a:	81 30       	cpi	r24, 0x01	; 1
    2e5c:	09 f0       	breq	.+2      	; 0x2e60 <DIO_voidSetPinDirection+0x22>
    2e5e:	70 c0       	rjmp	.+224    	; 0x2f40 <DIO_voidSetPinDirection+0x102>
		switch (Copy_u8PortNum)
    2e60:	89 81       	ldd	r24, Y+1	; 0x01
    2e62:	28 2f       	mov	r18, r24
    2e64:	30 e0       	ldi	r19, 0x00	; 0
    2e66:	3f 83       	std	Y+7, r19	; 0x07
    2e68:	2e 83       	std	Y+6, r18	; 0x06
    2e6a:	8e 81       	ldd	r24, Y+6	; 0x06
    2e6c:	9f 81       	ldd	r25, Y+7	; 0x07
    2e6e:	82 30       	cpi	r24, 0x02	; 2
    2e70:	91 05       	cpc	r25, r1
    2e72:	51 f1       	breq	.+84     	; 0x2ec8 <DIO_voidSetPinDirection+0x8a>
    2e74:	2e 81       	ldd	r18, Y+6	; 0x06
    2e76:	3f 81       	ldd	r19, Y+7	; 0x07
    2e78:	23 30       	cpi	r18, 0x03	; 3
    2e7a:	31 05       	cpc	r19, r1
    2e7c:	34 f4       	brge	.+12     	; 0x2e8a <DIO_voidSetPinDirection+0x4c>
    2e7e:	8e 81       	ldd	r24, Y+6	; 0x06
    2e80:	9f 81       	ldd	r25, Y+7	; 0x07
    2e82:	81 30       	cpi	r24, 0x01	; 1
    2e84:	91 05       	cpc	r25, r1
    2e86:	61 f0       	breq	.+24     	; 0x2ea0 <DIO_voidSetPinDirection+0x62>
    2e88:	d3 c0       	rjmp	.+422    	; 0x3030 <DIO_voidSetPinDirection+0x1f2>
    2e8a:	2e 81       	ldd	r18, Y+6	; 0x06
    2e8c:	3f 81       	ldd	r19, Y+7	; 0x07
    2e8e:	23 30       	cpi	r18, 0x03	; 3
    2e90:	31 05       	cpc	r19, r1
    2e92:	71 f1       	breq	.+92     	; 0x2ef0 <DIO_voidSetPinDirection+0xb2>
    2e94:	8e 81       	ldd	r24, Y+6	; 0x06
    2e96:	9f 81       	ldd	r25, Y+7	; 0x07
    2e98:	84 30       	cpi	r24, 0x04	; 4
    2e9a:	91 05       	cpc	r25, r1
    2e9c:	e9 f1       	breq	.+122    	; 0x2f18 <DIO_voidSetPinDirection+0xda>
    2e9e:	c8 c0       	rjmp	.+400    	; 0x3030 <DIO_voidSetPinDirection+0x1f2>
		{
			case DIO_u8PORTA: SET_BIT(DDRA, Copy_u8PinNum); break;
    2ea0:	aa e3       	ldi	r26, 0x3A	; 58
    2ea2:	b0 e0       	ldi	r27, 0x00	; 0
    2ea4:	ea e3       	ldi	r30, 0x3A	; 58
    2ea6:	f0 e0       	ldi	r31, 0x00	; 0
    2ea8:	80 81       	ld	r24, Z
    2eaa:	48 2f       	mov	r20, r24
    2eac:	8a 81       	ldd	r24, Y+2	; 0x02
    2eae:	28 2f       	mov	r18, r24
    2eb0:	30 e0       	ldi	r19, 0x00	; 0
    2eb2:	81 e0       	ldi	r24, 0x01	; 1
    2eb4:	90 e0       	ldi	r25, 0x00	; 0
    2eb6:	02 2e       	mov	r0, r18
    2eb8:	02 c0       	rjmp	.+4      	; 0x2ebe <DIO_voidSetPinDirection+0x80>
    2eba:	88 0f       	add	r24, r24
    2ebc:	99 1f       	adc	r25, r25
    2ebe:	0a 94       	dec	r0
    2ec0:	e2 f7       	brpl	.-8      	; 0x2eba <DIO_voidSetPinDirection+0x7c>
    2ec2:	84 2b       	or	r24, r20
    2ec4:	8c 93       	st	X, r24
    2ec6:	b4 c0       	rjmp	.+360    	; 0x3030 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTB: SET_BIT(DDRB, Copy_u8PinNum); break;
    2ec8:	a7 e3       	ldi	r26, 0x37	; 55
    2eca:	b0 e0       	ldi	r27, 0x00	; 0
    2ecc:	e7 e3       	ldi	r30, 0x37	; 55
    2ece:	f0 e0       	ldi	r31, 0x00	; 0
    2ed0:	80 81       	ld	r24, Z
    2ed2:	48 2f       	mov	r20, r24
    2ed4:	8a 81       	ldd	r24, Y+2	; 0x02
    2ed6:	28 2f       	mov	r18, r24
    2ed8:	30 e0       	ldi	r19, 0x00	; 0
    2eda:	81 e0       	ldi	r24, 0x01	; 1
    2edc:	90 e0       	ldi	r25, 0x00	; 0
    2ede:	02 2e       	mov	r0, r18
    2ee0:	02 c0       	rjmp	.+4      	; 0x2ee6 <DIO_voidSetPinDirection+0xa8>
    2ee2:	88 0f       	add	r24, r24
    2ee4:	99 1f       	adc	r25, r25
    2ee6:	0a 94       	dec	r0
    2ee8:	e2 f7       	brpl	.-8      	; 0x2ee2 <DIO_voidSetPinDirection+0xa4>
    2eea:	84 2b       	or	r24, r20
    2eec:	8c 93       	st	X, r24
    2eee:	a0 c0       	rjmp	.+320    	; 0x3030 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTC: SET_BIT(DDRC, Copy_u8PinNum); break;
    2ef0:	a4 e3       	ldi	r26, 0x34	; 52
    2ef2:	b0 e0       	ldi	r27, 0x00	; 0
    2ef4:	e4 e3       	ldi	r30, 0x34	; 52
    2ef6:	f0 e0       	ldi	r31, 0x00	; 0
    2ef8:	80 81       	ld	r24, Z
    2efa:	48 2f       	mov	r20, r24
    2efc:	8a 81       	ldd	r24, Y+2	; 0x02
    2efe:	28 2f       	mov	r18, r24
    2f00:	30 e0       	ldi	r19, 0x00	; 0
    2f02:	81 e0       	ldi	r24, 0x01	; 1
    2f04:	90 e0       	ldi	r25, 0x00	; 0
    2f06:	02 2e       	mov	r0, r18
    2f08:	02 c0       	rjmp	.+4      	; 0x2f0e <DIO_voidSetPinDirection+0xd0>
    2f0a:	88 0f       	add	r24, r24
    2f0c:	99 1f       	adc	r25, r25
    2f0e:	0a 94       	dec	r0
    2f10:	e2 f7       	brpl	.-8      	; 0x2f0a <DIO_voidSetPinDirection+0xcc>
    2f12:	84 2b       	or	r24, r20
    2f14:	8c 93       	st	X, r24
    2f16:	8c c0       	rjmp	.+280    	; 0x3030 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTD: SET_BIT(DDRD, Copy_u8PinNum); break;
    2f18:	a1 e3       	ldi	r26, 0x31	; 49
    2f1a:	b0 e0       	ldi	r27, 0x00	; 0
    2f1c:	e1 e3       	ldi	r30, 0x31	; 49
    2f1e:	f0 e0       	ldi	r31, 0x00	; 0
    2f20:	80 81       	ld	r24, Z
    2f22:	48 2f       	mov	r20, r24
    2f24:	8a 81       	ldd	r24, Y+2	; 0x02
    2f26:	28 2f       	mov	r18, r24
    2f28:	30 e0       	ldi	r19, 0x00	; 0
    2f2a:	81 e0       	ldi	r24, 0x01	; 1
    2f2c:	90 e0       	ldi	r25, 0x00	; 0
    2f2e:	02 2e       	mov	r0, r18
    2f30:	02 c0       	rjmp	.+4      	; 0x2f36 <DIO_voidSetPinDirection+0xf8>
    2f32:	88 0f       	add	r24, r24
    2f34:	99 1f       	adc	r25, r25
    2f36:	0a 94       	dec	r0
    2f38:	e2 f7       	brpl	.-8      	; 0x2f32 <DIO_voidSetPinDirection+0xf4>
    2f3a:	84 2b       	or	r24, r20
    2f3c:	8c 93       	st	X, r24
    2f3e:	78 c0       	rjmp	.+240    	; 0x3030 <DIO_voidSetPinDirection+0x1f2>
			default:    /*return error*/      				 break;
		}
	} else if (Copy_u8Mode == DIO_u8INPUT){
    2f40:	8b 81       	ldd	r24, Y+3	; 0x03
    2f42:	88 23       	and	r24, r24
    2f44:	09 f0       	breq	.+2      	; 0x2f48 <DIO_voidSetPinDirection+0x10a>
    2f46:	74 c0       	rjmp	.+232    	; 0x3030 <DIO_voidSetPinDirection+0x1f2>
		switch (Copy_u8PortNum)
    2f48:	89 81       	ldd	r24, Y+1	; 0x01
    2f4a:	28 2f       	mov	r18, r24
    2f4c:	30 e0       	ldi	r19, 0x00	; 0
    2f4e:	3d 83       	std	Y+5, r19	; 0x05
    2f50:	2c 83       	std	Y+4, r18	; 0x04
    2f52:	8c 81       	ldd	r24, Y+4	; 0x04
    2f54:	9d 81       	ldd	r25, Y+5	; 0x05
    2f56:	82 30       	cpi	r24, 0x02	; 2
    2f58:	91 05       	cpc	r25, r1
    2f5a:	61 f1       	breq	.+88     	; 0x2fb4 <DIO_voidSetPinDirection+0x176>
    2f5c:	2c 81       	ldd	r18, Y+4	; 0x04
    2f5e:	3d 81       	ldd	r19, Y+5	; 0x05
    2f60:	23 30       	cpi	r18, 0x03	; 3
    2f62:	31 05       	cpc	r19, r1
    2f64:	34 f4       	brge	.+12     	; 0x2f72 <DIO_voidSetPinDirection+0x134>
    2f66:	8c 81       	ldd	r24, Y+4	; 0x04
    2f68:	9d 81       	ldd	r25, Y+5	; 0x05
    2f6a:	81 30       	cpi	r24, 0x01	; 1
    2f6c:	91 05       	cpc	r25, r1
    2f6e:	69 f0       	breq	.+26     	; 0x2f8a <DIO_voidSetPinDirection+0x14c>
    2f70:	5f c0       	rjmp	.+190    	; 0x3030 <DIO_voidSetPinDirection+0x1f2>
    2f72:	2c 81       	ldd	r18, Y+4	; 0x04
    2f74:	3d 81       	ldd	r19, Y+5	; 0x05
    2f76:	23 30       	cpi	r18, 0x03	; 3
    2f78:	31 05       	cpc	r19, r1
    2f7a:	89 f1       	breq	.+98     	; 0x2fde <DIO_voidSetPinDirection+0x1a0>
    2f7c:	8c 81       	ldd	r24, Y+4	; 0x04
    2f7e:	9d 81       	ldd	r25, Y+5	; 0x05
    2f80:	84 30       	cpi	r24, 0x04	; 4
    2f82:	91 05       	cpc	r25, r1
    2f84:	09 f4       	brne	.+2      	; 0x2f88 <DIO_voidSetPinDirection+0x14a>
    2f86:	40 c0       	rjmp	.+128    	; 0x3008 <DIO_voidSetPinDirection+0x1ca>
    2f88:	53 c0       	rjmp	.+166    	; 0x3030 <DIO_voidSetPinDirection+0x1f2>
		{
			case DIO_u8PORTA: CLR_BIT(DDRA, Copy_u8PinNum); break;
    2f8a:	aa e3       	ldi	r26, 0x3A	; 58
    2f8c:	b0 e0       	ldi	r27, 0x00	; 0
    2f8e:	ea e3       	ldi	r30, 0x3A	; 58
    2f90:	f0 e0       	ldi	r31, 0x00	; 0
    2f92:	80 81       	ld	r24, Z
    2f94:	48 2f       	mov	r20, r24
    2f96:	8a 81       	ldd	r24, Y+2	; 0x02
    2f98:	28 2f       	mov	r18, r24
    2f9a:	30 e0       	ldi	r19, 0x00	; 0
    2f9c:	81 e0       	ldi	r24, 0x01	; 1
    2f9e:	90 e0       	ldi	r25, 0x00	; 0
    2fa0:	02 2e       	mov	r0, r18
    2fa2:	02 c0       	rjmp	.+4      	; 0x2fa8 <DIO_voidSetPinDirection+0x16a>
    2fa4:	88 0f       	add	r24, r24
    2fa6:	99 1f       	adc	r25, r25
    2fa8:	0a 94       	dec	r0
    2faa:	e2 f7       	brpl	.-8      	; 0x2fa4 <DIO_voidSetPinDirection+0x166>
    2fac:	80 95       	com	r24
    2fae:	84 23       	and	r24, r20
    2fb0:	8c 93       	st	X, r24
    2fb2:	3e c0       	rjmp	.+124    	; 0x3030 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTB: CLR_BIT(DDRB, Copy_u8PinNum); break;
    2fb4:	a7 e3       	ldi	r26, 0x37	; 55
    2fb6:	b0 e0       	ldi	r27, 0x00	; 0
    2fb8:	e7 e3       	ldi	r30, 0x37	; 55
    2fba:	f0 e0       	ldi	r31, 0x00	; 0
    2fbc:	80 81       	ld	r24, Z
    2fbe:	48 2f       	mov	r20, r24
    2fc0:	8a 81       	ldd	r24, Y+2	; 0x02
    2fc2:	28 2f       	mov	r18, r24
    2fc4:	30 e0       	ldi	r19, 0x00	; 0
    2fc6:	81 e0       	ldi	r24, 0x01	; 1
    2fc8:	90 e0       	ldi	r25, 0x00	; 0
    2fca:	02 2e       	mov	r0, r18
    2fcc:	02 c0       	rjmp	.+4      	; 0x2fd2 <DIO_voidSetPinDirection+0x194>
    2fce:	88 0f       	add	r24, r24
    2fd0:	99 1f       	adc	r25, r25
    2fd2:	0a 94       	dec	r0
    2fd4:	e2 f7       	brpl	.-8      	; 0x2fce <DIO_voidSetPinDirection+0x190>
    2fd6:	80 95       	com	r24
    2fd8:	84 23       	and	r24, r20
    2fda:	8c 93       	st	X, r24
    2fdc:	29 c0       	rjmp	.+82     	; 0x3030 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTC: CLR_BIT(DDRC, Copy_u8PinNum); break;
    2fde:	a4 e3       	ldi	r26, 0x34	; 52
    2fe0:	b0 e0       	ldi	r27, 0x00	; 0
    2fe2:	e4 e3       	ldi	r30, 0x34	; 52
    2fe4:	f0 e0       	ldi	r31, 0x00	; 0
    2fe6:	80 81       	ld	r24, Z
    2fe8:	48 2f       	mov	r20, r24
    2fea:	8a 81       	ldd	r24, Y+2	; 0x02
    2fec:	28 2f       	mov	r18, r24
    2fee:	30 e0       	ldi	r19, 0x00	; 0
    2ff0:	81 e0       	ldi	r24, 0x01	; 1
    2ff2:	90 e0       	ldi	r25, 0x00	; 0
    2ff4:	02 2e       	mov	r0, r18
    2ff6:	02 c0       	rjmp	.+4      	; 0x2ffc <DIO_voidSetPinDirection+0x1be>
    2ff8:	88 0f       	add	r24, r24
    2ffa:	99 1f       	adc	r25, r25
    2ffc:	0a 94       	dec	r0
    2ffe:	e2 f7       	brpl	.-8      	; 0x2ff8 <DIO_voidSetPinDirection+0x1ba>
    3000:	80 95       	com	r24
    3002:	84 23       	and	r24, r20
    3004:	8c 93       	st	X, r24
    3006:	14 c0       	rjmp	.+40     	; 0x3030 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTD: CLR_BIT(DDRD, Copy_u8PinNum); break;
    3008:	a1 e3       	ldi	r26, 0x31	; 49
    300a:	b0 e0       	ldi	r27, 0x00	; 0
    300c:	e1 e3       	ldi	r30, 0x31	; 49
    300e:	f0 e0       	ldi	r31, 0x00	; 0
    3010:	80 81       	ld	r24, Z
    3012:	48 2f       	mov	r20, r24
    3014:	8a 81       	ldd	r24, Y+2	; 0x02
    3016:	28 2f       	mov	r18, r24
    3018:	30 e0       	ldi	r19, 0x00	; 0
    301a:	81 e0       	ldi	r24, 0x01	; 1
    301c:	90 e0       	ldi	r25, 0x00	; 0
    301e:	02 2e       	mov	r0, r18
    3020:	02 c0       	rjmp	.+4      	; 0x3026 <DIO_voidSetPinDirection+0x1e8>
    3022:	88 0f       	add	r24, r24
    3024:	99 1f       	adc	r25, r25
    3026:	0a 94       	dec	r0
    3028:	e2 f7       	brpl	.-8      	; 0x3022 <DIO_voidSetPinDirection+0x1e4>
    302a:	80 95       	com	r24
    302c:	84 23       	and	r24, r20
    302e:	8c 93       	st	X, r24
			default:    /*return error*/      				 break;
		}
	} else{
		/*return error*/
	}
}
    3030:	27 96       	adiw	r28, 0x07	; 7
    3032:	0f b6       	in	r0, 0x3f	; 63
    3034:	f8 94       	cli
    3036:	de bf       	out	0x3e, r29	; 62
    3038:	0f be       	out	0x3f, r0	; 63
    303a:	cd bf       	out	0x3d, r28	; 61
    303c:	cf 91       	pop	r28
    303e:	df 91       	pop	r29
    3040:	08 95       	ret

00003042 <DIO_voidSetPinValue>:
void DIO_voidSetPinValue(u8 Copy_u8PortNum, u8 Copy_u8PinNum, u8 Copy_u8Value){
    3042:	df 93       	push	r29
    3044:	cf 93       	push	r28
    3046:	cd b7       	in	r28, 0x3d	; 61
    3048:	de b7       	in	r29, 0x3e	; 62
    304a:	27 97       	sbiw	r28, 0x07	; 7
    304c:	0f b6       	in	r0, 0x3f	; 63
    304e:	f8 94       	cli
    3050:	de bf       	out	0x3e, r29	; 62
    3052:	0f be       	out	0x3f, r0	; 63
    3054:	cd bf       	out	0x3d, r28	; 61
    3056:	89 83       	std	Y+1, r24	; 0x01
    3058:	6a 83       	std	Y+2, r22	; 0x02
    305a:	4b 83       	std	Y+3, r20	; 0x03
	if (Copy_u8Value == DIO_u8HIGH){
    305c:	8b 81       	ldd	r24, Y+3	; 0x03
    305e:	81 30       	cpi	r24, 0x01	; 1
    3060:	09 f0       	breq	.+2      	; 0x3064 <DIO_voidSetPinValue+0x22>
    3062:	70 c0       	rjmp	.+224    	; 0x3144 <DIO_voidSetPinValue+0x102>
		switch (Copy_u8PortNum)
    3064:	89 81       	ldd	r24, Y+1	; 0x01
    3066:	28 2f       	mov	r18, r24
    3068:	30 e0       	ldi	r19, 0x00	; 0
    306a:	3f 83       	std	Y+7, r19	; 0x07
    306c:	2e 83       	std	Y+6, r18	; 0x06
    306e:	8e 81       	ldd	r24, Y+6	; 0x06
    3070:	9f 81       	ldd	r25, Y+7	; 0x07
    3072:	82 30       	cpi	r24, 0x02	; 2
    3074:	91 05       	cpc	r25, r1
    3076:	51 f1       	breq	.+84     	; 0x30cc <DIO_voidSetPinValue+0x8a>
    3078:	2e 81       	ldd	r18, Y+6	; 0x06
    307a:	3f 81       	ldd	r19, Y+7	; 0x07
    307c:	23 30       	cpi	r18, 0x03	; 3
    307e:	31 05       	cpc	r19, r1
    3080:	34 f4       	brge	.+12     	; 0x308e <DIO_voidSetPinValue+0x4c>
    3082:	8e 81       	ldd	r24, Y+6	; 0x06
    3084:	9f 81       	ldd	r25, Y+7	; 0x07
    3086:	81 30       	cpi	r24, 0x01	; 1
    3088:	91 05       	cpc	r25, r1
    308a:	61 f0       	breq	.+24     	; 0x30a4 <DIO_voidSetPinValue+0x62>
    308c:	d3 c0       	rjmp	.+422    	; 0x3234 <DIO_voidSetPinValue+0x1f2>
    308e:	2e 81       	ldd	r18, Y+6	; 0x06
    3090:	3f 81       	ldd	r19, Y+7	; 0x07
    3092:	23 30       	cpi	r18, 0x03	; 3
    3094:	31 05       	cpc	r19, r1
    3096:	71 f1       	breq	.+92     	; 0x30f4 <DIO_voidSetPinValue+0xb2>
    3098:	8e 81       	ldd	r24, Y+6	; 0x06
    309a:	9f 81       	ldd	r25, Y+7	; 0x07
    309c:	84 30       	cpi	r24, 0x04	; 4
    309e:	91 05       	cpc	r25, r1
    30a0:	e9 f1       	breq	.+122    	; 0x311c <DIO_voidSetPinValue+0xda>
    30a2:	c8 c0       	rjmp	.+400    	; 0x3234 <DIO_voidSetPinValue+0x1f2>
		{
			case DIO_u8PORTA: SET_BIT(PORTA, Copy_u8PinNum); break;
    30a4:	ab e3       	ldi	r26, 0x3B	; 59
    30a6:	b0 e0       	ldi	r27, 0x00	; 0
    30a8:	eb e3       	ldi	r30, 0x3B	; 59
    30aa:	f0 e0       	ldi	r31, 0x00	; 0
    30ac:	80 81       	ld	r24, Z
    30ae:	48 2f       	mov	r20, r24
    30b0:	8a 81       	ldd	r24, Y+2	; 0x02
    30b2:	28 2f       	mov	r18, r24
    30b4:	30 e0       	ldi	r19, 0x00	; 0
    30b6:	81 e0       	ldi	r24, 0x01	; 1
    30b8:	90 e0       	ldi	r25, 0x00	; 0
    30ba:	02 2e       	mov	r0, r18
    30bc:	02 c0       	rjmp	.+4      	; 0x30c2 <DIO_voidSetPinValue+0x80>
    30be:	88 0f       	add	r24, r24
    30c0:	99 1f       	adc	r25, r25
    30c2:	0a 94       	dec	r0
    30c4:	e2 f7       	brpl	.-8      	; 0x30be <DIO_voidSetPinValue+0x7c>
    30c6:	84 2b       	or	r24, r20
    30c8:	8c 93       	st	X, r24
    30ca:	b4 c0       	rjmp	.+360    	; 0x3234 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTB: SET_BIT(PORTB, Copy_u8PinNum); break;
    30cc:	a8 e3       	ldi	r26, 0x38	; 56
    30ce:	b0 e0       	ldi	r27, 0x00	; 0
    30d0:	e8 e3       	ldi	r30, 0x38	; 56
    30d2:	f0 e0       	ldi	r31, 0x00	; 0
    30d4:	80 81       	ld	r24, Z
    30d6:	48 2f       	mov	r20, r24
    30d8:	8a 81       	ldd	r24, Y+2	; 0x02
    30da:	28 2f       	mov	r18, r24
    30dc:	30 e0       	ldi	r19, 0x00	; 0
    30de:	81 e0       	ldi	r24, 0x01	; 1
    30e0:	90 e0       	ldi	r25, 0x00	; 0
    30e2:	02 2e       	mov	r0, r18
    30e4:	02 c0       	rjmp	.+4      	; 0x30ea <DIO_voidSetPinValue+0xa8>
    30e6:	88 0f       	add	r24, r24
    30e8:	99 1f       	adc	r25, r25
    30ea:	0a 94       	dec	r0
    30ec:	e2 f7       	brpl	.-8      	; 0x30e6 <DIO_voidSetPinValue+0xa4>
    30ee:	84 2b       	or	r24, r20
    30f0:	8c 93       	st	X, r24
    30f2:	a0 c0       	rjmp	.+320    	; 0x3234 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTC: SET_BIT(PORTC, Copy_u8PinNum); break;
    30f4:	a5 e3       	ldi	r26, 0x35	; 53
    30f6:	b0 e0       	ldi	r27, 0x00	; 0
    30f8:	e5 e3       	ldi	r30, 0x35	; 53
    30fa:	f0 e0       	ldi	r31, 0x00	; 0
    30fc:	80 81       	ld	r24, Z
    30fe:	48 2f       	mov	r20, r24
    3100:	8a 81       	ldd	r24, Y+2	; 0x02
    3102:	28 2f       	mov	r18, r24
    3104:	30 e0       	ldi	r19, 0x00	; 0
    3106:	81 e0       	ldi	r24, 0x01	; 1
    3108:	90 e0       	ldi	r25, 0x00	; 0
    310a:	02 2e       	mov	r0, r18
    310c:	02 c0       	rjmp	.+4      	; 0x3112 <DIO_voidSetPinValue+0xd0>
    310e:	88 0f       	add	r24, r24
    3110:	99 1f       	adc	r25, r25
    3112:	0a 94       	dec	r0
    3114:	e2 f7       	brpl	.-8      	; 0x310e <DIO_voidSetPinValue+0xcc>
    3116:	84 2b       	or	r24, r20
    3118:	8c 93       	st	X, r24
    311a:	8c c0       	rjmp	.+280    	; 0x3234 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTD: SET_BIT(PORTD, Copy_u8PinNum); break;
    311c:	a2 e3       	ldi	r26, 0x32	; 50
    311e:	b0 e0       	ldi	r27, 0x00	; 0
    3120:	e2 e3       	ldi	r30, 0x32	; 50
    3122:	f0 e0       	ldi	r31, 0x00	; 0
    3124:	80 81       	ld	r24, Z
    3126:	48 2f       	mov	r20, r24
    3128:	8a 81       	ldd	r24, Y+2	; 0x02
    312a:	28 2f       	mov	r18, r24
    312c:	30 e0       	ldi	r19, 0x00	; 0
    312e:	81 e0       	ldi	r24, 0x01	; 1
    3130:	90 e0       	ldi	r25, 0x00	; 0
    3132:	02 2e       	mov	r0, r18
    3134:	02 c0       	rjmp	.+4      	; 0x313a <DIO_voidSetPinValue+0xf8>
    3136:	88 0f       	add	r24, r24
    3138:	99 1f       	adc	r25, r25
    313a:	0a 94       	dec	r0
    313c:	e2 f7       	brpl	.-8      	; 0x3136 <DIO_voidSetPinValue+0xf4>
    313e:	84 2b       	or	r24, r20
    3140:	8c 93       	st	X, r24
    3142:	78 c0       	rjmp	.+240    	; 0x3234 <DIO_voidSetPinValue+0x1f2>
			default:    /*return error*/      				  break;
		}
	} else if (Copy_u8Value == DIO_u8LOW){
    3144:	8b 81       	ldd	r24, Y+3	; 0x03
    3146:	88 23       	and	r24, r24
    3148:	09 f0       	breq	.+2      	; 0x314c <DIO_voidSetPinValue+0x10a>
    314a:	74 c0       	rjmp	.+232    	; 0x3234 <DIO_voidSetPinValue+0x1f2>
		switch (Copy_u8PortNum)
    314c:	89 81       	ldd	r24, Y+1	; 0x01
    314e:	28 2f       	mov	r18, r24
    3150:	30 e0       	ldi	r19, 0x00	; 0
    3152:	3d 83       	std	Y+5, r19	; 0x05
    3154:	2c 83       	std	Y+4, r18	; 0x04
    3156:	8c 81       	ldd	r24, Y+4	; 0x04
    3158:	9d 81       	ldd	r25, Y+5	; 0x05
    315a:	82 30       	cpi	r24, 0x02	; 2
    315c:	91 05       	cpc	r25, r1
    315e:	61 f1       	breq	.+88     	; 0x31b8 <DIO_voidSetPinValue+0x176>
    3160:	2c 81       	ldd	r18, Y+4	; 0x04
    3162:	3d 81       	ldd	r19, Y+5	; 0x05
    3164:	23 30       	cpi	r18, 0x03	; 3
    3166:	31 05       	cpc	r19, r1
    3168:	34 f4       	brge	.+12     	; 0x3176 <DIO_voidSetPinValue+0x134>
    316a:	8c 81       	ldd	r24, Y+4	; 0x04
    316c:	9d 81       	ldd	r25, Y+5	; 0x05
    316e:	81 30       	cpi	r24, 0x01	; 1
    3170:	91 05       	cpc	r25, r1
    3172:	69 f0       	breq	.+26     	; 0x318e <DIO_voidSetPinValue+0x14c>
    3174:	5f c0       	rjmp	.+190    	; 0x3234 <DIO_voidSetPinValue+0x1f2>
    3176:	2c 81       	ldd	r18, Y+4	; 0x04
    3178:	3d 81       	ldd	r19, Y+5	; 0x05
    317a:	23 30       	cpi	r18, 0x03	; 3
    317c:	31 05       	cpc	r19, r1
    317e:	89 f1       	breq	.+98     	; 0x31e2 <DIO_voidSetPinValue+0x1a0>
    3180:	8c 81       	ldd	r24, Y+4	; 0x04
    3182:	9d 81       	ldd	r25, Y+5	; 0x05
    3184:	84 30       	cpi	r24, 0x04	; 4
    3186:	91 05       	cpc	r25, r1
    3188:	09 f4       	brne	.+2      	; 0x318c <DIO_voidSetPinValue+0x14a>
    318a:	40 c0       	rjmp	.+128    	; 0x320c <DIO_voidSetPinValue+0x1ca>
    318c:	53 c0       	rjmp	.+166    	; 0x3234 <DIO_voidSetPinValue+0x1f2>
		{
			case DIO_u8PORTA: CLR_BIT(PORTA, Copy_u8PinNum); break;
    318e:	ab e3       	ldi	r26, 0x3B	; 59
    3190:	b0 e0       	ldi	r27, 0x00	; 0
    3192:	eb e3       	ldi	r30, 0x3B	; 59
    3194:	f0 e0       	ldi	r31, 0x00	; 0
    3196:	80 81       	ld	r24, Z
    3198:	48 2f       	mov	r20, r24
    319a:	8a 81       	ldd	r24, Y+2	; 0x02
    319c:	28 2f       	mov	r18, r24
    319e:	30 e0       	ldi	r19, 0x00	; 0
    31a0:	81 e0       	ldi	r24, 0x01	; 1
    31a2:	90 e0       	ldi	r25, 0x00	; 0
    31a4:	02 2e       	mov	r0, r18
    31a6:	02 c0       	rjmp	.+4      	; 0x31ac <DIO_voidSetPinValue+0x16a>
    31a8:	88 0f       	add	r24, r24
    31aa:	99 1f       	adc	r25, r25
    31ac:	0a 94       	dec	r0
    31ae:	e2 f7       	brpl	.-8      	; 0x31a8 <DIO_voidSetPinValue+0x166>
    31b0:	80 95       	com	r24
    31b2:	84 23       	and	r24, r20
    31b4:	8c 93       	st	X, r24
    31b6:	3e c0       	rjmp	.+124    	; 0x3234 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTB: CLR_BIT(PORTB, Copy_u8PinNum); break;
    31b8:	a8 e3       	ldi	r26, 0x38	; 56
    31ba:	b0 e0       	ldi	r27, 0x00	; 0
    31bc:	e8 e3       	ldi	r30, 0x38	; 56
    31be:	f0 e0       	ldi	r31, 0x00	; 0
    31c0:	80 81       	ld	r24, Z
    31c2:	48 2f       	mov	r20, r24
    31c4:	8a 81       	ldd	r24, Y+2	; 0x02
    31c6:	28 2f       	mov	r18, r24
    31c8:	30 e0       	ldi	r19, 0x00	; 0
    31ca:	81 e0       	ldi	r24, 0x01	; 1
    31cc:	90 e0       	ldi	r25, 0x00	; 0
    31ce:	02 2e       	mov	r0, r18
    31d0:	02 c0       	rjmp	.+4      	; 0x31d6 <DIO_voidSetPinValue+0x194>
    31d2:	88 0f       	add	r24, r24
    31d4:	99 1f       	adc	r25, r25
    31d6:	0a 94       	dec	r0
    31d8:	e2 f7       	brpl	.-8      	; 0x31d2 <DIO_voidSetPinValue+0x190>
    31da:	80 95       	com	r24
    31dc:	84 23       	and	r24, r20
    31de:	8c 93       	st	X, r24
    31e0:	29 c0       	rjmp	.+82     	; 0x3234 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTC: CLR_BIT(PORTC, Copy_u8PinNum); break;
    31e2:	a5 e3       	ldi	r26, 0x35	; 53
    31e4:	b0 e0       	ldi	r27, 0x00	; 0
    31e6:	e5 e3       	ldi	r30, 0x35	; 53
    31e8:	f0 e0       	ldi	r31, 0x00	; 0
    31ea:	80 81       	ld	r24, Z
    31ec:	48 2f       	mov	r20, r24
    31ee:	8a 81       	ldd	r24, Y+2	; 0x02
    31f0:	28 2f       	mov	r18, r24
    31f2:	30 e0       	ldi	r19, 0x00	; 0
    31f4:	81 e0       	ldi	r24, 0x01	; 1
    31f6:	90 e0       	ldi	r25, 0x00	; 0
    31f8:	02 2e       	mov	r0, r18
    31fa:	02 c0       	rjmp	.+4      	; 0x3200 <DIO_voidSetPinValue+0x1be>
    31fc:	88 0f       	add	r24, r24
    31fe:	99 1f       	adc	r25, r25
    3200:	0a 94       	dec	r0
    3202:	e2 f7       	brpl	.-8      	; 0x31fc <DIO_voidSetPinValue+0x1ba>
    3204:	80 95       	com	r24
    3206:	84 23       	and	r24, r20
    3208:	8c 93       	st	X, r24
    320a:	14 c0       	rjmp	.+40     	; 0x3234 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTD: CLR_BIT(PORTD, Copy_u8PinNum); break;
    320c:	a2 e3       	ldi	r26, 0x32	; 50
    320e:	b0 e0       	ldi	r27, 0x00	; 0
    3210:	e2 e3       	ldi	r30, 0x32	; 50
    3212:	f0 e0       	ldi	r31, 0x00	; 0
    3214:	80 81       	ld	r24, Z
    3216:	48 2f       	mov	r20, r24
    3218:	8a 81       	ldd	r24, Y+2	; 0x02
    321a:	28 2f       	mov	r18, r24
    321c:	30 e0       	ldi	r19, 0x00	; 0
    321e:	81 e0       	ldi	r24, 0x01	; 1
    3220:	90 e0       	ldi	r25, 0x00	; 0
    3222:	02 2e       	mov	r0, r18
    3224:	02 c0       	rjmp	.+4      	; 0x322a <DIO_voidSetPinValue+0x1e8>
    3226:	88 0f       	add	r24, r24
    3228:	99 1f       	adc	r25, r25
    322a:	0a 94       	dec	r0
    322c:	e2 f7       	brpl	.-8      	; 0x3226 <DIO_voidSetPinValue+0x1e4>
    322e:	80 95       	com	r24
    3230:	84 23       	and	r24, r20
    3232:	8c 93       	st	X, r24
			default:    /*return error*/      				  break;
		}
	} else{
		/*return error*/
	}
}
    3234:	27 96       	adiw	r28, 0x07	; 7
    3236:	0f b6       	in	r0, 0x3f	; 63
    3238:	f8 94       	cli
    323a:	de bf       	out	0x3e, r29	; 62
    323c:	0f be       	out	0x3f, r0	; 63
    323e:	cd bf       	out	0x3d, r28	; 61
    3240:	cf 91       	pop	r28
    3242:	df 91       	pop	r29
    3244:	08 95       	ret

00003246 <DIO_voidSetPortDirection>:
void DIO_voidSetPortDirection(u8 Copy_u8PortNum, u8 Copy_u8Mode){
    3246:	df 93       	push	r29
    3248:	cf 93       	push	r28
    324a:	00 d0       	rcall	.+0      	; 0x324c <DIO_voidSetPortDirection+0x6>
    324c:	00 d0       	rcall	.+0      	; 0x324e <DIO_voidSetPortDirection+0x8>
    324e:	cd b7       	in	r28, 0x3d	; 61
    3250:	de b7       	in	r29, 0x3e	; 62
    3252:	89 83       	std	Y+1, r24	; 0x01
    3254:	6a 83       	std	Y+2, r22	; 0x02
	switch (Copy_u8PortNum)
    3256:	89 81       	ldd	r24, Y+1	; 0x01
    3258:	28 2f       	mov	r18, r24
    325a:	30 e0       	ldi	r19, 0x00	; 0
    325c:	3c 83       	std	Y+4, r19	; 0x04
    325e:	2b 83       	std	Y+3, r18	; 0x03
    3260:	8b 81       	ldd	r24, Y+3	; 0x03
    3262:	9c 81       	ldd	r25, Y+4	; 0x04
    3264:	82 30       	cpi	r24, 0x02	; 2
    3266:	91 05       	cpc	r25, r1
    3268:	d9 f0       	breq	.+54     	; 0x32a0 <DIO_voidSetPortDirection+0x5a>
    326a:	2b 81       	ldd	r18, Y+3	; 0x03
    326c:	3c 81       	ldd	r19, Y+4	; 0x04
    326e:	23 30       	cpi	r18, 0x03	; 3
    3270:	31 05       	cpc	r19, r1
    3272:	34 f4       	brge	.+12     	; 0x3280 <DIO_voidSetPortDirection+0x3a>
    3274:	8b 81       	ldd	r24, Y+3	; 0x03
    3276:	9c 81       	ldd	r25, Y+4	; 0x04
    3278:	81 30       	cpi	r24, 0x01	; 1
    327a:	91 05       	cpc	r25, r1
    327c:	61 f0       	breq	.+24     	; 0x3296 <DIO_voidSetPortDirection+0x50>
    327e:	1e c0       	rjmp	.+60     	; 0x32bc <DIO_voidSetPortDirection+0x76>
    3280:	2b 81       	ldd	r18, Y+3	; 0x03
    3282:	3c 81       	ldd	r19, Y+4	; 0x04
    3284:	23 30       	cpi	r18, 0x03	; 3
    3286:	31 05       	cpc	r19, r1
    3288:	81 f0       	breq	.+32     	; 0x32aa <DIO_voidSetPortDirection+0x64>
    328a:	8b 81       	ldd	r24, Y+3	; 0x03
    328c:	9c 81       	ldd	r25, Y+4	; 0x04
    328e:	84 30       	cpi	r24, 0x04	; 4
    3290:	91 05       	cpc	r25, r1
    3292:	81 f0       	breq	.+32     	; 0x32b4 <DIO_voidSetPortDirection+0x6e>
    3294:	13 c0       	rjmp	.+38     	; 0x32bc <DIO_voidSetPortDirection+0x76>
	{
		case DIO_u8PORTA: DDRA = Copy_u8Mode; break;
    3296:	ea e3       	ldi	r30, 0x3A	; 58
    3298:	f0 e0       	ldi	r31, 0x00	; 0
    329a:	8a 81       	ldd	r24, Y+2	; 0x02
    329c:	80 83       	st	Z, r24
    329e:	0e c0       	rjmp	.+28     	; 0x32bc <DIO_voidSetPortDirection+0x76>
		case DIO_u8PORTB: DDRB = Copy_u8Mode; break;
    32a0:	e7 e3       	ldi	r30, 0x37	; 55
    32a2:	f0 e0       	ldi	r31, 0x00	; 0
    32a4:	8a 81       	ldd	r24, Y+2	; 0x02
    32a6:	80 83       	st	Z, r24
    32a8:	09 c0       	rjmp	.+18     	; 0x32bc <DIO_voidSetPortDirection+0x76>
		case DIO_u8PORTC: DDRC = Copy_u8Mode; break;
    32aa:	e4 e3       	ldi	r30, 0x34	; 52
    32ac:	f0 e0       	ldi	r31, 0x00	; 0
    32ae:	8a 81       	ldd	r24, Y+2	; 0x02
    32b0:	80 83       	st	Z, r24
    32b2:	04 c0       	rjmp	.+8      	; 0x32bc <DIO_voidSetPortDirection+0x76>
		case DIO_u8PORTD: DDRD = Copy_u8Mode; break;
    32b4:	e1 e3       	ldi	r30, 0x31	; 49
    32b6:	f0 e0       	ldi	r31, 0x00	; 0
    32b8:	8a 81       	ldd	r24, Y+2	; 0x02
    32ba:	80 83       	st	Z, r24
		default:    /*return error*/      	  break;
	}
}
    32bc:	0f 90       	pop	r0
    32be:	0f 90       	pop	r0
    32c0:	0f 90       	pop	r0
    32c2:	0f 90       	pop	r0
    32c4:	cf 91       	pop	r28
    32c6:	df 91       	pop	r29
    32c8:	08 95       	ret

000032ca <DIO_voidSetPortValue>:
void DIO_voidSetPortValue(u8 Copy_u8PortNum, u8 Copy_u8Value){
    32ca:	df 93       	push	r29
    32cc:	cf 93       	push	r28
    32ce:	00 d0       	rcall	.+0      	; 0x32d0 <DIO_voidSetPortValue+0x6>
    32d0:	00 d0       	rcall	.+0      	; 0x32d2 <DIO_voidSetPortValue+0x8>
    32d2:	cd b7       	in	r28, 0x3d	; 61
    32d4:	de b7       	in	r29, 0x3e	; 62
    32d6:	89 83       	std	Y+1, r24	; 0x01
    32d8:	6a 83       	std	Y+2, r22	; 0x02
	switch (Copy_u8PortNum)
    32da:	89 81       	ldd	r24, Y+1	; 0x01
    32dc:	28 2f       	mov	r18, r24
    32de:	30 e0       	ldi	r19, 0x00	; 0
    32e0:	3c 83       	std	Y+4, r19	; 0x04
    32e2:	2b 83       	std	Y+3, r18	; 0x03
    32e4:	8b 81       	ldd	r24, Y+3	; 0x03
    32e6:	9c 81       	ldd	r25, Y+4	; 0x04
    32e8:	82 30       	cpi	r24, 0x02	; 2
    32ea:	91 05       	cpc	r25, r1
    32ec:	d9 f0       	breq	.+54     	; 0x3324 <DIO_voidSetPortValue+0x5a>
    32ee:	2b 81       	ldd	r18, Y+3	; 0x03
    32f0:	3c 81       	ldd	r19, Y+4	; 0x04
    32f2:	23 30       	cpi	r18, 0x03	; 3
    32f4:	31 05       	cpc	r19, r1
    32f6:	34 f4       	brge	.+12     	; 0x3304 <DIO_voidSetPortValue+0x3a>
    32f8:	8b 81       	ldd	r24, Y+3	; 0x03
    32fa:	9c 81       	ldd	r25, Y+4	; 0x04
    32fc:	81 30       	cpi	r24, 0x01	; 1
    32fe:	91 05       	cpc	r25, r1
    3300:	61 f0       	breq	.+24     	; 0x331a <DIO_voidSetPortValue+0x50>
    3302:	1e c0       	rjmp	.+60     	; 0x3340 <DIO_voidSetPortValue+0x76>
    3304:	2b 81       	ldd	r18, Y+3	; 0x03
    3306:	3c 81       	ldd	r19, Y+4	; 0x04
    3308:	23 30       	cpi	r18, 0x03	; 3
    330a:	31 05       	cpc	r19, r1
    330c:	81 f0       	breq	.+32     	; 0x332e <DIO_voidSetPortValue+0x64>
    330e:	8b 81       	ldd	r24, Y+3	; 0x03
    3310:	9c 81       	ldd	r25, Y+4	; 0x04
    3312:	84 30       	cpi	r24, 0x04	; 4
    3314:	91 05       	cpc	r25, r1
    3316:	81 f0       	breq	.+32     	; 0x3338 <DIO_voidSetPortValue+0x6e>
    3318:	13 c0       	rjmp	.+38     	; 0x3340 <DIO_voidSetPortValue+0x76>
	{
		case DIO_u8PORTA: PORTA = Copy_u8Value; break;
    331a:	eb e3       	ldi	r30, 0x3B	; 59
    331c:	f0 e0       	ldi	r31, 0x00	; 0
    331e:	8a 81       	ldd	r24, Y+2	; 0x02
    3320:	80 83       	st	Z, r24
    3322:	0e c0       	rjmp	.+28     	; 0x3340 <DIO_voidSetPortValue+0x76>
		case DIO_u8PORTB: PORTB = Copy_u8Value; break;
    3324:	e8 e3       	ldi	r30, 0x38	; 56
    3326:	f0 e0       	ldi	r31, 0x00	; 0
    3328:	8a 81       	ldd	r24, Y+2	; 0x02
    332a:	80 83       	st	Z, r24
    332c:	09 c0       	rjmp	.+18     	; 0x3340 <DIO_voidSetPortValue+0x76>
		case DIO_u8PORTC: PORTC = Copy_u8Value; break;
    332e:	e5 e3       	ldi	r30, 0x35	; 53
    3330:	f0 e0       	ldi	r31, 0x00	; 0
    3332:	8a 81       	ldd	r24, Y+2	; 0x02
    3334:	80 83       	st	Z, r24
    3336:	04 c0       	rjmp	.+8      	; 0x3340 <DIO_voidSetPortValue+0x76>
		case DIO_u8PORTD: PORTD = Copy_u8Value; break;
    3338:	e2 e3       	ldi	r30, 0x32	; 50
    333a:	f0 e0       	ldi	r31, 0x00	; 0
    333c:	8a 81       	ldd	r24, Y+2	; 0x02
    333e:	80 83       	st	Z, r24
		default:    /*return error*/      	  break;
	}
}
    3340:	0f 90       	pop	r0
    3342:	0f 90       	pop	r0
    3344:	0f 90       	pop	r0
    3346:	0f 90       	pop	r0
    3348:	cf 91       	pop	r28
    334a:	df 91       	pop	r29
    334c:	08 95       	ret

0000334e <DIO_voidToggleValue>:
void DIO_voidToggleValue(u8 Copy_u8PortNum, u8 Copy_u8PinNum){
    334e:	df 93       	push	r29
    3350:	cf 93       	push	r28
    3352:	00 d0       	rcall	.+0      	; 0x3354 <DIO_voidToggleValue+0x6>
    3354:	00 d0       	rcall	.+0      	; 0x3356 <DIO_voidToggleValue+0x8>
    3356:	cd b7       	in	r28, 0x3d	; 61
    3358:	de b7       	in	r29, 0x3e	; 62
    335a:	89 83       	std	Y+1, r24	; 0x01
    335c:	6a 83       	std	Y+2, r22	; 0x02
	switch (Copy_u8PortNum)
    335e:	89 81       	ldd	r24, Y+1	; 0x01
    3360:	28 2f       	mov	r18, r24
    3362:	30 e0       	ldi	r19, 0x00	; 0
    3364:	3c 83       	std	Y+4, r19	; 0x04
    3366:	2b 83       	std	Y+3, r18	; 0x03
    3368:	8b 81       	ldd	r24, Y+3	; 0x03
    336a:	9c 81       	ldd	r25, Y+4	; 0x04
    336c:	82 30       	cpi	r24, 0x02	; 2
    336e:	91 05       	cpc	r25, r1
    3370:	51 f1       	breq	.+84     	; 0x33c6 <DIO_voidToggleValue+0x78>
    3372:	2b 81       	ldd	r18, Y+3	; 0x03
    3374:	3c 81       	ldd	r19, Y+4	; 0x04
    3376:	23 30       	cpi	r18, 0x03	; 3
    3378:	31 05       	cpc	r19, r1
    337a:	34 f4       	brge	.+12     	; 0x3388 <DIO_voidToggleValue+0x3a>
    337c:	8b 81       	ldd	r24, Y+3	; 0x03
    337e:	9c 81       	ldd	r25, Y+4	; 0x04
    3380:	81 30       	cpi	r24, 0x01	; 1
    3382:	91 05       	cpc	r25, r1
    3384:	61 f0       	breq	.+24     	; 0x339e <DIO_voidToggleValue+0x50>
    3386:	5a c0       	rjmp	.+180    	; 0x343c <DIO_voidToggleValue+0xee>
    3388:	2b 81       	ldd	r18, Y+3	; 0x03
    338a:	3c 81       	ldd	r19, Y+4	; 0x04
    338c:	23 30       	cpi	r18, 0x03	; 3
    338e:	31 05       	cpc	r19, r1
    3390:	71 f1       	breq	.+92     	; 0x33ee <DIO_voidToggleValue+0xa0>
    3392:	8b 81       	ldd	r24, Y+3	; 0x03
    3394:	9c 81       	ldd	r25, Y+4	; 0x04
    3396:	84 30       	cpi	r24, 0x04	; 4
    3398:	91 05       	cpc	r25, r1
    339a:	e9 f1       	breq	.+122    	; 0x3416 <DIO_voidToggleValue+0xc8>
    339c:	4f c0       	rjmp	.+158    	; 0x343c <DIO_voidToggleValue+0xee>
	{
		case DIO_u8PORTA: TOGGLE_BIT(PORTA,Copy_u8PinNum); break;
    339e:	ab e3       	ldi	r26, 0x3B	; 59
    33a0:	b0 e0       	ldi	r27, 0x00	; 0
    33a2:	eb e3       	ldi	r30, 0x3B	; 59
    33a4:	f0 e0       	ldi	r31, 0x00	; 0
    33a6:	80 81       	ld	r24, Z
    33a8:	48 2f       	mov	r20, r24
    33aa:	8a 81       	ldd	r24, Y+2	; 0x02
    33ac:	28 2f       	mov	r18, r24
    33ae:	30 e0       	ldi	r19, 0x00	; 0
    33b0:	81 e0       	ldi	r24, 0x01	; 1
    33b2:	90 e0       	ldi	r25, 0x00	; 0
    33b4:	02 2e       	mov	r0, r18
    33b6:	02 c0       	rjmp	.+4      	; 0x33bc <DIO_voidToggleValue+0x6e>
    33b8:	88 0f       	add	r24, r24
    33ba:	99 1f       	adc	r25, r25
    33bc:	0a 94       	dec	r0
    33be:	e2 f7       	brpl	.-8      	; 0x33b8 <DIO_voidToggleValue+0x6a>
    33c0:	84 27       	eor	r24, r20
    33c2:	8c 93       	st	X, r24
    33c4:	3b c0       	rjmp	.+118    	; 0x343c <DIO_voidToggleValue+0xee>
		case DIO_u8PORTB: TOGGLE_BIT(PORTB,Copy_u8PinNum); break;
    33c6:	a8 e3       	ldi	r26, 0x38	; 56
    33c8:	b0 e0       	ldi	r27, 0x00	; 0
    33ca:	e8 e3       	ldi	r30, 0x38	; 56
    33cc:	f0 e0       	ldi	r31, 0x00	; 0
    33ce:	80 81       	ld	r24, Z
    33d0:	48 2f       	mov	r20, r24
    33d2:	8a 81       	ldd	r24, Y+2	; 0x02
    33d4:	28 2f       	mov	r18, r24
    33d6:	30 e0       	ldi	r19, 0x00	; 0
    33d8:	81 e0       	ldi	r24, 0x01	; 1
    33da:	90 e0       	ldi	r25, 0x00	; 0
    33dc:	02 2e       	mov	r0, r18
    33de:	02 c0       	rjmp	.+4      	; 0x33e4 <DIO_voidToggleValue+0x96>
    33e0:	88 0f       	add	r24, r24
    33e2:	99 1f       	adc	r25, r25
    33e4:	0a 94       	dec	r0
    33e6:	e2 f7       	brpl	.-8      	; 0x33e0 <DIO_voidToggleValue+0x92>
    33e8:	84 27       	eor	r24, r20
    33ea:	8c 93       	st	X, r24
    33ec:	27 c0       	rjmp	.+78     	; 0x343c <DIO_voidToggleValue+0xee>
		case DIO_u8PORTC: TOGGLE_BIT(PORTC,Copy_u8PinNum); break;
    33ee:	a5 e3       	ldi	r26, 0x35	; 53
    33f0:	b0 e0       	ldi	r27, 0x00	; 0
    33f2:	e5 e3       	ldi	r30, 0x35	; 53
    33f4:	f0 e0       	ldi	r31, 0x00	; 0
    33f6:	80 81       	ld	r24, Z
    33f8:	48 2f       	mov	r20, r24
    33fa:	8a 81       	ldd	r24, Y+2	; 0x02
    33fc:	28 2f       	mov	r18, r24
    33fe:	30 e0       	ldi	r19, 0x00	; 0
    3400:	81 e0       	ldi	r24, 0x01	; 1
    3402:	90 e0       	ldi	r25, 0x00	; 0
    3404:	02 2e       	mov	r0, r18
    3406:	02 c0       	rjmp	.+4      	; 0x340c <DIO_voidToggleValue+0xbe>
    3408:	88 0f       	add	r24, r24
    340a:	99 1f       	adc	r25, r25
    340c:	0a 94       	dec	r0
    340e:	e2 f7       	brpl	.-8      	; 0x3408 <DIO_voidToggleValue+0xba>
    3410:	84 27       	eor	r24, r20
    3412:	8c 93       	st	X, r24
    3414:	13 c0       	rjmp	.+38     	; 0x343c <DIO_voidToggleValue+0xee>
		case DIO_u8PORTD: TOGGLE_BIT(PORTD,Copy_u8PinNum); break;
    3416:	a2 e3       	ldi	r26, 0x32	; 50
    3418:	b0 e0       	ldi	r27, 0x00	; 0
    341a:	e2 e3       	ldi	r30, 0x32	; 50
    341c:	f0 e0       	ldi	r31, 0x00	; 0
    341e:	80 81       	ld	r24, Z
    3420:	48 2f       	mov	r20, r24
    3422:	8a 81       	ldd	r24, Y+2	; 0x02
    3424:	28 2f       	mov	r18, r24
    3426:	30 e0       	ldi	r19, 0x00	; 0
    3428:	81 e0       	ldi	r24, 0x01	; 1
    342a:	90 e0       	ldi	r25, 0x00	; 0
    342c:	02 2e       	mov	r0, r18
    342e:	02 c0       	rjmp	.+4      	; 0x3434 <DIO_voidToggleValue+0xe6>
    3430:	88 0f       	add	r24, r24
    3432:	99 1f       	adc	r25, r25
    3434:	0a 94       	dec	r0
    3436:	e2 f7       	brpl	.-8      	; 0x3430 <DIO_voidToggleValue+0xe2>
    3438:	84 27       	eor	r24, r20
    343a:	8c 93       	st	X, r24
		default:    /*return error*/      	  break;
	}
}
    343c:	0f 90       	pop	r0
    343e:	0f 90       	pop	r0
    3440:	0f 90       	pop	r0
    3442:	0f 90       	pop	r0
    3444:	cf 91       	pop	r28
    3446:	df 91       	pop	r29
    3448:	08 95       	ret

0000344a <DIO_u8GetPinValue>:
u8 DIO_u8GetPinValue(u8 Copy_u8PortNum, u8 Copy_u8PinNum){
    344a:	df 93       	push	r29
    344c:	cf 93       	push	r28
    344e:	00 d0       	rcall	.+0      	; 0x3450 <DIO_u8GetPinValue+0x6>
    3450:	00 d0       	rcall	.+0      	; 0x3452 <DIO_u8GetPinValue+0x8>
    3452:	0f 92       	push	r0
    3454:	cd b7       	in	r28, 0x3d	; 61
    3456:	de b7       	in	r29, 0x3e	; 62
    3458:	8a 83       	std	Y+2, r24	; 0x02
    345a:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8Result = 0;
    345c:	19 82       	std	Y+1, r1	; 0x01

	switch (Copy_u8PortNum)
    345e:	8a 81       	ldd	r24, Y+2	; 0x02
    3460:	28 2f       	mov	r18, r24
    3462:	30 e0       	ldi	r19, 0x00	; 0
    3464:	3d 83       	std	Y+5, r19	; 0x05
    3466:	2c 83       	std	Y+4, r18	; 0x04
    3468:	4c 81       	ldd	r20, Y+4	; 0x04
    346a:	5d 81       	ldd	r21, Y+5	; 0x05
    346c:	42 30       	cpi	r20, 0x02	; 2
    346e:	51 05       	cpc	r21, r1
    3470:	41 f1       	breq	.+80     	; 0x34c2 <DIO_u8GetPinValue+0x78>
    3472:	8c 81       	ldd	r24, Y+4	; 0x04
    3474:	9d 81       	ldd	r25, Y+5	; 0x05
    3476:	83 30       	cpi	r24, 0x03	; 3
    3478:	91 05       	cpc	r25, r1
    347a:	34 f4       	brge	.+12     	; 0x3488 <DIO_u8GetPinValue+0x3e>
    347c:	2c 81       	ldd	r18, Y+4	; 0x04
    347e:	3d 81       	ldd	r19, Y+5	; 0x05
    3480:	21 30       	cpi	r18, 0x01	; 1
    3482:	31 05       	cpc	r19, r1
    3484:	61 f0       	breq	.+24     	; 0x349e <DIO_u8GetPinValue+0x54>
    3486:	52 c0       	rjmp	.+164    	; 0x352c <DIO_u8GetPinValue+0xe2>
    3488:	4c 81       	ldd	r20, Y+4	; 0x04
    348a:	5d 81       	ldd	r21, Y+5	; 0x05
    348c:	43 30       	cpi	r20, 0x03	; 3
    348e:	51 05       	cpc	r21, r1
    3490:	51 f1       	breq	.+84     	; 0x34e6 <DIO_u8GetPinValue+0x9c>
    3492:	8c 81       	ldd	r24, Y+4	; 0x04
    3494:	9d 81       	ldd	r25, Y+5	; 0x05
    3496:	84 30       	cpi	r24, 0x04	; 4
    3498:	91 05       	cpc	r25, r1
    349a:	b9 f1       	breq	.+110    	; 0x350a <DIO_u8GetPinValue+0xc0>
    349c:	47 c0       	rjmp	.+142    	; 0x352c <DIO_u8GetPinValue+0xe2>
	{
		case DIO_u8PORTA: Local_u8Result = GET_BIT(PINA, Copy_u8PinNum); break;
    349e:	e9 e3       	ldi	r30, 0x39	; 57
    34a0:	f0 e0       	ldi	r31, 0x00	; 0
    34a2:	80 81       	ld	r24, Z
    34a4:	28 2f       	mov	r18, r24
    34a6:	30 e0       	ldi	r19, 0x00	; 0
    34a8:	8b 81       	ldd	r24, Y+3	; 0x03
    34aa:	88 2f       	mov	r24, r24
    34ac:	90 e0       	ldi	r25, 0x00	; 0
    34ae:	a9 01       	movw	r20, r18
    34b0:	02 c0       	rjmp	.+4      	; 0x34b6 <DIO_u8GetPinValue+0x6c>
    34b2:	55 95       	asr	r21
    34b4:	47 95       	ror	r20
    34b6:	8a 95       	dec	r24
    34b8:	e2 f7       	brpl	.-8      	; 0x34b2 <DIO_u8GetPinValue+0x68>
    34ba:	ca 01       	movw	r24, r20
    34bc:	81 70       	andi	r24, 0x01	; 1
    34be:	89 83       	std	Y+1, r24	; 0x01
    34c0:	35 c0       	rjmp	.+106    	; 0x352c <DIO_u8GetPinValue+0xe2>
		case DIO_u8PORTB: Local_u8Result = GET_BIT(PINB, Copy_u8PinNum); break;
    34c2:	e6 e3       	ldi	r30, 0x36	; 54
    34c4:	f0 e0       	ldi	r31, 0x00	; 0
    34c6:	80 81       	ld	r24, Z
    34c8:	28 2f       	mov	r18, r24
    34ca:	30 e0       	ldi	r19, 0x00	; 0
    34cc:	8b 81       	ldd	r24, Y+3	; 0x03
    34ce:	88 2f       	mov	r24, r24
    34d0:	90 e0       	ldi	r25, 0x00	; 0
    34d2:	a9 01       	movw	r20, r18
    34d4:	02 c0       	rjmp	.+4      	; 0x34da <DIO_u8GetPinValue+0x90>
    34d6:	55 95       	asr	r21
    34d8:	47 95       	ror	r20
    34da:	8a 95       	dec	r24
    34dc:	e2 f7       	brpl	.-8      	; 0x34d6 <DIO_u8GetPinValue+0x8c>
    34de:	ca 01       	movw	r24, r20
    34e0:	81 70       	andi	r24, 0x01	; 1
    34e2:	89 83       	std	Y+1, r24	; 0x01
    34e4:	23 c0       	rjmp	.+70     	; 0x352c <DIO_u8GetPinValue+0xe2>
		case DIO_u8PORTC: Local_u8Result = GET_BIT(PINC, Copy_u8PinNum); break;
    34e6:	e3 e3       	ldi	r30, 0x33	; 51
    34e8:	f0 e0       	ldi	r31, 0x00	; 0
    34ea:	80 81       	ld	r24, Z
    34ec:	28 2f       	mov	r18, r24
    34ee:	30 e0       	ldi	r19, 0x00	; 0
    34f0:	8b 81       	ldd	r24, Y+3	; 0x03
    34f2:	88 2f       	mov	r24, r24
    34f4:	90 e0       	ldi	r25, 0x00	; 0
    34f6:	a9 01       	movw	r20, r18
    34f8:	02 c0       	rjmp	.+4      	; 0x34fe <DIO_u8GetPinValue+0xb4>
    34fa:	55 95       	asr	r21
    34fc:	47 95       	ror	r20
    34fe:	8a 95       	dec	r24
    3500:	e2 f7       	brpl	.-8      	; 0x34fa <DIO_u8GetPinValue+0xb0>
    3502:	ca 01       	movw	r24, r20
    3504:	81 70       	andi	r24, 0x01	; 1
    3506:	89 83       	std	Y+1, r24	; 0x01
    3508:	11 c0       	rjmp	.+34     	; 0x352c <DIO_u8GetPinValue+0xe2>
		case DIO_u8PORTD: Local_u8Result = GET_BIT(PIND, Copy_u8PinNum); break;
    350a:	e0 e3       	ldi	r30, 0x30	; 48
    350c:	f0 e0       	ldi	r31, 0x00	; 0
    350e:	80 81       	ld	r24, Z
    3510:	28 2f       	mov	r18, r24
    3512:	30 e0       	ldi	r19, 0x00	; 0
    3514:	8b 81       	ldd	r24, Y+3	; 0x03
    3516:	88 2f       	mov	r24, r24
    3518:	90 e0       	ldi	r25, 0x00	; 0
    351a:	a9 01       	movw	r20, r18
    351c:	02 c0       	rjmp	.+4      	; 0x3522 <DIO_u8GetPinValue+0xd8>
    351e:	55 95       	asr	r21
    3520:	47 95       	ror	r20
    3522:	8a 95       	dec	r24
    3524:	e2 f7       	brpl	.-8      	; 0x351e <DIO_u8GetPinValue+0xd4>
    3526:	ca 01       	movw	r24, r20
    3528:	81 70       	andi	r24, 0x01	; 1
    352a:	89 83       	std	Y+1, r24	; 0x01
		default:    /*return error*/      								   break;
	}
	return Local_u8Result;
    352c:	89 81       	ldd	r24, Y+1	; 0x01
}
    352e:	0f 90       	pop	r0
    3530:	0f 90       	pop	r0
    3532:	0f 90       	pop	r0
    3534:	0f 90       	pop	r0
    3536:	0f 90       	pop	r0
    3538:	cf 91       	pop	r28
    353a:	df 91       	pop	r29
    353c:	08 95       	ret

0000353e <LDR_init>:

#include "../../01-LIB/STD_TYPES.h"
#include "../../04-MCAL/03-ADC/ADC_Interface.h"
#include "LDR_Interface.h"

void LDR_init(void){
    353e:	df 93       	push	r29
    3540:	cf 93       	push	r28
    3542:	cd b7       	in	r28, 0x3d	; 61
    3544:	de b7       	in	r29, 0x3e	; 62
	ADC_voidInit();
    3546:	0e 94 b1 15 	call	0x2b62	; 0x2b62 <ADC_voidInit>
}
    354a:	cf 91       	pop	r28
    354c:	df 91       	pop	r29
    354e:	08 95       	ret

00003550 <LDR_CallValue>:

u16 LDR_CallValue(void){
    3550:	df 93       	push	r29
    3552:	cf 93       	push	r28
    3554:	00 d0       	rcall	.+0      	; 0x3556 <LDR_CallValue+0x6>
    3556:	cd b7       	in	r28, 0x3d	; 61
    3558:	de b7       	in	r29, 0x3e	; 62
	u16 Local_u16Digital = ADC_u8StartConversion(ADC_CHANNEL);
    355a:	80 e0       	ldi	r24, 0x00	; 0
    355c:	0e 94 f7 15 	call	0x2bee	; 0x2bee <ADC_u8StartConversion>
    3560:	9a 83       	std	Y+2, r25	; 0x02
    3562:	89 83       	std	Y+1, r24	; 0x01
/* 	if (digital > 512){
		MDIO_vSetPinValue(PORT_D,0,LOW);
	}else {
		MDIO_vSetPinValue(PORT_D,0,HIGH);
	} */
	return Local_u16Digital;
    3564:	89 81       	ldd	r24, Y+1	; 0x01
    3566:	9a 81       	ldd	r25, Y+2	; 0x02
}
    3568:	0f 90       	pop	r0
    356a:	0f 90       	pop	r0
    356c:	cf 91       	pop	r28
    356e:	df 91       	pop	r29
    3570:	08 95       	ret

00003572 <POT_init>:

#include "../../01-LIB/STD_TYPES.h"
#include "../../04-MCAL/03-ADC/ADC_Interface.h"
#include "POT_Interface.h"

void POT_init(void){
    3572:	df 93       	push	r29
    3574:	cf 93       	push	r28
    3576:	cd b7       	in	r28, 0x3d	; 61
    3578:	de b7       	in	r29, 0x3e	; 62
	ADC_voidInit();
    357a:	0e 94 b1 15 	call	0x2b62	; 0x2b62 <ADC_voidInit>
}
    357e:	cf 91       	pop	r28
    3580:	df 91       	pop	r29
    3582:	08 95       	ret

00003584 <POT_CallValue>:

void POT_CallValue(u32 * Copy_u8Digital, u32 * Copy_u8Volt){
    3584:	df 93       	push	r29
    3586:	cf 93       	push	r28
    3588:	cd b7       	in	r28, 0x3d	; 61
    358a:	de b7       	in	r29, 0x3e	; 62
    358c:	2c 97       	sbiw	r28, 0x0c	; 12
    358e:	0f b6       	in	r0, 0x3f	; 63
    3590:	f8 94       	cli
    3592:	de bf       	out	0x3e, r29	; 62
    3594:	0f be       	out	0x3f, r0	; 63
    3596:	cd bf       	out	0x3d, r28	; 61
    3598:	9a 87       	std	Y+10, r25	; 0x0a
    359a:	89 87       	std	Y+9, r24	; 0x09
    359c:	7c 87       	std	Y+12, r23	; 0x0c
    359e:	6b 87       	std	Y+11, r22	; 0x0b
	u32 Local_u32Digital = ADC_u8StartConversion(ADC_CHANNEL);
    35a0:	80 e0       	ldi	r24, 0x00	; 0
    35a2:	0e 94 f7 15 	call	0x2bee	; 0x2bee <ADC_u8StartConversion>
    35a6:	cc 01       	movw	r24, r24
    35a8:	a0 e0       	ldi	r26, 0x00	; 0
    35aa:	b0 e0       	ldi	r27, 0x00	; 0
    35ac:	8d 83       	std	Y+5, r24	; 0x05
    35ae:	9e 83       	std	Y+6, r25	; 0x06
    35b0:	af 83       	std	Y+7, r26	; 0x07
    35b2:	b8 87       	std	Y+8, r27	; 0x08
	u32 Local_u32Volt    = (Local_u32Digital*5)/1023;
    35b4:	2d 81       	ldd	r18, Y+5	; 0x05
    35b6:	3e 81       	ldd	r19, Y+6	; 0x06
    35b8:	4f 81       	ldd	r20, Y+7	; 0x07
    35ba:	58 85       	ldd	r21, Y+8	; 0x08
    35bc:	da 01       	movw	r26, r20
    35be:	c9 01       	movw	r24, r18
    35c0:	88 0f       	add	r24, r24
    35c2:	99 1f       	adc	r25, r25
    35c4:	aa 1f       	adc	r26, r26
    35c6:	bb 1f       	adc	r27, r27
    35c8:	88 0f       	add	r24, r24
    35ca:	99 1f       	adc	r25, r25
    35cc:	aa 1f       	adc	r26, r26
    35ce:	bb 1f       	adc	r27, r27
    35d0:	82 0f       	add	r24, r18
    35d2:	93 1f       	adc	r25, r19
    35d4:	a4 1f       	adc	r26, r20
    35d6:	b5 1f       	adc	r27, r21
    35d8:	2f ef       	ldi	r18, 0xFF	; 255
    35da:	33 e0       	ldi	r19, 0x03	; 3
    35dc:	40 e0       	ldi	r20, 0x00	; 0
    35de:	50 e0       	ldi	r21, 0x00	; 0
    35e0:	bc 01       	movw	r22, r24
    35e2:	cd 01       	movw	r24, r26
    35e4:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    35e8:	da 01       	movw	r26, r20
    35ea:	c9 01       	movw	r24, r18
    35ec:	89 83       	std	Y+1, r24	; 0x01
    35ee:	9a 83       	std	Y+2, r25	; 0x02
    35f0:	ab 83       	std	Y+3, r26	; 0x03
    35f2:	bc 83       	std	Y+4, r27	; 0x04

	*Copy_u8Digital = Local_u32Digital;
    35f4:	e9 85       	ldd	r30, Y+9	; 0x09
    35f6:	fa 85       	ldd	r31, Y+10	; 0x0a
    35f8:	8d 81       	ldd	r24, Y+5	; 0x05
    35fa:	9e 81       	ldd	r25, Y+6	; 0x06
    35fc:	af 81       	ldd	r26, Y+7	; 0x07
    35fe:	b8 85       	ldd	r27, Y+8	; 0x08
    3600:	80 83       	st	Z, r24
    3602:	91 83       	std	Z+1, r25	; 0x01
    3604:	a2 83       	std	Z+2, r26	; 0x02
    3606:	b3 83       	std	Z+3, r27	; 0x03
	*Copy_u8Volt    = Local_u32Volt;
    3608:	eb 85       	ldd	r30, Y+11	; 0x0b
    360a:	fc 85       	ldd	r31, Y+12	; 0x0c
    360c:	89 81       	ldd	r24, Y+1	; 0x01
    360e:	9a 81       	ldd	r25, Y+2	; 0x02
    3610:	ab 81       	ldd	r26, Y+3	; 0x03
    3612:	bc 81       	ldd	r27, Y+4	; 0x04
    3614:	80 83       	st	Z, r24
    3616:	91 83       	std	Z+1, r25	; 0x01
    3618:	a2 83       	std	Z+2, r26	; 0x02
    361a:	b3 83       	std	Z+3, r27	; 0x03
}
    361c:	2c 96       	adiw	r28, 0x0c	; 12
    361e:	0f b6       	in	r0, 0x3f	; 63
    3620:	f8 94       	cli
    3622:	de bf       	out	0x3e, r29	; 62
    3624:	0f be       	out	0x3f, r0	; 63
    3626:	cd bf       	out	0x3d, r28	; 61
    3628:	cf 91       	pop	r28
    362a:	df 91       	pop	r29
    362c:	08 95       	ret

0000362e <LM35_init>:

#include "../../01-LIB/STD_TYPES.h"
#include "../../04-MCAL/03-ADC/ADC_Interface.h"
#include "LM35_Interface.h"

void LM35_init(void){
    362e:	df 93       	push	r29
    3630:	cf 93       	push	r28
    3632:	cd b7       	in	r28, 0x3d	; 61
    3634:	de b7       	in	r29, 0x3e	; 62
	ADC_voidInit();
    3636:	0e 94 b1 15 	call	0x2b62	; 0x2b62 <ADC_voidInit>
}
    363a:	cf 91       	pop	r28
    363c:	df 91       	pop	r29
    363e:	08 95       	ret

00003640 <LM35_CallValue>:

u32 LM35_CallValue(void){
    3640:	df 93       	push	r29
    3642:	cf 93       	push	r28
    3644:	cd b7       	in	r28, 0x3d	; 61
    3646:	de b7       	in	r29, 0x3e	; 62
    3648:	2c 97       	sbiw	r28, 0x0c	; 12
    364a:	0f b6       	in	r0, 0x3f	; 63
    364c:	f8 94       	cli
    364e:	de bf       	out	0x3e, r29	; 62
    3650:	0f be       	out	0x3f, r0	; 63
    3652:	cd bf       	out	0x3d, r28	; 61
	u32 Local_u32Digital = ADC_u8StartConversion(ADC_CHANNEL);
    3654:	80 e0       	ldi	r24, 0x00	; 0
    3656:	0e 94 f7 15 	call	0x2bee	; 0x2bee <ADC_u8StartConversion>
    365a:	cc 01       	movw	r24, r24
    365c:	a0 e0       	ldi	r26, 0x00	; 0
    365e:	b0 e0       	ldi	r27, 0x00	; 0
    3660:	89 87       	std	Y+9, r24	; 0x09
    3662:	9a 87       	std	Y+10, r25	; 0x0a
    3664:	ab 87       	std	Y+11, r26	; 0x0b
    3666:	bc 87       	std	Y+12, r27	; 0x0c
	u32 Local_u32Analog  = (Local_u32Digital*5000)/1024;
    3668:	89 85       	ldd	r24, Y+9	; 0x09
    366a:	9a 85       	ldd	r25, Y+10	; 0x0a
    366c:	ab 85       	ldd	r26, Y+11	; 0x0b
    366e:	bc 85       	ldd	r27, Y+12	; 0x0c
    3670:	28 e8       	ldi	r18, 0x88	; 136
    3672:	33 e1       	ldi	r19, 0x13	; 19
    3674:	40 e0       	ldi	r20, 0x00	; 0
    3676:	50 e0       	ldi	r21, 0x00	; 0
    3678:	bc 01       	movw	r22, r24
    367a:	cd 01       	movw	r24, r26
    367c:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
    3680:	dc 01       	movw	r26, r24
    3682:	cb 01       	movw	r24, r22
    3684:	07 2e       	mov	r0, r23
    3686:	7a e0       	ldi	r23, 0x0A	; 10
    3688:	b6 95       	lsr	r27
    368a:	a7 95       	ror	r26
    368c:	97 95       	ror	r25
    368e:	87 95       	ror	r24
    3690:	7a 95       	dec	r23
    3692:	d1 f7       	brne	.-12     	; 0x3688 <LM35_CallValue+0x48>
    3694:	70 2d       	mov	r23, r0
    3696:	8d 83       	std	Y+5, r24	; 0x05
    3698:	9e 83       	std	Y+6, r25	; 0x06
    369a:	af 83       	std	Y+7, r26	; 0x07
    369c:	b8 87       	std	Y+8, r27	; 0x08
	u32 Local_u32Temp    = Local_u32Analog / 10;
    369e:	8d 81       	ldd	r24, Y+5	; 0x05
    36a0:	9e 81       	ldd	r25, Y+6	; 0x06
    36a2:	af 81       	ldd	r26, Y+7	; 0x07
    36a4:	b8 85       	ldd	r27, Y+8	; 0x08
    36a6:	2a e0       	ldi	r18, 0x0A	; 10
    36a8:	30 e0       	ldi	r19, 0x00	; 0
    36aa:	40 e0       	ldi	r20, 0x00	; 0
    36ac:	50 e0       	ldi	r21, 0x00	; 0
    36ae:	bc 01       	movw	r22, r24
    36b0:	cd 01       	movw	r24, r26
    36b2:	0e 94 23 2d 	call	0x5a46	; 0x5a46 <__udivmodsi4>
    36b6:	da 01       	movw	r26, r20
    36b8:	c9 01       	movw	r24, r18
    36ba:	89 83       	std	Y+1, r24	; 0x01
    36bc:	9a 83       	std	Y+2, r25	; 0x02
    36be:	ab 83       	std	Y+3, r26	; 0x03
    36c0:	bc 83       	std	Y+4, r27	; 0x04
	return Local_u32Temp;
    36c2:	89 81       	ldd	r24, Y+1	; 0x01
    36c4:	9a 81       	ldd	r25, Y+2	; 0x02
    36c6:	ab 81       	ldd	r26, Y+3	; 0x03
    36c8:	bc 81       	ldd	r27, Y+4	; 0x04
}
    36ca:	bc 01       	movw	r22, r24
    36cc:	cd 01       	movw	r24, r26
    36ce:	2c 96       	adiw	r28, 0x0c	; 12
    36d0:	0f b6       	in	r0, 0x3f	; 63
    36d2:	f8 94       	cli
    36d4:	de bf       	out	0x3e, r29	; 62
    36d6:	0f be       	out	0x3f, r0	; 63
    36d8:	cd bf       	out	0x3d, r28	; 61
    36da:	cf 91       	pop	r28
    36dc:	df 91       	pop	r29
    36de:	08 95       	ret

000036e0 <DCMotor_init>:
 *      Author: hp
 */

#include "DC_Motor_Interface.h"

void DCMotor_init(Motor *motor){
    36e0:	df 93       	push	r29
    36e2:	cf 93       	push	r28
    36e4:	00 d0       	rcall	.+0      	; 0x36e6 <DCMotor_init+0x6>
    36e6:	cd b7       	in	r28, 0x3d	; 61
    36e8:	de b7       	in	r29, 0x3e	; 62
    36ea:	9a 83       	std	Y+2, r25	; 0x02
    36ec:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPinDirection(motor->motor_port, motor->motor_pin1, DIO_u8OUTPUT);
    36ee:	e9 81       	ldd	r30, Y+1	; 0x01
    36f0:	fa 81       	ldd	r31, Y+2	; 0x02
    36f2:	80 81       	ld	r24, Z
    36f4:	e9 81       	ldd	r30, Y+1	; 0x01
    36f6:	fa 81       	ldd	r31, Y+2	; 0x02
    36f8:	91 81       	ldd	r25, Z+1	; 0x01
    36fa:	69 2f       	mov	r22, r25
    36fc:	41 e0       	ldi	r20, 0x01	; 1
    36fe:	0e 94 1f 17 	call	0x2e3e	; 0x2e3e <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(motor->motor_port, motor->motor_pin2, DIO_u8OUTPUT);
    3702:	e9 81       	ldd	r30, Y+1	; 0x01
    3704:	fa 81       	ldd	r31, Y+2	; 0x02
    3706:	80 81       	ld	r24, Z
    3708:	e9 81       	ldd	r30, Y+1	; 0x01
    370a:	fa 81       	ldd	r31, Y+2	; 0x02
    370c:	92 81       	ldd	r25, Z+2	; 0x02
    370e:	69 2f       	mov	r22, r25
    3710:	41 e0       	ldi	r20, 0x01	; 1
    3712:	0e 94 1f 17 	call	0x2e3e	; 0x2e3e <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(motor->motor_port, motor->motor_pin3, DIO_u8OUTPUT);
    3716:	e9 81       	ldd	r30, Y+1	; 0x01
    3718:	fa 81       	ldd	r31, Y+2	; 0x02
    371a:	80 81       	ld	r24, Z
    371c:	e9 81       	ldd	r30, Y+1	; 0x01
    371e:	fa 81       	ldd	r31, Y+2	; 0x02
    3720:	93 81       	ldd	r25, Z+3	; 0x03
    3722:	69 2f       	mov	r22, r25
    3724:	41 e0       	ldi	r20, 0x01	; 1
    3726:	0e 94 1f 17 	call	0x2e3e	; 0x2e3e <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(motor->motor_port, motor->motor_pin4, DIO_u8OUTPUT);
    372a:	e9 81       	ldd	r30, Y+1	; 0x01
    372c:	fa 81       	ldd	r31, Y+2	; 0x02
    372e:	80 81       	ld	r24, Z
    3730:	e9 81       	ldd	r30, Y+1	; 0x01
    3732:	fa 81       	ldd	r31, Y+2	; 0x02
    3734:	94 81       	ldd	r25, Z+4	; 0x04
    3736:	69 2f       	mov	r22, r25
    3738:	41 e0       	ldi	r20, 0x01	; 1
    373a:	0e 94 1f 17 	call	0x2e3e	; 0x2e3e <DIO_voidSetPinDirection>
}
    373e:	0f 90       	pop	r0
    3740:	0f 90       	pop	r0
    3742:	cf 91       	pop	r28
    3744:	df 91       	pop	r29
    3746:	08 95       	ret

00003748 <DCMotor_OFF>:

void DCMotor_OFF(Motor *motor){
    3748:	df 93       	push	r29
    374a:	cf 93       	push	r28
    374c:	00 d0       	rcall	.+0      	; 0x374e <DCMotor_OFF+0x6>
    374e:	cd b7       	in	r28, 0x3d	; 61
    3750:	de b7       	in	r29, 0x3e	; 62
    3752:	9a 83       	std	Y+2, r25	; 0x02
    3754:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin1, DIO_u8LOW);
    3756:	e9 81       	ldd	r30, Y+1	; 0x01
    3758:	fa 81       	ldd	r31, Y+2	; 0x02
    375a:	80 81       	ld	r24, Z
    375c:	e9 81       	ldd	r30, Y+1	; 0x01
    375e:	fa 81       	ldd	r31, Y+2	; 0x02
    3760:	91 81       	ldd	r25, Z+1	; 0x01
    3762:	69 2f       	mov	r22, r25
    3764:	40 e0       	ldi	r20, 0x00	; 0
    3766:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin2, DIO_u8LOW);
    376a:	e9 81       	ldd	r30, Y+1	; 0x01
    376c:	fa 81       	ldd	r31, Y+2	; 0x02
    376e:	80 81       	ld	r24, Z
    3770:	e9 81       	ldd	r30, Y+1	; 0x01
    3772:	fa 81       	ldd	r31, Y+2	; 0x02
    3774:	92 81       	ldd	r25, Z+2	; 0x02
    3776:	69 2f       	mov	r22, r25
    3778:	40 e0       	ldi	r20, 0x00	; 0
    377a:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin3, DIO_u8LOW);
    377e:	e9 81       	ldd	r30, Y+1	; 0x01
    3780:	fa 81       	ldd	r31, Y+2	; 0x02
    3782:	80 81       	ld	r24, Z
    3784:	e9 81       	ldd	r30, Y+1	; 0x01
    3786:	fa 81       	ldd	r31, Y+2	; 0x02
    3788:	93 81       	ldd	r25, Z+3	; 0x03
    378a:	69 2f       	mov	r22, r25
    378c:	40 e0       	ldi	r20, 0x00	; 0
    378e:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin4, DIO_u8LOW);
    3792:	e9 81       	ldd	r30, Y+1	; 0x01
    3794:	fa 81       	ldd	r31, Y+2	; 0x02
    3796:	80 81       	ld	r24, Z
    3798:	e9 81       	ldd	r30, Y+1	; 0x01
    379a:	fa 81       	ldd	r31, Y+2	; 0x02
    379c:	94 81       	ldd	r25, Z+4	; 0x04
    379e:	69 2f       	mov	r22, r25
    37a0:	40 e0       	ldi	r20, 0x00	; 0
    37a2:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
}
    37a6:	0f 90       	pop	r0
    37a8:	0f 90       	pop	r0
    37aa:	cf 91       	pop	r28
    37ac:	df 91       	pop	r29
    37ae:	08 95       	ret

000037b0 <DCMotor_SetCW>:
/*
 * CW  -> pin 2,3
 * CCW -> pin 1,4
 * */

void DCMotor_SetCW(Motor *motor){
    37b0:	df 93       	push	r29
    37b2:	cf 93       	push	r28
    37b4:	00 d0       	rcall	.+0      	; 0x37b6 <DCMotor_SetCW+0x6>
    37b6:	cd b7       	in	r28, 0x3d	; 61
    37b8:	de b7       	in	r29, 0x3e	; 62
    37ba:	9a 83       	std	Y+2, r25	; 0x02
    37bc:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin1, DIO_u8LOW);
    37be:	e9 81       	ldd	r30, Y+1	; 0x01
    37c0:	fa 81       	ldd	r31, Y+2	; 0x02
    37c2:	80 81       	ld	r24, Z
    37c4:	e9 81       	ldd	r30, Y+1	; 0x01
    37c6:	fa 81       	ldd	r31, Y+2	; 0x02
    37c8:	91 81       	ldd	r25, Z+1	; 0x01
    37ca:	69 2f       	mov	r22, r25
    37cc:	40 e0       	ldi	r20, 0x00	; 0
    37ce:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin2, DIO_u8HIGH);
    37d2:	e9 81       	ldd	r30, Y+1	; 0x01
    37d4:	fa 81       	ldd	r31, Y+2	; 0x02
    37d6:	80 81       	ld	r24, Z
    37d8:	e9 81       	ldd	r30, Y+1	; 0x01
    37da:	fa 81       	ldd	r31, Y+2	; 0x02
    37dc:	92 81       	ldd	r25, Z+2	; 0x02
    37de:	69 2f       	mov	r22, r25
    37e0:	41 e0       	ldi	r20, 0x01	; 1
    37e2:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin3, DIO_u8HIGH);
    37e6:	e9 81       	ldd	r30, Y+1	; 0x01
    37e8:	fa 81       	ldd	r31, Y+2	; 0x02
    37ea:	80 81       	ld	r24, Z
    37ec:	e9 81       	ldd	r30, Y+1	; 0x01
    37ee:	fa 81       	ldd	r31, Y+2	; 0x02
    37f0:	93 81       	ldd	r25, Z+3	; 0x03
    37f2:	69 2f       	mov	r22, r25
    37f4:	41 e0       	ldi	r20, 0x01	; 1
    37f6:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin4, DIO_u8LOW);
    37fa:	e9 81       	ldd	r30, Y+1	; 0x01
    37fc:	fa 81       	ldd	r31, Y+2	; 0x02
    37fe:	80 81       	ld	r24, Z
    3800:	e9 81       	ldd	r30, Y+1	; 0x01
    3802:	fa 81       	ldd	r31, Y+2	; 0x02
    3804:	94 81       	ldd	r25, Z+4	; 0x04
    3806:	69 2f       	mov	r22, r25
    3808:	40 e0       	ldi	r20, 0x00	; 0
    380a:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
}
    380e:	0f 90       	pop	r0
    3810:	0f 90       	pop	r0
    3812:	cf 91       	pop	r28
    3814:	df 91       	pop	r29
    3816:	08 95       	ret

00003818 <DCMotor_SetCCW>:

void DCMotor_SetCCW(Motor *motor){
    3818:	df 93       	push	r29
    381a:	cf 93       	push	r28
    381c:	00 d0       	rcall	.+0      	; 0x381e <DCMotor_SetCCW+0x6>
    381e:	cd b7       	in	r28, 0x3d	; 61
    3820:	de b7       	in	r29, 0x3e	; 62
    3822:	9a 83       	std	Y+2, r25	; 0x02
    3824:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin1, DIO_u8HIGH);
    3826:	e9 81       	ldd	r30, Y+1	; 0x01
    3828:	fa 81       	ldd	r31, Y+2	; 0x02
    382a:	80 81       	ld	r24, Z
    382c:	e9 81       	ldd	r30, Y+1	; 0x01
    382e:	fa 81       	ldd	r31, Y+2	; 0x02
    3830:	91 81       	ldd	r25, Z+1	; 0x01
    3832:	69 2f       	mov	r22, r25
    3834:	41 e0       	ldi	r20, 0x01	; 1
    3836:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin2, DIO_u8LOW);
    383a:	e9 81       	ldd	r30, Y+1	; 0x01
    383c:	fa 81       	ldd	r31, Y+2	; 0x02
    383e:	80 81       	ld	r24, Z
    3840:	e9 81       	ldd	r30, Y+1	; 0x01
    3842:	fa 81       	ldd	r31, Y+2	; 0x02
    3844:	92 81       	ldd	r25, Z+2	; 0x02
    3846:	69 2f       	mov	r22, r25
    3848:	40 e0       	ldi	r20, 0x00	; 0
    384a:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin3, DIO_u8LOW);
    384e:	e9 81       	ldd	r30, Y+1	; 0x01
    3850:	fa 81       	ldd	r31, Y+2	; 0x02
    3852:	80 81       	ld	r24, Z
    3854:	e9 81       	ldd	r30, Y+1	; 0x01
    3856:	fa 81       	ldd	r31, Y+2	; 0x02
    3858:	93 81       	ldd	r25, Z+3	; 0x03
    385a:	69 2f       	mov	r22, r25
    385c:	40 e0       	ldi	r20, 0x00	; 0
    385e:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin4, DIO_u8HIGH);
    3862:	e9 81       	ldd	r30, Y+1	; 0x01
    3864:	fa 81       	ldd	r31, Y+2	; 0x02
    3866:	80 81       	ld	r24, Z
    3868:	e9 81       	ldd	r30, Y+1	; 0x01
    386a:	fa 81       	ldd	r31, Y+2	; 0x02
    386c:	94 81       	ldd	r25, Z+4	; 0x04
    386e:	69 2f       	mov	r22, r25
    3870:	41 e0       	ldi	r20, 0x01	; 1
    3872:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
}
    3876:	0f 90       	pop	r0
    3878:	0f 90       	pop	r0
    387a:	cf 91       	pop	r28
    387c:	df 91       	pop	r29
    387e:	08 95       	ret

00003880 <KPD_init>:
u8 static KPD_Arr[4][4] = { {'7','8','9','/'},
							{'4','5','6','*'},
							{'1','2','3','-'},
							{'C','0','=','+'} };

void KPD_init(void){
    3880:	df 93       	push	r29
    3882:	cf 93       	push	r28
    3884:	00 d0       	rcall	.+0      	; 0x3886 <KPD_init+0x6>
    3886:	cd b7       	in	r28, 0x3d	; 61
    3888:	de b7       	in	r29, 0x3e	; 62
	//R0->R3 (rows)    //C0->C3 //0x0f
	//C0->C3 (columns) //C4->C7 //0xf0
	for (u8 i=0;i<4;i++){
    388a:	1a 82       	std	Y+2, r1	; 0x02
    388c:	08 c0       	rjmp	.+16     	; 0x389e <KPD_init+0x1e>
		DIO_voidSetPinDirection(KPD_PORT, i, DIO_u8OUTPUT);
    388e:	83 e0       	ldi	r24, 0x03	; 3
    3890:	6a 81       	ldd	r22, Y+2	; 0x02
    3892:	41 e0       	ldi	r20, 0x01	; 1
    3894:	0e 94 1f 17 	call	0x2e3e	; 0x2e3e <DIO_voidSetPinDirection>
							{'C','0','=','+'} };

void KPD_init(void){
	//R0->R3 (rows)    //C0->C3 //0x0f
	//C0->C3 (columns) //C4->C7 //0xf0
	for (u8 i=0;i<4;i++){
    3898:	8a 81       	ldd	r24, Y+2	; 0x02
    389a:	8f 5f       	subi	r24, 0xFF	; 255
    389c:	8a 83       	std	Y+2, r24	; 0x02
    389e:	8a 81       	ldd	r24, Y+2	; 0x02
    38a0:	84 30       	cpi	r24, 0x04	; 4
    38a2:	a8 f3       	brcs	.-22     	; 0x388e <KPD_init+0xe>
		DIO_voidSetPinDirection(KPD_PORT, i, DIO_u8OUTPUT);
	}
	for (u8 i=4;i<8;i++){
    38a4:	84 e0       	ldi	r24, 0x04	; 4
    38a6:	89 83       	std	Y+1, r24	; 0x01
    38a8:	08 c0       	rjmp	.+16     	; 0x38ba <KPD_init+0x3a>
		DIO_voidSetPinDirection(KPD_PORT, i, DIO_u8INPUT);
    38aa:	83 e0       	ldi	r24, 0x03	; 3
    38ac:	69 81       	ldd	r22, Y+1	; 0x01
    38ae:	40 e0       	ldi	r20, 0x00	; 0
    38b0:	0e 94 1f 17 	call	0x2e3e	; 0x2e3e <DIO_voidSetPinDirection>
	//R0->R3 (rows)    //C0->C3 //0x0f
	//C0->C3 (columns) //C4->C7 //0xf0
	for (u8 i=0;i<4;i++){
		DIO_voidSetPinDirection(KPD_PORT, i, DIO_u8OUTPUT);
	}
	for (u8 i=4;i<8;i++){
    38b4:	89 81       	ldd	r24, Y+1	; 0x01
    38b6:	8f 5f       	subi	r24, 0xFF	; 255
    38b8:	89 83       	std	Y+1, r24	; 0x01
    38ba:	89 81       	ldd	r24, Y+1	; 0x01
    38bc:	88 30       	cpi	r24, 0x08	; 8
    38be:	a8 f3       	brcs	.-22     	; 0x38aa <KPD_init+0x2a>
		DIO_voidSetPinDirection(KPD_PORT, i, DIO_u8INPUT);
	}
	DIO_voidSetPortValue(KPD_PORT, 0xff); //PORTC =
    38c0:	83 e0       	ldi	r24, 0x03	; 3
    38c2:	6f ef       	ldi	r22, 0xFF	; 255
    38c4:	0e 94 65 19 	call	0x32ca	; 0x32ca <DIO_voidSetPortValue>
}
    38c8:	0f 90       	pop	r0
    38ca:	0f 90       	pop	r0
    38cc:	cf 91       	pop	r28
    38ce:	df 91       	pop	r29
    38d0:	08 95       	ret

000038d2 <KPD_GetPressedKey>:

u8 KPD_GetPressedKey(void){
    38d2:	df 93       	push	r29
    38d4:	cf 93       	push	r28
    38d6:	cd b7       	in	r28, 0x3d	; 61
    38d8:	de b7       	in	r29, 0x3e	; 62
    38da:	61 97       	sbiw	r28, 0x11	; 17
    38dc:	0f b6       	in	r0, 0x3f	; 63
    38de:	f8 94       	cli
    38e0:	de bf       	out	0x3e, r29	; 62
    38e2:	0f be       	out	0x3f, r0	; 63
    38e4:	cd bf       	out	0x3d, r28	; 61
	u8 Key = 0;
    38e6:	19 8a       	std	Y+17, r1	; 0x11
	u8 row,col;
	for (row = 0; row < 4; row++){
    38e8:	18 8a       	std	Y+16, r1	; 0x10
    38ea:	b6 c0       	rjmp	.+364    	; 0x3a58 <KPD_GetPressedKey+0x186>
		DIO_voidSetPinValue(KPD_PORT, row, DIO_u8LOW);
    38ec:	83 e0       	ldi	r24, 0x03	; 3
    38ee:	68 89       	ldd	r22, Y+16	; 0x10
    38f0:	40 e0       	ldi	r20, 0x00	; 0
    38f2:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
		for(col = 4; col < 8; col++){
    38f6:	84 e0       	ldi	r24, 0x04	; 4
    38f8:	8f 87       	std	Y+15, r24	; 0x0f
    38fa:	a2 c0       	rjmp	.+324    	; 0x3a40 <KPD_GetPressedKey+0x16e>
			if (DIO_u8GetPinValue(KPD_PORT, col) == 0){
    38fc:	83 e0       	ldi	r24, 0x03	; 3
    38fe:	6f 85       	ldd	r22, Y+15	; 0x0f
    3900:	0e 94 25 1a 	call	0x344a	; 0x344a <DIO_u8GetPinValue>
    3904:	88 23       	and	r24, r24
    3906:	09 f0       	breq	.+2      	; 0x390a <KPD_GetPressedKey+0x38>
    3908:	98 c0       	rjmp	.+304    	; 0x3a3a <KPD_GetPressedKey+0x168>
    390a:	80 e0       	ldi	r24, 0x00	; 0
    390c:	90 e0       	ldi	r25, 0x00	; 0
    390e:	a0 ef       	ldi	r26, 0xF0	; 240
    3910:	b1 e4       	ldi	r27, 0x41	; 65
    3912:	8b 87       	std	Y+11, r24	; 0x0b
    3914:	9c 87       	std	Y+12, r25	; 0x0c
    3916:	ad 87       	std	Y+13, r26	; 0x0d
    3918:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    391a:	6b 85       	ldd	r22, Y+11	; 0x0b
    391c:	7c 85       	ldd	r23, Y+12	; 0x0c
    391e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3920:	9e 85       	ldd	r25, Y+14	; 0x0e
    3922:	20 e0       	ldi	r18, 0x00	; 0
    3924:	30 e0       	ldi	r19, 0x00	; 0
    3926:	4a e7       	ldi	r20, 0x7A	; 122
    3928:	53 e4       	ldi	r21, 0x43	; 67
    392a:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    392e:	dc 01       	movw	r26, r24
    3930:	cb 01       	movw	r24, r22
    3932:	8f 83       	std	Y+7, r24	; 0x07
    3934:	98 87       	std	Y+8, r25	; 0x08
    3936:	a9 87       	std	Y+9, r26	; 0x09
    3938:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    393a:	6f 81       	ldd	r22, Y+7	; 0x07
    393c:	78 85       	ldd	r23, Y+8	; 0x08
    393e:	89 85       	ldd	r24, Y+9	; 0x09
    3940:	9a 85       	ldd	r25, Y+10	; 0x0a
    3942:	20 e0       	ldi	r18, 0x00	; 0
    3944:	30 e0       	ldi	r19, 0x00	; 0
    3946:	40 e8       	ldi	r20, 0x80	; 128
    3948:	5f e3       	ldi	r21, 0x3F	; 63
    394a:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__ltsf2>
    394e:	88 23       	and	r24, r24
    3950:	2c f4       	brge	.+10     	; 0x395c <KPD_GetPressedKey+0x8a>
		__ticks = 1;
    3952:	81 e0       	ldi	r24, 0x01	; 1
    3954:	90 e0       	ldi	r25, 0x00	; 0
    3956:	9e 83       	std	Y+6, r25	; 0x06
    3958:	8d 83       	std	Y+5, r24	; 0x05
    395a:	3f c0       	rjmp	.+126    	; 0x39da <KPD_GetPressedKey+0x108>
	else if (__tmp > 65535)
    395c:	6f 81       	ldd	r22, Y+7	; 0x07
    395e:	78 85       	ldd	r23, Y+8	; 0x08
    3960:	89 85       	ldd	r24, Y+9	; 0x09
    3962:	9a 85       	ldd	r25, Y+10	; 0x0a
    3964:	20 e0       	ldi	r18, 0x00	; 0
    3966:	3f ef       	ldi	r19, 0xFF	; 255
    3968:	4f e7       	ldi	r20, 0x7F	; 127
    396a:	57 e4       	ldi	r21, 0x47	; 71
    396c:	0e 94 82 11 	call	0x2304	; 0x2304 <__gtsf2>
    3970:	18 16       	cp	r1, r24
    3972:	4c f5       	brge	.+82     	; 0x39c6 <KPD_GetPressedKey+0xf4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3974:	6b 85       	ldd	r22, Y+11	; 0x0b
    3976:	7c 85       	ldd	r23, Y+12	; 0x0c
    3978:	8d 85       	ldd	r24, Y+13	; 0x0d
    397a:	9e 85       	ldd	r25, Y+14	; 0x0e
    397c:	20 e0       	ldi	r18, 0x00	; 0
    397e:	30 e0       	ldi	r19, 0x00	; 0
    3980:	40 e2       	ldi	r20, 0x20	; 32
    3982:	51 e4       	ldi	r21, 0x41	; 65
    3984:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3988:	dc 01       	movw	r26, r24
    398a:	cb 01       	movw	r24, r22
    398c:	bc 01       	movw	r22, r24
    398e:	cd 01       	movw	r24, r26
    3990:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3994:	dc 01       	movw	r26, r24
    3996:	cb 01       	movw	r24, r22
    3998:	9e 83       	std	Y+6, r25	; 0x06
    399a:	8d 83       	std	Y+5, r24	; 0x05
    399c:	0f c0       	rjmp	.+30     	; 0x39bc <KPD_GetPressedKey+0xea>
    399e:	89 e1       	ldi	r24, 0x19	; 25
    39a0:	90 e0       	ldi	r25, 0x00	; 0
    39a2:	9c 83       	std	Y+4, r25	; 0x04
    39a4:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    39a6:	8b 81       	ldd	r24, Y+3	; 0x03
    39a8:	9c 81       	ldd	r25, Y+4	; 0x04
    39aa:	01 97       	sbiw	r24, 0x01	; 1
    39ac:	f1 f7       	brne	.-4      	; 0x39aa <KPD_GetPressedKey+0xd8>
    39ae:	9c 83       	std	Y+4, r25	; 0x04
    39b0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    39b2:	8d 81       	ldd	r24, Y+5	; 0x05
    39b4:	9e 81       	ldd	r25, Y+6	; 0x06
    39b6:	01 97       	sbiw	r24, 0x01	; 1
    39b8:	9e 83       	std	Y+6, r25	; 0x06
    39ba:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39bc:	8d 81       	ldd	r24, Y+5	; 0x05
    39be:	9e 81       	ldd	r25, Y+6	; 0x06
    39c0:	00 97       	sbiw	r24, 0x00	; 0
    39c2:	69 f7       	brne	.-38     	; 0x399e <KPD_GetPressedKey+0xcc>
    39c4:	14 c0       	rjmp	.+40     	; 0x39ee <KPD_GetPressedKey+0x11c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39c6:	6f 81       	ldd	r22, Y+7	; 0x07
    39c8:	78 85       	ldd	r23, Y+8	; 0x08
    39ca:	89 85       	ldd	r24, Y+9	; 0x09
    39cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    39ce:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    39d2:	dc 01       	movw	r26, r24
    39d4:	cb 01       	movw	r24, r22
    39d6:	9e 83       	std	Y+6, r25	; 0x06
    39d8:	8d 83       	std	Y+5, r24	; 0x05
    39da:	8d 81       	ldd	r24, Y+5	; 0x05
    39dc:	9e 81       	ldd	r25, Y+6	; 0x06
    39de:	9a 83       	std	Y+2, r25	; 0x02
    39e0:	89 83       	std	Y+1, r24	; 0x01
    39e2:	89 81       	ldd	r24, Y+1	; 0x01
    39e4:	9a 81       	ldd	r25, Y+2	; 0x02
    39e6:	01 97       	sbiw	r24, 0x01	; 1
    39e8:	f1 f7       	brne	.-4      	; 0x39e6 <KPD_GetPressedKey+0x114>
    39ea:	9a 83       	std	Y+2, r25	; 0x02
    39ec:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(30);
				if (DIO_u8GetPinValue(KPD_PORT, col) == 0){
    39ee:	83 e0       	ldi	r24, 0x03	; 3
    39f0:	6f 85       	ldd	r22, Y+15	; 0x0f
    39f2:	0e 94 25 1a 	call	0x344a	; 0x344a <DIO_u8GetPinValue>
    39f6:	88 23       	and	r24, r24
    39f8:	01 f5       	brne	.+64     	; 0x3a3a <KPD_GetPressedKey+0x168>
					while(DIO_u8GetPinValue(KPD_PORT, col) == 0);
    39fa:	83 e0       	ldi	r24, 0x03	; 3
    39fc:	6f 85       	ldd	r22, Y+15	; 0x0f
    39fe:	0e 94 25 1a 	call	0x344a	; 0x344a <DIO_u8GetPinValue>
    3a02:	88 23       	and	r24, r24
    3a04:	d1 f3       	breq	.-12     	; 0x39fa <KPD_GetPressedKey+0x128>
					Key = KPD_Arr[row][col-4];
    3a06:	88 89       	ldd	r24, Y+16	; 0x10
    3a08:	48 2f       	mov	r20, r24
    3a0a:	50 e0       	ldi	r21, 0x00	; 0
    3a0c:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a0e:	88 2f       	mov	r24, r24
    3a10:	90 e0       	ldi	r25, 0x00	; 0
    3a12:	9c 01       	movw	r18, r24
    3a14:	24 50       	subi	r18, 0x04	; 4
    3a16:	30 40       	sbci	r19, 0x00	; 0
    3a18:	ca 01       	movw	r24, r20
    3a1a:	88 0f       	add	r24, r24
    3a1c:	99 1f       	adc	r25, r25
    3a1e:	88 0f       	add	r24, r24
    3a20:	99 1f       	adc	r25, r25
    3a22:	82 0f       	add	r24, r18
    3a24:	93 1f       	adc	r25, r19
    3a26:	fc 01       	movw	r30, r24
    3a28:	e5 57       	subi	r30, 0x75	; 117
    3a2a:	fe 4f       	sbci	r31, 0xFE	; 254
    3a2c:	80 81       	ld	r24, Z
    3a2e:	89 8b       	std	Y+17, r24	; 0x11
					DIO_voidSetPinValue(KPD_PORT,row,DIO_u8HIGH);
    3a30:	83 e0       	ldi	r24, 0x03	; 3
    3a32:	68 89       	ldd	r22, Y+16	; 0x10
    3a34:	41 e0       	ldi	r20, 0x01	; 1
    3a36:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
u8 KPD_GetPressedKey(void){
	u8 Key = 0;
	u8 row,col;
	for (row = 0; row < 4; row++){
		DIO_voidSetPinValue(KPD_PORT, row, DIO_u8LOW);
		for(col = 4; col < 8; col++){
    3a3a:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a3c:	8f 5f       	subi	r24, 0xFF	; 255
    3a3e:	8f 87       	std	Y+15, r24	; 0x0f
    3a40:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a42:	88 30       	cpi	r24, 0x08	; 8
    3a44:	08 f4       	brcc	.+2      	; 0x3a48 <KPD_GetPressedKey+0x176>
    3a46:	5a cf       	rjmp	.-332    	; 0x38fc <KPD_GetPressedKey+0x2a>
					Key = KPD_Arr[row][col-4];
					DIO_voidSetPinValue(KPD_PORT,row,DIO_u8HIGH);
				}
			}
		}
		DIO_voidSetPinValue(KPD_PORT,row,DIO_u8HIGH);
    3a48:	83 e0       	ldi	r24, 0x03	; 3
    3a4a:	68 89       	ldd	r22, Y+16	; 0x10
    3a4c:	41 e0       	ldi	r20, 0x01	; 1
    3a4e:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
}

u8 KPD_GetPressedKey(void){
	u8 Key = 0;
	u8 row,col;
	for (row = 0; row < 4; row++){
    3a52:	88 89       	ldd	r24, Y+16	; 0x10
    3a54:	8f 5f       	subi	r24, 0xFF	; 255
    3a56:	88 8b       	std	Y+16, r24	; 0x10
    3a58:	88 89       	ldd	r24, Y+16	; 0x10
    3a5a:	84 30       	cpi	r24, 0x04	; 4
    3a5c:	08 f4       	brcc	.+2      	; 0x3a60 <KPD_GetPressedKey+0x18e>
    3a5e:	46 cf       	rjmp	.-372    	; 0x38ec <KPD_GetPressedKey+0x1a>
			}
		}
		DIO_voidSetPinValue(KPD_PORT,row,DIO_u8HIGH);
	}
	//not pressed
	return Key;
    3a60:	89 89       	ldd	r24, Y+17	; 0x11
}
    3a62:	61 96       	adiw	r28, 0x11	; 17
    3a64:	0f b6       	in	r0, 0x3f	; 63
    3a66:	f8 94       	cli
    3a68:	de bf       	out	0x3e, r29	; 62
    3a6a:	0f be       	out	0x3f, r0	; 63
    3a6c:	cd bf       	out	0x3d, r28	; 61
    3a6e:	cf 91       	pop	r28
    3a70:	df 91       	pop	r29
    3a72:	08 95       	ret

00003a74 <CLCD_init>:
 */

#include "util/delay.h"
#include "../04-CLCD/CLCD_Interface.h"

void CLCD_init(void){
    3a74:	df 93       	push	r29
    3a76:	cf 93       	push	r28
    3a78:	cd b7       	in	r28, 0x3d	; 61
    3a7a:	de b7       	in	r29, 0x3e	; 62
    3a7c:	6c 97       	sbiw	r28, 0x1c	; 28
    3a7e:	0f b6       	in	r0, 0x3f	; 63
    3a80:	f8 94       	cli
    3a82:	de bf       	out	0x3e, r29	; 62
    3a84:	0f be       	out	0x3f, r0	; 63
    3a86:	cd bf       	out	0x3d, r28	; 61
	/* data port output */
	DIO_voidSetPortDirection(CLCD_Data_Port, 255);
    3a88:	81 e0       	ldi	r24, 0x01	; 1
    3a8a:	6f ef       	ldi	r22, 0xFF	; 255
    3a8c:	0e 94 23 19 	call	0x3246	; 0x3246 <DIO_voidSetPortDirection>
	/* RS output */
	DIO_voidSetPinDirection(CLCD_Control_Port, CLCD_RS_PIN, DIO_u8OUTPUT);
    3a90:	82 e0       	ldi	r24, 0x02	; 2
    3a92:	60 e0       	ldi	r22, 0x00	; 0
    3a94:	41 e0       	ldi	r20, 0x01	; 1
    3a96:	0e 94 1f 17 	call	0x2e3e	; 0x2e3e <DIO_voidSetPinDirection>
	/* RW output */
	DIO_voidSetPinDirection(CLCD_Control_Port, CLCD_RW_PIN, DIO_u8OUTPUT);
    3a9a:	82 e0       	ldi	r24, 0x02	; 2
    3a9c:	61 e0       	ldi	r22, 0x01	; 1
    3a9e:	41 e0       	ldi	r20, 0x01	; 1
    3aa0:	0e 94 1f 17 	call	0x2e3e	; 0x2e3e <DIO_voidSetPinDirection>
	/* EN output */
	DIO_voidSetPinDirection(CLCD_Control_Port, CLCD_EN_PIN, DIO_u8OUTPUT);
    3aa4:	82 e0       	ldi	r24, 0x02	; 2
    3aa6:	62 e0       	ldi	r22, 0x02	; 2
    3aa8:	41 e0       	ldi	r20, 0x01	; 1
    3aaa:	0e 94 1f 17 	call	0x2e3e	; 0x2e3e <DIO_voidSetPinDirection>
    3aae:	80 e0       	ldi	r24, 0x00	; 0
    3ab0:	90 e0       	ldi	r25, 0x00	; 0
    3ab2:	a8 e4       	ldi	r26, 0x48	; 72
    3ab4:	b2 e4       	ldi	r27, 0x42	; 66
    3ab6:	89 8f       	std	Y+25, r24	; 0x19
    3ab8:	9a 8f       	std	Y+26, r25	; 0x1a
    3aba:	ab 8f       	std	Y+27, r26	; 0x1b
    3abc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3abe:	69 8d       	ldd	r22, Y+25	; 0x19
    3ac0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3ac2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3ac4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3ac6:	20 e0       	ldi	r18, 0x00	; 0
    3ac8:	30 e0       	ldi	r19, 0x00	; 0
    3aca:	4a e7       	ldi	r20, 0x7A	; 122
    3acc:	53 e4       	ldi	r21, 0x43	; 67
    3ace:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3ad2:	dc 01       	movw	r26, r24
    3ad4:	cb 01       	movw	r24, r22
    3ad6:	8d 8b       	std	Y+21, r24	; 0x15
    3ad8:	9e 8b       	std	Y+22, r25	; 0x16
    3ada:	af 8b       	std	Y+23, r26	; 0x17
    3adc:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3ade:	6d 89       	ldd	r22, Y+21	; 0x15
    3ae0:	7e 89       	ldd	r23, Y+22	; 0x16
    3ae2:	8f 89       	ldd	r24, Y+23	; 0x17
    3ae4:	98 8d       	ldd	r25, Y+24	; 0x18
    3ae6:	20 e0       	ldi	r18, 0x00	; 0
    3ae8:	30 e0       	ldi	r19, 0x00	; 0
    3aea:	40 e8       	ldi	r20, 0x80	; 128
    3aec:	5f e3       	ldi	r21, 0x3F	; 63
    3aee:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__ltsf2>
    3af2:	88 23       	and	r24, r24
    3af4:	2c f4       	brge	.+10     	; 0x3b00 <CLCD_init+0x8c>
		__ticks = 1;
    3af6:	81 e0       	ldi	r24, 0x01	; 1
    3af8:	90 e0       	ldi	r25, 0x00	; 0
    3afa:	9c 8b       	std	Y+20, r25	; 0x14
    3afc:	8b 8b       	std	Y+19, r24	; 0x13
    3afe:	3f c0       	rjmp	.+126    	; 0x3b7e <CLCD_init+0x10a>
	else if (__tmp > 65535)
    3b00:	6d 89       	ldd	r22, Y+21	; 0x15
    3b02:	7e 89       	ldd	r23, Y+22	; 0x16
    3b04:	8f 89       	ldd	r24, Y+23	; 0x17
    3b06:	98 8d       	ldd	r25, Y+24	; 0x18
    3b08:	20 e0       	ldi	r18, 0x00	; 0
    3b0a:	3f ef       	ldi	r19, 0xFF	; 255
    3b0c:	4f e7       	ldi	r20, 0x7F	; 127
    3b0e:	57 e4       	ldi	r21, 0x47	; 71
    3b10:	0e 94 82 11 	call	0x2304	; 0x2304 <__gtsf2>
    3b14:	18 16       	cp	r1, r24
    3b16:	4c f5       	brge	.+82     	; 0x3b6a <CLCD_init+0xf6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b18:	69 8d       	ldd	r22, Y+25	; 0x19
    3b1a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3b1c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3b1e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3b20:	20 e0       	ldi	r18, 0x00	; 0
    3b22:	30 e0       	ldi	r19, 0x00	; 0
    3b24:	40 e2       	ldi	r20, 0x20	; 32
    3b26:	51 e4       	ldi	r21, 0x41	; 65
    3b28:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3b2c:	dc 01       	movw	r26, r24
    3b2e:	cb 01       	movw	r24, r22
    3b30:	bc 01       	movw	r22, r24
    3b32:	cd 01       	movw	r24, r26
    3b34:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3b38:	dc 01       	movw	r26, r24
    3b3a:	cb 01       	movw	r24, r22
    3b3c:	9c 8b       	std	Y+20, r25	; 0x14
    3b3e:	8b 8b       	std	Y+19, r24	; 0x13
    3b40:	0f c0       	rjmp	.+30     	; 0x3b60 <CLCD_init+0xec>
    3b42:	89 e1       	ldi	r24, 0x19	; 25
    3b44:	90 e0       	ldi	r25, 0x00	; 0
    3b46:	9a 8b       	std	Y+18, r25	; 0x12
    3b48:	89 8b       	std	Y+17, r24	; 0x11
    3b4a:	89 89       	ldd	r24, Y+17	; 0x11
    3b4c:	9a 89       	ldd	r25, Y+18	; 0x12
    3b4e:	01 97       	sbiw	r24, 0x01	; 1
    3b50:	f1 f7       	brne	.-4      	; 0x3b4e <CLCD_init+0xda>
    3b52:	9a 8b       	std	Y+18, r25	; 0x12
    3b54:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b56:	8b 89       	ldd	r24, Y+19	; 0x13
    3b58:	9c 89       	ldd	r25, Y+20	; 0x14
    3b5a:	01 97       	sbiw	r24, 0x01	; 1
    3b5c:	9c 8b       	std	Y+20, r25	; 0x14
    3b5e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b60:	8b 89       	ldd	r24, Y+19	; 0x13
    3b62:	9c 89       	ldd	r25, Y+20	; 0x14
    3b64:	00 97       	sbiw	r24, 0x00	; 0
    3b66:	69 f7       	brne	.-38     	; 0x3b42 <CLCD_init+0xce>
    3b68:	14 c0       	rjmp	.+40     	; 0x3b92 <CLCD_init+0x11e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b6a:	6d 89       	ldd	r22, Y+21	; 0x15
    3b6c:	7e 89       	ldd	r23, Y+22	; 0x16
    3b6e:	8f 89       	ldd	r24, Y+23	; 0x17
    3b70:	98 8d       	ldd	r25, Y+24	; 0x18
    3b72:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3b76:	dc 01       	movw	r26, r24
    3b78:	cb 01       	movw	r24, r22
    3b7a:	9c 8b       	std	Y+20, r25	; 0x14
    3b7c:	8b 8b       	std	Y+19, r24	; 0x13
    3b7e:	8b 89       	ldd	r24, Y+19	; 0x13
    3b80:	9c 89       	ldd	r25, Y+20	; 0x14
    3b82:	98 8b       	std	Y+16, r25	; 0x10
    3b84:	8f 87       	std	Y+15, r24	; 0x0f
    3b86:	8f 85       	ldd	r24, Y+15	; 0x0f
    3b88:	98 89       	ldd	r25, Y+16	; 0x10
    3b8a:	01 97       	sbiw	r24, 0x01	; 1
    3b8c:	f1 f7       	brne	.-4      	; 0x3b8a <CLCD_init+0x116>
    3b8e:	98 8b       	std	Y+16, r25	; 0x10
    3b90:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(50);
	CLCD_WriteInes(0x38); //0b00111000 //FUNCTION_SET
    3b92:	88 e3       	ldi	r24, 0x38	; 56
    3b94:	0e 94 50 1e 	call	0x3ca0	; 0x3ca0 <CLCD_WriteInes>
	CLCD_WriteInes(0x0C); //0b00001111 //DISPLAY_ON
    3b98:	8c e0       	ldi	r24, 0x0C	; 12
    3b9a:	0e 94 50 1e 	call	0x3ca0	; 0x3ca0 <CLCD_WriteInes>
	CLCD_WriteInes(0x01); //0b00000001 //DISPLAY_CLEAR
    3b9e:	81 e0       	ldi	r24, 0x01	; 1
    3ba0:	0e 94 50 1e 	call	0x3ca0	; 0x3ca0 <CLCD_WriteInes>
    3ba4:	80 e0       	ldi	r24, 0x00	; 0
    3ba6:	90 e0       	ldi	r25, 0x00	; 0
    3ba8:	a0 e8       	ldi	r26, 0x80	; 128
    3baa:	bf e3       	ldi	r27, 0x3F	; 63
    3bac:	8b 87       	std	Y+11, r24	; 0x0b
    3bae:	9c 87       	std	Y+12, r25	; 0x0c
    3bb0:	ad 87       	std	Y+13, r26	; 0x0d
    3bb2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3bb4:	6b 85       	ldd	r22, Y+11	; 0x0b
    3bb6:	7c 85       	ldd	r23, Y+12	; 0x0c
    3bb8:	8d 85       	ldd	r24, Y+13	; 0x0d
    3bba:	9e 85       	ldd	r25, Y+14	; 0x0e
    3bbc:	20 e0       	ldi	r18, 0x00	; 0
    3bbe:	30 e0       	ldi	r19, 0x00	; 0
    3bc0:	4a e7       	ldi	r20, 0x7A	; 122
    3bc2:	53 e4       	ldi	r21, 0x43	; 67
    3bc4:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3bc8:	dc 01       	movw	r26, r24
    3bca:	cb 01       	movw	r24, r22
    3bcc:	8f 83       	std	Y+7, r24	; 0x07
    3bce:	98 87       	std	Y+8, r25	; 0x08
    3bd0:	a9 87       	std	Y+9, r26	; 0x09
    3bd2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3bd4:	6f 81       	ldd	r22, Y+7	; 0x07
    3bd6:	78 85       	ldd	r23, Y+8	; 0x08
    3bd8:	89 85       	ldd	r24, Y+9	; 0x09
    3bda:	9a 85       	ldd	r25, Y+10	; 0x0a
    3bdc:	20 e0       	ldi	r18, 0x00	; 0
    3bde:	30 e0       	ldi	r19, 0x00	; 0
    3be0:	40 e8       	ldi	r20, 0x80	; 128
    3be2:	5f e3       	ldi	r21, 0x3F	; 63
    3be4:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__ltsf2>
    3be8:	88 23       	and	r24, r24
    3bea:	2c f4       	brge	.+10     	; 0x3bf6 <CLCD_init+0x182>
		__ticks = 1;
    3bec:	81 e0       	ldi	r24, 0x01	; 1
    3bee:	90 e0       	ldi	r25, 0x00	; 0
    3bf0:	9e 83       	std	Y+6, r25	; 0x06
    3bf2:	8d 83       	std	Y+5, r24	; 0x05
    3bf4:	3f c0       	rjmp	.+126    	; 0x3c74 <CLCD_init+0x200>
	else if (__tmp > 65535)
    3bf6:	6f 81       	ldd	r22, Y+7	; 0x07
    3bf8:	78 85       	ldd	r23, Y+8	; 0x08
    3bfa:	89 85       	ldd	r24, Y+9	; 0x09
    3bfc:	9a 85       	ldd	r25, Y+10	; 0x0a
    3bfe:	20 e0       	ldi	r18, 0x00	; 0
    3c00:	3f ef       	ldi	r19, 0xFF	; 255
    3c02:	4f e7       	ldi	r20, 0x7F	; 127
    3c04:	57 e4       	ldi	r21, 0x47	; 71
    3c06:	0e 94 82 11 	call	0x2304	; 0x2304 <__gtsf2>
    3c0a:	18 16       	cp	r1, r24
    3c0c:	4c f5       	brge	.+82     	; 0x3c60 <CLCD_init+0x1ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c0e:	6b 85       	ldd	r22, Y+11	; 0x0b
    3c10:	7c 85       	ldd	r23, Y+12	; 0x0c
    3c12:	8d 85       	ldd	r24, Y+13	; 0x0d
    3c14:	9e 85       	ldd	r25, Y+14	; 0x0e
    3c16:	20 e0       	ldi	r18, 0x00	; 0
    3c18:	30 e0       	ldi	r19, 0x00	; 0
    3c1a:	40 e2       	ldi	r20, 0x20	; 32
    3c1c:	51 e4       	ldi	r21, 0x41	; 65
    3c1e:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3c22:	dc 01       	movw	r26, r24
    3c24:	cb 01       	movw	r24, r22
    3c26:	bc 01       	movw	r22, r24
    3c28:	cd 01       	movw	r24, r26
    3c2a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3c2e:	dc 01       	movw	r26, r24
    3c30:	cb 01       	movw	r24, r22
    3c32:	9e 83       	std	Y+6, r25	; 0x06
    3c34:	8d 83       	std	Y+5, r24	; 0x05
    3c36:	0f c0       	rjmp	.+30     	; 0x3c56 <CLCD_init+0x1e2>
    3c38:	89 e1       	ldi	r24, 0x19	; 25
    3c3a:	90 e0       	ldi	r25, 0x00	; 0
    3c3c:	9c 83       	std	Y+4, r25	; 0x04
    3c3e:	8b 83       	std	Y+3, r24	; 0x03
    3c40:	8b 81       	ldd	r24, Y+3	; 0x03
    3c42:	9c 81       	ldd	r25, Y+4	; 0x04
    3c44:	01 97       	sbiw	r24, 0x01	; 1
    3c46:	f1 f7       	brne	.-4      	; 0x3c44 <CLCD_init+0x1d0>
    3c48:	9c 83       	std	Y+4, r25	; 0x04
    3c4a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c4c:	8d 81       	ldd	r24, Y+5	; 0x05
    3c4e:	9e 81       	ldd	r25, Y+6	; 0x06
    3c50:	01 97       	sbiw	r24, 0x01	; 1
    3c52:	9e 83       	std	Y+6, r25	; 0x06
    3c54:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c56:	8d 81       	ldd	r24, Y+5	; 0x05
    3c58:	9e 81       	ldd	r25, Y+6	; 0x06
    3c5a:	00 97       	sbiw	r24, 0x00	; 0
    3c5c:	69 f7       	brne	.-38     	; 0x3c38 <CLCD_init+0x1c4>
    3c5e:	14 c0       	rjmp	.+40     	; 0x3c88 <CLCD_init+0x214>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c60:	6f 81       	ldd	r22, Y+7	; 0x07
    3c62:	78 85       	ldd	r23, Y+8	; 0x08
    3c64:	89 85       	ldd	r24, Y+9	; 0x09
    3c66:	9a 85       	ldd	r25, Y+10	; 0x0a
    3c68:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3c6c:	dc 01       	movw	r26, r24
    3c6e:	cb 01       	movw	r24, r22
    3c70:	9e 83       	std	Y+6, r25	; 0x06
    3c72:	8d 83       	std	Y+5, r24	; 0x05
    3c74:	8d 81       	ldd	r24, Y+5	; 0x05
    3c76:	9e 81       	ldd	r25, Y+6	; 0x06
    3c78:	9a 83       	std	Y+2, r25	; 0x02
    3c7a:	89 83       	std	Y+1, r24	; 0x01
    3c7c:	89 81       	ldd	r24, Y+1	; 0x01
    3c7e:	9a 81       	ldd	r25, Y+2	; 0x02
    3c80:	01 97       	sbiw	r24, 0x01	; 1
    3c82:	f1 f7       	brne	.-4      	; 0x3c80 <CLCD_init+0x20c>
    3c84:	9a 83       	std	Y+2, r25	; 0x02
    3c86:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	CLCD_WriteInes(0x06); //0b00000110 //ENTRY_MODE_SET
    3c88:	86 e0       	ldi	r24, 0x06	; 6
    3c8a:	0e 94 50 1e 	call	0x3ca0	; 0x3ca0 <CLCD_WriteInes>
}
    3c8e:	6c 96       	adiw	r28, 0x1c	; 28
    3c90:	0f b6       	in	r0, 0x3f	; 63
    3c92:	f8 94       	cli
    3c94:	de bf       	out	0x3e, r29	; 62
    3c96:	0f be       	out	0x3f, r0	; 63
    3c98:	cd bf       	out	0x3d, r28	; 61
    3c9a:	cf 91       	pop	r28
    3c9c:	df 91       	pop	r29
    3c9e:	08 95       	ret

00003ca0 <CLCD_WriteInes>:

void CLCD_WriteInes(u8 A_u8Command){
    3ca0:	df 93       	push	r29
    3ca2:	cf 93       	push	r28
    3ca4:	cd b7       	in	r28, 0x3d	; 61
    3ca6:	de b7       	in	r29, 0x3e	; 62
    3ca8:	6d 97       	sbiw	r28, 0x1d	; 29
    3caa:	0f b6       	in	r0, 0x3f	; 63
    3cac:	f8 94       	cli
    3cae:	de bf       	out	0x3e, r29	; 62
    3cb0:	0f be       	out	0x3f, r0	; 63
    3cb2:	cd bf       	out	0x3d, r28	; 61
    3cb4:	8d 8f       	std	Y+29, r24	; 0x1d
	/* RS = 0 (Command mode) */
	DIO_voidSetPinValue(CLCD_Control_Port, CLCD_RS_PIN, DIO_u8LOW); //send commend
    3cb6:	82 e0       	ldi	r24, 0x02	; 2
    3cb8:	60 e0       	ldi	r22, 0x00	; 0
    3cba:	40 e0       	ldi	r20, 0x00	; 0
    3cbc:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
	/* RW = 0 (Write mode) */
	DIO_voidSetPinValue(CLCD_Control_Port, CLCD_RW_PIN, DIO_u8LOW);
    3cc0:	82 e0       	ldi	r24, 0x02	; 2
    3cc2:	61 e0       	ldi	r22, 0x01	; 1
    3cc4:	40 e0       	ldi	r20, 0x00	; 0
    3cc6:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
	/* send command through the port */
	DIO_voidSetPortValue(CLCD_Data_Port, A_u8Command); //function set
    3cca:	81 e0       	ldi	r24, 0x01	; 1
    3ccc:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3cce:	0e 94 65 19 	call	0x32ca	; 0x32ca <DIO_voidSetPortValue>
	/* Enable sequence */
	DIO_voidSetPinValue(CLCD_Control_Port, CLCD_EN_PIN, DIO_u8HIGH);
    3cd2:	82 e0       	ldi	r24, 0x02	; 2
    3cd4:	62 e0       	ldi	r22, 0x02	; 2
    3cd6:	41 e0       	ldi	r20, 0x01	; 1
    3cd8:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
    3cdc:	80 e0       	ldi	r24, 0x00	; 0
    3cde:	90 e0       	ldi	r25, 0x00	; 0
    3ce0:	a0 e8       	ldi	r26, 0x80	; 128
    3ce2:	bf e3       	ldi	r27, 0x3F	; 63
    3ce4:	89 8f       	std	Y+25, r24	; 0x19
    3ce6:	9a 8f       	std	Y+26, r25	; 0x1a
    3ce8:	ab 8f       	std	Y+27, r26	; 0x1b
    3cea:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3cec:	69 8d       	ldd	r22, Y+25	; 0x19
    3cee:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3cf0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3cf2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3cf4:	20 e0       	ldi	r18, 0x00	; 0
    3cf6:	30 e0       	ldi	r19, 0x00	; 0
    3cf8:	4a e7       	ldi	r20, 0x7A	; 122
    3cfa:	53 e4       	ldi	r21, 0x43	; 67
    3cfc:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3d00:	dc 01       	movw	r26, r24
    3d02:	cb 01       	movw	r24, r22
    3d04:	8d 8b       	std	Y+21, r24	; 0x15
    3d06:	9e 8b       	std	Y+22, r25	; 0x16
    3d08:	af 8b       	std	Y+23, r26	; 0x17
    3d0a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3d0c:	6d 89       	ldd	r22, Y+21	; 0x15
    3d0e:	7e 89       	ldd	r23, Y+22	; 0x16
    3d10:	8f 89       	ldd	r24, Y+23	; 0x17
    3d12:	98 8d       	ldd	r25, Y+24	; 0x18
    3d14:	20 e0       	ldi	r18, 0x00	; 0
    3d16:	30 e0       	ldi	r19, 0x00	; 0
    3d18:	40 e8       	ldi	r20, 0x80	; 128
    3d1a:	5f e3       	ldi	r21, 0x3F	; 63
    3d1c:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__ltsf2>
    3d20:	88 23       	and	r24, r24
    3d22:	2c f4       	brge	.+10     	; 0x3d2e <CLCD_WriteInes+0x8e>
		__ticks = 1;
    3d24:	81 e0       	ldi	r24, 0x01	; 1
    3d26:	90 e0       	ldi	r25, 0x00	; 0
    3d28:	9c 8b       	std	Y+20, r25	; 0x14
    3d2a:	8b 8b       	std	Y+19, r24	; 0x13
    3d2c:	3f c0       	rjmp	.+126    	; 0x3dac <CLCD_WriteInes+0x10c>
	else if (__tmp > 65535)
    3d2e:	6d 89       	ldd	r22, Y+21	; 0x15
    3d30:	7e 89       	ldd	r23, Y+22	; 0x16
    3d32:	8f 89       	ldd	r24, Y+23	; 0x17
    3d34:	98 8d       	ldd	r25, Y+24	; 0x18
    3d36:	20 e0       	ldi	r18, 0x00	; 0
    3d38:	3f ef       	ldi	r19, 0xFF	; 255
    3d3a:	4f e7       	ldi	r20, 0x7F	; 127
    3d3c:	57 e4       	ldi	r21, 0x47	; 71
    3d3e:	0e 94 82 11 	call	0x2304	; 0x2304 <__gtsf2>
    3d42:	18 16       	cp	r1, r24
    3d44:	4c f5       	brge	.+82     	; 0x3d98 <CLCD_WriteInes+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3d46:	69 8d       	ldd	r22, Y+25	; 0x19
    3d48:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3d4a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3d4c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3d4e:	20 e0       	ldi	r18, 0x00	; 0
    3d50:	30 e0       	ldi	r19, 0x00	; 0
    3d52:	40 e2       	ldi	r20, 0x20	; 32
    3d54:	51 e4       	ldi	r21, 0x41	; 65
    3d56:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3d5a:	dc 01       	movw	r26, r24
    3d5c:	cb 01       	movw	r24, r22
    3d5e:	bc 01       	movw	r22, r24
    3d60:	cd 01       	movw	r24, r26
    3d62:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3d66:	dc 01       	movw	r26, r24
    3d68:	cb 01       	movw	r24, r22
    3d6a:	9c 8b       	std	Y+20, r25	; 0x14
    3d6c:	8b 8b       	std	Y+19, r24	; 0x13
    3d6e:	0f c0       	rjmp	.+30     	; 0x3d8e <CLCD_WriteInes+0xee>
    3d70:	89 e1       	ldi	r24, 0x19	; 25
    3d72:	90 e0       	ldi	r25, 0x00	; 0
    3d74:	9a 8b       	std	Y+18, r25	; 0x12
    3d76:	89 8b       	std	Y+17, r24	; 0x11
    3d78:	89 89       	ldd	r24, Y+17	; 0x11
    3d7a:	9a 89       	ldd	r25, Y+18	; 0x12
    3d7c:	01 97       	sbiw	r24, 0x01	; 1
    3d7e:	f1 f7       	brne	.-4      	; 0x3d7c <CLCD_WriteInes+0xdc>
    3d80:	9a 8b       	std	Y+18, r25	; 0x12
    3d82:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d84:	8b 89       	ldd	r24, Y+19	; 0x13
    3d86:	9c 89       	ldd	r25, Y+20	; 0x14
    3d88:	01 97       	sbiw	r24, 0x01	; 1
    3d8a:	9c 8b       	std	Y+20, r25	; 0x14
    3d8c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d8e:	8b 89       	ldd	r24, Y+19	; 0x13
    3d90:	9c 89       	ldd	r25, Y+20	; 0x14
    3d92:	00 97       	sbiw	r24, 0x00	; 0
    3d94:	69 f7       	brne	.-38     	; 0x3d70 <CLCD_WriteInes+0xd0>
    3d96:	14 c0       	rjmp	.+40     	; 0x3dc0 <CLCD_WriteInes+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d98:	6d 89       	ldd	r22, Y+21	; 0x15
    3d9a:	7e 89       	ldd	r23, Y+22	; 0x16
    3d9c:	8f 89       	ldd	r24, Y+23	; 0x17
    3d9e:	98 8d       	ldd	r25, Y+24	; 0x18
    3da0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3da4:	dc 01       	movw	r26, r24
    3da6:	cb 01       	movw	r24, r22
    3da8:	9c 8b       	std	Y+20, r25	; 0x14
    3daa:	8b 8b       	std	Y+19, r24	; 0x13
    3dac:	8b 89       	ldd	r24, Y+19	; 0x13
    3dae:	9c 89       	ldd	r25, Y+20	; 0x14
    3db0:	98 8b       	std	Y+16, r25	; 0x10
    3db2:	8f 87       	std	Y+15, r24	; 0x0f
    3db4:	8f 85       	ldd	r24, Y+15	; 0x0f
    3db6:	98 89       	ldd	r25, Y+16	; 0x10
    3db8:	01 97       	sbiw	r24, 0x01	; 1
    3dba:	f1 f7       	brne	.-4      	; 0x3db8 <CLCD_WriteInes+0x118>
    3dbc:	98 8b       	std	Y+16, r25	; 0x10
    3dbe:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_voidSetPinValue(CLCD_Control_Port,CLCD_EN_PIN, DIO_u8LOW);
    3dc0:	82 e0       	ldi	r24, 0x02	; 2
    3dc2:	62 e0       	ldi	r22, 0x02	; 2
    3dc4:	40 e0       	ldi	r20, 0x00	; 0
    3dc6:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
    3dca:	80 e0       	ldi	r24, 0x00	; 0
    3dcc:	90 e0       	ldi	r25, 0x00	; 0
    3dce:	a0 e8       	ldi	r26, 0x80	; 128
    3dd0:	bf e3       	ldi	r27, 0x3F	; 63
    3dd2:	8b 87       	std	Y+11, r24	; 0x0b
    3dd4:	9c 87       	std	Y+12, r25	; 0x0c
    3dd6:	ad 87       	std	Y+13, r26	; 0x0d
    3dd8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3dda:	6b 85       	ldd	r22, Y+11	; 0x0b
    3ddc:	7c 85       	ldd	r23, Y+12	; 0x0c
    3dde:	8d 85       	ldd	r24, Y+13	; 0x0d
    3de0:	9e 85       	ldd	r25, Y+14	; 0x0e
    3de2:	20 e0       	ldi	r18, 0x00	; 0
    3de4:	30 e0       	ldi	r19, 0x00	; 0
    3de6:	4a e7       	ldi	r20, 0x7A	; 122
    3de8:	53 e4       	ldi	r21, 0x43	; 67
    3dea:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3dee:	dc 01       	movw	r26, r24
    3df0:	cb 01       	movw	r24, r22
    3df2:	8f 83       	std	Y+7, r24	; 0x07
    3df4:	98 87       	std	Y+8, r25	; 0x08
    3df6:	a9 87       	std	Y+9, r26	; 0x09
    3df8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3dfa:	6f 81       	ldd	r22, Y+7	; 0x07
    3dfc:	78 85       	ldd	r23, Y+8	; 0x08
    3dfe:	89 85       	ldd	r24, Y+9	; 0x09
    3e00:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e02:	20 e0       	ldi	r18, 0x00	; 0
    3e04:	30 e0       	ldi	r19, 0x00	; 0
    3e06:	40 e8       	ldi	r20, 0x80	; 128
    3e08:	5f e3       	ldi	r21, 0x3F	; 63
    3e0a:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__ltsf2>
    3e0e:	88 23       	and	r24, r24
    3e10:	2c f4       	brge	.+10     	; 0x3e1c <CLCD_WriteInes+0x17c>
		__ticks = 1;
    3e12:	81 e0       	ldi	r24, 0x01	; 1
    3e14:	90 e0       	ldi	r25, 0x00	; 0
    3e16:	9e 83       	std	Y+6, r25	; 0x06
    3e18:	8d 83       	std	Y+5, r24	; 0x05
    3e1a:	3f c0       	rjmp	.+126    	; 0x3e9a <CLCD_WriteInes+0x1fa>
	else if (__tmp > 65535)
    3e1c:	6f 81       	ldd	r22, Y+7	; 0x07
    3e1e:	78 85       	ldd	r23, Y+8	; 0x08
    3e20:	89 85       	ldd	r24, Y+9	; 0x09
    3e22:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e24:	20 e0       	ldi	r18, 0x00	; 0
    3e26:	3f ef       	ldi	r19, 0xFF	; 255
    3e28:	4f e7       	ldi	r20, 0x7F	; 127
    3e2a:	57 e4       	ldi	r21, 0x47	; 71
    3e2c:	0e 94 82 11 	call	0x2304	; 0x2304 <__gtsf2>
    3e30:	18 16       	cp	r1, r24
    3e32:	4c f5       	brge	.+82     	; 0x3e86 <CLCD_WriteInes+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e34:	6b 85       	ldd	r22, Y+11	; 0x0b
    3e36:	7c 85       	ldd	r23, Y+12	; 0x0c
    3e38:	8d 85       	ldd	r24, Y+13	; 0x0d
    3e3a:	9e 85       	ldd	r25, Y+14	; 0x0e
    3e3c:	20 e0       	ldi	r18, 0x00	; 0
    3e3e:	30 e0       	ldi	r19, 0x00	; 0
    3e40:	40 e2       	ldi	r20, 0x20	; 32
    3e42:	51 e4       	ldi	r21, 0x41	; 65
    3e44:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3e48:	dc 01       	movw	r26, r24
    3e4a:	cb 01       	movw	r24, r22
    3e4c:	bc 01       	movw	r22, r24
    3e4e:	cd 01       	movw	r24, r26
    3e50:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3e54:	dc 01       	movw	r26, r24
    3e56:	cb 01       	movw	r24, r22
    3e58:	9e 83       	std	Y+6, r25	; 0x06
    3e5a:	8d 83       	std	Y+5, r24	; 0x05
    3e5c:	0f c0       	rjmp	.+30     	; 0x3e7c <CLCD_WriteInes+0x1dc>
    3e5e:	89 e1       	ldi	r24, 0x19	; 25
    3e60:	90 e0       	ldi	r25, 0x00	; 0
    3e62:	9c 83       	std	Y+4, r25	; 0x04
    3e64:	8b 83       	std	Y+3, r24	; 0x03
    3e66:	8b 81       	ldd	r24, Y+3	; 0x03
    3e68:	9c 81       	ldd	r25, Y+4	; 0x04
    3e6a:	01 97       	sbiw	r24, 0x01	; 1
    3e6c:	f1 f7       	brne	.-4      	; 0x3e6a <CLCD_WriteInes+0x1ca>
    3e6e:	9c 83       	std	Y+4, r25	; 0x04
    3e70:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e72:	8d 81       	ldd	r24, Y+5	; 0x05
    3e74:	9e 81       	ldd	r25, Y+6	; 0x06
    3e76:	01 97       	sbiw	r24, 0x01	; 1
    3e78:	9e 83       	std	Y+6, r25	; 0x06
    3e7a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e7c:	8d 81       	ldd	r24, Y+5	; 0x05
    3e7e:	9e 81       	ldd	r25, Y+6	; 0x06
    3e80:	00 97       	sbiw	r24, 0x00	; 0
    3e82:	69 f7       	brne	.-38     	; 0x3e5e <CLCD_WriteInes+0x1be>
    3e84:	14 c0       	rjmp	.+40     	; 0x3eae <CLCD_WriteInes+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e86:	6f 81       	ldd	r22, Y+7	; 0x07
    3e88:	78 85       	ldd	r23, Y+8	; 0x08
    3e8a:	89 85       	ldd	r24, Y+9	; 0x09
    3e8c:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e8e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3e92:	dc 01       	movw	r26, r24
    3e94:	cb 01       	movw	r24, r22
    3e96:	9e 83       	std	Y+6, r25	; 0x06
    3e98:	8d 83       	std	Y+5, r24	; 0x05
    3e9a:	8d 81       	ldd	r24, Y+5	; 0x05
    3e9c:	9e 81       	ldd	r25, Y+6	; 0x06
    3e9e:	9a 83       	std	Y+2, r25	; 0x02
    3ea0:	89 83       	std	Y+1, r24	; 0x01
    3ea2:	89 81       	ldd	r24, Y+1	; 0x01
    3ea4:	9a 81       	ldd	r25, Y+2	; 0x02
    3ea6:	01 97       	sbiw	r24, 0x01	; 1
    3ea8:	f1 f7       	brne	.-4      	; 0x3ea6 <CLCD_WriteInes+0x206>
    3eaa:	9a 83       	std	Y+2, r25	; 0x02
    3eac:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    3eae:	6d 96       	adiw	r28, 0x1d	; 29
    3eb0:	0f b6       	in	r0, 0x3f	; 63
    3eb2:	f8 94       	cli
    3eb4:	de bf       	out	0x3e, r29	; 62
    3eb6:	0f be       	out	0x3f, r0	; 63
    3eb8:	cd bf       	out	0x3d, r28	; 61
    3eba:	cf 91       	pop	r28
    3ebc:	df 91       	pop	r29
    3ebe:	08 95       	ret

00003ec0 <CLCD_WriteData>:

void CLCD_WriteData(u8 Data){
    3ec0:	df 93       	push	r29
    3ec2:	cf 93       	push	r28
    3ec4:	cd b7       	in	r28, 0x3d	; 61
    3ec6:	de b7       	in	r29, 0x3e	; 62
    3ec8:	6d 97       	sbiw	r28, 0x1d	; 29
    3eca:	0f b6       	in	r0, 0x3f	; 63
    3ecc:	f8 94       	cli
    3ece:	de bf       	out	0x3e, r29	; 62
    3ed0:	0f be       	out	0x3f, r0	; 63
    3ed2:	cd bf       	out	0x3d, r28	; 61
    3ed4:	8d 8f       	std	Y+29, r24	; 0x1d
	/* RS = 1 (Command mode) */
	DIO_voidSetPinValue(CLCD_Control_Port, CLCD_RS_PIN, DIO_u8HIGH); //send commend
    3ed6:	82 e0       	ldi	r24, 0x02	; 2
    3ed8:	60 e0       	ldi	r22, 0x00	; 0
    3eda:	41 e0       	ldi	r20, 0x01	; 1
    3edc:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
	/* RW = 0 (Write mode) */
	DIO_voidSetPinValue(CLCD_Control_Port, CLCD_RW_PIN, DIO_u8LOW);
    3ee0:	82 e0       	ldi	r24, 0x02	; 2
    3ee2:	61 e0       	ldi	r22, 0x01	; 1
    3ee4:	40 e0       	ldi	r20, 0x00	; 0
    3ee6:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
	/* send command through the port */
	DIO_voidSetPortValue(CLCD_Data_Port, Data); //function set
    3eea:	81 e0       	ldi	r24, 0x01	; 1
    3eec:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3eee:	0e 94 65 19 	call	0x32ca	; 0x32ca <DIO_voidSetPortValue>
	/* Enable sequence */
	DIO_voidSetPinValue(CLCD_Control_Port, CLCD_EN_PIN, DIO_u8HIGH);
    3ef2:	82 e0       	ldi	r24, 0x02	; 2
    3ef4:	62 e0       	ldi	r22, 0x02	; 2
    3ef6:	41 e0       	ldi	r20, 0x01	; 1
    3ef8:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
    3efc:	80 e0       	ldi	r24, 0x00	; 0
    3efe:	90 e0       	ldi	r25, 0x00	; 0
    3f00:	a0 e8       	ldi	r26, 0x80	; 128
    3f02:	bf e3       	ldi	r27, 0x3F	; 63
    3f04:	89 8f       	std	Y+25, r24	; 0x19
    3f06:	9a 8f       	std	Y+26, r25	; 0x1a
    3f08:	ab 8f       	std	Y+27, r26	; 0x1b
    3f0a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f0c:	69 8d       	ldd	r22, Y+25	; 0x19
    3f0e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3f10:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3f12:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3f14:	20 e0       	ldi	r18, 0x00	; 0
    3f16:	30 e0       	ldi	r19, 0x00	; 0
    3f18:	4a e7       	ldi	r20, 0x7A	; 122
    3f1a:	53 e4       	ldi	r21, 0x43	; 67
    3f1c:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3f20:	dc 01       	movw	r26, r24
    3f22:	cb 01       	movw	r24, r22
    3f24:	8d 8b       	std	Y+21, r24	; 0x15
    3f26:	9e 8b       	std	Y+22, r25	; 0x16
    3f28:	af 8b       	std	Y+23, r26	; 0x17
    3f2a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3f2c:	6d 89       	ldd	r22, Y+21	; 0x15
    3f2e:	7e 89       	ldd	r23, Y+22	; 0x16
    3f30:	8f 89       	ldd	r24, Y+23	; 0x17
    3f32:	98 8d       	ldd	r25, Y+24	; 0x18
    3f34:	20 e0       	ldi	r18, 0x00	; 0
    3f36:	30 e0       	ldi	r19, 0x00	; 0
    3f38:	40 e8       	ldi	r20, 0x80	; 128
    3f3a:	5f e3       	ldi	r21, 0x3F	; 63
    3f3c:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__ltsf2>
    3f40:	88 23       	and	r24, r24
    3f42:	2c f4       	brge	.+10     	; 0x3f4e <CLCD_WriteData+0x8e>
		__ticks = 1;
    3f44:	81 e0       	ldi	r24, 0x01	; 1
    3f46:	90 e0       	ldi	r25, 0x00	; 0
    3f48:	9c 8b       	std	Y+20, r25	; 0x14
    3f4a:	8b 8b       	std	Y+19, r24	; 0x13
    3f4c:	3f c0       	rjmp	.+126    	; 0x3fcc <CLCD_WriteData+0x10c>
	else if (__tmp > 65535)
    3f4e:	6d 89       	ldd	r22, Y+21	; 0x15
    3f50:	7e 89       	ldd	r23, Y+22	; 0x16
    3f52:	8f 89       	ldd	r24, Y+23	; 0x17
    3f54:	98 8d       	ldd	r25, Y+24	; 0x18
    3f56:	20 e0       	ldi	r18, 0x00	; 0
    3f58:	3f ef       	ldi	r19, 0xFF	; 255
    3f5a:	4f e7       	ldi	r20, 0x7F	; 127
    3f5c:	57 e4       	ldi	r21, 0x47	; 71
    3f5e:	0e 94 82 11 	call	0x2304	; 0x2304 <__gtsf2>
    3f62:	18 16       	cp	r1, r24
    3f64:	4c f5       	brge	.+82     	; 0x3fb8 <CLCD_WriteData+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f66:	69 8d       	ldd	r22, Y+25	; 0x19
    3f68:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3f6a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3f6c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3f6e:	20 e0       	ldi	r18, 0x00	; 0
    3f70:	30 e0       	ldi	r19, 0x00	; 0
    3f72:	40 e2       	ldi	r20, 0x20	; 32
    3f74:	51 e4       	ldi	r21, 0x41	; 65
    3f76:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    3f7a:	dc 01       	movw	r26, r24
    3f7c:	cb 01       	movw	r24, r22
    3f7e:	bc 01       	movw	r22, r24
    3f80:	cd 01       	movw	r24, r26
    3f82:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3f86:	dc 01       	movw	r26, r24
    3f88:	cb 01       	movw	r24, r22
    3f8a:	9c 8b       	std	Y+20, r25	; 0x14
    3f8c:	8b 8b       	std	Y+19, r24	; 0x13
    3f8e:	0f c0       	rjmp	.+30     	; 0x3fae <CLCD_WriteData+0xee>
    3f90:	89 e1       	ldi	r24, 0x19	; 25
    3f92:	90 e0       	ldi	r25, 0x00	; 0
    3f94:	9a 8b       	std	Y+18, r25	; 0x12
    3f96:	89 8b       	std	Y+17, r24	; 0x11
    3f98:	89 89       	ldd	r24, Y+17	; 0x11
    3f9a:	9a 89       	ldd	r25, Y+18	; 0x12
    3f9c:	01 97       	sbiw	r24, 0x01	; 1
    3f9e:	f1 f7       	brne	.-4      	; 0x3f9c <CLCD_WriteData+0xdc>
    3fa0:	9a 8b       	std	Y+18, r25	; 0x12
    3fa2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fa4:	8b 89       	ldd	r24, Y+19	; 0x13
    3fa6:	9c 89       	ldd	r25, Y+20	; 0x14
    3fa8:	01 97       	sbiw	r24, 0x01	; 1
    3faa:	9c 8b       	std	Y+20, r25	; 0x14
    3fac:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fae:	8b 89       	ldd	r24, Y+19	; 0x13
    3fb0:	9c 89       	ldd	r25, Y+20	; 0x14
    3fb2:	00 97       	sbiw	r24, 0x00	; 0
    3fb4:	69 f7       	brne	.-38     	; 0x3f90 <CLCD_WriteData+0xd0>
    3fb6:	14 c0       	rjmp	.+40     	; 0x3fe0 <CLCD_WriteData+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3fb8:	6d 89       	ldd	r22, Y+21	; 0x15
    3fba:	7e 89       	ldd	r23, Y+22	; 0x16
    3fbc:	8f 89       	ldd	r24, Y+23	; 0x17
    3fbe:	98 8d       	ldd	r25, Y+24	; 0x18
    3fc0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3fc4:	dc 01       	movw	r26, r24
    3fc6:	cb 01       	movw	r24, r22
    3fc8:	9c 8b       	std	Y+20, r25	; 0x14
    3fca:	8b 8b       	std	Y+19, r24	; 0x13
    3fcc:	8b 89       	ldd	r24, Y+19	; 0x13
    3fce:	9c 89       	ldd	r25, Y+20	; 0x14
    3fd0:	98 8b       	std	Y+16, r25	; 0x10
    3fd2:	8f 87       	std	Y+15, r24	; 0x0f
    3fd4:	8f 85       	ldd	r24, Y+15	; 0x0f
    3fd6:	98 89       	ldd	r25, Y+16	; 0x10
    3fd8:	01 97       	sbiw	r24, 0x01	; 1
    3fda:	f1 f7       	brne	.-4      	; 0x3fd8 <CLCD_WriteData+0x118>
    3fdc:	98 8b       	std	Y+16, r25	; 0x10
    3fde:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_voidSetPinValue(CLCD_Control_Port,CLCD_EN_PIN, DIO_u8LOW);
    3fe0:	82 e0       	ldi	r24, 0x02	; 2
    3fe2:	62 e0       	ldi	r22, 0x02	; 2
    3fe4:	40 e0       	ldi	r20, 0x00	; 0
    3fe6:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
    3fea:	80 e0       	ldi	r24, 0x00	; 0
    3fec:	90 e0       	ldi	r25, 0x00	; 0
    3fee:	a0 e8       	ldi	r26, 0x80	; 128
    3ff0:	bf e3       	ldi	r27, 0x3F	; 63
    3ff2:	8b 87       	std	Y+11, r24	; 0x0b
    3ff4:	9c 87       	std	Y+12, r25	; 0x0c
    3ff6:	ad 87       	std	Y+13, r26	; 0x0d
    3ff8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ffa:	6b 85       	ldd	r22, Y+11	; 0x0b
    3ffc:	7c 85       	ldd	r23, Y+12	; 0x0c
    3ffe:	8d 85       	ldd	r24, Y+13	; 0x0d
    4000:	9e 85       	ldd	r25, Y+14	; 0x0e
    4002:	20 e0       	ldi	r18, 0x00	; 0
    4004:	30 e0       	ldi	r19, 0x00	; 0
    4006:	4a e7       	ldi	r20, 0x7A	; 122
    4008:	53 e4       	ldi	r21, 0x43	; 67
    400a:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    400e:	dc 01       	movw	r26, r24
    4010:	cb 01       	movw	r24, r22
    4012:	8f 83       	std	Y+7, r24	; 0x07
    4014:	98 87       	std	Y+8, r25	; 0x08
    4016:	a9 87       	std	Y+9, r26	; 0x09
    4018:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    401a:	6f 81       	ldd	r22, Y+7	; 0x07
    401c:	78 85       	ldd	r23, Y+8	; 0x08
    401e:	89 85       	ldd	r24, Y+9	; 0x09
    4020:	9a 85       	ldd	r25, Y+10	; 0x0a
    4022:	20 e0       	ldi	r18, 0x00	; 0
    4024:	30 e0       	ldi	r19, 0x00	; 0
    4026:	40 e8       	ldi	r20, 0x80	; 128
    4028:	5f e3       	ldi	r21, 0x3F	; 63
    402a:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__ltsf2>
    402e:	88 23       	and	r24, r24
    4030:	2c f4       	brge	.+10     	; 0x403c <CLCD_WriteData+0x17c>
		__ticks = 1;
    4032:	81 e0       	ldi	r24, 0x01	; 1
    4034:	90 e0       	ldi	r25, 0x00	; 0
    4036:	9e 83       	std	Y+6, r25	; 0x06
    4038:	8d 83       	std	Y+5, r24	; 0x05
    403a:	3f c0       	rjmp	.+126    	; 0x40ba <CLCD_WriteData+0x1fa>
	else if (__tmp > 65535)
    403c:	6f 81       	ldd	r22, Y+7	; 0x07
    403e:	78 85       	ldd	r23, Y+8	; 0x08
    4040:	89 85       	ldd	r24, Y+9	; 0x09
    4042:	9a 85       	ldd	r25, Y+10	; 0x0a
    4044:	20 e0       	ldi	r18, 0x00	; 0
    4046:	3f ef       	ldi	r19, 0xFF	; 255
    4048:	4f e7       	ldi	r20, 0x7F	; 127
    404a:	57 e4       	ldi	r21, 0x47	; 71
    404c:	0e 94 82 11 	call	0x2304	; 0x2304 <__gtsf2>
    4050:	18 16       	cp	r1, r24
    4052:	4c f5       	brge	.+82     	; 0x40a6 <CLCD_WriteData+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4054:	6b 85       	ldd	r22, Y+11	; 0x0b
    4056:	7c 85       	ldd	r23, Y+12	; 0x0c
    4058:	8d 85       	ldd	r24, Y+13	; 0x0d
    405a:	9e 85       	ldd	r25, Y+14	; 0x0e
    405c:	20 e0       	ldi	r18, 0x00	; 0
    405e:	30 e0       	ldi	r19, 0x00	; 0
    4060:	40 e2       	ldi	r20, 0x20	; 32
    4062:	51 e4       	ldi	r21, 0x41	; 65
    4064:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    4068:	dc 01       	movw	r26, r24
    406a:	cb 01       	movw	r24, r22
    406c:	bc 01       	movw	r22, r24
    406e:	cd 01       	movw	r24, r26
    4070:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4074:	dc 01       	movw	r26, r24
    4076:	cb 01       	movw	r24, r22
    4078:	9e 83       	std	Y+6, r25	; 0x06
    407a:	8d 83       	std	Y+5, r24	; 0x05
    407c:	0f c0       	rjmp	.+30     	; 0x409c <CLCD_WriteData+0x1dc>
    407e:	89 e1       	ldi	r24, 0x19	; 25
    4080:	90 e0       	ldi	r25, 0x00	; 0
    4082:	9c 83       	std	Y+4, r25	; 0x04
    4084:	8b 83       	std	Y+3, r24	; 0x03
    4086:	8b 81       	ldd	r24, Y+3	; 0x03
    4088:	9c 81       	ldd	r25, Y+4	; 0x04
    408a:	01 97       	sbiw	r24, 0x01	; 1
    408c:	f1 f7       	brne	.-4      	; 0x408a <CLCD_WriteData+0x1ca>
    408e:	9c 83       	std	Y+4, r25	; 0x04
    4090:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4092:	8d 81       	ldd	r24, Y+5	; 0x05
    4094:	9e 81       	ldd	r25, Y+6	; 0x06
    4096:	01 97       	sbiw	r24, 0x01	; 1
    4098:	9e 83       	std	Y+6, r25	; 0x06
    409a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    409c:	8d 81       	ldd	r24, Y+5	; 0x05
    409e:	9e 81       	ldd	r25, Y+6	; 0x06
    40a0:	00 97       	sbiw	r24, 0x00	; 0
    40a2:	69 f7       	brne	.-38     	; 0x407e <CLCD_WriteData+0x1be>
    40a4:	14 c0       	rjmp	.+40     	; 0x40ce <CLCD_WriteData+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    40a6:	6f 81       	ldd	r22, Y+7	; 0x07
    40a8:	78 85       	ldd	r23, Y+8	; 0x08
    40aa:	89 85       	ldd	r24, Y+9	; 0x09
    40ac:	9a 85       	ldd	r25, Y+10	; 0x0a
    40ae:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    40b2:	dc 01       	movw	r26, r24
    40b4:	cb 01       	movw	r24, r22
    40b6:	9e 83       	std	Y+6, r25	; 0x06
    40b8:	8d 83       	std	Y+5, r24	; 0x05
    40ba:	8d 81       	ldd	r24, Y+5	; 0x05
    40bc:	9e 81       	ldd	r25, Y+6	; 0x06
    40be:	9a 83       	std	Y+2, r25	; 0x02
    40c0:	89 83       	std	Y+1, r24	; 0x01
    40c2:	89 81       	ldd	r24, Y+1	; 0x01
    40c4:	9a 81       	ldd	r25, Y+2	; 0x02
    40c6:	01 97       	sbiw	r24, 0x01	; 1
    40c8:	f1 f7       	brne	.-4      	; 0x40c6 <CLCD_WriteData+0x206>
    40ca:	9a 83       	std	Y+2, r25	; 0x02
    40cc:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    40ce:	6d 96       	adiw	r28, 0x1d	; 29
    40d0:	0f b6       	in	r0, 0x3f	; 63
    40d2:	f8 94       	cli
    40d4:	de bf       	out	0x3e, r29	; 62
    40d6:	0f be       	out	0x3f, r0	; 63
    40d8:	cd bf       	out	0x3d, r28	; 61
    40da:	cf 91       	pop	r28
    40dc:	df 91       	pop	r29
    40de:	08 95       	ret

000040e0 <CLCD_WriteChar>:

void CLCD_WriteChar(u8 Char){
    40e0:	df 93       	push	r29
    40e2:	cf 93       	push	r28
    40e4:	0f 92       	push	r0
    40e6:	cd b7       	in	r28, 0x3d	; 61
    40e8:	de b7       	in	r29, 0x3e	; 62
    40ea:	89 83       	std	Y+1, r24	; 0x01
	CLCD_WriteData(Char);
    40ec:	89 81       	ldd	r24, Y+1	; 0x01
    40ee:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
}
    40f2:	0f 90       	pop	r0
    40f4:	cf 91       	pop	r28
    40f6:	df 91       	pop	r29
    40f8:	08 95       	ret

000040fa <CLCD_WriteString>:

void CLCD_WriteString(u8 * String){
    40fa:	df 93       	push	r29
    40fc:	cf 93       	push	r28
    40fe:	00 d0       	rcall	.+0      	; 0x4100 <CLCD_WriteString+0x6>
    4100:	cd b7       	in	r28, 0x3d	; 61
    4102:	de b7       	in	r29, 0x3e	; 62
    4104:	9a 83       	std	Y+2, r25	; 0x02
    4106:	89 83       	std	Y+1, r24	; 0x01
    4108:	0a c0       	rjmp	.+20     	; 0x411e <CLCD_WriteString+0x24>
	while (*String != '\0'){
		CLCD_WriteData(*String);
    410a:	e9 81       	ldd	r30, Y+1	; 0x01
    410c:	fa 81       	ldd	r31, Y+2	; 0x02
    410e:	80 81       	ld	r24, Z
    4110:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
		String++;
    4114:	89 81       	ldd	r24, Y+1	; 0x01
    4116:	9a 81       	ldd	r25, Y+2	; 0x02
    4118:	01 96       	adiw	r24, 0x01	; 1
    411a:	9a 83       	std	Y+2, r25	; 0x02
    411c:	89 83       	std	Y+1, r24	; 0x01
void CLCD_WriteChar(u8 Char){
	CLCD_WriteData(Char);
}

void CLCD_WriteString(u8 * String){
	while (*String != '\0'){
    411e:	e9 81       	ldd	r30, Y+1	; 0x01
    4120:	fa 81       	ldd	r31, Y+2	; 0x02
    4122:	80 81       	ld	r24, Z
    4124:	88 23       	and	r24, r24
    4126:	89 f7       	brne	.-30     	; 0x410a <CLCD_WriteString+0x10>
		CLCD_WriteData(*String);
		String++;
	}
}
    4128:	0f 90       	pop	r0
    412a:	0f 90       	pop	r0
    412c:	cf 91       	pop	r28
    412e:	df 91       	pop	r29
    4130:	08 95       	ret

00004132 <CLCD_GoTo>:

void CLCD_GoTo(u8 Row, u8 Col){
    4132:	df 93       	push	r29
    4134:	cf 93       	push	r28
    4136:	00 d0       	rcall	.+0      	; 0x4138 <CLCD_GoTo+0x6>
    4138:	00 d0       	rcall	.+0      	; 0x413a <CLCD_GoTo+0x8>
    413a:	cd b7       	in	r28, 0x3d	; 61
    413c:	de b7       	in	r29, 0x3e	; 62
    413e:	89 83       	std	Y+1, r24	; 0x01
    4140:	6a 83       	std	Y+2, r22	; 0x02
	Col--;
    4142:	8a 81       	ldd	r24, Y+2	; 0x02
    4144:	81 50       	subi	r24, 0x01	; 1
    4146:	8a 83       	std	Y+2, r24	; 0x02
	Row--;
    4148:	89 81       	ldd	r24, Y+1	; 0x01
    414a:	81 50       	subi	r24, 0x01	; 1
    414c:	89 83       	std	Y+1, r24	; 0x01

	switch(Row)
    414e:	89 81       	ldd	r24, Y+1	; 0x01
    4150:	28 2f       	mov	r18, r24
    4152:	30 e0       	ldi	r19, 0x00	; 0
    4154:	3c 83       	std	Y+4, r19	; 0x04
    4156:	2b 83       	std	Y+3, r18	; 0x03
    4158:	8b 81       	ldd	r24, Y+3	; 0x03
    415a:	9c 81       	ldd	r25, Y+4	; 0x04
    415c:	00 97       	sbiw	r24, 0x00	; 0
    415e:	31 f0       	breq	.+12     	; 0x416c <CLCD_GoTo+0x3a>
    4160:	2b 81       	ldd	r18, Y+3	; 0x03
    4162:	3c 81       	ldd	r19, Y+4	; 0x04
    4164:	21 30       	cpi	r18, 0x01	; 1
    4166:	31 05       	cpc	r19, r1
    4168:	31 f0       	breq	.+12     	; 0x4176 <CLCD_GoTo+0x44>
    416a:	09 c0       	rjmp	.+18     	; 0x417e <CLCD_GoTo+0x4c>
	{
		case 0: CLCD_WriteInes(0x80+Col); break;
    416c:	8a 81       	ldd	r24, Y+2	; 0x02
    416e:	80 58       	subi	r24, 0x80	; 128
    4170:	0e 94 50 1e 	call	0x3ca0	; 0x3ca0 <CLCD_WriteInes>
    4174:	04 c0       	rjmp	.+8      	; 0x417e <CLCD_GoTo+0x4c>
		case 1: CLCD_WriteInes(0xC0+Col); break;
    4176:	8a 81       	ldd	r24, Y+2	; 0x02
    4178:	80 54       	subi	r24, 0x40	; 64
    417a:	0e 94 50 1e 	call	0x3ca0	; 0x3ca0 <CLCD_WriteInes>
	}
}
    417e:	0f 90       	pop	r0
    4180:	0f 90       	pop	r0
    4182:	0f 90       	pop	r0
    4184:	0f 90       	pop	r0
    4186:	cf 91       	pop	r28
    4188:	df 91       	pop	r29
    418a:	08 95       	ret

0000418c <CLCD_DisplayClear>:

void CLCD_DisplayClear(void){
    418c:	df 93       	push	r29
    418e:	cf 93       	push	r28
    4190:	cd b7       	in	r28, 0x3d	; 61
    4192:	de b7       	in	r29, 0x3e	; 62
	CLCD_WriteInes(0x01);
    4194:	81 e0       	ldi	r24, 0x01	; 1
    4196:	0e 94 50 1e 	call	0x3ca0	; 0x3ca0 <CLCD_WriteInes>
}
    419a:	cf 91       	pop	r28
    419c:	df 91       	pop	r29
    419e:	08 95       	ret

000041a0 <ConvertNumToASCII>:

u8 ConvertNumToASCII(u8 Input){
    41a0:	df 93       	push	r29
    41a2:	cf 93       	push	r28
    41a4:	0f 92       	push	r0
    41a6:	cd b7       	in	r28, 0x3d	; 61
    41a8:	de b7       	in	r29, 0x3e	; 62
    41aa:	89 83       	std	Y+1, r24	; 0x01
	return Input+0x30;
    41ac:	89 81       	ldd	r24, Y+1	; 0x01
    41ae:	80 5d       	subi	r24, 0xD0	; 208
}
    41b0:	0f 90       	pop	r0
    41b2:	cf 91       	pop	r28
    41b4:	df 91       	pop	r29
    41b6:	08 95       	ret

000041b8 <CLCD_ReverseNumber>:

s32 CLCD_ReverseNumber(s32 NUM){
    41b8:	ef 92       	push	r14
    41ba:	ff 92       	push	r15
    41bc:	0f 93       	push	r16
    41be:	1f 93       	push	r17
    41c0:	df 93       	push	r29
    41c2:	cf 93       	push	r28
    41c4:	cd b7       	in	r28, 0x3d	; 61
    41c6:	de b7       	in	r29, 0x3e	; 62
    41c8:	28 97       	sbiw	r28, 0x08	; 8
    41ca:	0f b6       	in	r0, 0x3f	; 63
    41cc:	f8 94       	cli
    41ce:	de bf       	out	0x3e, r29	; 62
    41d0:	0f be       	out	0x3f, r0	; 63
    41d2:	cd bf       	out	0x3d, r28	; 61
    41d4:	6d 83       	std	Y+5, r22	; 0x05
    41d6:	7e 83       	std	Y+6, r23	; 0x06
    41d8:	8f 83       	std	Y+7, r24	; 0x07
    41da:	98 87       	std	Y+8, r25	; 0x08
	u32 reverse=1;
    41dc:	81 e0       	ldi	r24, 0x01	; 1
    41de:	90 e0       	ldi	r25, 0x00	; 0
    41e0:	a0 e0       	ldi	r26, 0x00	; 0
    41e2:	b0 e0       	ldi	r27, 0x00	; 0
    41e4:	89 83       	std	Y+1, r24	; 0x01
    41e6:	9a 83       	std	Y+2, r25	; 0x02
    41e8:	ab 83       	std	Y+3, r26	; 0x03
    41ea:	bc 83       	std	Y+4, r27	; 0x04
    41ec:	36 c0       	rjmp	.+108    	; 0x425a <CLCD_ReverseNumber+0xa2>
	while(NUM!=0)
	{
		reverse=(reverse*10)+(NUM%10);
    41ee:	89 81       	ldd	r24, Y+1	; 0x01
    41f0:	9a 81       	ldd	r25, Y+2	; 0x02
    41f2:	ab 81       	ldd	r26, Y+3	; 0x03
    41f4:	bc 81       	ldd	r27, Y+4	; 0x04
    41f6:	2a e0       	ldi	r18, 0x0A	; 10
    41f8:	30 e0       	ldi	r19, 0x00	; 0
    41fa:	40 e0       	ldi	r20, 0x00	; 0
    41fc:	50 e0       	ldi	r21, 0x00	; 0
    41fe:	bc 01       	movw	r22, r24
    4200:	cd 01       	movw	r24, r26
    4202:	0e 94 f8 2c 	call	0x59f0	; 0x59f0 <__mulsi3>
    4206:	7b 01       	movw	r14, r22
    4208:	8c 01       	movw	r16, r24
    420a:	8d 81       	ldd	r24, Y+5	; 0x05
    420c:	9e 81       	ldd	r25, Y+6	; 0x06
    420e:	af 81       	ldd	r26, Y+7	; 0x07
    4210:	b8 85       	ldd	r27, Y+8	; 0x08
    4212:	2a e0       	ldi	r18, 0x0A	; 10
    4214:	30 e0       	ldi	r19, 0x00	; 0
    4216:	40 e0       	ldi	r20, 0x00	; 0
    4218:	50 e0       	ldi	r21, 0x00	; 0
    421a:	bc 01       	movw	r22, r24
    421c:	cd 01       	movw	r24, r26
    421e:	0e 94 45 2d 	call	0x5a8a	; 0x5a8a <__divmodsi4>
    4222:	dc 01       	movw	r26, r24
    4224:	cb 01       	movw	r24, r22
    4226:	8e 0d       	add	r24, r14
    4228:	9f 1d       	adc	r25, r15
    422a:	a0 1f       	adc	r26, r16
    422c:	b1 1f       	adc	r27, r17
    422e:	89 83       	std	Y+1, r24	; 0x01
    4230:	9a 83       	std	Y+2, r25	; 0x02
    4232:	ab 83       	std	Y+3, r26	; 0x03
    4234:	bc 83       	std	Y+4, r27	; 0x04
		NUM/=10;
    4236:	8d 81       	ldd	r24, Y+5	; 0x05
    4238:	9e 81       	ldd	r25, Y+6	; 0x06
    423a:	af 81       	ldd	r26, Y+7	; 0x07
    423c:	b8 85       	ldd	r27, Y+8	; 0x08
    423e:	2a e0       	ldi	r18, 0x0A	; 10
    4240:	30 e0       	ldi	r19, 0x00	; 0
    4242:	40 e0       	ldi	r20, 0x00	; 0
    4244:	50 e0       	ldi	r21, 0x00	; 0
    4246:	bc 01       	movw	r22, r24
    4248:	cd 01       	movw	r24, r26
    424a:	0e 94 45 2d 	call	0x5a8a	; 0x5a8a <__divmodsi4>
    424e:	da 01       	movw	r26, r20
    4250:	c9 01       	movw	r24, r18
    4252:	8d 83       	std	Y+5, r24	; 0x05
    4254:	9e 83       	std	Y+6, r25	; 0x06
    4256:	af 83       	std	Y+7, r26	; 0x07
    4258:	b8 87       	std	Y+8, r27	; 0x08
	return Input+0x30;
}

s32 CLCD_ReverseNumber(s32 NUM){
	u32 reverse=1;
	while(NUM!=0)
    425a:	8d 81       	ldd	r24, Y+5	; 0x05
    425c:	9e 81       	ldd	r25, Y+6	; 0x06
    425e:	af 81       	ldd	r26, Y+7	; 0x07
    4260:	b8 85       	ldd	r27, Y+8	; 0x08
    4262:	00 97       	sbiw	r24, 0x00	; 0
    4264:	a1 05       	cpc	r26, r1
    4266:	b1 05       	cpc	r27, r1
    4268:	11 f6       	brne	.-124    	; 0x41ee <CLCD_ReverseNumber+0x36>
	{
		reverse=(reverse*10)+(NUM%10);
		NUM/=10;
	}
	return reverse;
    426a:	89 81       	ldd	r24, Y+1	; 0x01
    426c:	9a 81       	ldd	r25, Y+2	; 0x02
    426e:	ab 81       	ldd	r26, Y+3	; 0x03
    4270:	bc 81       	ldd	r27, Y+4	; 0x04
}
    4272:	bc 01       	movw	r22, r24
    4274:	cd 01       	movw	r24, r26
    4276:	28 96       	adiw	r28, 0x08	; 8
    4278:	0f b6       	in	r0, 0x3f	; 63
    427a:	f8 94       	cli
    427c:	de bf       	out	0x3e, r29	; 62
    427e:	0f be       	out	0x3f, r0	; 63
    4280:	cd bf       	out	0x3d, r28	; 61
    4282:	cf 91       	pop	r28
    4284:	df 91       	pop	r29
    4286:	1f 91       	pop	r17
    4288:	0f 91       	pop	r16
    428a:	ff 90       	pop	r15
    428c:	ef 90       	pop	r14
    428e:	08 95       	ret

00004290 <CLCD_WriteNum>:

void CLCD_WriteNum(u64 NUM) {
    4290:	af 92       	push	r10
    4292:	bf 92       	push	r11
    4294:	cf 92       	push	r12
    4296:	df 92       	push	r13
    4298:	ef 92       	push	r14
    429a:	ff 92       	push	r15
    429c:	0f 93       	push	r16
    429e:	1f 93       	push	r17
    42a0:	df 93       	push	r29
    42a2:	cf 93       	push	r28
    42a4:	cd b7       	in	r28, 0x3d	; 61
    42a6:	de b7       	in	r29, 0x3e	; 62
    42a8:	60 97       	sbiw	r28, 0x10	; 16
    42aa:	0f b6       	in	r0, 0x3f	; 63
    42ac:	f8 94       	cli
    42ae:	de bf       	out	0x3e, r29	; 62
    42b0:	0f be       	out	0x3f, r0	; 63
    42b2:	cd bf       	out	0x3d, r28	; 61
    42b4:	29 87       	std	Y+9, r18	; 0x09
    42b6:	3a 87       	std	Y+10, r19	; 0x0a
    42b8:	4b 87       	std	Y+11, r20	; 0x0b
    42ba:	5c 87       	std	Y+12, r21	; 0x0c
    42bc:	6d 87       	std	Y+13, r22	; 0x0d
    42be:	7e 87       	std	Y+14, r23	; 0x0e
    42c0:	8f 87       	std	Y+15, r24	; 0x0f
    42c2:	98 8b       	std	Y+16, r25	; 0x10
	if (NUM == 0){
    42c4:	89 85       	ldd	r24, Y+9	; 0x09
    42c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    42c8:	89 2b       	or	r24, r25
    42ca:	9b 85       	ldd	r25, Y+11	; 0x0b
    42cc:	89 2b       	or	r24, r25
    42ce:	9c 85       	ldd	r25, Y+12	; 0x0c
    42d0:	89 2b       	or	r24, r25
    42d2:	9d 85       	ldd	r25, Y+13	; 0x0d
    42d4:	89 2b       	or	r24, r25
    42d6:	9e 85       	ldd	r25, Y+14	; 0x0e
    42d8:	89 2b       	or	r24, r25
    42da:	9f 85       	ldd	r25, Y+15	; 0x0f
    42dc:	89 2b       	or	r24, r25
    42de:	98 89       	ldd	r25, Y+16	; 0x10
    42e0:	89 2b       	or	r24, r25
    42e2:	88 23       	and	r24, r24
    42e4:	91 f5       	brne	.+100    	; 0x434a <CLCD_WriteNum+0xba>
		CLCD_WriteData((NUM%10)+48);
    42e6:	a9 84       	ldd	r10, Y+9	; 0x09
    42e8:	ba 84       	ldd	r11, Y+10	; 0x0a
    42ea:	cb 84       	ldd	r12, Y+11	; 0x0b
    42ec:	dc 84       	ldd	r13, Y+12	; 0x0c
    42ee:	ed 84       	ldd	r14, Y+13	; 0x0d
    42f0:	fe 84       	ldd	r15, Y+14	; 0x0e
    42f2:	0f 85       	ldd	r16, Y+15	; 0x0f
    42f4:	18 89       	ldd	r17, Y+16	; 0x10
    42f6:	2a 2d       	mov	r18, r10
    42f8:	3b 2d       	mov	r19, r11
    42fa:	4c 2d       	mov	r20, r12
    42fc:	5d 2d       	mov	r21, r13
    42fe:	6e 2d       	mov	r22, r14
    4300:	7f 2d       	mov	r23, r15
    4302:	80 2f       	mov	r24, r16
    4304:	91 2f       	mov	r25, r17
    4306:	0f 2e       	mov	r0, r31
    4308:	fa e0       	ldi	r31, 0x0A	; 10
    430a:	af 2e       	mov	r10, r31
    430c:	f0 2d       	mov	r31, r0
    430e:	bb 24       	eor	r11, r11
    4310:	cc 24       	eor	r12, r12
    4312:	dd 24       	eor	r13, r13
    4314:	ee 24       	eor	r14, r14
    4316:	ff 24       	eor	r15, r15
    4318:	00 e0       	ldi	r16, 0x00	; 0
    431a:	10 e0       	ldi	r17, 0x00	; 0
    431c:	0e 94 92 07 	call	0xf24	; 0xf24 <__umoddi3>
    4320:	a2 2e       	mov	r10, r18
    4322:	b3 2e       	mov	r11, r19
    4324:	c4 2e       	mov	r12, r20
    4326:	d5 2e       	mov	r13, r21
    4328:	e6 2e       	mov	r14, r22
    432a:	f7 2e       	mov	r15, r23
    432c:	08 2f       	mov	r16, r24
    432e:	19 2f       	mov	r17, r25
    4330:	2a 2d       	mov	r18, r10
    4332:	3b 2d       	mov	r19, r11
    4334:	4c 2d       	mov	r20, r12
    4336:	5d 2d       	mov	r21, r13
    4338:	6e 2d       	mov	r22, r14
    433a:	7f 2d       	mov	r23, r15
    433c:	80 2f       	mov	r24, r16
    433e:	91 2f       	mov	r25, r17
    4340:	82 2f       	mov	r24, r18
    4342:	80 5d       	subi	r24, 0xD0	; 208
    4344:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
    4348:	9e c0       	rjmp	.+316    	; 0x4486 <CLCD_WriteNum+0x1f6>
	}
	else{
		u64 reverse=1;
    434a:	81 e0       	ldi	r24, 0x01	; 1
    434c:	89 83       	std	Y+1, r24	; 0x01
    434e:	1a 82       	std	Y+2, r1	; 0x02
    4350:	1b 82       	std	Y+3, r1	; 0x03
    4352:	1c 82       	std	Y+4, r1	; 0x04
    4354:	1d 82       	std	Y+5, r1	; 0x05
    4356:	1e 82       	std	Y+6, r1	; 0x06
    4358:	1f 82       	std	Y+7, r1	; 0x07
    435a:	18 86       	std	Y+8, r1	; 0x08
		reverse = CLCD_ReverseNumber(NUM);
    435c:	89 85       	ldd	r24, Y+9	; 0x09
    435e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4360:	ab 85       	ldd	r26, Y+11	; 0x0b
    4362:	bc 85       	ldd	r27, Y+12	; 0x0c
    4364:	bc 01       	movw	r22, r24
    4366:	cd 01       	movw	r24, r26
    4368:	0e 94 dc 20 	call	0x41b8	; 0x41b8 <CLCD_ReverseNumber>
    436c:	dc 01       	movw	r26, r24
    436e:	cb 01       	movw	r24, r22
    4370:	89 83       	std	Y+1, r24	; 0x01
    4372:	9a 83       	std	Y+2, r25	; 0x02
    4374:	ab 83       	std	Y+3, r26	; 0x03
    4376:	bc 83       	std	Y+4, r27	; 0x04
    4378:	bb 0f       	add	r27, r27
    437a:	88 0b       	sbc	r24, r24
    437c:	98 2f       	mov	r25, r24
    437e:	dc 01       	movw	r26, r24
    4380:	8d 83       	std	Y+5, r24	; 0x05
    4382:	8e 83       	std	Y+6, r24	; 0x06
    4384:	8f 83       	std	Y+7, r24	; 0x07
    4386:	88 87       	std	Y+8, r24	; 0x08
    4388:	5e c0       	rjmp	.+188    	; 0x4446 <CLCD_WriteNum+0x1b6>
		while(reverse!=1)
		{
			CLCD_WriteData((reverse%10)+48);
    438a:	a9 80       	ldd	r10, Y+1	; 0x01
    438c:	ba 80       	ldd	r11, Y+2	; 0x02
    438e:	cb 80       	ldd	r12, Y+3	; 0x03
    4390:	dc 80       	ldd	r13, Y+4	; 0x04
    4392:	ed 80       	ldd	r14, Y+5	; 0x05
    4394:	fe 80       	ldd	r15, Y+6	; 0x06
    4396:	0f 81       	ldd	r16, Y+7	; 0x07
    4398:	18 85       	ldd	r17, Y+8	; 0x08
    439a:	2a 2d       	mov	r18, r10
    439c:	3b 2d       	mov	r19, r11
    439e:	4c 2d       	mov	r20, r12
    43a0:	5d 2d       	mov	r21, r13
    43a2:	6e 2d       	mov	r22, r14
    43a4:	7f 2d       	mov	r23, r15
    43a6:	80 2f       	mov	r24, r16
    43a8:	91 2f       	mov	r25, r17
    43aa:	0f 2e       	mov	r0, r31
    43ac:	fa e0       	ldi	r31, 0x0A	; 10
    43ae:	af 2e       	mov	r10, r31
    43b0:	f0 2d       	mov	r31, r0
    43b2:	bb 24       	eor	r11, r11
    43b4:	cc 24       	eor	r12, r12
    43b6:	dd 24       	eor	r13, r13
    43b8:	ee 24       	eor	r14, r14
    43ba:	ff 24       	eor	r15, r15
    43bc:	00 e0       	ldi	r16, 0x00	; 0
    43be:	10 e0       	ldi	r17, 0x00	; 0
    43c0:	0e 94 92 07 	call	0xf24	; 0xf24 <__umoddi3>
    43c4:	a2 2e       	mov	r10, r18
    43c6:	b3 2e       	mov	r11, r19
    43c8:	c4 2e       	mov	r12, r20
    43ca:	d5 2e       	mov	r13, r21
    43cc:	e6 2e       	mov	r14, r22
    43ce:	f7 2e       	mov	r15, r23
    43d0:	08 2f       	mov	r16, r24
    43d2:	19 2f       	mov	r17, r25
    43d4:	2a 2d       	mov	r18, r10
    43d6:	3b 2d       	mov	r19, r11
    43d8:	4c 2d       	mov	r20, r12
    43da:	5d 2d       	mov	r21, r13
    43dc:	6e 2d       	mov	r22, r14
    43de:	7f 2d       	mov	r23, r15
    43e0:	80 2f       	mov	r24, r16
    43e2:	91 2f       	mov	r25, r17
    43e4:	82 2f       	mov	r24, r18
    43e6:	80 5d       	subi	r24, 0xD0	; 208
    43e8:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
			reverse/=10;
    43ec:	a9 80       	ldd	r10, Y+1	; 0x01
    43ee:	ba 80       	ldd	r11, Y+2	; 0x02
    43f0:	cb 80       	ldd	r12, Y+3	; 0x03
    43f2:	dc 80       	ldd	r13, Y+4	; 0x04
    43f4:	ed 80       	ldd	r14, Y+5	; 0x05
    43f6:	fe 80       	ldd	r15, Y+6	; 0x06
    43f8:	0f 81       	ldd	r16, Y+7	; 0x07
    43fa:	18 85       	ldd	r17, Y+8	; 0x08
    43fc:	2a 2d       	mov	r18, r10
    43fe:	3b 2d       	mov	r19, r11
    4400:	4c 2d       	mov	r20, r12
    4402:	5d 2d       	mov	r21, r13
    4404:	6e 2d       	mov	r22, r14
    4406:	7f 2d       	mov	r23, r15
    4408:	80 2f       	mov	r24, r16
    440a:	91 2f       	mov	r25, r17
    440c:	0f 2e       	mov	r0, r31
    440e:	fa e0       	ldi	r31, 0x0A	; 10
    4410:	af 2e       	mov	r10, r31
    4412:	f0 2d       	mov	r31, r0
    4414:	bb 24       	eor	r11, r11
    4416:	cc 24       	eor	r12, r12
    4418:	dd 24       	eor	r13, r13
    441a:	ee 24       	eor	r14, r14
    441c:	ff 24       	eor	r15, r15
    441e:	00 e0       	ldi	r16, 0x00	; 0
    4420:	10 e0       	ldi	r17, 0x00	; 0
    4422:	0e 94 1d 01 	call	0x23a	; 0x23a <__udivdi3>
    4426:	a2 2e       	mov	r10, r18
    4428:	b3 2e       	mov	r11, r19
    442a:	c4 2e       	mov	r12, r20
    442c:	d5 2e       	mov	r13, r21
    442e:	e6 2e       	mov	r14, r22
    4430:	f7 2e       	mov	r15, r23
    4432:	08 2f       	mov	r16, r24
    4434:	19 2f       	mov	r17, r25
    4436:	a9 82       	std	Y+1, r10	; 0x01
    4438:	ba 82       	std	Y+2, r11	; 0x02
    443a:	cb 82       	std	Y+3, r12	; 0x03
    443c:	dc 82       	std	Y+4, r13	; 0x04
    443e:	ed 82       	std	Y+5, r14	; 0x05
    4440:	fe 82       	std	Y+6, r15	; 0x06
    4442:	0f 83       	std	Y+7, r16	; 0x07
    4444:	18 87       	std	Y+8, r17	; 0x08
		CLCD_WriteData((NUM%10)+48);
	}
	else{
		u64 reverse=1;
		reverse = CLCD_ReverseNumber(NUM);
		while(reverse!=1)
    4446:	89 81       	ldd	r24, Y+1	; 0x01
    4448:	81 30       	cpi	r24, 0x01	; 1
    444a:	09 f0       	breq	.+2      	; 0x444e <CLCD_WriteNum+0x1be>
    444c:	9e cf       	rjmp	.-196    	; 0x438a <CLCD_WriteNum+0xfa>
    444e:	8a 81       	ldd	r24, Y+2	; 0x02
    4450:	88 23       	and	r24, r24
    4452:	09 f0       	breq	.+2      	; 0x4456 <CLCD_WriteNum+0x1c6>
    4454:	9a cf       	rjmp	.-204    	; 0x438a <CLCD_WriteNum+0xfa>
    4456:	8b 81       	ldd	r24, Y+3	; 0x03
    4458:	88 23       	and	r24, r24
    445a:	09 f0       	breq	.+2      	; 0x445e <CLCD_WriteNum+0x1ce>
    445c:	96 cf       	rjmp	.-212    	; 0x438a <CLCD_WriteNum+0xfa>
    445e:	8c 81       	ldd	r24, Y+4	; 0x04
    4460:	88 23       	and	r24, r24
    4462:	09 f0       	breq	.+2      	; 0x4466 <CLCD_WriteNum+0x1d6>
    4464:	92 cf       	rjmp	.-220    	; 0x438a <CLCD_WriteNum+0xfa>
    4466:	8d 81       	ldd	r24, Y+5	; 0x05
    4468:	88 23       	and	r24, r24
    446a:	09 f0       	breq	.+2      	; 0x446e <CLCD_WriteNum+0x1de>
    446c:	8e cf       	rjmp	.-228    	; 0x438a <CLCD_WriteNum+0xfa>
    446e:	8e 81       	ldd	r24, Y+6	; 0x06
    4470:	88 23       	and	r24, r24
    4472:	09 f0       	breq	.+2      	; 0x4476 <CLCD_WriteNum+0x1e6>
    4474:	8a cf       	rjmp	.-236    	; 0x438a <CLCD_WriteNum+0xfa>
    4476:	8f 81       	ldd	r24, Y+7	; 0x07
    4478:	88 23       	and	r24, r24
    447a:	09 f0       	breq	.+2      	; 0x447e <CLCD_WriteNum+0x1ee>
    447c:	86 cf       	rjmp	.-244    	; 0x438a <CLCD_WriteNum+0xfa>
    447e:	88 85       	ldd	r24, Y+8	; 0x08
    4480:	88 23       	and	r24, r24
    4482:	09 f0       	breq	.+2      	; 0x4486 <CLCD_WriteNum+0x1f6>
    4484:	82 cf       	rjmp	.-252    	; 0x438a <CLCD_WriteNum+0xfa>
		{
			CLCD_WriteData((reverse%10)+48);
			reverse/=10;
		}
	}
}
    4486:	60 96       	adiw	r28, 0x10	; 16
    4488:	0f b6       	in	r0, 0x3f	; 63
    448a:	f8 94       	cli
    448c:	de bf       	out	0x3e, r29	; 62
    448e:	0f be       	out	0x3f, r0	; 63
    4490:	cd bf       	out	0x3d, r28	; 61
    4492:	cf 91       	pop	r28
    4494:	df 91       	pop	r29
    4496:	1f 91       	pop	r17
    4498:	0f 91       	pop	r16
    449a:	ff 90       	pop	r15
    449c:	ef 90       	pop	r14
    449e:	df 90       	pop	r13
    44a0:	cf 90       	pop	r12
    44a2:	bf 90       	pop	r11
    44a4:	af 90       	pop	r10
    44a6:	08 95       	ret

000044a8 <CLCD_PrintBinary>:

void CLCD_PrintBinary(u8 num){
    44a8:	df 93       	push	r29
    44aa:	cf 93       	push	r28
    44ac:	00 d0       	rcall	.+0      	; 0x44ae <CLCD_PrintBinary+0x6>
    44ae:	0f 92       	push	r0
    44b0:	cd b7       	in	r28, 0x3d	; 61
    44b2:	de b7       	in	r29, 0x3e	; 62
    44b4:	8a 83       	std	Y+2, r24	; 0x02
	for(s8 i=7; i>=0; i--){
    44b6:	87 e0       	ldi	r24, 0x07	; 7
    44b8:	89 83       	std	Y+1, r24	; 0x01
    44ba:	1d c0       	rjmp	.+58     	; 0x44f6 <CLCD_PrintBinary+0x4e>
		CLCD_WriteData(GET_BIT(num,i)?'1':'0');
    44bc:	8a 81       	ldd	r24, Y+2	; 0x02
    44be:	28 2f       	mov	r18, r24
    44c0:	30 e0       	ldi	r19, 0x00	; 0
    44c2:	89 81       	ldd	r24, Y+1	; 0x01
    44c4:	99 27       	eor	r25, r25
    44c6:	87 fd       	sbrc	r24, 7
    44c8:	90 95       	com	r25
    44ca:	a9 01       	movw	r20, r18
    44cc:	02 c0       	rjmp	.+4      	; 0x44d2 <CLCD_PrintBinary+0x2a>
    44ce:	55 95       	asr	r21
    44d0:	47 95       	ror	r20
    44d2:	8a 95       	dec	r24
    44d4:	e2 f7       	brpl	.-8      	; 0x44ce <CLCD_PrintBinary+0x26>
    44d6:	ca 01       	movw	r24, r20
    44d8:	81 70       	andi	r24, 0x01	; 1
    44da:	90 70       	andi	r25, 0x00	; 0
    44dc:	88 23       	and	r24, r24
    44de:	19 f0       	breq	.+6      	; 0x44e6 <CLCD_PrintBinary+0x3e>
    44e0:	51 e3       	ldi	r21, 0x31	; 49
    44e2:	5b 83       	std	Y+3, r21	; 0x03
    44e4:	02 c0       	rjmp	.+4      	; 0x44ea <CLCD_PrintBinary+0x42>
    44e6:	80 e3       	ldi	r24, 0x30	; 48
    44e8:	8b 83       	std	Y+3, r24	; 0x03
    44ea:	8b 81       	ldd	r24, Y+3	; 0x03
    44ec:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
		}
	}
}

void CLCD_PrintBinary(u8 num){
	for(s8 i=7; i>=0; i--){
    44f0:	89 81       	ldd	r24, Y+1	; 0x01
    44f2:	81 50       	subi	r24, 0x01	; 1
    44f4:	89 83       	std	Y+1, r24	; 0x01
    44f6:	89 81       	ldd	r24, Y+1	; 0x01
    44f8:	88 23       	and	r24, r24
    44fa:	04 f7       	brge	.-64     	; 0x44bc <CLCD_PrintBinary+0x14>
		CLCD_WriteData(GET_BIT(num,i)?'1':'0');
	}
}
    44fc:	0f 90       	pop	r0
    44fe:	0f 90       	pop	r0
    4500:	0f 90       	pop	r0
    4502:	cf 91       	pop	r28
    4504:	df 91       	pop	r29
    4506:	08 95       	ret

00004508 <CLCD_Draw_Char>:
  0x10,
  0x10,
  0x10
};

void CLCD_Draw_Char(u8 Address_Data, u8* charArray) {
    4508:	df 93       	push	r29
    450a:	cf 93       	push	r28
    450c:	00 d0       	rcall	.+0      	; 0x450e <CLCD_Draw_Char+0x6>
    450e:	00 d0       	rcall	.+0      	; 0x4510 <CLCD_Draw_Char+0x8>
    4510:	cd b7       	in	r28, 0x3d	; 61
    4512:	de b7       	in	r29, 0x3e	; 62
    4514:	8a 83       	std	Y+2, r24	; 0x02
    4516:	7c 83       	std	Y+4, r23	; 0x04
    4518:	6b 83       	std	Y+3, r22	; 0x03
    CLCD_WriteInes(0x40 | (Address_Data * 8)); // Set CGRAM address
    451a:	8a 81       	ldd	r24, Y+2	; 0x02
    451c:	88 2f       	mov	r24, r24
    451e:	90 e0       	ldi	r25, 0x00	; 0
    4520:	88 0f       	add	r24, r24
    4522:	99 1f       	adc	r25, r25
    4524:	88 0f       	add	r24, r24
    4526:	99 1f       	adc	r25, r25
    4528:	88 0f       	add	r24, r24
    452a:	99 1f       	adc	r25, r25
    452c:	80 64       	ori	r24, 0x40	; 64
    452e:	0e 94 50 1e 	call	0x3ca0	; 0x3ca0 <CLCD_WriteInes>
    for (u8 j = 0; j < 8; j++) {
    4532:	19 82       	std	Y+1, r1	; 0x01
    4534:	0e c0       	rjmp	.+28     	; 0x4552 <CLCD_Draw_Char+0x4a>
        CLCD_WriteData(charArray[j]);
    4536:	89 81       	ldd	r24, Y+1	; 0x01
    4538:	28 2f       	mov	r18, r24
    453a:	30 e0       	ldi	r19, 0x00	; 0
    453c:	8b 81       	ldd	r24, Y+3	; 0x03
    453e:	9c 81       	ldd	r25, Y+4	; 0x04
    4540:	fc 01       	movw	r30, r24
    4542:	e2 0f       	add	r30, r18
    4544:	f3 1f       	adc	r31, r19
    4546:	80 81       	ld	r24, Z
    4548:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
  0x10
};

void CLCD_Draw_Char(u8 Address_Data, u8* charArray) {
    CLCD_WriteInes(0x40 | (Address_Data * 8)); // Set CGRAM address
    for (u8 j = 0; j < 8; j++) {
    454c:	89 81       	ldd	r24, Y+1	; 0x01
    454e:	8f 5f       	subi	r24, 0xFF	; 255
    4550:	89 83       	std	Y+1, r24	; 0x01
    4552:	89 81       	ldd	r24, Y+1	; 0x01
    4554:	88 30       	cpi	r24, 0x08	; 8
    4556:	78 f3       	brcs	.-34     	; 0x4536 <CLCD_Draw_Char+0x2e>
        CLCD_WriteData(charArray[j]);
    }
    CLCD_WriteInes(0x80); // Set DDRAM address to return to the display area
    4558:	80 e8       	ldi	r24, 0x80	; 128
    455a:	0e 94 50 1e 	call	0x3ca0	; 0x3ca0 <CLCD_WriteInes>
}
    455e:	0f 90       	pop	r0
    4560:	0f 90       	pop	r0
    4562:	0f 90       	pop	r0
    4564:	0f 90       	pop	r0
    4566:	cf 91       	pop	r28
    4568:	df 91       	pop	r29
    456a:	08 95       	ret

0000456c <CLCD_printHEXNum>:

void CLCD_printHEXNum(u8 num){
    456c:	af 92       	push	r10
    456e:	bf 92       	push	r11
    4570:	cf 92       	push	r12
    4572:	df 92       	push	r13
    4574:	ef 92       	push	r14
    4576:	ff 92       	push	r15
    4578:	0f 93       	push	r16
    457a:	1f 93       	push	r17
    457c:	df 93       	push	r29
    457e:	cf 93       	push	r28
    4580:	cd b7       	in	r28, 0x3d	; 61
    4582:	de b7       	in	r29, 0x3e	; 62
    4584:	a5 97       	sbiw	r28, 0x25	; 37
    4586:	0f b6       	in	r0, 0x3f	; 63
    4588:	f8 94       	cli
    458a:	de bf       	out	0x3e, r29	; 62
    458c:	0f be       	out	0x3f, r0	; 63
    458e:	cd bf       	out	0x3d, r28	; 61
    4590:	8e 8b       	std	Y+22, r24	; 0x16
	u8 decimalS[] = "Decimal: ";
    4592:	ce 01       	movw	r24, r28
    4594:	03 96       	adiw	r24, 0x03	; 3
    4596:	98 8f       	std	Y+24, r25	; 0x18
    4598:	8f 8b       	std	Y+23, r24	; 0x17
    459a:	e0 e6       	ldi	r30, 0x60	; 96
    459c:	f0 e0       	ldi	r31, 0x00	; 0
    459e:	fa 8f       	std	Y+26, r31	; 0x1a
    45a0:	e9 8f       	std	Y+25, r30	; 0x19
    45a2:	fa e0       	ldi	r31, 0x0A	; 10
    45a4:	fb 8f       	std	Y+27, r31	; 0x1b
    45a6:	e9 8d       	ldd	r30, Y+25	; 0x19
    45a8:	fa 8d       	ldd	r31, Y+26	; 0x1a
    45aa:	00 80       	ld	r0, Z
    45ac:	89 8d       	ldd	r24, Y+25	; 0x19
    45ae:	9a 8d       	ldd	r25, Y+26	; 0x1a
    45b0:	01 96       	adiw	r24, 0x01	; 1
    45b2:	9a 8f       	std	Y+26, r25	; 0x1a
    45b4:	89 8f       	std	Y+25, r24	; 0x19
    45b6:	ef 89       	ldd	r30, Y+23	; 0x17
    45b8:	f8 8d       	ldd	r31, Y+24	; 0x18
    45ba:	00 82       	st	Z, r0
    45bc:	8f 89       	ldd	r24, Y+23	; 0x17
    45be:	98 8d       	ldd	r25, Y+24	; 0x18
    45c0:	01 96       	adiw	r24, 0x01	; 1
    45c2:	98 8f       	std	Y+24, r25	; 0x18
    45c4:	8f 8b       	std	Y+23, r24	; 0x17
    45c6:	9b 8d       	ldd	r25, Y+27	; 0x1b
    45c8:	91 50       	subi	r25, 0x01	; 1
    45ca:	9b 8f       	std	Y+27, r25	; 0x1b
    45cc:	eb 8d       	ldd	r30, Y+27	; 0x1b
    45ce:	ee 23       	and	r30, r30
    45d0:	51 f7       	brne	.-44     	; 0x45a6 <CLCD_printHEXNum+0x3a>
	u8 hexS[] = 	"Hex: ";
    45d2:	ce 01       	movw	r24, r28
    45d4:	0d 96       	adiw	r24, 0x0d	; 13
    45d6:	9d 8f       	std	Y+29, r25	; 0x1d
    45d8:	8c 8f       	std	Y+28, r24	; 0x1c
    45da:	ea e6       	ldi	r30, 0x6A	; 106
    45dc:	f0 e0       	ldi	r31, 0x00	; 0
    45de:	ff 8f       	std	Y+31, r31	; 0x1f
    45e0:	ee 8f       	std	Y+30, r30	; 0x1e
    45e2:	f6 e0       	ldi	r31, 0x06	; 6
    45e4:	f8 a3       	std	Y+32, r31	; 0x20
    45e6:	ee 8d       	ldd	r30, Y+30	; 0x1e
    45e8:	ff 8d       	ldd	r31, Y+31	; 0x1f
    45ea:	00 80       	ld	r0, Z
    45ec:	8e 8d       	ldd	r24, Y+30	; 0x1e
    45ee:	9f 8d       	ldd	r25, Y+31	; 0x1f
    45f0:	01 96       	adiw	r24, 0x01	; 1
    45f2:	9f 8f       	std	Y+31, r25	; 0x1f
    45f4:	8e 8f       	std	Y+30, r24	; 0x1e
    45f6:	ec 8d       	ldd	r30, Y+28	; 0x1c
    45f8:	fd 8d       	ldd	r31, Y+29	; 0x1d
    45fa:	00 82       	st	Z, r0
    45fc:	8c 8d       	ldd	r24, Y+28	; 0x1c
    45fe:	9d 8d       	ldd	r25, Y+29	; 0x1d
    4600:	01 96       	adiw	r24, 0x01	; 1
    4602:	9d 8f       	std	Y+29, r25	; 0x1d
    4604:	8c 8f       	std	Y+28, r24	; 0x1c
    4606:	98 a1       	ldd	r25, Y+32	; 0x20
    4608:	91 50       	subi	r25, 0x01	; 1
    460a:	98 a3       	std	Y+32, r25	; 0x20
    460c:	e8 a1       	ldd	r30, Y+32	; 0x20
    460e:	ee 23       	and	r30, r30
    4610:	51 f7       	brne	.-44     	; 0x45e6 <CLCD_printHEXNum+0x7a>
	u8 st[] = "0x";
    4612:	ce 01       	movw	r24, r28
    4614:	43 96       	adiw	r24, 0x13	; 19
    4616:	9a a3       	std	Y+34, r25	; 0x22
    4618:	89 a3       	std	Y+33, r24	; 0x21
    461a:	e0 e7       	ldi	r30, 0x70	; 112
    461c:	f0 e0       	ldi	r31, 0x00	; 0
    461e:	fc a3       	std	Y+36, r31	; 0x24
    4620:	eb a3       	std	Y+35, r30	; 0x23
    4622:	f3 e0       	ldi	r31, 0x03	; 3
    4624:	fd a3       	std	Y+37, r31	; 0x25
    4626:	eb a1       	ldd	r30, Y+35	; 0x23
    4628:	fc a1       	ldd	r31, Y+36	; 0x24
    462a:	00 80       	ld	r0, Z
    462c:	8b a1       	ldd	r24, Y+35	; 0x23
    462e:	9c a1       	ldd	r25, Y+36	; 0x24
    4630:	01 96       	adiw	r24, 0x01	; 1
    4632:	9c a3       	std	Y+36, r25	; 0x24
    4634:	8b a3       	std	Y+35, r24	; 0x23
    4636:	e9 a1       	ldd	r30, Y+33	; 0x21
    4638:	fa a1       	ldd	r31, Y+34	; 0x22
    463a:	00 82       	st	Z, r0
    463c:	89 a1       	ldd	r24, Y+33	; 0x21
    463e:	9a a1       	ldd	r25, Y+34	; 0x22
    4640:	01 96       	adiw	r24, 0x01	; 1
    4642:	9a a3       	std	Y+34, r25	; 0x22
    4644:	89 a3       	std	Y+33, r24	; 0x21
    4646:	9d a1       	ldd	r25, Y+37	; 0x25
    4648:	91 50       	subi	r25, 0x01	; 1
    464a:	9d a3       	std	Y+37, r25	; 0x25
    464c:	ed a1       	ldd	r30, Y+37	; 0x25
    464e:	ee 23       	and	r30, r30
    4650:	51 f7       	brne	.-44     	; 0x4626 <CLCD_printHEXNum+0xba>
	u8 Upper =0 , Lower = 0;
    4652:	1a 82       	std	Y+2, r1	; 0x02
    4654:	19 82       	std	Y+1, r1	; 0x01
	Upper = num >>4;
    4656:	8e 89       	ldd	r24, Y+22	; 0x16
    4658:	82 95       	swap	r24
    465a:	8f 70       	andi	r24, 0x0F	; 15
    465c:	8a 83       	std	Y+2, r24	; 0x02
	Lower = num &0x0f;
    465e:	8e 89       	ldd	r24, Y+22	; 0x16
    4660:	8f 70       	andi	r24, 0x0F	; 15
    4662:	89 83       	std	Y+1, r24	; 0x01

	CLCD_WriteString(decimalS);
    4664:	ce 01       	movw	r24, r28
    4666:	03 96       	adiw	r24, 0x03	; 3
    4668:	0e 94 7d 20 	call	0x40fa	; 0x40fa <CLCD_WriteString>
	CLCD_WriteNum(num);
    466c:	8e 89       	ldd	r24, Y+22	; 0x16
    466e:	a8 2e       	mov	r10, r24
    4670:	bb 24       	eor	r11, r11
    4672:	cc 24       	eor	r12, r12
    4674:	dd 24       	eor	r13, r13
    4676:	ee 24       	eor	r14, r14
    4678:	ff 24       	eor	r15, r15
    467a:	87 01       	movw	r16, r14
    467c:	2a 2d       	mov	r18, r10
    467e:	3b 2d       	mov	r19, r11
    4680:	4c 2d       	mov	r20, r12
    4682:	5d 2d       	mov	r21, r13
    4684:	6e 2d       	mov	r22, r14
    4686:	7f 2d       	mov	r23, r15
    4688:	80 2f       	mov	r24, r16
    468a:	91 2f       	mov	r25, r17
    468c:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
	CLCD_GoTo(2,1);
    4690:	82 e0       	ldi	r24, 0x02	; 2
    4692:	61 e0       	ldi	r22, 0x01	; 1
    4694:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
	CLCD_WriteString(hexS);
    4698:	ce 01       	movw	r24, r28
    469a:	0d 96       	adiw	r24, 0x0d	; 13
    469c:	0e 94 7d 20 	call	0x40fa	; 0x40fa <CLCD_WriteString>
	CLCD_WriteString(st);
    46a0:	ce 01       	movw	r24, r28
    46a2:	43 96       	adiw	r24, 0x13	; 19
    46a4:	0e 94 7d 20 	call	0x40fa	; 0x40fa <CLCD_WriteString>

	if (Upper < 10){
    46a8:	8a 81       	ldd	r24, Y+2	; 0x02
    46aa:	8a 30       	cpi	r24, 0x0A	; 10
    46ac:	48 f4       	brcc	.+18     	; 0x46c0 <CLCD_printHEXNum+0x154>
		CLCD_GoTo(2,8);
    46ae:	82 e0       	ldi	r24, 0x02	; 2
    46b0:	68 e0       	ldi	r22, 0x08	; 8
    46b2:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
		CLCD_WriteData(Upper + '0');
    46b6:	8a 81       	ldd	r24, Y+2	; 0x02
    46b8:	80 5d       	subi	r24, 0xD0	; 208
    46ba:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
    46be:	08 c0       	rjmp	.+16     	; 0x46d0 <CLCD_printHEXNum+0x164>
	}
	else {
		CLCD_GoTo(2,8);
    46c0:	82 e0       	ldi	r24, 0x02	; 2
    46c2:	68 e0       	ldi	r22, 0x08	; 8
    46c4:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
		CLCD_WriteData(Upper + 'A'-10);
    46c8:	8a 81       	ldd	r24, Y+2	; 0x02
    46ca:	89 5c       	subi	r24, 0xC9	; 201
    46cc:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
	}
	if (Lower < 10){
    46d0:	89 81       	ldd	r24, Y+1	; 0x01
    46d2:	8a 30       	cpi	r24, 0x0A	; 10
    46d4:	48 f4       	brcc	.+18     	; 0x46e8 <CLCD_printHEXNum+0x17c>
		CLCD_GoTo(2,9);
    46d6:	82 e0       	ldi	r24, 0x02	; 2
    46d8:	69 e0       	ldi	r22, 0x09	; 9
    46da:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
		CLCD_WriteData(Lower + '0');
    46de:	89 81       	ldd	r24, Y+1	; 0x01
    46e0:	80 5d       	subi	r24, 0xD0	; 208
    46e2:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
    46e6:	08 c0       	rjmp	.+16     	; 0x46f8 <CLCD_printHEXNum+0x18c>
	}
	else {
		CLCD_GoTo(2,9);
    46e8:	82 e0       	ldi	r24, 0x02	; 2
    46ea:	69 e0       	ldi	r22, 0x09	; 9
    46ec:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
		CLCD_WriteData(Lower + 'A'-10);
    46f0:	89 81       	ldd	r24, Y+1	; 0x01
    46f2:	89 5c       	subi	r24, 0xC9	; 201
    46f4:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
	}
}
    46f8:	a5 96       	adiw	r28, 0x25	; 37
    46fa:	0f b6       	in	r0, 0x3f	; 63
    46fc:	f8 94       	cli
    46fe:	de bf       	out	0x3e, r29	; 62
    4700:	0f be       	out	0x3f, r0	; 63
    4702:	cd bf       	out	0x3d, r28	; 61
    4704:	cf 91       	pop	r28
    4706:	df 91       	pop	r29
    4708:	1f 91       	pop	r17
    470a:	0f 91       	pop	r16
    470c:	ff 90       	pop	r15
    470e:	ef 90       	pop	r14
    4710:	df 90       	pop	r13
    4712:	cf 90       	pop	r12
    4714:	bf 90       	pop	r11
    4716:	af 90       	pop	r10
    4718:	08 95       	ret

0000471a <CLCD_WriteData_Pos>:

void CLCD_WriteData_Pos(u8 Data, u8 Row, u8 Col){
    471a:	df 93       	push	r29
    471c:	cf 93       	push	r28
    471e:	00 d0       	rcall	.+0      	; 0x4720 <CLCD_WriteData_Pos+0x6>
    4720:	0f 92       	push	r0
    4722:	cd b7       	in	r28, 0x3d	; 61
    4724:	de b7       	in	r29, 0x3e	; 62
    4726:	89 83       	std	Y+1, r24	; 0x01
    4728:	6a 83       	std	Y+2, r22	; 0x02
    472a:	4b 83       	std	Y+3, r20	; 0x03
	CLCD_GoTo(Row,Col);
    472c:	8a 81       	ldd	r24, Y+2	; 0x02
    472e:	6b 81       	ldd	r22, Y+3	; 0x03
    4730:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
	CLCD_WriteData(Data);
    4734:	89 81       	ldd	r24, Y+1	; 0x01
    4736:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
}
    473a:	0f 90       	pop	r0
    473c:	0f 90       	pop	r0
    473e:	0f 90       	pop	r0
    4740:	cf 91       	pop	r28
    4742:	df 91       	pop	r29
    4744:	08 95       	ret

00004746 <CLCD_WriteString_Pos>:

void CLCD_WriteString_Pos(u8 *String, u8 Row, u8 Col){
    4746:	df 93       	push	r29
    4748:	cf 93       	push	r28
    474a:	00 d0       	rcall	.+0      	; 0x474c <CLCD_WriteString_Pos+0x6>
    474c:	00 d0       	rcall	.+0      	; 0x474e <CLCD_WriteString_Pos+0x8>
    474e:	cd b7       	in	r28, 0x3d	; 61
    4750:	de b7       	in	r29, 0x3e	; 62
    4752:	9a 83       	std	Y+2, r25	; 0x02
    4754:	89 83       	std	Y+1, r24	; 0x01
    4756:	6b 83       	std	Y+3, r22	; 0x03
    4758:	4c 83       	std	Y+4, r20	; 0x04
	CLCD_GoTo(Row,Col);
    475a:	8b 81       	ldd	r24, Y+3	; 0x03
    475c:	6c 81       	ldd	r22, Y+4	; 0x04
    475e:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
	CLCD_WriteString(String);
    4762:	89 81       	ldd	r24, Y+1	; 0x01
    4764:	9a 81       	ldd	r25, Y+2	; 0x02
    4766:	0e 94 7d 20 	call	0x40fa	; 0x40fa <CLCD_WriteString>
}
    476a:	0f 90       	pop	r0
    476c:	0f 90       	pop	r0
    476e:	0f 90       	pop	r0
    4770:	0f 90       	pop	r0
    4772:	cf 91       	pop	r28
    4774:	df 91       	pop	r29
    4776:	08 95       	ret

00004778 <CLCD_WriteNum_Pos>:

void CLCD_WriteNum_Pos(u64 Num, u8 Row, u8 Col){
    4778:	af 92       	push	r10
    477a:	bf 92       	push	r11
    477c:	cf 92       	push	r12
    477e:	df 92       	push	r13
    4780:	ef 92       	push	r14
    4782:	ff 92       	push	r15
    4784:	0f 93       	push	r16
    4786:	1f 93       	push	r17
    4788:	df 93       	push	r29
    478a:	cf 93       	push	r28
    478c:	cd b7       	in	r28, 0x3d	; 61
    478e:	de b7       	in	r29, 0x3e	; 62
    4790:	2a 97       	sbiw	r28, 0x0a	; 10
    4792:	0f b6       	in	r0, 0x3f	; 63
    4794:	f8 94       	cli
    4796:	de bf       	out	0x3e, r29	; 62
    4798:	0f be       	out	0x3f, r0	; 63
    479a:	cd bf       	out	0x3d, r28	; 61
    479c:	29 83       	std	Y+1, r18	; 0x01
    479e:	3a 83       	std	Y+2, r19	; 0x02
    47a0:	4b 83       	std	Y+3, r20	; 0x03
    47a2:	5c 83       	std	Y+4, r21	; 0x04
    47a4:	6d 83       	std	Y+5, r22	; 0x05
    47a6:	7e 83       	std	Y+6, r23	; 0x06
    47a8:	8f 83       	std	Y+7, r24	; 0x07
    47aa:	98 87       	std	Y+8, r25	; 0x08
    47ac:	09 87       	std	Y+9, r16	; 0x09
    47ae:	ea 86       	std	Y+10, r14	; 0x0a
	CLCD_GoTo(Row,Col);
    47b0:	89 85       	ldd	r24, Y+9	; 0x09
    47b2:	6a 85       	ldd	r22, Y+10	; 0x0a
    47b4:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
	CLCD_WriteNum(Num);
    47b8:	a9 80       	ldd	r10, Y+1	; 0x01
    47ba:	ba 80       	ldd	r11, Y+2	; 0x02
    47bc:	cb 80       	ldd	r12, Y+3	; 0x03
    47be:	dc 80       	ldd	r13, Y+4	; 0x04
    47c0:	ed 80       	ldd	r14, Y+5	; 0x05
    47c2:	fe 80       	ldd	r15, Y+6	; 0x06
    47c4:	0f 81       	ldd	r16, Y+7	; 0x07
    47c6:	18 85       	ldd	r17, Y+8	; 0x08
    47c8:	2a 2d       	mov	r18, r10
    47ca:	3b 2d       	mov	r19, r11
    47cc:	4c 2d       	mov	r20, r12
    47ce:	5d 2d       	mov	r21, r13
    47d0:	6e 2d       	mov	r22, r14
    47d2:	7f 2d       	mov	r23, r15
    47d4:	80 2f       	mov	r24, r16
    47d6:	91 2f       	mov	r25, r17
    47d8:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
}
    47dc:	2a 96       	adiw	r28, 0x0a	; 10
    47de:	0f b6       	in	r0, 0x3f	; 63
    47e0:	f8 94       	cli
    47e2:	de bf       	out	0x3e, r29	; 62
    47e4:	0f be       	out	0x3f, r0	; 63
    47e6:	cd bf       	out	0x3d, r28	; 61
    47e8:	cf 91       	pop	r28
    47ea:	df 91       	pop	r29
    47ec:	1f 91       	pop	r17
    47ee:	0f 91       	pop	r16
    47f0:	ff 90       	pop	r15
    47f2:	ef 90       	pop	r14
    47f4:	df 90       	pop	r13
    47f6:	cf 90       	pop	r12
    47f8:	bf 90       	pop	r11
    47fa:	af 90       	pop	r10
    47fc:	08 95       	ret

000047fe <BushButton_voidInit>:
 *      Author: hp
 */

#include "BushButton_Interface.h"

void BushButton_voidInit(Button *button){
    47fe:	df 93       	push	r29
    4800:	cf 93       	push	r28
    4802:	00 d0       	rcall	.+0      	; 0x4804 <BushButton_voidInit+0x6>
    4804:	cd b7       	in	r28, 0x3d	; 61
    4806:	de b7       	in	r29, 0x3e	; 62
    4808:	9a 83       	std	Y+2, r25	; 0x02
    480a:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPinDirection(BUSHBUTTON_PORT, button->button_pin, DIO_u8INPUT);
    480c:	e9 81       	ldd	r30, Y+1	; 0x01
    480e:	fa 81       	ldd	r31, Y+2	; 0x02
    4810:	90 81       	ld	r25, Z
    4812:	83 e0       	ldi	r24, 0x03	; 3
    4814:	69 2f       	mov	r22, r25
    4816:	40 e0       	ldi	r20, 0x00	; 0
    4818:	0e 94 1f 17 	call	0x2e3e	; 0x2e3e <DIO_voidSetPinDirection>
	DIO_voidSetPinValue(BUSHBUTTON_PORT, button->button_pin, DIO_u8HIGH);
    481c:	e9 81       	ldd	r30, Y+1	; 0x01
    481e:	fa 81       	ldd	r31, Y+2	; 0x02
    4820:	90 81       	ld	r25, Z
    4822:	83 e0       	ldi	r24, 0x03	; 3
    4824:	69 2f       	mov	r22, r25
    4826:	41 e0       	ldi	r20, 0x01	; 1
    4828:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
}
    482c:	0f 90       	pop	r0
    482e:	0f 90       	pop	r0
    4830:	cf 91       	pop	r28
    4832:	df 91       	pop	r29
    4834:	08 95       	ret

00004836 <BushButton_voidRead>:

u8 BushButton_voidRead(Button *button){
    4836:	df 93       	push	r29
    4838:	cf 93       	push	r28
    483a:	cd b7       	in	r28, 0x3d	; 61
    483c:	de b7       	in	r29, 0x3e	; 62
    483e:	61 97       	sbiw	r28, 0x11	; 17
    4840:	0f b6       	in	r0, 0x3f	; 63
    4842:	f8 94       	cli
    4844:	de bf       	out	0x3e, r29	; 62
    4846:	0f be       	out	0x3f, r0	; 63
    4848:	cd bf       	out	0x3d, r28	; 61
    484a:	99 8b       	std	Y+17, r25	; 0x11
    484c:	88 8b       	std	Y+16, r24	; 0x10
	u8 local_u8Read = DIO_u8GetPinValue(BUSHBUTTON_PORT, button->button_pin);
    484e:	e8 89       	ldd	r30, Y+16	; 0x10
    4850:	f9 89       	ldd	r31, Y+17	; 0x11
    4852:	90 81       	ld	r25, Z
    4854:	83 e0       	ldi	r24, 0x03	; 3
    4856:	69 2f       	mov	r22, r25
    4858:	0e 94 25 1a 	call	0x344a	; 0x344a <DIO_u8GetPinValue>
    485c:	8f 87       	std	Y+15, r24	; 0x0f
	if (local_u8Read == 0){
    485e:	8f 85       	ldd	r24, Y+15	; 0x0f
    4860:	88 23       	and	r24, r24
    4862:	09 f0       	breq	.+2      	; 0x4866 <BushButton_voidRead+0x30>
    4864:	79 c0       	rjmp	.+242    	; 0x4958 <BushButton_voidRead+0x122>
    4866:	80 e0       	ldi	r24, 0x00	; 0
    4868:	90 e0       	ldi	r25, 0x00	; 0
    486a:	a6 e1       	ldi	r26, 0x16	; 22
    486c:	b3 e4       	ldi	r27, 0x43	; 67
    486e:	8b 87       	std	Y+11, r24	; 0x0b
    4870:	9c 87       	std	Y+12, r25	; 0x0c
    4872:	ad 87       	std	Y+13, r26	; 0x0d
    4874:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4876:	6b 85       	ldd	r22, Y+11	; 0x0b
    4878:	7c 85       	ldd	r23, Y+12	; 0x0c
    487a:	8d 85       	ldd	r24, Y+13	; 0x0d
    487c:	9e 85       	ldd	r25, Y+14	; 0x0e
    487e:	20 e0       	ldi	r18, 0x00	; 0
    4880:	30 e0       	ldi	r19, 0x00	; 0
    4882:	4a e7       	ldi	r20, 0x7A	; 122
    4884:	53 e4       	ldi	r21, 0x43	; 67
    4886:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    488a:	dc 01       	movw	r26, r24
    488c:	cb 01       	movw	r24, r22
    488e:	8f 83       	std	Y+7, r24	; 0x07
    4890:	98 87       	std	Y+8, r25	; 0x08
    4892:	a9 87       	std	Y+9, r26	; 0x09
    4894:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4896:	6f 81       	ldd	r22, Y+7	; 0x07
    4898:	78 85       	ldd	r23, Y+8	; 0x08
    489a:	89 85       	ldd	r24, Y+9	; 0x09
    489c:	9a 85       	ldd	r25, Y+10	; 0x0a
    489e:	20 e0       	ldi	r18, 0x00	; 0
    48a0:	30 e0       	ldi	r19, 0x00	; 0
    48a2:	40 e8       	ldi	r20, 0x80	; 128
    48a4:	5f e3       	ldi	r21, 0x3F	; 63
    48a6:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__ltsf2>
    48aa:	88 23       	and	r24, r24
    48ac:	2c f4       	brge	.+10     	; 0x48b8 <BushButton_voidRead+0x82>
		__ticks = 1;
    48ae:	81 e0       	ldi	r24, 0x01	; 1
    48b0:	90 e0       	ldi	r25, 0x00	; 0
    48b2:	9e 83       	std	Y+6, r25	; 0x06
    48b4:	8d 83       	std	Y+5, r24	; 0x05
    48b6:	3f c0       	rjmp	.+126    	; 0x4936 <BushButton_voidRead+0x100>
	else if (__tmp > 65535)
    48b8:	6f 81       	ldd	r22, Y+7	; 0x07
    48ba:	78 85       	ldd	r23, Y+8	; 0x08
    48bc:	89 85       	ldd	r24, Y+9	; 0x09
    48be:	9a 85       	ldd	r25, Y+10	; 0x0a
    48c0:	20 e0       	ldi	r18, 0x00	; 0
    48c2:	3f ef       	ldi	r19, 0xFF	; 255
    48c4:	4f e7       	ldi	r20, 0x7F	; 127
    48c6:	57 e4       	ldi	r21, 0x47	; 71
    48c8:	0e 94 82 11 	call	0x2304	; 0x2304 <__gtsf2>
    48cc:	18 16       	cp	r1, r24
    48ce:	4c f5       	brge	.+82     	; 0x4922 <BushButton_voidRead+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    48d0:	6b 85       	ldd	r22, Y+11	; 0x0b
    48d2:	7c 85       	ldd	r23, Y+12	; 0x0c
    48d4:	8d 85       	ldd	r24, Y+13	; 0x0d
    48d6:	9e 85       	ldd	r25, Y+14	; 0x0e
    48d8:	20 e0       	ldi	r18, 0x00	; 0
    48da:	30 e0       	ldi	r19, 0x00	; 0
    48dc:	40 e2       	ldi	r20, 0x20	; 32
    48de:	51 e4       	ldi	r21, 0x41	; 65
    48e0:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    48e4:	dc 01       	movw	r26, r24
    48e6:	cb 01       	movw	r24, r22
    48e8:	bc 01       	movw	r22, r24
    48ea:	cd 01       	movw	r24, r26
    48ec:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    48f0:	dc 01       	movw	r26, r24
    48f2:	cb 01       	movw	r24, r22
    48f4:	9e 83       	std	Y+6, r25	; 0x06
    48f6:	8d 83       	std	Y+5, r24	; 0x05
    48f8:	0f c0       	rjmp	.+30     	; 0x4918 <BushButton_voidRead+0xe2>
    48fa:	89 e1       	ldi	r24, 0x19	; 25
    48fc:	90 e0       	ldi	r25, 0x00	; 0
    48fe:	9c 83       	std	Y+4, r25	; 0x04
    4900:	8b 83       	std	Y+3, r24	; 0x03
    4902:	8b 81       	ldd	r24, Y+3	; 0x03
    4904:	9c 81       	ldd	r25, Y+4	; 0x04
    4906:	01 97       	sbiw	r24, 0x01	; 1
    4908:	f1 f7       	brne	.-4      	; 0x4906 <BushButton_voidRead+0xd0>
    490a:	9c 83       	std	Y+4, r25	; 0x04
    490c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    490e:	8d 81       	ldd	r24, Y+5	; 0x05
    4910:	9e 81       	ldd	r25, Y+6	; 0x06
    4912:	01 97       	sbiw	r24, 0x01	; 1
    4914:	9e 83       	std	Y+6, r25	; 0x06
    4916:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4918:	8d 81       	ldd	r24, Y+5	; 0x05
    491a:	9e 81       	ldd	r25, Y+6	; 0x06
    491c:	00 97       	sbiw	r24, 0x00	; 0
    491e:	69 f7       	brne	.-38     	; 0x48fa <BushButton_voidRead+0xc4>
    4920:	14 c0       	rjmp	.+40     	; 0x494a <BushButton_voidRead+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4922:	6f 81       	ldd	r22, Y+7	; 0x07
    4924:	78 85       	ldd	r23, Y+8	; 0x08
    4926:	89 85       	ldd	r24, Y+9	; 0x09
    4928:	9a 85       	ldd	r25, Y+10	; 0x0a
    492a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    492e:	dc 01       	movw	r26, r24
    4930:	cb 01       	movw	r24, r22
    4932:	9e 83       	std	Y+6, r25	; 0x06
    4934:	8d 83       	std	Y+5, r24	; 0x05
    4936:	8d 81       	ldd	r24, Y+5	; 0x05
    4938:	9e 81       	ldd	r25, Y+6	; 0x06
    493a:	9a 83       	std	Y+2, r25	; 0x02
    493c:	89 83       	std	Y+1, r24	; 0x01
    493e:	89 81       	ldd	r24, Y+1	; 0x01
    4940:	9a 81       	ldd	r25, Y+2	; 0x02
    4942:	01 97       	sbiw	r24, 0x01	; 1
    4944:	f1 f7       	brne	.-4      	; 0x4942 <BushButton_voidRead+0x10c>
    4946:	9a 83       	std	Y+2, r25	; 0x02
    4948:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(150);
		if (local_u8Read == 0){
    494a:	8f 85       	ldd	r24, Y+15	; 0x0f
    494c:	88 23       	and	r24, r24
    494e:	59 f4       	brne	.+22     	; 0x4966 <BushButton_voidRead+0x130>
			button->button = Button_PRESSESD;
    4950:	e8 89       	ldd	r30, Y+16	; 0x10
    4952:	f9 89       	ldd	r31, Y+17	; 0x11
    4954:	11 82       	std	Z+1, r1	; 0x01
    4956:	07 c0       	rjmp	.+14     	; 0x4966 <BushButton_voidRead+0x130>
		}
	}else if (local_u8Read == 1){
    4958:	8f 85       	ldd	r24, Y+15	; 0x0f
    495a:	81 30       	cpi	r24, 0x01	; 1
    495c:	21 f4       	brne	.+8      	; 0x4966 <BushButton_voidRead+0x130>
		button->button = Button_RELEASED;
    495e:	e8 89       	ldd	r30, Y+16	; 0x10
    4960:	f9 89       	ldd	r31, Y+17	; 0x11
    4962:	81 e0       	ldi	r24, 0x01	; 1
    4964:	81 83       	std	Z+1, r24	; 0x01
	}
	return button->button;
    4966:	e8 89       	ldd	r30, Y+16	; 0x10
    4968:	f9 89       	ldd	r31, Y+17	; 0x11
    496a:	81 81       	ldd	r24, Z+1	; 0x01
}
    496c:	61 96       	adiw	r28, 0x11	; 17
    496e:	0f b6       	in	r0, 0x3f	; 63
    4970:	f8 94       	cli
    4972:	de bf       	out	0x3e, r29	; 62
    4974:	0f be       	out	0x3f, r0	; 63
    4976:	cd bf       	out	0x3d, r28	; 61
    4978:	cf 91       	pop	r28
    497a:	df 91       	pop	r29
    497c:	08 95       	ret

0000497e <SevenSegments_voidInit>:
#include "SEVEN_SEGMENT_Interface.h"
#include "util/delay.h"

u32 SSD_Arr[10] = {ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};

void SevenSegments_voidInit(){
    497e:	df 93       	push	r29
    4980:	cf 93       	push	r28
    4982:	cd b7       	in	r28, 0x3d	; 61
    4984:	de b7       	in	r29, 0x3e	; 62
	DIO_voidSetPortDirection(SEVEN_SEGMENT_PORT, 0xff);
    4986:	84 e0       	ldi	r24, 0x04	; 4
    4988:	6f ef       	ldi	r22, 0xFF	; 255
    498a:	0e 94 23 19 	call	0x3246	; 0x3246 <DIO_voidSetPortDirection>
	DIO_voidSetPortDirection(SEVEN_SEGMENT_PORT2, 0xff);
    498e:	82 e0       	ldi	r24, 0x02	; 2
    4990:	6f ef       	ldi	r22, 0xFF	; 255
    4992:	0e 94 23 19 	call	0x3246	; 0x3246 <DIO_voidSetPortDirection>
}
    4996:	cf 91       	pop	r28
    4998:	df 91       	pop	r29
    499a:	08 95       	ret

0000499c <SevenSegments_voidDispalyDecreasecount>:

void SevenSegments_voidDispalyDecreasecount(u8 Copy_u8Seconds){
    499c:	df 93       	push	r29
    499e:	cf 93       	push	r28
    49a0:	cd b7       	in	r28, 0x3d	; 61
    49a2:	de b7       	in	r29, 0x3e	; 62
    49a4:	a0 97       	sbiw	r28, 0x20	; 32
    49a6:	0f b6       	in	r0, 0x3f	; 63
    49a8:	f8 94       	cli
    49aa:	de bf       	out	0x3e, r29	; 62
    49ac:	0f be       	out	0x3f, r0	; 63
    49ae:	cd bf       	out	0x3d, r28	; 61
    49b0:	88 a3       	std	Y+32, r24	; 0x20
	u8 i;
	if (Copy_u8Seconds < 10){
    49b2:	88 a1       	ldd	r24, Y+32	; 0x20
    49b4:	8a 30       	cpi	r24, 0x0A	; 10
    49b6:	08 f0       	brcs	.+2      	; 0x49ba <SevenSegments_voidDispalyDecreasecount+0x1e>
    49b8:	90 c0       	rjmp	.+288    	; 0x4ada <SevenSegments_voidDispalyDecreasecount+0x13e>
		for(i = Copy_u8Seconds; i > 0; i--)
    49ba:	88 a1       	ldd	r24, Y+32	; 0x20
    49bc:	8f 8f       	std	Y+31, r24	; 0x1f
    49be:	88 c0       	rjmp	.+272    	; 0x4ad0 <SevenSegments_voidDispalyDecreasecount+0x134>
		{
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[i]);
    49c0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    49c2:	88 2f       	mov	r24, r24
    49c4:	90 e0       	ldi	r25, 0x00	; 0
    49c6:	88 0f       	add	r24, r24
    49c8:	99 1f       	adc	r25, r25
    49ca:	88 0f       	add	r24, r24
    49cc:	99 1f       	adc	r25, r25
    49ce:	fc 01       	movw	r30, r24
    49d0:	ed 55       	subi	r30, 0x5D	; 93
    49d2:	fe 4f       	sbci	r31, 0xFE	; 254
    49d4:	80 81       	ld	r24, Z
    49d6:	91 81       	ldd	r25, Z+1	; 0x01
    49d8:	a2 81       	ldd	r26, Z+2	; 0x02
    49da:	b3 81       	ldd	r27, Z+3	; 0x03
    49dc:	98 2f       	mov	r25, r24
    49de:	84 e0       	ldi	r24, 0x04	; 4
    49e0:	69 2f       	mov	r22, r25
    49e2:	0e 94 65 19 	call	0x32ca	; 0x32ca <DIO_voidSetPortValue>
    49e6:	80 e0       	ldi	r24, 0x00	; 0
    49e8:	90 e0       	ldi	r25, 0x00	; 0
    49ea:	aa ef       	ldi	r26, 0xFA	; 250
    49ec:	b3 e4       	ldi	r27, 0x43	; 67
    49ee:	89 8f       	std	Y+25, r24	; 0x19
    49f0:	9a 8f       	std	Y+26, r25	; 0x1a
    49f2:	ab 8f       	std	Y+27, r26	; 0x1b
    49f4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    49f6:	69 8d       	ldd	r22, Y+25	; 0x19
    49f8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    49fa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    49fc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    49fe:	20 e0       	ldi	r18, 0x00	; 0
    4a00:	30 e0       	ldi	r19, 0x00	; 0
    4a02:	4a e7       	ldi	r20, 0x7A	; 122
    4a04:	53 e4       	ldi	r21, 0x43	; 67
    4a06:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    4a0a:	dc 01       	movw	r26, r24
    4a0c:	cb 01       	movw	r24, r22
    4a0e:	8d 8b       	std	Y+21, r24	; 0x15
    4a10:	9e 8b       	std	Y+22, r25	; 0x16
    4a12:	af 8b       	std	Y+23, r26	; 0x17
    4a14:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4a16:	6d 89       	ldd	r22, Y+21	; 0x15
    4a18:	7e 89       	ldd	r23, Y+22	; 0x16
    4a1a:	8f 89       	ldd	r24, Y+23	; 0x17
    4a1c:	98 8d       	ldd	r25, Y+24	; 0x18
    4a1e:	20 e0       	ldi	r18, 0x00	; 0
    4a20:	30 e0       	ldi	r19, 0x00	; 0
    4a22:	40 e8       	ldi	r20, 0x80	; 128
    4a24:	5f e3       	ldi	r21, 0x3F	; 63
    4a26:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__ltsf2>
    4a2a:	88 23       	and	r24, r24
    4a2c:	2c f4       	brge	.+10     	; 0x4a38 <SevenSegments_voidDispalyDecreasecount+0x9c>
		__ticks = 1;
    4a2e:	81 e0       	ldi	r24, 0x01	; 1
    4a30:	90 e0       	ldi	r25, 0x00	; 0
    4a32:	9c 8b       	std	Y+20, r25	; 0x14
    4a34:	8b 8b       	std	Y+19, r24	; 0x13
    4a36:	3f c0       	rjmp	.+126    	; 0x4ab6 <SevenSegments_voidDispalyDecreasecount+0x11a>
	else if (__tmp > 65535)
    4a38:	6d 89       	ldd	r22, Y+21	; 0x15
    4a3a:	7e 89       	ldd	r23, Y+22	; 0x16
    4a3c:	8f 89       	ldd	r24, Y+23	; 0x17
    4a3e:	98 8d       	ldd	r25, Y+24	; 0x18
    4a40:	20 e0       	ldi	r18, 0x00	; 0
    4a42:	3f ef       	ldi	r19, 0xFF	; 255
    4a44:	4f e7       	ldi	r20, 0x7F	; 127
    4a46:	57 e4       	ldi	r21, 0x47	; 71
    4a48:	0e 94 82 11 	call	0x2304	; 0x2304 <__gtsf2>
    4a4c:	18 16       	cp	r1, r24
    4a4e:	4c f5       	brge	.+82     	; 0x4aa2 <SevenSegments_voidDispalyDecreasecount+0x106>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a50:	69 8d       	ldd	r22, Y+25	; 0x19
    4a52:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4a54:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4a56:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4a58:	20 e0       	ldi	r18, 0x00	; 0
    4a5a:	30 e0       	ldi	r19, 0x00	; 0
    4a5c:	40 e2       	ldi	r20, 0x20	; 32
    4a5e:	51 e4       	ldi	r21, 0x41	; 65
    4a60:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    4a64:	dc 01       	movw	r26, r24
    4a66:	cb 01       	movw	r24, r22
    4a68:	bc 01       	movw	r22, r24
    4a6a:	cd 01       	movw	r24, r26
    4a6c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4a70:	dc 01       	movw	r26, r24
    4a72:	cb 01       	movw	r24, r22
    4a74:	9c 8b       	std	Y+20, r25	; 0x14
    4a76:	8b 8b       	std	Y+19, r24	; 0x13
    4a78:	0f c0       	rjmp	.+30     	; 0x4a98 <SevenSegments_voidDispalyDecreasecount+0xfc>
    4a7a:	89 e1       	ldi	r24, 0x19	; 25
    4a7c:	90 e0       	ldi	r25, 0x00	; 0
    4a7e:	9a 8b       	std	Y+18, r25	; 0x12
    4a80:	89 8b       	std	Y+17, r24	; 0x11
    4a82:	89 89       	ldd	r24, Y+17	; 0x11
    4a84:	9a 89       	ldd	r25, Y+18	; 0x12
    4a86:	01 97       	sbiw	r24, 0x01	; 1
    4a88:	f1 f7       	brne	.-4      	; 0x4a86 <SevenSegments_voidDispalyDecreasecount+0xea>
    4a8a:	9a 8b       	std	Y+18, r25	; 0x12
    4a8c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4a8e:	8b 89       	ldd	r24, Y+19	; 0x13
    4a90:	9c 89       	ldd	r25, Y+20	; 0x14
    4a92:	01 97       	sbiw	r24, 0x01	; 1
    4a94:	9c 8b       	std	Y+20, r25	; 0x14
    4a96:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4a98:	8b 89       	ldd	r24, Y+19	; 0x13
    4a9a:	9c 89       	ldd	r25, Y+20	; 0x14
    4a9c:	00 97       	sbiw	r24, 0x00	; 0
    4a9e:	69 f7       	brne	.-38     	; 0x4a7a <SevenSegments_voidDispalyDecreasecount+0xde>
    4aa0:	14 c0       	rjmp	.+40     	; 0x4aca <SevenSegments_voidDispalyDecreasecount+0x12e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4aa2:	6d 89       	ldd	r22, Y+21	; 0x15
    4aa4:	7e 89       	ldd	r23, Y+22	; 0x16
    4aa6:	8f 89       	ldd	r24, Y+23	; 0x17
    4aa8:	98 8d       	ldd	r25, Y+24	; 0x18
    4aaa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4aae:	dc 01       	movw	r26, r24
    4ab0:	cb 01       	movw	r24, r22
    4ab2:	9c 8b       	std	Y+20, r25	; 0x14
    4ab4:	8b 8b       	std	Y+19, r24	; 0x13
    4ab6:	8b 89       	ldd	r24, Y+19	; 0x13
    4ab8:	9c 89       	ldd	r25, Y+20	; 0x14
    4aba:	98 8b       	std	Y+16, r25	; 0x10
    4abc:	8f 87       	std	Y+15, r24	; 0x0f
    4abe:	8f 85       	ldd	r24, Y+15	; 0x0f
    4ac0:	98 89       	ldd	r25, Y+16	; 0x10
    4ac2:	01 97       	sbiw	r24, 0x01	; 1
    4ac4:	f1 f7       	brne	.-4      	; 0x4ac2 <SevenSegments_voidDispalyDecreasecount+0x126>
    4ac6:	98 8b       	std	Y+16, r25	; 0x10
    4ac8:	8f 87       	std	Y+15, r24	; 0x0f
}

void SevenSegments_voidDispalyDecreasecount(u8 Copy_u8Seconds){
	u8 i;
	if (Copy_u8Seconds < 10){
		for(i = Copy_u8Seconds; i > 0; i--)
    4aca:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4acc:	81 50       	subi	r24, 0x01	; 1
    4ace:	8f 8f       	std	Y+31, r24	; 0x1f
    4ad0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4ad2:	88 23       	and	r24, r24
    4ad4:	09 f0       	breq	.+2      	; 0x4ad8 <SevenSegments_voidDispalyDecreasecount+0x13c>
    4ad6:	74 cf       	rjmp	.-280    	; 0x49c0 <SevenSegments_voidDispalyDecreasecount+0x24>
    4ad8:	b3 c0       	rjmp	.+358    	; 0x4c40 <SevenSegments_voidDispalyDecreasecount+0x2a4>
		{
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[i]);
			_delay_ms(500);
		}
	} else if (Copy_u8Seconds < 99){
    4ada:	88 a1       	ldd	r24, Y+32	; 0x20
    4adc:	83 36       	cpi	r24, 0x63	; 99
    4ade:	08 f0       	brcs	.+2      	; 0x4ae2 <SevenSegments_voidDispalyDecreasecount+0x146>
    4ae0:	af c0       	rjmp	.+350    	; 0x4c40 <SevenSegments_voidDispalyDecreasecount+0x2a4>
		u8 fnum,snum;
		for(i = Copy_u8Seconds; i > 0; i--)
    4ae2:	88 a1       	ldd	r24, Y+32	; 0x20
    4ae4:	8f 8f       	std	Y+31, r24	; 0x1f
    4ae6:	a8 c0       	rjmp	.+336    	; 0x4c38 <SevenSegments_voidDispalyDecreasecount+0x29c>
		{
			fnum = i/10;
    4ae8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4aea:	9a e0       	ldi	r25, 0x0A	; 10
    4aec:	69 2f       	mov	r22, r25
    4aee:	0e 94 17 2d 	call	0x5a2e	; 0x5a2e <__udivmodqi4>
    4af2:	8e 8f       	std	Y+30, r24	; 0x1e
			snum = i%10;
    4af4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4af6:	9a e0       	ldi	r25, 0x0A	; 10
    4af8:	69 2f       	mov	r22, r25
    4afa:	0e 94 17 2d 	call	0x5a2e	; 0x5a2e <__udivmodqi4>
    4afe:	89 2f       	mov	r24, r25
    4b00:	8d 8f       	std	Y+29, r24	; 0x1d
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[fnum]);
    4b02:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4b04:	88 2f       	mov	r24, r24
    4b06:	90 e0       	ldi	r25, 0x00	; 0
    4b08:	88 0f       	add	r24, r24
    4b0a:	99 1f       	adc	r25, r25
    4b0c:	88 0f       	add	r24, r24
    4b0e:	99 1f       	adc	r25, r25
    4b10:	fc 01       	movw	r30, r24
    4b12:	ed 55       	subi	r30, 0x5D	; 93
    4b14:	fe 4f       	sbci	r31, 0xFE	; 254
    4b16:	80 81       	ld	r24, Z
    4b18:	91 81       	ldd	r25, Z+1	; 0x01
    4b1a:	a2 81       	ldd	r26, Z+2	; 0x02
    4b1c:	b3 81       	ldd	r27, Z+3	; 0x03
    4b1e:	98 2f       	mov	r25, r24
    4b20:	84 e0       	ldi	r24, 0x04	; 4
    4b22:	69 2f       	mov	r22, r25
    4b24:	0e 94 65 19 	call	0x32ca	; 0x32ca <DIO_voidSetPortValue>
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT2, SSD_Arr[snum]);
    4b28:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4b2a:	88 2f       	mov	r24, r24
    4b2c:	90 e0       	ldi	r25, 0x00	; 0
    4b2e:	88 0f       	add	r24, r24
    4b30:	99 1f       	adc	r25, r25
    4b32:	88 0f       	add	r24, r24
    4b34:	99 1f       	adc	r25, r25
    4b36:	fc 01       	movw	r30, r24
    4b38:	ed 55       	subi	r30, 0x5D	; 93
    4b3a:	fe 4f       	sbci	r31, 0xFE	; 254
    4b3c:	80 81       	ld	r24, Z
    4b3e:	91 81       	ldd	r25, Z+1	; 0x01
    4b40:	a2 81       	ldd	r26, Z+2	; 0x02
    4b42:	b3 81       	ldd	r27, Z+3	; 0x03
    4b44:	98 2f       	mov	r25, r24
    4b46:	82 e0       	ldi	r24, 0x02	; 2
    4b48:	69 2f       	mov	r22, r25
    4b4a:	0e 94 65 19 	call	0x32ca	; 0x32ca <DIO_voidSetPortValue>
    4b4e:	80 e0       	ldi	r24, 0x00	; 0
    4b50:	90 e0       	ldi	r25, 0x00	; 0
    4b52:	aa ef       	ldi	r26, 0xFA	; 250
    4b54:	b3 e4       	ldi	r27, 0x43	; 67
    4b56:	8b 87       	std	Y+11, r24	; 0x0b
    4b58:	9c 87       	std	Y+12, r25	; 0x0c
    4b5a:	ad 87       	std	Y+13, r26	; 0x0d
    4b5c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4b5e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4b60:	7c 85       	ldd	r23, Y+12	; 0x0c
    4b62:	8d 85       	ldd	r24, Y+13	; 0x0d
    4b64:	9e 85       	ldd	r25, Y+14	; 0x0e
    4b66:	20 e0       	ldi	r18, 0x00	; 0
    4b68:	30 e0       	ldi	r19, 0x00	; 0
    4b6a:	4a e7       	ldi	r20, 0x7A	; 122
    4b6c:	53 e4       	ldi	r21, 0x43	; 67
    4b6e:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    4b72:	dc 01       	movw	r26, r24
    4b74:	cb 01       	movw	r24, r22
    4b76:	8f 83       	std	Y+7, r24	; 0x07
    4b78:	98 87       	std	Y+8, r25	; 0x08
    4b7a:	a9 87       	std	Y+9, r26	; 0x09
    4b7c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4b7e:	6f 81       	ldd	r22, Y+7	; 0x07
    4b80:	78 85       	ldd	r23, Y+8	; 0x08
    4b82:	89 85       	ldd	r24, Y+9	; 0x09
    4b84:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b86:	20 e0       	ldi	r18, 0x00	; 0
    4b88:	30 e0       	ldi	r19, 0x00	; 0
    4b8a:	40 e8       	ldi	r20, 0x80	; 128
    4b8c:	5f e3       	ldi	r21, 0x3F	; 63
    4b8e:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__ltsf2>
    4b92:	88 23       	and	r24, r24
    4b94:	2c f4       	brge	.+10     	; 0x4ba0 <SevenSegments_voidDispalyDecreasecount+0x204>
		__ticks = 1;
    4b96:	81 e0       	ldi	r24, 0x01	; 1
    4b98:	90 e0       	ldi	r25, 0x00	; 0
    4b9a:	9e 83       	std	Y+6, r25	; 0x06
    4b9c:	8d 83       	std	Y+5, r24	; 0x05
    4b9e:	3f c0       	rjmp	.+126    	; 0x4c1e <SevenSegments_voidDispalyDecreasecount+0x282>
	else if (__tmp > 65535)
    4ba0:	6f 81       	ldd	r22, Y+7	; 0x07
    4ba2:	78 85       	ldd	r23, Y+8	; 0x08
    4ba4:	89 85       	ldd	r24, Y+9	; 0x09
    4ba6:	9a 85       	ldd	r25, Y+10	; 0x0a
    4ba8:	20 e0       	ldi	r18, 0x00	; 0
    4baa:	3f ef       	ldi	r19, 0xFF	; 255
    4bac:	4f e7       	ldi	r20, 0x7F	; 127
    4bae:	57 e4       	ldi	r21, 0x47	; 71
    4bb0:	0e 94 82 11 	call	0x2304	; 0x2304 <__gtsf2>
    4bb4:	18 16       	cp	r1, r24
    4bb6:	4c f5       	brge	.+82     	; 0x4c0a <SevenSegments_voidDispalyDecreasecount+0x26e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4bb8:	6b 85       	ldd	r22, Y+11	; 0x0b
    4bba:	7c 85       	ldd	r23, Y+12	; 0x0c
    4bbc:	8d 85       	ldd	r24, Y+13	; 0x0d
    4bbe:	9e 85       	ldd	r25, Y+14	; 0x0e
    4bc0:	20 e0       	ldi	r18, 0x00	; 0
    4bc2:	30 e0       	ldi	r19, 0x00	; 0
    4bc4:	40 e2       	ldi	r20, 0x20	; 32
    4bc6:	51 e4       	ldi	r21, 0x41	; 65
    4bc8:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    4bcc:	dc 01       	movw	r26, r24
    4bce:	cb 01       	movw	r24, r22
    4bd0:	bc 01       	movw	r22, r24
    4bd2:	cd 01       	movw	r24, r26
    4bd4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4bd8:	dc 01       	movw	r26, r24
    4bda:	cb 01       	movw	r24, r22
    4bdc:	9e 83       	std	Y+6, r25	; 0x06
    4bde:	8d 83       	std	Y+5, r24	; 0x05
    4be0:	0f c0       	rjmp	.+30     	; 0x4c00 <SevenSegments_voidDispalyDecreasecount+0x264>
    4be2:	89 e1       	ldi	r24, 0x19	; 25
    4be4:	90 e0       	ldi	r25, 0x00	; 0
    4be6:	9c 83       	std	Y+4, r25	; 0x04
    4be8:	8b 83       	std	Y+3, r24	; 0x03
    4bea:	8b 81       	ldd	r24, Y+3	; 0x03
    4bec:	9c 81       	ldd	r25, Y+4	; 0x04
    4bee:	01 97       	sbiw	r24, 0x01	; 1
    4bf0:	f1 f7       	brne	.-4      	; 0x4bee <SevenSegments_voidDispalyDecreasecount+0x252>
    4bf2:	9c 83       	std	Y+4, r25	; 0x04
    4bf4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4bf6:	8d 81       	ldd	r24, Y+5	; 0x05
    4bf8:	9e 81       	ldd	r25, Y+6	; 0x06
    4bfa:	01 97       	sbiw	r24, 0x01	; 1
    4bfc:	9e 83       	std	Y+6, r25	; 0x06
    4bfe:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c00:	8d 81       	ldd	r24, Y+5	; 0x05
    4c02:	9e 81       	ldd	r25, Y+6	; 0x06
    4c04:	00 97       	sbiw	r24, 0x00	; 0
    4c06:	69 f7       	brne	.-38     	; 0x4be2 <SevenSegments_voidDispalyDecreasecount+0x246>
    4c08:	14 c0       	rjmp	.+40     	; 0x4c32 <SevenSegments_voidDispalyDecreasecount+0x296>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c0a:	6f 81       	ldd	r22, Y+7	; 0x07
    4c0c:	78 85       	ldd	r23, Y+8	; 0x08
    4c0e:	89 85       	ldd	r24, Y+9	; 0x09
    4c10:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c12:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4c16:	dc 01       	movw	r26, r24
    4c18:	cb 01       	movw	r24, r22
    4c1a:	9e 83       	std	Y+6, r25	; 0x06
    4c1c:	8d 83       	std	Y+5, r24	; 0x05
    4c1e:	8d 81       	ldd	r24, Y+5	; 0x05
    4c20:	9e 81       	ldd	r25, Y+6	; 0x06
    4c22:	9a 83       	std	Y+2, r25	; 0x02
    4c24:	89 83       	std	Y+1, r24	; 0x01
    4c26:	89 81       	ldd	r24, Y+1	; 0x01
    4c28:	9a 81       	ldd	r25, Y+2	; 0x02
    4c2a:	01 97       	sbiw	r24, 0x01	; 1
    4c2c:	f1 f7       	brne	.-4      	; 0x4c2a <SevenSegments_voidDispalyDecreasecount+0x28e>
    4c2e:	9a 83       	std	Y+2, r25	; 0x02
    4c30:	89 83       	std	Y+1, r24	; 0x01
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[i]);
			_delay_ms(500);
		}
	} else if (Copy_u8Seconds < 99){
		u8 fnum,snum;
		for(i = Copy_u8Seconds; i > 0; i--)
    4c32:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4c34:	81 50       	subi	r24, 0x01	; 1
    4c36:	8f 8f       	std	Y+31, r24	; 0x1f
    4c38:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4c3a:	88 23       	and	r24, r24
    4c3c:	09 f0       	breq	.+2      	; 0x4c40 <SevenSegments_voidDispalyDecreasecount+0x2a4>
    4c3e:	54 cf       	rjmp	.-344    	; 0x4ae8 <SevenSegments_voidDispalyDecreasecount+0x14c>
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[fnum]);
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT2, SSD_Arr[snum]);
			_delay_ms(500);
		}
	}
}
    4c40:	a0 96       	adiw	r28, 0x20	; 32
    4c42:	0f b6       	in	r0, 0x3f	; 63
    4c44:	f8 94       	cli
    4c46:	de bf       	out	0x3e, r29	; 62
    4c48:	0f be       	out	0x3f, r0	; 63
    4c4a:	cd bf       	out	0x3d, r28	; 61
    4c4c:	cf 91       	pop	r28
    4c4e:	df 91       	pop	r29
    4c50:	08 95       	ret

00004c52 <SevenSegments_voidDispaly>:

void SevenSegments_voidDispaly(u8 Copy_u8Value){
    4c52:	df 93       	push	r29
    4c54:	cf 93       	push	r28
    4c56:	cd b7       	in	r28, 0x3d	; 61
    4c58:	de b7       	in	r29, 0x3e	; 62
    4c5a:	6f 97       	sbiw	r28, 0x1f	; 31
    4c5c:	0f b6       	in	r0, 0x3f	; 63
    4c5e:	f8 94       	cli
    4c60:	de bf       	out	0x3e, r29	; 62
    4c62:	0f be       	out	0x3f, r0	; 63
    4c64:	cd bf       	out	0x3d, r28	; 61
    4c66:	8f 8f       	std	Y+31, r24	; 0x1f
	if (Copy_u8Value < 10){
    4c68:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4c6a:	8a 30       	cpi	r24, 0x0A	; 10
    4c6c:	08 f0       	brcs	.+2      	; 0x4c70 <SevenSegments_voidDispaly+0x1e>
    4c6e:	93 c0       	rjmp	.+294    	; 0x4d96 <SevenSegments_voidDispaly+0x144>
		DIO_voidSetPortValue(SEVEN_SEGMENT_PORT2, SSD_Arr[Copy_u8Value]);
    4c70:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4c72:	88 2f       	mov	r24, r24
    4c74:	90 e0       	ldi	r25, 0x00	; 0
    4c76:	88 0f       	add	r24, r24
    4c78:	99 1f       	adc	r25, r25
    4c7a:	88 0f       	add	r24, r24
    4c7c:	99 1f       	adc	r25, r25
    4c7e:	fc 01       	movw	r30, r24
    4c80:	ed 55       	subi	r30, 0x5D	; 93
    4c82:	fe 4f       	sbci	r31, 0xFE	; 254
    4c84:	80 81       	ld	r24, Z
    4c86:	91 81       	ldd	r25, Z+1	; 0x01
    4c88:	a2 81       	ldd	r26, Z+2	; 0x02
    4c8a:	b3 81       	ldd	r27, Z+3	; 0x03
    4c8c:	98 2f       	mov	r25, r24
    4c8e:	82 e0       	ldi	r24, 0x02	; 2
    4c90:	69 2f       	mov	r22, r25
    4c92:	0e 94 65 19 	call	0x32ca	; 0x32ca <DIO_voidSetPortValue>
		DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[0]);
    4c96:	80 91 a3 01 	lds	r24, 0x01A3
    4c9a:	90 91 a4 01 	lds	r25, 0x01A4
    4c9e:	a0 91 a5 01 	lds	r26, 0x01A5
    4ca2:	b0 91 a6 01 	lds	r27, 0x01A6
    4ca6:	98 2f       	mov	r25, r24
    4ca8:	84 e0       	ldi	r24, 0x04	; 4
    4caa:	69 2f       	mov	r22, r25
    4cac:	0e 94 65 19 	call	0x32ca	; 0x32ca <DIO_voidSetPortValue>
    4cb0:	80 e0       	ldi	r24, 0x00	; 0
    4cb2:	90 e0       	ldi	r25, 0x00	; 0
    4cb4:	a8 e4       	ldi	r26, 0x48	; 72
    4cb6:	b3 e4       	ldi	r27, 0x43	; 67
    4cb8:	89 8f       	std	Y+25, r24	; 0x19
    4cba:	9a 8f       	std	Y+26, r25	; 0x1a
    4cbc:	ab 8f       	std	Y+27, r26	; 0x1b
    4cbe:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4cc0:	69 8d       	ldd	r22, Y+25	; 0x19
    4cc2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4cc4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4cc6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4cc8:	20 e0       	ldi	r18, 0x00	; 0
    4cca:	30 e0       	ldi	r19, 0x00	; 0
    4ccc:	4a e7       	ldi	r20, 0x7A	; 122
    4cce:	53 e4       	ldi	r21, 0x43	; 67
    4cd0:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    4cd4:	dc 01       	movw	r26, r24
    4cd6:	cb 01       	movw	r24, r22
    4cd8:	8d 8b       	std	Y+21, r24	; 0x15
    4cda:	9e 8b       	std	Y+22, r25	; 0x16
    4cdc:	af 8b       	std	Y+23, r26	; 0x17
    4cde:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4ce0:	6d 89       	ldd	r22, Y+21	; 0x15
    4ce2:	7e 89       	ldd	r23, Y+22	; 0x16
    4ce4:	8f 89       	ldd	r24, Y+23	; 0x17
    4ce6:	98 8d       	ldd	r25, Y+24	; 0x18
    4ce8:	20 e0       	ldi	r18, 0x00	; 0
    4cea:	30 e0       	ldi	r19, 0x00	; 0
    4cec:	40 e8       	ldi	r20, 0x80	; 128
    4cee:	5f e3       	ldi	r21, 0x3F	; 63
    4cf0:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__ltsf2>
    4cf4:	88 23       	and	r24, r24
    4cf6:	2c f4       	brge	.+10     	; 0x4d02 <SevenSegments_voidDispaly+0xb0>
		__ticks = 1;
    4cf8:	81 e0       	ldi	r24, 0x01	; 1
    4cfa:	90 e0       	ldi	r25, 0x00	; 0
    4cfc:	9c 8b       	std	Y+20, r25	; 0x14
    4cfe:	8b 8b       	std	Y+19, r24	; 0x13
    4d00:	3f c0       	rjmp	.+126    	; 0x4d80 <SevenSegments_voidDispaly+0x12e>
	else if (__tmp > 65535)
    4d02:	6d 89       	ldd	r22, Y+21	; 0x15
    4d04:	7e 89       	ldd	r23, Y+22	; 0x16
    4d06:	8f 89       	ldd	r24, Y+23	; 0x17
    4d08:	98 8d       	ldd	r25, Y+24	; 0x18
    4d0a:	20 e0       	ldi	r18, 0x00	; 0
    4d0c:	3f ef       	ldi	r19, 0xFF	; 255
    4d0e:	4f e7       	ldi	r20, 0x7F	; 127
    4d10:	57 e4       	ldi	r21, 0x47	; 71
    4d12:	0e 94 82 11 	call	0x2304	; 0x2304 <__gtsf2>
    4d16:	18 16       	cp	r1, r24
    4d18:	4c f5       	brge	.+82     	; 0x4d6c <SevenSegments_voidDispaly+0x11a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d1a:	69 8d       	ldd	r22, Y+25	; 0x19
    4d1c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4d1e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4d20:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4d22:	20 e0       	ldi	r18, 0x00	; 0
    4d24:	30 e0       	ldi	r19, 0x00	; 0
    4d26:	40 e2       	ldi	r20, 0x20	; 32
    4d28:	51 e4       	ldi	r21, 0x41	; 65
    4d2a:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    4d2e:	dc 01       	movw	r26, r24
    4d30:	cb 01       	movw	r24, r22
    4d32:	bc 01       	movw	r22, r24
    4d34:	cd 01       	movw	r24, r26
    4d36:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4d3a:	dc 01       	movw	r26, r24
    4d3c:	cb 01       	movw	r24, r22
    4d3e:	9c 8b       	std	Y+20, r25	; 0x14
    4d40:	8b 8b       	std	Y+19, r24	; 0x13
    4d42:	0f c0       	rjmp	.+30     	; 0x4d62 <SevenSegments_voidDispaly+0x110>
    4d44:	89 e1       	ldi	r24, 0x19	; 25
    4d46:	90 e0       	ldi	r25, 0x00	; 0
    4d48:	9a 8b       	std	Y+18, r25	; 0x12
    4d4a:	89 8b       	std	Y+17, r24	; 0x11
    4d4c:	89 89       	ldd	r24, Y+17	; 0x11
    4d4e:	9a 89       	ldd	r25, Y+18	; 0x12
    4d50:	01 97       	sbiw	r24, 0x01	; 1
    4d52:	f1 f7       	brne	.-4      	; 0x4d50 <SevenSegments_voidDispaly+0xfe>
    4d54:	9a 8b       	std	Y+18, r25	; 0x12
    4d56:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4d58:	8b 89       	ldd	r24, Y+19	; 0x13
    4d5a:	9c 89       	ldd	r25, Y+20	; 0x14
    4d5c:	01 97       	sbiw	r24, 0x01	; 1
    4d5e:	9c 8b       	std	Y+20, r25	; 0x14
    4d60:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4d62:	8b 89       	ldd	r24, Y+19	; 0x13
    4d64:	9c 89       	ldd	r25, Y+20	; 0x14
    4d66:	00 97       	sbiw	r24, 0x00	; 0
    4d68:	69 f7       	brne	.-38     	; 0x4d44 <SevenSegments_voidDispaly+0xf2>
    4d6a:	c0 c0       	rjmp	.+384    	; 0x4eec <SevenSegments_voidDispaly+0x29a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4d6c:	6d 89       	ldd	r22, Y+21	; 0x15
    4d6e:	7e 89       	ldd	r23, Y+22	; 0x16
    4d70:	8f 89       	ldd	r24, Y+23	; 0x17
    4d72:	98 8d       	ldd	r25, Y+24	; 0x18
    4d74:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4d78:	dc 01       	movw	r26, r24
    4d7a:	cb 01       	movw	r24, r22
    4d7c:	9c 8b       	std	Y+20, r25	; 0x14
    4d7e:	8b 8b       	std	Y+19, r24	; 0x13
    4d80:	8b 89       	ldd	r24, Y+19	; 0x13
    4d82:	9c 89       	ldd	r25, Y+20	; 0x14
    4d84:	98 8b       	std	Y+16, r25	; 0x10
    4d86:	8f 87       	std	Y+15, r24	; 0x0f
    4d88:	8f 85       	ldd	r24, Y+15	; 0x0f
    4d8a:	98 89       	ldd	r25, Y+16	; 0x10
    4d8c:	01 97       	sbiw	r24, 0x01	; 1
    4d8e:	f1 f7       	brne	.-4      	; 0x4d8c <SevenSegments_voidDispaly+0x13a>
    4d90:	98 8b       	std	Y+16, r25	; 0x10
    4d92:	8f 87       	std	Y+15, r24	; 0x0f
    4d94:	ab c0       	rjmp	.+342    	; 0x4eec <SevenSegments_voidDispaly+0x29a>
		_delay_ms(200);
	} else if (Copy_u8Value < 100){
    4d96:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4d98:	84 36       	cpi	r24, 0x64	; 100
    4d9a:	08 f0       	brcs	.+2      	; 0x4d9e <SevenSegments_voidDispaly+0x14c>
    4d9c:	a7 c0       	rjmp	.+334    	; 0x4eec <SevenSegments_voidDispaly+0x29a>
		u8 fnum = 0 , snum = 0;
    4d9e:	1e 8e       	std	Y+30, r1	; 0x1e
    4da0:	1d 8e       	std	Y+29, r1	; 0x1d
		fnum = Copy_u8Value/10;
    4da2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4da4:	9a e0       	ldi	r25, 0x0A	; 10
    4da6:	69 2f       	mov	r22, r25
    4da8:	0e 94 17 2d 	call	0x5a2e	; 0x5a2e <__udivmodqi4>
    4dac:	8e 8f       	std	Y+30, r24	; 0x1e
		snum = Copy_u8Value%10;
    4dae:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4db0:	9a e0       	ldi	r25, 0x0A	; 10
    4db2:	69 2f       	mov	r22, r25
    4db4:	0e 94 17 2d 	call	0x5a2e	; 0x5a2e <__udivmodqi4>
    4db8:	89 2f       	mov	r24, r25
    4dba:	8d 8f       	std	Y+29, r24	; 0x1d
		DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[fnum]);
    4dbc:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4dbe:	88 2f       	mov	r24, r24
    4dc0:	90 e0       	ldi	r25, 0x00	; 0
    4dc2:	88 0f       	add	r24, r24
    4dc4:	99 1f       	adc	r25, r25
    4dc6:	88 0f       	add	r24, r24
    4dc8:	99 1f       	adc	r25, r25
    4dca:	fc 01       	movw	r30, r24
    4dcc:	ed 55       	subi	r30, 0x5D	; 93
    4dce:	fe 4f       	sbci	r31, 0xFE	; 254
    4dd0:	80 81       	ld	r24, Z
    4dd2:	91 81       	ldd	r25, Z+1	; 0x01
    4dd4:	a2 81       	ldd	r26, Z+2	; 0x02
    4dd6:	b3 81       	ldd	r27, Z+3	; 0x03
    4dd8:	98 2f       	mov	r25, r24
    4dda:	84 e0       	ldi	r24, 0x04	; 4
    4ddc:	69 2f       	mov	r22, r25
    4dde:	0e 94 65 19 	call	0x32ca	; 0x32ca <DIO_voidSetPortValue>
		DIO_voidSetPortValue(SEVEN_SEGMENT_PORT2, SSD_Arr[snum]);
    4de2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4de4:	88 2f       	mov	r24, r24
    4de6:	90 e0       	ldi	r25, 0x00	; 0
    4de8:	88 0f       	add	r24, r24
    4dea:	99 1f       	adc	r25, r25
    4dec:	88 0f       	add	r24, r24
    4dee:	99 1f       	adc	r25, r25
    4df0:	fc 01       	movw	r30, r24
    4df2:	ed 55       	subi	r30, 0x5D	; 93
    4df4:	fe 4f       	sbci	r31, 0xFE	; 254
    4df6:	80 81       	ld	r24, Z
    4df8:	91 81       	ldd	r25, Z+1	; 0x01
    4dfa:	a2 81       	ldd	r26, Z+2	; 0x02
    4dfc:	b3 81       	ldd	r27, Z+3	; 0x03
    4dfe:	98 2f       	mov	r25, r24
    4e00:	82 e0       	ldi	r24, 0x02	; 2
    4e02:	69 2f       	mov	r22, r25
    4e04:	0e 94 65 19 	call	0x32ca	; 0x32ca <DIO_voidSetPortValue>
    4e08:	80 e0       	ldi	r24, 0x00	; 0
    4e0a:	90 e0       	ldi	r25, 0x00	; 0
    4e0c:	a8 e4       	ldi	r26, 0x48	; 72
    4e0e:	b3 e4       	ldi	r27, 0x43	; 67
    4e10:	8b 87       	std	Y+11, r24	; 0x0b
    4e12:	9c 87       	std	Y+12, r25	; 0x0c
    4e14:	ad 87       	std	Y+13, r26	; 0x0d
    4e16:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4e18:	6b 85       	ldd	r22, Y+11	; 0x0b
    4e1a:	7c 85       	ldd	r23, Y+12	; 0x0c
    4e1c:	8d 85       	ldd	r24, Y+13	; 0x0d
    4e1e:	9e 85       	ldd	r25, Y+14	; 0x0e
    4e20:	20 e0       	ldi	r18, 0x00	; 0
    4e22:	30 e0       	ldi	r19, 0x00	; 0
    4e24:	4a e7       	ldi	r20, 0x7A	; 122
    4e26:	53 e4       	ldi	r21, 0x43	; 67
    4e28:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    4e2c:	dc 01       	movw	r26, r24
    4e2e:	cb 01       	movw	r24, r22
    4e30:	8f 83       	std	Y+7, r24	; 0x07
    4e32:	98 87       	std	Y+8, r25	; 0x08
    4e34:	a9 87       	std	Y+9, r26	; 0x09
    4e36:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4e38:	6f 81       	ldd	r22, Y+7	; 0x07
    4e3a:	78 85       	ldd	r23, Y+8	; 0x08
    4e3c:	89 85       	ldd	r24, Y+9	; 0x09
    4e3e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e40:	20 e0       	ldi	r18, 0x00	; 0
    4e42:	30 e0       	ldi	r19, 0x00	; 0
    4e44:	40 e8       	ldi	r20, 0x80	; 128
    4e46:	5f e3       	ldi	r21, 0x3F	; 63
    4e48:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__ltsf2>
    4e4c:	88 23       	and	r24, r24
    4e4e:	2c f4       	brge	.+10     	; 0x4e5a <SevenSegments_voidDispaly+0x208>
		__ticks = 1;
    4e50:	81 e0       	ldi	r24, 0x01	; 1
    4e52:	90 e0       	ldi	r25, 0x00	; 0
    4e54:	9e 83       	std	Y+6, r25	; 0x06
    4e56:	8d 83       	std	Y+5, r24	; 0x05
    4e58:	3f c0       	rjmp	.+126    	; 0x4ed8 <SevenSegments_voidDispaly+0x286>
	else if (__tmp > 65535)
    4e5a:	6f 81       	ldd	r22, Y+7	; 0x07
    4e5c:	78 85       	ldd	r23, Y+8	; 0x08
    4e5e:	89 85       	ldd	r24, Y+9	; 0x09
    4e60:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e62:	20 e0       	ldi	r18, 0x00	; 0
    4e64:	3f ef       	ldi	r19, 0xFF	; 255
    4e66:	4f e7       	ldi	r20, 0x7F	; 127
    4e68:	57 e4       	ldi	r21, 0x47	; 71
    4e6a:	0e 94 82 11 	call	0x2304	; 0x2304 <__gtsf2>
    4e6e:	18 16       	cp	r1, r24
    4e70:	4c f5       	brge	.+82     	; 0x4ec4 <SevenSegments_voidDispaly+0x272>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4e72:	6b 85       	ldd	r22, Y+11	; 0x0b
    4e74:	7c 85       	ldd	r23, Y+12	; 0x0c
    4e76:	8d 85       	ldd	r24, Y+13	; 0x0d
    4e78:	9e 85       	ldd	r25, Y+14	; 0x0e
    4e7a:	20 e0       	ldi	r18, 0x00	; 0
    4e7c:	30 e0       	ldi	r19, 0x00	; 0
    4e7e:	40 e2       	ldi	r20, 0x20	; 32
    4e80:	51 e4       	ldi	r21, 0x41	; 65
    4e82:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    4e86:	dc 01       	movw	r26, r24
    4e88:	cb 01       	movw	r24, r22
    4e8a:	bc 01       	movw	r22, r24
    4e8c:	cd 01       	movw	r24, r26
    4e8e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4e92:	dc 01       	movw	r26, r24
    4e94:	cb 01       	movw	r24, r22
    4e96:	9e 83       	std	Y+6, r25	; 0x06
    4e98:	8d 83       	std	Y+5, r24	; 0x05
    4e9a:	0f c0       	rjmp	.+30     	; 0x4eba <SevenSegments_voidDispaly+0x268>
    4e9c:	89 e1       	ldi	r24, 0x19	; 25
    4e9e:	90 e0       	ldi	r25, 0x00	; 0
    4ea0:	9c 83       	std	Y+4, r25	; 0x04
    4ea2:	8b 83       	std	Y+3, r24	; 0x03
    4ea4:	8b 81       	ldd	r24, Y+3	; 0x03
    4ea6:	9c 81       	ldd	r25, Y+4	; 0x04
    4ea8:	01 97       	sbiw	r24, 0x01	; 1
    4eaa:	f1 f7       	brne	.-4      	; 0x4ea8 <SevenSegments_voidDispaly+0x256>
    4eac:	9c 83       	std	Y+4, r25	; 0x04
    4eae:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4eb0:	8d 81       	ldd	r24, Y+5	; 0x05
    4eb2:	9e 81       	ldd	r25, Y+6	; 0x06
    4eb4:	01 97       	sbiw	r24, 0x01	; 1
    4eb6:	9e 83       	std	Y+6, r25	; 0x06
    4eb8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4eba:	8d 81       	ldd	r24, Y+5	; 0x05
    4ebc:	9e 81       	ldd	r25, Y+6	; 0x06
    4ebe:	00 97       	sbiw	r24, 0x00	; 0
    4ec0:	69 f7       	brne	.-38     	; 0x4e9c <SevenSegments_voidDispaly+0x24a>
    4ec2:	14 c0       	rjmp	.+40     	; 0x4eec <SevenSegments_voidDispaly+0x29a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ec4:	6f 81       	ldd	r22, Y+7	; 0x07
    4ec6:	78 85       	ldd	r23, Y+8	; 0x08
    4ec8:	89 85       	ldd	r24, Y+9	; 0x09
    4eca:	9a 85       	ldd	r25, Y+10	; 0x0a
    4ecc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4ed0:	dc 01       	movw	r26, r24
    4ed2:	cb 01       	movw	r24, r22
    4ed4:	9e 83       	std	Y+6, r25	; 0x06
    4ed6:	8d 83       	std	Y+5, r24	; 0x05
    4ed8:	8d 81       	ldd	r24, Y+5	; 0x05
    4eda:	9e 81       	ldd	r25, Y+6	; 0x06
    4edc:	9a 83       	std	Y+2, r25	; 0x02
    4ede:	89 83       	std	Y+1, r24	; 0x01
    4ee0:	89 81       	ldd	r24, Y+1	; 0x01
    4ee2:	9a 81       	ldd	r25, Y+2	; 0x02
    4ee4:	01 97       	sbiw	r24, 0x01	; 1
    4ee6:	f1 f7       	brne	.-4      	; 0x4ee4 <SevenSegments_voidDispaly+0x292>
    4ee8:	9a 83       	std	Y+2, r25	; 0x02
    4eea:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(200);
	}
}
    4eec:	6f 96       	adiw	r28, 0x1f	; 31
    4eee:	0f b6       	in	r0, 0x3f	; 63
    4ef0:	f8 94       	cli
    4ef2:	de bf       	out	0x3e, r29	; 62
    4ef4:	0f be       	out	0x3f, r0	; 63
    4ef6:	cd bf       	out	0x3d, r28	; 61
    4ef8:	cf 91       	pop	r28
    4efa:	df 91       	pop	r29
    4efc:	08 95       	ret

00004efe <SevenSegment_voidInit>:

void SevenSegment_voidInit(void){
    4efe:	df 93       	push	r29
    4f00:	cf 93       	push	r28
    4f02:	cd b7       	in	r28, 0x3d	; 61
    4f04:	de b7       	in	r29, 0x3e	; 62
	DIO_voidSetPortDirection(SEVEN_SEGMENT_PORT, 0xff);
    4f06:	84 e0       	ldi	r24, 0x04	; 4
    4f08:	6f ef       	ldi	r22, 0xFF	; 255
    4f0a:	0e 94 23 19 	call	0x3246	; 0x3246 <DIO_voidSetPortDirection>
}
    4f0e:	cf 91       	pop	r28
    4f10:	df 91       	pop	r29
    4f12:	08 95       	ret

00004f14 <SevenSegment_voidDispaly>:

void SevenSegment_voidDispaly(u8 Copy_u8Value){
    4f14:	df 93       	push	r29
    4f16:	cf 93       	push	r28
    4f18:	0f 92       	push	r0
    4f1a:	cd b7       	in	r28, 0x3d	; 61
    4f1c:	de b7       	in	r29, 0x3e	; 62
    4f1e:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[Copy_u8Value]);
    4f20:	89 81       	ldd	r24, Y+1	; 0x01
    4f22:	88 2f       	mov	r24, r24
    4f24:	90 e0       	ldi	r25, 0x00	; 0
    4f26:	88 0f       	add	r24, r24
    4f28:	99 1f       	adc	r25, r25
    4f2a:	88 0f       	add	r24, r24
    4f2c:	99 1f       	adc	r25, r25
    4f2e:	fc 01       	movw	r30, r24
    4f30:	ed 55       	subi	r30, 0x5D	; 93
    4f32:	fe 4f       	sbci	r31, 0xFE	; 254
    4f34:	80 81       	ld	r24, Z
    4f36:	91 81       	ldd	r25, Z+1	; 0x01
    4f38:	a2 81       	ldd	r26, Z+2	; 0x02
    4f3a:	b3 81       	ldd	r27, Z+3	; 0x03
    4f3c:	98 2f       	mov	r25, r24
    4f3e:	84 e0       	ldi	r24, 0x04	; 4
    4f40:	69 2f       	mov	r22, r25
    4f42:	0e 94 65 19 	call	0x32ca	; 0x32ca <DIO_voidSetPortValue>
}
    4f46:	0f 90       	pop	r0
    4f48:	cf 91       	pop	r28
    4f4a:	df 91       	pop	r29
    4f4c:	08 95       	ret

00004f4e <LED_voidInit>:

#include "../../01-LIB/STD_TYPES.h"
#include "../../04-MCAL/01-DIO/DIO_Interface.h"
#include "../01-LED/LED_Interface.h"

void LED_voidInit(u8 u8PinNum){
    4f4e:	df 93       	push	r29
    4f50:	cf 93       	push	r28
    4f52:	0f 92       	push	r0
    4f54:	cd b7       	in	r28, 0x3d	; 61
    4f56:	de b7       	in	r29, 0x3e	; 62
    4f58:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPinDirection(LED_PORT, u8PinNum, DIO_u8OUTPUT);
    4f5a:	81 e0       	ldi	r24, 0x01	; 1
    4f5c:	69 81       	ldd	r22, Y+1	; 0x01
    4f5e:	41 e0       	ldi	r20, 0x01	; 1
    4f60:	0e 94 1f 17 	call	0x2e3e	; 0x2e3e <DIO_voidSetPinDirection>
}
    4f64:	0f 90       	pop	r0
    4f66:	cf 91       	pop	r28
    4f68:	df 91       	pop	r29
    4f6a:	08 95       	ret

00004f6c <LEDs_voidInit>:

void LEDs_voidInit(u8 u8PinNum){
    4f6c:	df 93       	push	r29
    4f6e:	cf 93       	push	r28
    4f70:	0f 92       	push	r0
    4f72:	cd b7       	in	r28, 0x3d	; 61
    4f74:	de b7       	in	r29, 0x3e	; 62
    4f76:	89 83       	std	Y+1, r24	; 0x01
	//DDRC = 0b00000111; //output(C0,C1,C2)
	DIO_voidSetPortDirection(LED_PORT, u8PinNum);
    4f78:	81 e0       	ldi	r24, 0x01	; 1
    4f7a:	69 81       	ldd	r22, Y+1	; 0x01
    4f7c:	0e 94 23 19 	call	0x3246	; 0x3246 <DIO_voidSetPortDirection>
}
    4f80:	0f 90       	pop	r0
    4f82:	cf 91       	pop	r28
    4f84:	df 91       	pop	r29
    4f86:	08 95       	ret

00004f88 <LED_voidON>:

void LED_voidON(u8 u8PinNum){
    4f88:	df 93       	push	r29
    4f8a:	cf 93       	push	r28
    4f8c:	0f 92       	push	r0
    4f8e:	cd b7       	in	r28, 0x3d	; 61
    4f90:	de b7       	in	r29, 0x3e	; 62
    4f92:	89 83       	std	Y+1, r24	; 0x01
	//PORTC = 0b00000001; //high(C0,C1,C2)
	DIO_voidSetPinValue(LED_PORT, u8PinNum, DIO_u8HIGH);
    4f94:	81 e0       	ldi	r24, 0x01	; 1
    4f96:	69 81       	ldd	r22, Y+1	; 0x01
    4f98:	41 e0       	ldi	r20, 0x01	; 1
    4f9a:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
}
    4f9e:	0f 90       	pop	r0
    4fa0:	cf 91       	pop	r28
    4fa2:	df 91       	pop	r29
    4fa4:	08 95       	ret

00004fa6 <LEDs_voidON>:

void LEDs_voidON(u8 u8PinNum){
    4fa6:	df 93       	push	r29
    4fa8:	cf 93       	push	r28
    4faa:	0f 92       	push	r0
    4fac:	cd b7       	in	r28, 0x3d	; 61
    4fae:	de b7       	in	r29, 0x3e	; 62
    4fb0:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPortValue(LED_PORT, u8PinNum);
    4fb2:	81 e0       	ldi	r24, 0x01	; 1
    4fb4:	69 81       	ldd	r22, Y+1	; 0x01
    4fb6:	0e 94 65 19 	call	0x32ca	; 0x32ca <DIO_voidSetPortValue>
}
    4fba:	0f 90       	pop	r0
    4fbc:	cf 91       	pop	r28
    4fbe:	df 91       	pop	r29
    4fc0:	08 95       	ret

00004fc2 <LED_voidOFF>:

void LED_voidOFF(u8 u8PinNum){
    4fc2:	df 93       	push	r29
    4fc4:	cf 93       	push	r28
    4fc6:	0f 92       	push	r0
    4fc8:	cd b7       	in	r28, 0x3d	; 61
    4fca:	de b7       	in	r29, 0x3e	; 62
    4fcc:	89 83       	std	Y+1, r24	; 0x01
	//PORTC = 0b00000000; //low(C0,C1,C2)
	DIO_voidSetPinValue(LED_PORT, u8PinNum, DIO_u8LOW);
    4fce:	81 e0       	ldi	r24, 0x01	; 1
    4fd0:	69 81       	ldd	r22, Y+1	; 0x01
    4fd2:	40 e0       	ldi	r20, 0x00	; 0
    4fd4:	0e 94 21 18 	call	0x3042	; 0x3042 <DIO_voidSetPinValue>
}
    4fd8:	0f 90       	pop	r0
    4fda:	cf 91       	pop	r28
    4fdc:	df 91       	pop	r29
    4fde:	08 95       	ret

00004fe0 <LEDs_voidOFF>:

void LEDs_voidOFF(u8 u8PinNum){
    4fe0:	df 93       	push	r29
    4fe2:	cf 93       	push	r28
    4fe4:	0f 92       	push	r0
    4fe6:	cd b7       	in	r28, 0x3d	; 61
    4fe8:	de b7       	in	r29, 0x3e	; 62
    4fea:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPortValue(LED_PORT, u8PinNum);
    4fec:	81 e0       	ldi	r24, 0x01	; 1
    4fee:	69 81       	ldd	r22, Y+1	; 0x01
    4ff0:	0e 94 65 19 	call	0x32ca	; 0x32ca <DIO_voidSetPortValue>
}
    4ff4:	0f 90       	pop	r0
    4ff6:	cf 91       	pop	r28
    4ff8:	df 91       	pop	r29
    4ffa:	08 95       	ret

00004ffc <main>:
#include "../01-LIB/BIT_MATH.h"
#include "../03-HAL/04-CLCD/CLCD_Interface.h"
#include "../03-HAL/05-KPD/KPD_Interface.h"


int main(){
    4ffc:	af 92       	push	r10
    4ffe:	bf 92       	push	r11
    5000:	cf 92       	push	r12
    5002:	df 92       	push	r13
    5004:	ef 92       	push	r14
    5006:	ff 92       	push	r15
    5008:	0f 93       	push	r16
    500a:	1f 93       	push	r17
    500c:	df 93       	push	r29
    500e:	cf 93       	push	r28
    5010:	cd b7       	in	r28, 0x3d	; 61
    5012:	de b7       	in	r29, 0x3e	; 62
    5014:	2e 97       	sbiw	r28, 0x0e	; 14
    5016:	0f b6       	in	r0, 0x3f	; 63
    5018:	f8 94       	cli
    501a:	de bf       	out	0x3e, r29	; 62
    501c:	0f be       	out	0x3f, r0	; 63
    501e:	cd bf       	out	0x3d, r28	; 61
	KPD_init();
    5020:	0e 94 40 1c 	call	0x3880	; 0x3880 <KPD_init>
	CLCD_init();
    5024:	0e 94 3a 1d 	call	0x3a74	; 0x3a74 <CLCD_init>

	u8 keypad_entry,lastOP;
	f64 num,res = 0;
    5028:	80 e0       	ldi	r24, 0x00	; 0
    502a:	90 e0       	ldi	r25, 0x00	; 0
    502c:	a0 e0       	ldi	r26, 0x00	; 0
    502e:	b0 e0       	ldi	r27, 0x00	; 0
    5030:	8b 83       	std	Y+3, r24	; 0x03
    5032:	9c 83       	std	Y+4, r25	; 0x04
    5034:	ad 83       	std	Y+5, r26	; 0x05
    5036:	be 83       	std	Y+6, r27	; 0x06
    u8 i = 1,flag = 0;
    5038:	81 e0       	ldi	r24, 0x01	; 1
    503a:	8a 83       	std	Y+2, r24	; 0x02
    503c:	19 82       	std	Y+1, r1	; 0x01
	while(1){
		keypad_entry = KPD_GetPressedKey();
    503e:	0e 94 69 1c 	call	0x38d2	; 0x38d2 <KPD_GetPressedKey>
    5042:	8c 87       	std	Y+12, r24	; 0x0c
		if (keypad_entry != 0){
    5044:	8c 85       	ldd	r24, Y+12	; 0x0c
    5046:	88 23       	and	r24, r24
    5048:	d1 f3       	breq	.-12     	; 0x503e <main+0x42>
			if((keypad_entry != '+') && (keypad_entry != '-') && (keypad_entry != '*') && (keypad_entry != '/') && (keypad_entry != '=')){
    504a:	8c 85       	ldd	r24, Y+12	; 0x0c
    504c:	8b 32       	cpi	r24, 0x2B	; 43
    504e:	01 f1       	breq	.+64     	; 0x5090 <main+0x94>
    5050:	8c 85       	ldd	r24, Y+12	; 0x0c
    5052:	8d 32       	cpi	r24, 0x2D	; 45
    5054:	e9 f0       	breq	.+58     	; 0x5090 <main+0x94>
    5056:	8c 85       	ldd	r24, Y+12	; 0x0c
    5058:	8a 32       	cpi	r24, 0x2A	; 42
    505a:	d1 f0       	breq	.+52     	; 0x5090 <main+0x94>
    505c:	8c 85       	ldd	r24, Y+12	; 0x0c
    505e:	8f 32       	cpi	r24, 0x2F	; 47
    5060:	b9 f0       	breq	.+46     	; 0x5090 <main+0x94>
    5062:	8c 85       	ldd	r24, Y+12	; 0x0c
    5064:	8d 33       	cpi	r24, 0x3D	; 61
    5066:	a1 f0       	breq	.+40     	; 0x5090 <main+0x94>
				if (flag == 1){
    5068:	89 81       	ldd	r24, Y+1	; 0x01
    506a:	81 30       	cpi	r24, 0x01	; 1
    506c:	39 f4       	brne	.+14     	; 0x507c <main+0x80>
					CLCD_WriteString_Pos((u8*)"   ",2,1);
    506e:	83 e7       	ldi	r24, 0x73	; 115
    5070:	90 e0       	ldi	r25, 0x00	; 0
    5072:	62 e0       	ldi	r22, 0x02	; 2
    5074:	41 e0       	ldi	r20, 0x01	; 1
    5076:	0e 94 a3 23 	call	0x4746	; 0x4746 <CLCD_WriteString_Pos>
					flag = 0;
    507a:	19 82       	std	Y+1, r1	; 0x01
				}
				CLCD_GoTo(2,i);
    507c:	82 e0       	ldi	r24, 0x02	; 2
    507e:	6a 81       	ldd	r22, Y+2	; 0x02
    5080:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
				CLCD_WriteData(keypad_entry);
    5084:	8c 85       	ldd	r24, Y+12	; 0x0c
    5086:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
				i++;
    508a:	8a 81       	ldd	r24, Y+2	; 0x02
    508c:	8f 5f       	subi	r24, 0xFF	; 255
    508e:	8a 83       	std	Y+2, r24	; 0x02
			}
			if ((keypad_entry >= '0') && (keypad_entry <= '9')){
    5090:	8c 85       	ldd	r24, Y+12	; 0x0c
    5092:	80 33       	cpi	r24, 0x30	; 48
    5094:	50 f1       	brcs	.+84     	; 0x50ea <main+0xee>
    5096:	8c 85       	ldd	r24, Y+12	; 0x0c
    5098:	8a 33       	cpi	r24, 0x3A	; 58
    509a:	38 f5       	brcc	.+78     	; 0x50ea <main+0xee>
				num = (num * 10) + (keypad_entry - 48);
    509c:	6f 81       	ldd	r22, Y+7	; 0x07
    509e:	78 85       	ldd	r23, Y+8	; 0x08
    50a0:	89 85       	ldd	r24, Y+9	; 0x09
    50a2:	9a 85       	ldd	r25, Y+10	; 0x0a
    50a4:	20 e0       	ldi	r18, 0x00	; 0
    50a6:	30 e0       	ldi	r19, 0x00	; 0
    50a8:	40 e2       	ldi	r20, 0x20	; 32
    50aa:	51 e4       	ldi	r21, 0x41	; 65
    50ac:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    50b0:	dc 01       	movw	r26, r24
    50b2:	cb 01       	movw	r24, r22
    50b4:	7c 01       	movw	r14, r24
    50b6:	8d 01       	movw	r16, r26
    50b8:	8c 85       	ldd	r24, Y+12	; 0x0c
    50ba:	88 2f       	mov	r24, r24
    50bc:	90 e0       	ldi	r25, 0x00	; 0
    50be:	c0 97       	sbiw	r24, 0x30	; 48
    50c0:	aa 27       	eor	r26, r26
    50c2:	97 fd       	sbrc	r25, 7
    50c4:	a0 95       	com	r26
    50c6:	ba 2f       	mov	r27, r26
    50c8:	bc 01       	movw	r22, r24
    50ca:	cd 01       	movw	r24, r26
    50cc:	0e 94 12 12 	call	0x2424	; 0x2424 <__floatsisf>
    50d0:	9b 01       	movw	r18, r22
    50d2:	ac 01       	movw	r20, r24
    50d4:	c8 01       	movw	r24, r16
    50d6:	b7 01       	movw	r22, r14
    50d8:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__addsf3>
    50dc:	dc 01       	movw	r26, r24
    50de:	cb 01       	movw	r24, r22
    50e0:	8f 83       	std	Y+7, r24	; 0x07
    50e2:	98 87       	std	Y+8, r25	; 0x08
    50e4:	a9 87       	std	Y+9, r26	; 0x09
    50e6:	ba 87       	std	Y+10, r27	; 0x0a
    50e8:	aa cf       	rjmp	.-172    	; 0x503e <main+0x42>
			}else {
				switch (keypad_entry) {
    50ea:	8c 85       	ldd	r24, Y+12	; 0x0c
    50ec:	28 2f       	mov	r18, r24
    50ee:	30 e0       	ldi	r19, 0x00	; 0
    50f0:	3e 87       	std	Y+14, r19	; 0x0e
    50f2:	2d 87       	std	Y+13, r18	; 0x0d
    50f4:	8d 85       	ldd	r24, Y+13	; 0x0d
    50f6:	9e 85       	ldd	r25, Y+14	; 0x0e
    50f8:	8d 32       	cpi	r24, 0x2D	; 45
    50fa:	91 05       	cpc	r25, r1
    50fc:	09 f4       	brne	.+2      	; 0x5100 <main+0x104>
    50fe:	84 c0       	rjmp	.+264    	; 0x5208 <main+0x20c>
    5100:	2d 85       	ldd	r18, Y+13	; 0x0d
    5102:	3e 85       	ldd	r19, Y+14	; 0x0e
    5104:	2e 32       	cpi	r18, 0x2E	; 46
    5106:	31 05       	cpc	r19, r1
    5108:	64 f4       	brge	.+24     	; 0x5122 <main+0x126>
    510a:	8d 85       	ldd	r24, Y+13	; 0x0d
    510c:	9e 85       	ldd	r25, Y+14	; 0x0e
    510e:	8a 32       	cpi	r24, 0x2A	; 42
    5110:	91 05       	cpc	r25, r1
    5112:	09 f4       	brne	.+2      	; 0x5116 <main+0x11a>
    5114:	fc c0       	rjmp	.+504    	; 0x530e <main+0x312>
    5116:	2d 85       	ldd	r18, Y+13	; 0x0d
    5118:	3e 85       	ldd	r19, Y+14	; 0x0e
    511a:	2b 32       	cpi	r18, 0x2B	; 43
    511c:	31 05       	cpc	r19, r1
    511e:	71 f0       	breq	.+28     	; 0x513c <main+0x140>
    5120:	58 c4       	rjmp	.+2224   	; 0x59d2 <main+0x9d6>
    5122:	8d 85       	ldd	r24, Y+13	; 0x0d
    5124:	9e 85       	ldd	r25, Y+14	; 0x0e
    5126:	8f 32       	cpi	r24, 0x2F	; 47
    5128:	91 05       	cpc	r25, r1
    512a:	09 f4       	brne	.+2      	; 0x512e <main+0x132>
    512c:	73 c1       	rjmp	.+742    	; 0x5414 <main+0x418>
    512e:	2d 85       	ldd	r18, Y+13	; 0x0d
    5130:	3e 85       	ldd	r19, Y+14	; 0x0e
    5132:	2d 33       	cpi	r18, 0x3D	; 61
    5134:	31 05       	cpc	r19, r1
    5136:	09 f4       	brne	.+2      	; 0x513a <main+0x13e>
    5138:	f0 c1       	rjmp	.+992    	; 0x551a <main+0x51e>
    513a:	4b c4       	rjmp	.+2198   	; 0x59d2 <main+0x9d6>
					case '+':
						lastOP = '+';
    513c:	8b e2       	ldi	r24, 0x2B	; 43
    513e:	8b 87       	std	Y+11, r24	; 0x0b
						res += num;
    5140:	6b 81       	ldd	r22, Y+3	; 0x03
    5142:	7c 81       	ldd	r23, Y+4	; 0x04
    5144:	8d 81       	ldd	r24, Y+5	; 0x05
    5146:	9e 81       	ldd	r25, Y+6	; 0x06
    5148:	2f 81       	ldd	r18, Y+7	; 0x07
    514a:	38 85       	ldd	r19, Y+8	; 0x08
    514c:	49 85       	ldd	r20, Y+9	; 0x09
    514e:	5a 85       	ldd	r21, Y+10	; 0x0a
    5150:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__addsf3>
    5154:	dc 01       	movw	r26, r24
    5156:	cb 01       	movw	r24, r22
    5158:	8b 83       	std	Y+3, r24	; 0x03
    515a:	9c 83       	std	Y+4, r25	; 0x04
    515c:	ad 83       	std	Y+5, r26	; 0x05
    515e:	be 83       	std	Y+6, r27	; 0x06
						CLCD_WriteString_Pos((u8*)"           ",1,1);
    5160:	87 e7       	ldi	r24, 0x77	; 119
    5162:	90 e0       	ldi	r25, 0x00	; 0
    5164:	61 e0       	ldi	r22, 0x01	; 1
    5166:	41 e0       	ldi	r20, 0x01	; 1
    5168:	0e 94 a3 23 	call	0x4746	; 0x4746 <CLCD_WriteString_Pos>
						CLCD_GoTo(1,1);
    516c:	81 e0       	ldi	r24, 0x01	; 1
    516e:	61 e0       	ldi	r22, 0x01	; 1
    5170:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
						CLCD_WriteNum(res);
    5174:	6b 81       	ldd	r22, Y+3	; 0x03
    5176:	7c 81       	ldd	r23, Y+4	; 0x04
    5178:	8d 81       	ldd	r24, Y+5	; 0x05
    517a:	9e 81       	ldd	r25, Y+6	; 0x06
    517c:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    5180:	a2 2e       	mov	r10, r18
    5182:	b3 2e       	mov	r11, r19
    5184:	c4 2e       	mov	r12, r20
    5186:	d5 2e       	mov	r13, r21
    5188:	e6 2e       	mov	r14, r22
    518a:	f7 2e       	mov	r15, r23
    518c:	08 2f       	mov	r16, r24
    518e:	19 2f       	mov	r17, r25
    5190:	2a 2d       	mov	r18, r10
    5192:	3b 2d       	mov	r19, r11
    5194:	4c 2d       	mov	r20, r12
    5196:	5d 2d       	mov	r21, r13
    5198:	6e 2d       	mov	r22, r14
    519a:	7f 2d       	mov	r23, r15
    519c:	80 2f       	mov	r24, r16
    519e:	91 2f       	mov	r25, r17
    51a0:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
						CLCD_WriteData('+');
    51a4:	8b e2       	ldi	r24, 0x2B	; 43
    51a6:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
						CLCD_WriteString_Pos((u8*)"           ",2,1);
    51aa:	87 e7       	ldi	r24, 0x77	; 119
    51ac:	90 e0       	ldi	r25, 0x00	; 0
    51ae:	62 e0       	ldi	r22, 0x02	; 2
    51b0:	41 e0       	ldi	r20, 0x01	; 1
    51b2:	0e 94 a3 23 	call	0x4746	; 0x4746 <CLCD_WriteString_Pos>
						CLCD_GoTo(2,1);
    51b6:	82 e0       	ldi	r24, 0x02	; 2
    51b8:	61 e0       	ldi	r22, 0x01	; 1
    51ba:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
						CLCD_WriteNum(res);
    51be:	6b 81       	ldd	r22, Y+3	; 0x03
    51c0:	7c 81       	ldd	r23, Y+4	; 0x04
    51c2:	8d 81       	ldd	r24, Y+5	; 0x05
    51c4:	9e 81       	ldd	r25, Y+6	; 0x06
    51c6:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    51ca:	a2 2e       	mov	r10, r18
    51cc:	b3 2e       	mov	r11, r19
    51ce:	c4 2e       	mov	r12, r20
    51d0:	d5 2e       	mov	r13, r21
    51d2:	e6 2e       	mov	r14, r22
    51d4:	f7 2e       	mov	r15, r23
    51d6:	08 2f       	mov	r16, r24
    51d8:	19 2f       	mov	r17, r25
    51da:	2a 2d       	mov	r18, r10
    51dc:	3b 2d       	mov	r19, r11
    51de:	4c 2d       	mov	r20, r12
    51e0:	5d 2d       	mov	r21, r13
    51e2:	6e 2d       	mov	r22, r14
    51e4:	7f 2d       	mov	r23, r15
    51e6:	80 2f       	mov	r24, r16
    51e8:	91 2f       	mov	r25, r17
    51ea:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
						num = 0;
    51ee:	80 e0       	ldi	r24, 0x00	; 0
    51f0:	90 e0       	ldi	r25, 0x00	; 0
    51f2:	a0 e0       	ldi	r26, 0x00	; 0
    51f4:	b0 e0       	ldi	r27, 0x00	; 0
    51f6:	8f 83       	std	Y+7, r24	; 0x07
    51f8:	98 87       	std	Y+8, r25	; 0x08
    51fa:	a9 87       	std	Y+9, r26	; 0x09
    51fc:	ba 87       	std	Y+10, r27	; 0x0a

						i = 1;
    51fe:	81 e0       	ldi	r24, 0x01	; 1
    5200:	8a 83       	std	Y+2, r24	; 0x02
						flag = 1;
    5202:	81 e0       	ldi	r24, 0x01	; 1
    5204:	89 83       	std	Y+1, r24	; 0x01
    5206:	1b cf       	rjmp	.-458    	; 0x503e <main+0x42>
						break;
					case '-':
						lastOP = '-';
    5208:	8d e2       	ldi	r24, 0x2D	; 45
    520a:	8b 87       	std	Y+11, r24	; 0x0b
						if (res == 0){
    520c:	6b 81       	ldd	r22, Y+3	; 0x03
    520e:	7c 81       	ldd	r23, Y+4	; 0x04
    5210:	8d 81       	ldd	r24, Y+5	; 0x05
    5212:	9e 81       	ldd	r25, Y+6	; 0x06
    5214:	20 e0       	ldi	r18, 0x00	; 0
    5216:	30 e0       	ldi	r19, 0x00	; 0
    5218:	40 e0       	ldi	r20, 0x00	; 0
    521a:	50 e0       	ldi	r21, 0x00	; 0
    521c:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__eqsf2>
    5220:	88 23       	and	r24, r24
    5222:	89 f4       	brne	.+34     	; 0x5246 <main+0x24a>
							res += num;
    5224:	6b 81       	ldd	r22, Y+3	; 0x03
    5226:	7c 81       	ldd	r23, Y+4	; 0x04
    5228:	8d 81       	ldd	r24, Y+5	; 0x05
    522a:	9e 81       	ldd	r25, Y+6	; 0x06
    522c:	2f 81       	ldd	r18, Y+7	; 0x07
    522e:	38 85       	ldd	r19, Y+8	; 0x08
    5230:	49 85       	ldd	r20, Y+9	; 0x09
    5232:	5a 85       	ldd	r21, Y+10	; 0x0a
    5234:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__addsf3>
    5238:	dc 01       	movw	r26, r24
    523a:	cb 01       	movw	r24, r22
    523c:	8b 83       	std	Y+3, r24	; 0x03
    523e:	9c 83       	std	Y+4, r25	; 0x04
    5240:	ad 83       	std	Y+5, r26	; 0x05
    5242:	be 83       	std	Y+6, r27	; 0x06
    5244:	10 c0       	rjmp	.+32     	; 0x5266 <main+0x26a>
						}else {
							res -= num;
    5246:	6b 81       	ldd	r22, Y+3	; 0x03
    5248:	7c 81       	ldd	r23, Y+4	; 0x04
    524a:	8d 81       	ldd	r24, Y+5	; 0x05
    524c:	9e 81       	ldd	r25, Y+6	; 0x06
    524e:	2f 81       	ldd	r18, Y+7	; 0x07
    5250:	38 85       	ldd	r19, Y+8	; 0x08
    5252:	49 85       	ldd	r20, Y+9	; 0x09
    5254:	5a 85       	ldd	r21, Y+10	; 0x0a
    5256:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <__subsf3>
    525a:	dc 01       	movw	r26, r24
    525c:	cb 01       	movw	r24, r22
    525e:	8b 83       	std	Y+3, r24	; 0x03
    5260:	9c 83       	std	Y+4, r25	; 0x04
    5262:	ad 83       	std	Y+5, r26	; 0x05
    5264:	be 83       	std	Y+6, r27	; 0x06
						}
						CLCD_WriteString_Pos((u8*)"           ",1,1);
    5266:	87 e7       	ldi	r24, 0x77	; 119
    5268:	90 e0       	ldi	r25, 0x00	; 0
    526a:	61 e0       	ldi	r22, 0x01	; 1
    526c:	41 e0       	ldi	r20, 0x01	; 1
    526e:	0e 94 a3 23 	call	0x4746	; 0x4746 <CLCD_WriteString_Pos>
						CLCD_GoTo(1,1);
    5272:	81 e0       	ldi	r24, 0x01	; 1
    5274:	61 e0       	ldi	r22, 0x01	; 1
    5276:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
						CLCD_WriteNum(res);
    527a:	6b 81       	ldd	r22, Y+3	; 0x03
    527c:	7c 81       	ldd	r23, Y+4	; 0x04
    527e:	8d 81       	ldd	r24, Y+5	; 0x05
    5280:	9e 81       	ldd	r25, Y+6	; 0x06
    5282:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    5286:	a2 2e       	mov	r10, r18
    5288:	b3 2e       	mov	r11, r19
    528a:	c4 2e       	mov	r12, r20
    528c:	d5 2e       	mov	r13, r21
    528e:	e6 2e       	mov	r14, r22
    5290:	f7 2e       	mov	r15, r23
    5292:	08 2f       	mov	r16, r24
    5294:	19 2f       	mov	r17, r25
    5296:	2a 2d       	mov	r18, r10
    5298:	3b 2d       	mov	r19, r11
    529a:	4c 2d       	mov	r20, r12
    529c:	5d 2d       	mov	r21, r13
    529e:	6e 2d       	mov	r22, r14
    52a0:	7f 2d       	mov	r23, r15
    52a2:	80 2f       	mov	r24, r16
    52a4:	91 2f       	mov	r25, r17
    52a6:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
						CLCD_WriteData('-');
    52aa:	8d e2       	ldi	r24, 0x2D	; 45
    52ac:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
						CLCD_WriteString_Pos((u8*)"           ",2,1);
    52b0:	87 e7       	ldi	r24, 0x77	; 119
    52b2:	90 e0       	ldi	r25, 0x00	; 0
    52b4:	62 e0       	ldi	r22, 0x02	; 2
    52b6:	41 e0       	ldi	r20, 0x01	; 1
    52b8:	0e 94 a3 23 	call	0x4746	; 0x4746 <CLCD_WriteString_Pos>
						CLCD_GoTo(2,1);
    52bc:	82 e0       	ldi	r24, 0x02	; 2
    52be:	61 e0       	ldi	r22, 0x01	; 1
    52c0:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
						CLCD_WriteNum(res);
    52c4:	6b 81       	ldd	r22, Y+3	; 0x03
    52c6:	7c 81       	ldd	r23, Y+4	; 0x04
    52c8:	8d 81       	ldd	r24, Y+5	; 0x05
    52ca:	9e 81       	ldd	r25, Y+6	; 0x06
    52cc:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    52d0:	a2 2e       	mov	r10, r18
    52d2:	b3 2e       	mov	r11, r19
    52d4:	c4 2e       	mov	r12, r20
    52d6:	d5 2e       	mov	r13, r21
    52d8:	e6 2e       	mov	r14, r22
    52da:	f7 2e       	mov	r15, r23
    52dc:	08 2f       	mov	r16, r24
    52de:	19 2f       	mov	r17, r25
    52e0:	2a 2d       	mov	r18, r10
    52e2:	3b 2d       	mov	r19, r11
    52e4:	4c 2d       	mov	r20, r12
    52e6:	5d 2d       	mov	r21, r13
    52e8:	6e 2d       	mov	r22, r14
    52ea:	7f 2d       	mov	r23, r15
    52ec:	80 2f       	mov	r24, r16
    52ee:	91 2f       	mov	r25, r17
    52f0:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
						num = 0;
    52f4:	80 e0       	ldi	r24, 0x00	; 0
    52f6:	90 e0       	ldi	r25, 0x00	; 0
    52f8:	a0 e0       	ldi	r26, 0x00	; 0
    52fa:	b0 e0       	ldi	r27, 0x00	; 0
    52fc:	8f 83       	std	Y+7, r24	; 0x07
    52fe:	98 87       	std	Y+8, r25	; 0x08
    5300:	a9 87       	std	Y+9, r26	; 0x09
    5302:	ba 87       	std	Y+10, r27	; 0x0a

						i = 1;
    5304:	81 e0       	ldi	r24, 0x01	; 1
    5306:	8a 83       	std	Y+2, r24	; 0x02
						flag = 1;
    5308:	81 e0       	ldi	r24, 0x01	; 1
    530a:	89 83       	std	Y+1, r24	; 0x01
    530c:	98 ce       	rjmp	.-720    	; 0x503e <main+0x42>
						break;
					case '*':
						lastOP = '*';
    530e:	8a e2       	ldi	r24, 0x2A	; 42
    5310:	8b 87       	std	Y+11, r24	; 0x0b
						if (res == 0){
    5312:	6b 81       	ldd	r22, Y+3	; 0x03
    5314:	7c 81       	ldd	r23, Y+4	; 0x04
    5316:	8d 81       	ldd	r24, Y+5	; 0x05
    5318:	9e 81       	ldd	r25, Y+6	; 0x06
    531a:	20 e0       	ldi	r18, 0x00	; 0
    531c:	30 e0       	ldi	r19, 0x00	; 0
    531e:	40 e0       	ldi	r20, 0x00	; 0
    5320:	50 e0       	ldi	r21, 0x00	; 0
    5322:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__eqsf2>
    5326:	88 23       	and	r24, r24
    5328:	89 f4       	brne	.+34     	; 0x534c <main+0x350>
							res += num;
    532a:	6b 81       	ldd	r22, Y+3	; 0x03
    532c:	7c 81       	ldd	r23, Y+4	; 0x04
    532e:	8d 81       	ldd	r24, Y+5	; 0x05
    5330:	9e 81       	ldd	r25, Y+6	; 0x06
    5332:	2f 81       	ldd	r18, Y+7	; 0x07
    5334:	38 85       	ldd	r19, Y+8	; 0x08
    5336:	49 85       	ldd	r20, Y+9	; 0x09
    5338:	5a 85       	ldd	r21, Y+10	; 0x0a
    533a:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__addsf3>
    533e:	dc 01       	movw	r26, r24
    5340:	cb 01       	movw	r24, r22
    5342:	8b 83       	std	Y+3, r24	; 0x03
    5344:	9c 83       	std	Y+4, r25	; 0x04
    5346:	ad 83       	std	Y+5, r26	; 0x05
    5348:	be 83       	std	Y+6, r27	; 0x06
    534a:	10 c0       	rjmp	.+32     	; 0x536c <main+0x370>
						}else {
							res *= num;
    534c:	6b 81       	ldd	r22, Y+3	; 0x03
    534e:	7c 81       	ldd	r23, Y+4	; 0x04
    5350:	8d 81       	ldd	r24, Y+5	; 0x05
    5352:	9e 81       	ldd	r25, Y+6	; 0x06
    5354:	2f 81       	ldd	r18, Y+7	; 0x07
    5356:	38 85       	ldd	r19, Y+8	; 0x08
    5358:	49 85       	ldd	r20, Y+9	; 0x09
    535a:	5a 85       	ldd	r21, Y+10	; 0x0a
    535c:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    5360:	dc 01       	movw	r26, r24
    5362:	cb 01       	movw	r24, r22
    5364:	8b 83       	std	Y+3, r24	; 0x03
    5366:	9c 83       	std	Y+4, r25	; 0x04
    5368:	ad 83       	std	Y+5, r26	; 0x05
    536a:	be 83       	std	Y+6, r27	; 0x06
						}
						CLCD_WriteString_Pos((u8*)"           ",1,1);
    536c:	87 e7       	ldi	r24, 0x77	; 119
    536e:	90 e0       	ldi	r25, 0x00	; 0
    5370:	61 e0       	ldi	r22, 0x01	; 1
    5372:	41 e0       	ldi	r20, 0x01	; 1
    5374:	0e 94 a3 23 	call	0x4746	; 0x4746 <CLCD_WriteString_Pos>
						CLCD_GoTo(1,1);
    5378:	81 e0       	ldi	r24, 0x01	; 1
    537a:	61 e0       	ldi	r22, 0x01	; 1
    537c:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
						CLCD_WriteNum(res);
    5380:	6b 81       	ldd	r22, Y+3	; 0x03
    5382:	7c 81       	ldd	r23, Y+4	; 0x04
    5384:	8d 81       	ldd	r24, Y+5	; 0x05
    5386:	9e 81       	ldd	r25, Y+6	; 0x06
    5388:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    538c:	a2 2e       	mov	r10, r18
    538e:	b3 2e       	mov	r11, r19
    5390:	c4 2e       	mov	r12, r20
    5392:	d5 2e       	mov	r13, r21
    5394:	e6 2e       	mov	r14, r22
    5396:	f7 2e       	mov	r15, r23
    5398:	08 2f       	mov	r16, r24
    539a:	19 2f       	mov	r17, r25
    539c:	2a 2d       	mov	r18, r10
    539e:	3b 2d       	mov	r19, r11
    53a0:	4c 2d       	mov	r20, r12
    53a2:	5d 2d       	mov	r21, r13
    53a4:	6e 2d       	mov	r22, r14
    53a6:	7f 2d       	mov	r23, r15
    53a8:	80 2f       	mov	r24, r16
    53aa:	91 2f       	mov	r25, r17
    53ac:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
						CLCD_WriteData('*');
    53b0:	8a e2       	ldi	r24, 0x2A	; 42
    53b2:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
						CLCD_WriteString_Pos((u8*)"           ",2,1);
    53b6:	87 e7       	ldi	r24, 0x77	; 119
    53b8:	90 e0       	ldi	r25, 0x00	; 0
    53ba:	62 e0       	ldi	r22, 0x02	; 2
    53bc:	41 e0       	ldi	r20, 0x01	; 1
    53be:	0e 94 a3 23 	call	0x4746	; 0x4746 <CLCD_WriteString_Pos>
						CLCD_GoTo(2,1);
    53c2:	82 e0       	ldi	r24, 0x02	; 2
    53c4:	61 e0       	ldi	r22, 0x01	; 1
    53c6:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
						CLCD_WriteNum(res);
    53ca:	6b 81       	ldd	r22, Y+3	; 0x03
    53cc:	7c 81       	ldd	r23, Y+4	; 0x04
    53ce:	8d 81       	ldd	r24, Y+5	; 0x05
    53d0:	9e 81       	ldd	r25, Y+6	; 0x06
    53d2:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    53d6:	a2 2e       	mov	r10, r18
    53d8:	b3 2e       	mov	r11, r19
    53da:	c4 2e       	mov	r12, r20
    53dc:	d5 2e       	mov	r13, r21
    53de:	e6 2e       	mov	r14, r22
    53e0:	f7 2e       	mov	r15, r23
    53e2:	08 2f       	mov	r16, r24
    53e4:	19 2f       	mov	r17, r25
    53e6:	2a 2d       	mov	r18, r10
    53e8:	3b 2d       	mov	r19, r11
    53ea:	4c 2d       	mov	r20, r12
    53ec:	5d 2d       	mov	r21, r13
    53ee:	6e 2d       	mov	r22, r14
    53f0:	7f 2d       	mov	r23, r15
    53f2:	80 2f       	mov	r24, r16
    53f4:	91 2f       	mov	r25, r17
    53f6:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
						num = 0;
    53fa:	80 e0       	ldi	r24, 0x00	; 0
    53fc:	90 e0       	ldi	r25, 0x00	; 0
    53fe:	a0 e0       	ldi	r26, 0x00	; 0
    5400:	b0 e0       	ldi	r27, 0x00	; 0
    5402:	8f 83       	std	Y+7, r24	; 0x07
    5404:	98 87       	std	Y+8, r25	; 0x08
    5406:	a9 87       	std	Y+9, r26	; 0x09
    5408:	ba 87       	std	Y+10, r27	; 0x0a

						i = 1;
    540a:	81 e0       	ldi	r24, 0x01	; 1
    540c:	8a 83       	std	Y+2, r24	; 0x02
						flag = 1;
    540e:	81 e0       	ldi	r24, 0x01	; 1
    5410:	89 83       	std	Y+1, r24	; 0x01
    5412:	15 ce       	rjmp	.-982    	; 0x503e <main+0x42>
						break;
					case '/':
						lastOP = '/';
    5414:	8f e2       	ldi	r24, 0x2F	; 47
    5416:	8b 87       	std	Y+11, r24	; 0x0b
						if (res == 0){
    5418:	6b 81       	ldd	r22, Y+3	; 0x03
    541a:	7c 81       	ldd	r23, Y+4	; 0x04
    541c:	8d 81       	ldd	r24, Y+5	; 0x05
    541e:	9e 81       	ldd	r25, Y+6	; 0x06
    5420:	20 e0       	ldi	r18, 0x00	; 0
    5422:	30 e0       	ldi	r19, 0x00	; 0
    5424:	40 e0       	ldi	r20, 0x00	; 0
    5426:	50 e0       	ldi	r21, 0x00	; 0
    5428:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__eqsf2>
    542c:	88 23       	and	r24, r24
    542e:	89 f4       	brne	.+34     	; 0x5452 <main+0x456>
							res += num;
    5430:	6b 81       	ldd	r22, Y+3	; 0x03
    5432:	7c 81       	ldd	r23, Y+4	; 0x04
    5434:	8d 81       	ldd	r24, Y+5	; 0x05
    5436:	9e 81       	ldd	r25, Y+6	; 0x06
    5438:	2f 81       	ldd	r18, Y+7	; 0x07
    543a:	38 85       	ldd	r19, Y+8	; 0x08
    543c:	49 85       	ldd	r20, Y+9	; 0x09
    543e:	5a 85       	ldd	r21, Y+10	; 0x0a
    5440:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__addsf3>
    5444:	dc 01       	movw	r26, r24
    5446:	cb 01       	movw	r24, r22
    5448:	8b 83       	std	Y+3, r24	; 0x03
    544a:	9c 83       	std	Y+4, r25	; 0x04
    544c:	ad 83       	std	Y+5, r26	; 0x05
    544e:	be 83       	std	Y+6, r27	; 0x06
    5450:	10 c0       	rjmp	.+32     	; 0x5472 <main+0x476>
						}else {
							res /= num;
    5452:	6b 81       	ldd	r22, Y+3	; 0x03
    5454:	7c 81       	ldd	r23, Y+4	; 0x04
    5456:	8d 81       	ldd	r24, Y+5	; 0x05
    5458:	9e 81       	ldd	r25, Y+6	; 0x06
    545a:	2f 81       	ldd	r18, Y+7	; 0x07
    545c:	38 85       	ldd	r19, Y+8	; 0x08
    545e:	49 85       	ldd	r20, Y+9	; 0x09
    5460:	5a 85       	ldd	r21, Y+10	; 0x0a
    5462:	0e 94 a6 10 	call	0x214c	; 0x214c <__divsf3>
    5466:	dc 01       	movw	r26, r24
    5468:	cb 01       	movw	r24, r22
    546a:	8b 83       	std	Y+3, r24	; 0x03
    546c:	9c 83       	std	Y+4, r25	; 0x04
    546e:	ad 83       	std	Y+5, r26	; 0x05
    5470:	be 83       	std	Y+6, r27	; 0x06
						}
						CLCD_WriteString_Pos((u8*)"           ",1,1);
    5472:	87 e7       	ldi	r24, 0x77	; 119
    5474:	90 e0       	ldi	r25, 0x00	; 0
    5476:	61 e0       	ldi	r22, 0x01	; 1
    5478:	41 e0       	ldi	r20, 0x01	; 1
    547a:	0e 94 a3 23 	call	0x4746	; 0x4746 <CLCD_WriteString_Pos>
						CLCD_GoTo(1,1);
    547e:	81 e0       	ldi	r24, 0x01	; 1
    5480:	61 e0       	ldi	r22, 0x01	; 1
    5482:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
						CLCD_WriteNum(res);
    5486:	6b 81       	ldd	r22, Y+3	; 0x03
    5488:	7c 81       	ldd	r23, Y+4	; 0x04
    548a:	8d 81       	ldd	r24, Y+5	; 0x05
    548c:	9e 81       	ldd	r25, Y+6	; 0x06
    548e:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    5492:	a2 2e       	mov	r10, r18
    5494:	b3 2e       	mov	r11, r19
    5496:	c4 2e       	mov	r12, r20
    5498:	d5 2e       	mov	r13, r21
    549a:	e6 2e       	mov	r14, r22
    549c:	f7 2e       	mov	r15, r23
    549e:	08 2f       	mov	r16, r24
    54a0:	19 2f       	mov	r17, r25
    54a2:	2a 2d       	mov	r18, r10
    54a4:	3b 2d       	mov	r19, r11
    54a6:	4c 2d       	mov	r20, r12
    54a8:	5d 2d       	mov	r21, r13
    54aa:	6e 2d       	mov	r22, r14
    54ac:	7f 2d       	mov	r23, r15
    54ae:	80 2f       	mov	r24, r16
    54b0:	91 2f       	mov	r25, r17
    54b2:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
						CLCD_WriteData('/');
    54b6:	8f e2       	ldi	r24, 0x2F	; 47
    54b8:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
						CLCD_WriteString_Pos((u8*)"           ",2,1);
    54bc:	87 e7       	ldi	r24, 0x77	; 119
    54be:	90 e0       	ldi	r25, 0x00	; 0
    54c0:	62 e0       	ldi	r22, 0x02	; 2
    54c2:	41 e0       	ldi	r20, 0x01	; 1
    54c4:	0e 94 a3 23 	call	0x4746	; 0x4746 <CLCD_WriteString_Pos>
						CLCD_GoTo(2,1);
    54c8:	82 e0       	ldi	r24, 0x02	; 2
    54ca:	61 e0       	ldi	r22, 0x01	; 1
    54cc:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
						CLCD_WriteNum(res);
    54d0:	6b 81       	ldd	r22, Y+3	; 0x03
    54d2:	7c 81       	ldd	r23, Y+4	; 0x04
    54d4:	8d 81       	ldd	r24, Y+5	; 0x05
    54d6:	9e 81       	ldd	r25, Y+6	; 0x06
    54d8:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    54dc:	a2 2e       	mov	r10, r18
    54de:	b3 2e       	mov	r11, r19
    54e0:	c4 2e       	mov	r12, r20
    54e2:	d5 2e       	mov	r13, r21
    54e4:	e6 2e       	mov	r14, r22
    54e6:	f7 2e       	mov	r15, r23
    54e8:	08 2f       	mov	r16, r24
    54ea:	19 2f       	mov	r17, r25
    54ec:	2a 2d       	mov	r18, r10
    54ee:	3b 2d       	mov	r19, r11
    54f0:	4c 2d       	mov	r20, r12
    54f2:	5d 2d       	mov	r21, r13
    54f4:	6e 2d       	mov	r22, r14
    54f6:	7f 2d       	mov	r23, r15
    54f8:	80 2f       	mov	r24, r16
    54fa:	91 2f       	mov	r25, r17
    54fc:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
						num = 0;
    5500:	80 e0       	ldi	r24, 0x00	; 0
    5502:	90 e0       	ldi	r25, 0x00	; 0
    5504:	a0 e0       	ldi	r26, 0x00	; 0
    5506:	b0 e0       	ldi	r27, 0x00	; 0
    5508:	8f 83       	std	Y+7, r24	; 0x07
    550a:	98 87       	std	Y+8, r25	; 0x08
    550c:	a9 87       	std	Y+9, r26	; 0x09
    550e:	ba 87       	std	Y+10, r27	; 0x0a

						i = 1;
    5510:	81 e0       	ldi	r24, 0x01	; 1
    5512:	8a 83       	std	Y+2, r24	; 0x02
						flag = 1;
    5514:	81 e0       	ldi	r24, 0x01	; 1
    5516:	89 83       	std	Y+1, r24	; 0x01
    5518:	92 cd       	rjmp	.-1244   	; 0x503e <main+0x42>
						break;
					case '=':
						if (lastOP == '+'){
    551a:	8b 85       	ldd	r24, Y+11	; 0x0b
    551c:	8b 32       	cpi	r24, 0x2B	; 43
    551e:	09 f0       	breq	.+2      	; 0x5522 <main+0x526>
    5520:	93 c0       	rjmp	.+294    	; 0x5648 <main+0x64c>
							CLCD_WriteString_Pos((u8*)"           ",1,1);
    5522:	87 e7       	ldi	r24, 0x77	; 119
    5524:	90 e0       	ldi	r25, 0x00	; 0
    5526:	61 e0       	ldi	r22, 0x01	; 1
    5528:	41 e0       	ldi	r20, 0x01	; 1
    552a:	0e 94 a3 23 	call	0x4746	; 0x4746 <CLCD_WriteString_Pos>
							CLCD_GoTo(1,1);
    552e:	81 e0       	ldi	r24, 0x01	; 1
    5530:	61 e0       	ldi	r22, 0x01	; 1
    5532:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
							CLCD_WriteNum(res);
    5536:	6b 81       	ldd	r22, Y+3	; 0x03
    5538:	7c 81       	ldd	r23, Y+4	; 0x04
    553a:	8d 81       	ldd	r24, Y+5	; 0x05
    553c:	9e 81       	ldd	r25, Y+6	; 0x06
    553e:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    5542:	a2 2e       	mov	r10, r18
    5544:	b3 2e       	mov	r11, r19
    5546:	c4 2e       	mov	r12, r20
    5548:	d5 2e       	mov	r13, r21
    554a:	e6 2e       	mov	r14, r22
    554c:	f7 2e       	mov	r15, r23
    554e:	08 2f       	mov	r16, r24
    5550:	19 2f       	mov	r17, r25
    5552:	2a 2d       	mov	r18, r10
    5554:	3b 2d       	mov	r19, r11
    5556:	4c 2d       	mov	r20, r12
    5558:	5d 2d       	mov	r21, r13
    555a:	6e 2d       	mov	r22, r14
    555c:	7f 2d       	mov	r23, r15
    555e:	80 2f       	mov	r24, r16
    5560:	91 2f       	mov	r25, r17
    5562:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
							CLCD_WriteData('+');
    5566:	8b e2       	ldi	r24, 0x2B	; 43
    5568:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
							CLCD_WriteNum(num);
    556c:	6f 81       	ldd	r22, Y+7	; 0x07
    556e:	78 85       	ldd	r23, Y+8	; 0x08
    5570:	89 85       	ldd	r24, Y+9	; 0x09
    5572:	9a 85       	ldd	r25, Y+10	; 0x0a
    5574:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    5578:	a2 2e       	mov	r10, r18
    557a:	b3 2e       	mov	r11, r19
    557c:	c4 2e       	mov	r12, r20
    557e:	d5 2e       	mov	r13, r21
    5580:	e6 2e       	mov	r14, r22
    5582:	f7 2e       	mov	r15, r23
    5584:	08 2f       	mov	r16, r24
    5586:	19 2f       	mov	r17, r25
    5588:	2a 2d       	mov	r18, r10
    558a:	3b 2d       	mov	r19, r11
    558c:	4c 2d       	mov	r20, r12
    558e:	5d 2d       	mov	r21, r13
    5590:	6e 2d       	mov	r22, r14
    5592:	7f 2d       	mov	r23, r15
    5594:	80 2f       	mov	r24, r16
    5596:	91 2f       	mov	r25, r17
    5598:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
							CLCD_WriteData('=');
    559c:	8d e3       	ldi	r24, 0x3D	; 61
    559e:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
							res += num;
    55a2:	6b 81       	ldd	r22, Y+3	; 0x03
    55a4:	7c 81       	ldd	r23, Y+4	; 0x04
    55a6:	8d 81       	ldd	r24, Y+5	; 0x05
    55a8:	9e 81       	ldd	r25, Y+6	; 0x06
    55aa:	2f 81       	ldd	r18, Y+7	; 0x07
    55ac:	38 85       	ldd	r19, Y+8	; 0x08
    55ae:	49 85       	ldd	r20, Y+9	; 0x09
    55b0:	5a 85       	ldd	r21, Y+10	; 0x0a
    55b2:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__addsf3>
    55b6:	dc 01       	movw	r26, r24
    55b8:	cb 01       	movw	r24, r22
    55ba:	8b 83       	std	Y+3, r24	; 0x03
    55bc:	9c 83       	std	Y+4, r25	; 0x04
    55be:	ad 83       	std	Y+5, r26	; 0x05
    55c0:	be 83       	std	Y+6, r27	; 0x06
							CLCD_WriteNum(res);
    55c2:	6b 81       	ldd	r22, Y+3	; 0x03
    55c4:	7c 81       	ldd	r23, Y+4	; 0x04
    55c6:	8d 81       	ldd	r24, Y+5	; 0x05
    55c8:	9e 81       	ldd	r25, Y+6	; 0x06
    55ca:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    55ce:	a2 2e       	mov	r10, r18
    55d0:	b3 2e       	mov	r11, r19
    55d2:	c4 2e       	mov	r12, r20
    55d4:	d5 2e       	mov	r13, r21
    55d6:	e6 2e       	mov	r14, r22
    55d8:	f7 2e       	mov	r15, r23
    55da:	08 2f       	mov	r16, r24
    55dc:	19 2f       	mov	r17, r25
    55de:	2a 2d       	mov	r18, r10
    55e0:	3b 2d       	mov	r19, r11
    55e2:	4c 2d       	mov	r20, r12
    55e4:	5d 2d       	mov	r21, r13
    55e6:	6e 2d       	mov	r22, r14
    55e8:	7f 2d       	mov	r23, r15
    55ea:	80 2f       	mov	r24, r16
    55ec:	91 2f       	mov	r25, r17
    55ee:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
							CLCD_WriteString_Pos((u8*)"           ",2,1);
    55f2:	87 e7       	ldi	r24, 0x77	; 119
    55f4:	90 e0       	ldi	r25, 0x00	; 0
    55f6:	62 e0       	ldi	r22, 0x02	; 2
    55f8:	41 e0       	ldi	r20, 0x01	; 1
    55fa:	0e 94 a3 23 	call	0x4746	; 0x4746 <CLCD_WriteString_Pos>
							CLCD_GoTo(2,1);
    55fe:	82 e0       	ldi	r24, 0x02	; 2
    5600:	61 e0       	ldi	r22, 0x01	; 1
    5602:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
							CLCD_WriteNum(res);
    5606:	6b 81       	ldd	r22, Y+3	; 0x03
    5608:	7c 81       	ldd	r23, Y+4	; 0x04
    560a:	8d 81       	ldd	r24, Y+5	; 0x05
    560c:	9e 81       	ldd	r25, Y+6	; 0x06
    560e:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    5612:	a2 2e       	mov	r10, r18
    5614:	b3 2e       	mov	r11, r19
    5616:	c4 2e       	mov	r12, r20
    5618:	d5 2e       	mov	r13, r21
    561a:	e6 2e       	mov	r14, r22
    561c:	f7 2e       	mov	r15, r23
    561e:	08 2f       	mov	r16, r24
    5620:	19 2f       	mov	r17, r25
    5622:	2a 2d       	mov	r18, r10
    5624:	3b 2d       	mov	r19, r11
    5626:	4c 2d       	mov	r20, r12
    5628:	5d 2d       	mov	r21, r13
    562a:	6e 2d       	mov	r22, r14
    562c:	7f 2d       	mov	r23, r15
    562e:	80 2f       	mov	r24, r16
    5630:	91 2f       	mov	r25, r17
    5632:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
							num = 0;
    5636:	80 e0       	ldi	r24, 0x00	; 0
    5638:	90 e0       	ldi	r25, 0x00	; 0
    563a:	a0 e0       	ldi	r26, 0x00	; 0
    563c:	b0 e0       	ldi	r27, 0x00	; 0
    563e:	8f 83       	std	Y+7, r24	; 0x07
    5640:	98 87       	std	Y+8, r25	; 0x08
    5642:	a9 87       	std	Y+9, r26	; 0x09
    5644:	ba 87       	std	Y+10, r27	; 0x0a
    5646:	fb cc       	rjmp	.-1546   	; 0x503e <main+0x42>
						}else if (lastOP == '-'){
    5648:	8b 85       	ldd	r24, Y+11	; 0x0b
    564a:	8d 32       	cpi	r24, 0x2D	; 45
    564c:	09 f0       	breq	.+2      	; 0x5650 <main+0x654>
    564e:	93 c0       	rjmp	.+294    	; 0x5776 <main+0x77a>
							CLCD_WriteString_Pos((u8*)"           ",1,1);
    5650:	87 e7       	ldi	r24, 0x77	; 119
    5652:	90 e0       	ldi	r25, 0x00	; 0
    5654:	61 e0       	ldi	r22, 0x01	; 1
    5656:	41 e0       	ldi	r20, 0x01	; 1
    5658:	0e 94 a3 23 	call	0x4746	; 0x4746 <CLCD_WriteString_Pos>
							CLCD_GoTo(1,1);
    565c:	81 e0       	ldi	r24, 0x01	; 1
    565e:	61 e0       	ldi	r22, 0x01	; 1
    5660:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
							CLCD_WriteNum(res);
    5664:	6b 81       	ldd	r22, Y+3	; 0x03
    5666:	7c 81       	ldd	r23, Y+4	; 0x04
    5668:	8d 81       	ldd	r24, Y+5	; 0x05
    566a:	9e 81       	ldd	r25, Y+6	; 0x06
    566c:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    5670:	a2 2e       	mov	r10, r18
    5672:	b3 2e       	mov	r11, r19
    5674:	c4 2e       	mov	r12, r20
    5676:	d5 2e       	mov	r13, r21
    5678:	e6 2e       	mov	r14, r22
    567a:	f7 2e       	mov	r15, r23
    567c:	08 2f       	mov	r16, r24
    567e:	19 2f       	mov	r17, r25
    5680:	2a 2d       	mov	r18, r10
    5682:	3b 2d       	mov	r19, r11
    5684:	4c 2d       	mov	r20, r12
    5686:	5d 2d       	mov	r21, r13
    5688:	6e 2d       	mov	r22, r14
    568a:	7f 2d       	mov	r23, r15
    568c:	80 2f       	mov	r24, r16
    568e:	91 2f       	mov	r25, r17
    5690:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
							CLCD_WriteData('-');
    5694:	8d e2       	ldi	r24, 0x2D	; 45
    5696:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
							CLCD_WriteNum(num);
    569a:	6f 81       	ldd	r22, Y+7	; 0x07
    569c:	78 85       	ldd	r23, Y+8	; 0x08
    569e:	89 85       	ldd	r24, Y+9	; 0x09
    56a0:	9a 85       	ldd	r25, Y+10	; 0x0a
    56a2:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    56a6:	a2 2e       	mov	r10, r18
    56a8:	b3 2e       	mov	r11, r19
    56aa:	c4 2e       	mov	r12, r20
    56ac:	d5 2e       	mov	r13, r21
    56ae:	e6 2e       	mov	r14, r22
    56b0:	f7 2e       	mov	r15, r23
    56b2:	08 2f       	mov	r16, r24
    56b4:	19 2f       	mov	r17, r25
    56b6:	2a 2d       	mov	r18, r10
    56b8:	3b 2d       	mov	r19, r11
    56ba:	4c 2d       	mov	r20, r12
    56bc:	5d 2d       	mov	r21, r13
    56be:	6e 2d       	mov	r22, r14
    56c0:	7f 2d       	mov	r23, r15
    56c2:	80 2f       	mov	r24, r16
    56c4:	91 2f       	mov	r25, r17
    56c6:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
							CLCD_WriteData('=');
    56ca:	8d e3       	ldi	r24, 0x3D	; 61
    56cc:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
							res -= num;
    56d0:	6b 81       	ldd	r22, Y+3	; 0x03
    56d2:	7c 81       	ldd	r23, Y+4	; 0x04
    56d4:	8d 81       	ldd	r24, Y+5	; 0x05
    56d6:	9e 81       	ldd	r25, Y+6	; 0x06
    56d8:	2f 81       	ldd	r18, Y+7	; 0x07
    56da:	38 85       	ldd	r19, Y+8	; 0x08
    56dc:	49 85       	ldd	r20, Y+9	; 0x09
    56de:	5a 85       	ldd	r21, Y+10	; 0x0a
    56e0:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <__subsf3>
    56e4:	dc 01       	movw	r26, r24
    56e6:	cb 01       	movw	r24, r22
    56e8:	8b 83       	std	Y+3, r24	; 0x03
    56ea:	9c 83       	std	Y+4, r25	; 0x04
    56ec:	ad 83       	std	Y+5, r26	; 0x05
    56ee:	be 83       	std	Y+6, r27	; 0x06
							CLCD_WriteNum(res);
    56f0:	6b 81       	ldd	r22, Y+3	; 0x03
    56f2:	7c 81       	ldd	r23, Y+4	; 0x04
    56f4:	8d 81       	ldd	r24, Y+5	; 0x05
    56f6:	9e 81       	ldd	r25, Y+6	; 0x06
    56f8:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    56fc:	a2 2e       	mov	r10, r18
    56fe:	b3 2e       	mov	r11, r19
    5700:	c4 2e       	mov	r12, r20
    5702:	d5 2e       	mov	r13, r21
    5704:	e6 2e       	mov	r14, r22
    5706:	f7 2e       	mov	r15, r23
    5708:	08 2f       	mov	r16, r24
    570a:	19 2f       	mov	r17, r25
    570c:	2a 2d       	mov	r18, r10
    570e:	3b 2d       	mov	r19, r11
    5710:	4c 2d       	mov	r20, r12
    5712:	5d 2d       	mov	r21, r13
    5714:	6e 2d       	mov	r22, r14
    5716:	7f 2d       	mov	r23, r15
    5718:	80 2f       	mov	r24, r16
    571a:	91 2f       	mov	r25, r17
    571c:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
							CLCD_WriteString_Pos((u8*)"           ",2,1);
    5720:	87 e7       	ldi	r24, 0x77	; 119
    5722:	90 e0       	ldi	r25, 0x00	; 0
    5724:	62 e0       	ldi	r22, 0x02	; 2
    5726:	41 e0       	ldi	r20, 0x01	; 1
    5728:	0e 94 a3 23 	call	0x4746	; 0x4746 <CLCD_WriteString_Pos>
							CLCD_GoTo(2,1);
    572c:	82 e0       	ldi	r24, 0x02	; 2
    572e:	61 e0       	ldi	r22, 0x01	; 1
    5730:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
							CLCD_WriteNum(res);
    5734:	6b 81       	ldd	r22, Y+3	; 0x03
    5736:	7c 81       	ldd	r23, Y+4	; 0x04
    5738:	8d 81       	ldd	r24, Y+5	; 0x05
    573a:	9e 81       	ldd	r25, Y+6	; 0x06
    573c:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    5740:	a2 2e       	mov	r10, r18
    5742:	b3 2e       	mov	r11, r19
    5744:	c4 2e       	mov	r12, r20
    5746:	d5 2e       	mov	r13, r21
    5748:	e6 2e       	mov	r14, r22
    574a:	f7 2e       	mov	r15, r23
    574c:	08 2f       	mov	r16, r24
    574e:	19 2f       	mov	r17, r25
    5750:	2a 2d       	mov	r18, r10
    5752:	3b 2d       	mov	r19, r11
    5754:	4c 2d       	mov	r20, r12
    5756:	5d 2d       	mov	r21, r13
    5758:	6e 2d       	mov	r22, r14
    575a:	7f 2d       	mov	r23, r15
    575c:	80 2f       	mov	r24, r16
    575e:	91 2f       	mov	r25, r17
    5760:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
							num = 0;
    5764:	80 e0       	ldi	r24, 0x00	; 0
    5766:	90 e0       	ldi	r25, 0x00	; 0
    5768:	a0 e0       	ldi	r26, 0x00	; 0
    576a:	b0 e0       	ldi	r27, 0x00	; 0
    576c:	8f 83       	std	Y+7, r24	; 0x07
    576e:	98 87       	std	Y+8, r25	; 0x08
    5770:	a9 87       	std	Y+9, r26	; 0x09
    5772:	ba 87       	std	Y+10, r27	; 0x0a
    5774:	64 cc       	rjmp	.-1848   	; 0x503e <main+0x42>
						}else if (lastOP == '*'){
    5776:	8b 85       	ldd	r24, Y+11	; 0x0b
    5778:	8a 32       	cpi	r24, 0x2A	; 42
    577a:	09 f0       	breq	.+2      	; 0x577e <main+0x782>
    577c:	93 c0       	rjmp	.+294    	; 0x58a4 <main+0x8a8>
							CLCD_WriteString_Pos((u8*)"           ",1,1);
    577e:	87 e7       	ldi	r24, 0x77	; 119
    5780:	90 e0       	ldi	r25, 0x00	; 0
    5782:	61 e0       	ldi	r22, 0x01	; 1
    5784:	41 e0       	ldi	r20, 0x01	; 1
    5786:	0e 94 a3 23 	call	0x4746	; 0x4746 <CLCD_WriteString_Pos>
							CLCD_GoTo(1,1);
    578a:	81 e0       	ldi	r24, 0x01	; 1
    578c:	61 e0       	ldi	r22, 0x01	; 1
    578e:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
							CLCD_WriteNum(res);
    5792:	6b 81       	ldd	r22, Y+3	; 0x03
    5794:	7c 81       	ldd	r23, Y+4	; 0x04
    5796:	8d 81       	ldd	r24, Y+5	; 0x05
    5798:	9e 81       	ldd	r25, Y+6	; 0x06
    579a:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    579e:	a2 2e       	mov	r10, r18
    57a0:	b3 2e       	mov	r11, r19
    57a2:	c4 2e       	mov	r12, r20
    57a4:	d5 2e       	mov	r13, r21
    57a6:	e6 2e       	mov	r14, r22
    57a8:	f7 2e       	mov	r15, r23
    57aa:	08 2f       	mov	r16, r24
    57ac:	19 2f       	mov	r17, r25
    57ae:	2a 2d       	mov	r18, r10
    57b0:	3b 2d       	mov	r19, r11
    57b2:	4c 2d       	mov	r20, r12
    57b4:	5d 2d       	mov	r21, r13
    57b6:	6e 2d       	mov	r22, r14
    57b8:	7f 2d       	mov	r23, r15
    57ba:	80 2f       	mov	r24, r16
    57bc:	91 2f       	mov	r25, r17
    57be:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
							CLCD_WriteData('*');
    57c2:	8a e2       	ldi	r24, 0x2A	; 42
    57c4:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
							CLCD_WriteNum(num);
    57c8:	6f 81       	ldd	r22, Y+7	; 0x07
    57ca:	78 85       	ldd	r23, Y+8	; 0x08
    57cc:	89 85       	ldd	r24, Y+9	; 0x09
    57ce:	9a 85       	ldd	r25, Y+10	; 0x0a
    57d0:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    57d4:	a2 2e       	mov	r10, r18
    57d6:	b3 2e       	mov	r11, r19
    57d8:	c4 2e       	mov	r12, r20
    57da:	d5 2e       	mov	r13, r21
    57dc:	e6 2e       	mov	r14, r22
    57de:	f7 2e       	mov	r15, r23
    57e0:	08 2f       	mov	r16, r24
    57e2:	19 2f       	mov	r17, r25
    57e4:	2a 2d       	mov	r18, r10
    57e6:	3b 2d       	mov	r19, r11
    57e8:	4c 2d       	mov	r20, r12
    57ea:	5d 2d       	mov	r21, r13
    57ec:	6e 2d       	mov	r22, r14
    57ee:	7f 2d       	mov	r23, r15
    57f0:	80 2f       	mov	r24, r16
    57f2:	91 2f       	mov	r25, r17
    57f4:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
							CLCD_WriteData('=');
    57f8:	8d e3       	ldi	r24, 0x3D	; 61
    57fa:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
							res *= num;
    57fe:	6b 81       	ldd	r22, Y+3	; 0x03
    5800:	7c 81       	ldd	r23, Y+4	; 0x04
    5802:	8d 81       	ldd	r24, Y+5	; 0x05
    5804:	9e 81       	ldd	r25, Y+6	; 0x06
    5806:	2f 81       	ldd	r18, Y+7	; 0x07
    5808:	38 85       	ldd	r19, Y+8	; 0x08
    580a:	49 85       	ldd	r20, Y+9	; 0x09
    580c:	5a 85       	ldd	r21, Y+10	; 0x0a
    580e:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__mulsf3>
    5812:	dc 01       	movw	r26, r24
    5814:	cb 01       	movw	r24, r22
    5816:	8b 83       	std	Y+3, r24	; 0x03
    5818:	9c 83       	std	Y+4, r25	; 0x04
    581a:	ad 83       	std	Y+5, r26	; 0x05
    581c:	be 83       	std	Y+6, r27	; 0x06
							CLCD_WriteNum(res);
    581e:	6b 81       	ldd	r22, Y+3	; 0x03
    5820:	7c 81       	ldd	r23, Y+4	; 0x04
    5822:	8d 81       	ldd	r24, Y+5	; 0x05
    5824:	9e 81       	ldd	r25, Y+6	; 0x06
    5826:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    582a:	a2 2e       	mov	r10, r18
    582c:	b3 2e       	mov	r11, r19
    582e:	c4 2e       	mov	r12, r20
    5830:	d5 2e       	mov	r13, r21
    5832:	e6 2e       	mov	r14, r22
    5834:	f7 2e       	mov	r15, r23
    5836:	08 2f       	mov	r16, r24
    5838:	19 2f       	mov	r17, r25
    583a:	2a 2d       	mov	r18, r10
    583c:	3b 2d       	mov	r19, r11
    583e:	4c 2d       	mov	r20, r12
    5840:	5d 2d       	mov	r21, r13
    5842:	6e 2d       	mov	r22, r14
    5844:	7f 2d       	mov	r23, r15
    5846:	80 2f       	mov	r24, r16
    5848:	91 2f       	mov	r25, r17
    584a:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
							CLCD_WriteString_Pos((u8*)"           ",2,1);
    584e:	87 e7       	ldi	r24, 0x77	; 119
    5850:	90 e0       	ldi	r25, 0x00	; 0
    5852:	62 e0       	ldi	r22, 0x02	; 2
    5854:	41 e0       	ldi	r20, 0x01	; 1
    5856:	0e 94 a3 23 	call	0x4746	; 0x4746 <CLCD_WriteString_Pos>
							CLCD_GoTo(2,1);
    585a:	82 e0       	ldi	r24, 0x02	; 2
    585c:	61 e0       	ldi	r22, 0x01	; 1
    585e:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
							CLCD_WriteNum(res);
    5862:	6b 81       	ldd	r22, Y+3	; 0x03
    5864:	7c 81       	ldd	r23, Y+4	; 0x04
    5866:	8d 81       	ldd	r24, Y+5	; 0x05
    5868:	9e 81       	ldd	r25, Y+6	; 0x06
    586a:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    586e:	a2 2e       	mov	r10, r18
    5870:	b3 2e       	mov	r11, r19
    5872:	c4 2e       	mov	r12, r20
    5874:	d5 2e       	mov	r13, r21
    5876:	e6 2e       	mov	r14, r22
    5878:	f7 2e       	mov	r15, r23
    587a:	08 2f       	mov	r16, r24
    587c:	19 2f       	mov	r17, r25
    587e:	2a 2d       	mov	r18, r10
    5880:	3b 2d       	mov	r19, r11
    5882:	4c 2d       	mov	r20, r12
    5884:	5d 2d       	mov	r21, r13
    5886:	6e 2d       	mov	r22, r14
    5888:	7f 2d       	mov	r23, r15
    588a:	80 2f       	mov	r24, r16
    588c:	91 2f       	mov	r25, r17
    588e:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
							num = 0;
    5892:	80 e0       	ldi	r24, 0x00	; 0
    5894:	90 e0       	ldi	r25, 0x00	; 0
    5896:	a0 e0       	ldi	r26, 0x00	; 0
    5898:	b0 e0       	ldi	r27, 0x00	; 0
    589a:	8f 83       	std	Y+7, r24	; 0x07
    589c:	98 87       	std	Y+8, r25	; 0x08
    589e:	a9 87       	std	Y+9, r26	; 0x09
    58a0:	ba 87       	std	Y+10, r27	; 0x0a
    58a2:	cd cb       	rjmp	.-2150   	; 0x503e <main+0x42>
						}else if (lastOP == '/'){
    58a4:	8b 85       	ldd	r24, Y+11	; 0x0b
    58a6:	8f 32       	cpi	r24, 0x2F	; 47
    58a8:	09 f0       	breq	.+2      	; 0x58ac <main+0x8b0>
    58aa:	c9 cb       	rjmp	.-2158   	; 0x503e <main+0x42>
							CLCD_WriteString_Pos((u8*)"           ",1,1);
    58ac:	87 e7       	ldi	r24, 0x77	; 119
    58ae:	90 e0       	ldi	r25, 0x00	; 0
    58b0:	61 e0       	ldi	r22, 0x01	; 1
    58b2:	41 e0       	ldi	r20, 0x01	; 1
    58b4:	0e 94 a3 23 	call	0x4746	; 0x4746 <CLCD_WriteString_Pos>
							CLCD_GoTo(1,1);
    58b8:	81 e0       	ldi	r24, 0x01	; 1
    58ba:	61 e0       	ldi	r22, 0x01	; 1
    58bc:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
							CLCD_WriteNum(res);
    58c0:	6b 81       	ldd	r22, Y+3	; 0x03
    58c2:	7c 81       	ldd	r23, Y+4	; 0x04
    58c4:	8d 81       	ldd	r24, Y+5	; 0x05
    58c6:	9e 81       	ldd	r25, Y+6	; 0x06
    58c8:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    58cc:	a2 2e       	mov	r10, r18
    58ce:	b3 2e       	mov	r11, r19
    58d0:	c4 2e       	mov	r12, r20
    58d2:	d5 2e       	mov	r13, r21
    58d4:	e6 2e       	mov	r14, r22
    58d6:	f7 2e       	mov	r15, r23
    58d8:	08 2f       	mov	r16, r24
    58da:	19 2f       	mov	r17, r25
    58dc:	2a 2d       	mov	r18, r10
    58de:	3b 2d       	mov	r19, r11
    58e0:	4c 2d       	mov	r20, r12
    58e2:	5d 2d       	mov	r21, r13
    58e4:	6e 2d       	mov	r22, r14
    58e6:	7f 2d       	mov	r23, r15
    58e8:	80 2f       	mov	r24, r16
    58ea:	91 2f       	mov	r25, r17
    58ec:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
							CLCD_WriteData('/');
    58f0:	8f e2       	ldi	r24, 0x2F	; 47
    58f2:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
							CLCD_WriteNum(num);
    58f6:	6f 81       	ldd	r22, Y+7	; 0x07
    58f8:	78 85       	ldd	r23, Y+8	; 0x08
    58fa:	89 85       	ldd	r24, Y+9	; 0x09
    58fc:	9a 85       	ldd	r25, Y+10	; 0x0a
    58fe:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    5902:	a2 2e       	mov	r10, r18
    5904:	b3 2e       	mov	r11, r19
    5906:	c4 2e       	mov	r12, r20
    5908:	d5 2e       	mov	r13, r21
    590a:	e6 2e       	mov	r14, r22
    590c:	f7 2e       	mov	r15, r23
    590e:	08 2f       	mov	r16, r24
    5910:	19 2f       	mov	r17, r25
    5912:	2a 2d       	mov	r18, r10
    5914:	3b 2d       	mov	r19, r11
    5916:	4c 2d       	mov	r20, r12
    5918:	5d 2d       	mov	r21, r13
    591a:	6e 2d       	mov	r22, r14
    591c:	7f 2d       	mov	r23, r15
    591e:	80 2f       	mov	r24, r16
    5920:	91 2f       	mov	r25, r17
    5922:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
							CLCD_WriteData('=');
    5926:	8d e3       	ldi	r24, 0x3D	; 61
    5928:	0e 94 60 1f 	call	0x3ec0	; 0x3ec0 <CLCD_WriteData>
							res /= num;
    592c:	6b 81       	ldd	r22, Y+3	; 0x03
    592e:	7c 81       	ldd	r23, Y+4	; 0x04
    5930:	8d 81       	ldd	r24, Y+5	; 0x05
    5932:	9e 81       	ldd	r25, Y+6	; 0x06
    5934:	2f 81       	ldd	r18, Y+7	; 0x07
    5936:	38 85       	ldd	r19, Y+8	; 0x08
    5938:	49 85       	ldd	r20, Y+9	; 0x09
    593a:	5a 85       	ldd	r21, Y+10	; 0x0a
    593c:	0e 94 a6 10 	call	0x214c	; 0x214c <__divsf3>
    5940:	dc 01       	movw	r26, r24
    5942:	cb 01       	movw	r24, r22
    5944:	8b 83       	std	Y+3, r24	; 0x03
    5946:	9c 83       	std	Y+4, r25	; 0x04
    5948:	ad 83       	std	Y+5, r26	; 0x05
    594a:	be 83       	std	Y+6, r27	; 0x06
							CLCD_WriteNum(res);
    594c:	6b 81       	ldd	r22, Y+3	; 0x03
    594e:	7c 81       	ldd	r23, Y+4	; 0x04
    5950:	8d 81       	ldd	r24, Y+5	; 0x05
    5952:	9e 81       	ldd	r25, Y+6	; 0x06
    5954:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    5958:	a2 2e       	mov	r10, r18
    595a:	b3 2e       	mov	r11, r19
    595c:	c4 2e       	mov	r12, r20
    595e:	d5 2e       	mov	r13, r21
    5960:	e6 2e       	mov	r14, r22
    5962:	f7 2e       	mov	r15, r23
    5964:	08 2f       	mov	r16, r24
    5966:	19 2f       	mov	r17, r25
    5968:	2a 2d       	mov	r18, r10
    596a:	3b 2d       	mov	r19, r11
    596c:	4c 2d       	mov	r20, r12
    596e:	5d 2d       	mov	r21, r13
    5970:	6e 2d       	mov	r22, r14
    5972:	7f 2d       	mov	r23, r15
    5974:	80 2f       	mov	r24, r16
    5976:	91 2f       	mov	r25, r17
    5978:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
							CLCD_WriteString_Pos((u8*)"           ",2,1);
    597c:	87 e7       	ldi	r24, 0x77	; 119
    597e:	90 e0       	ldi	r25, 0x00	; 0
    5980:	62 e0       	ldi	r22, 0x02	; 2
    5982:	41 e0       	ldi	r20, 0x01	; 1
    5984:	0e 94 a3 23 	call	0x4746	; 0x4746 <CLCD_WriteString_Pos>
							CLCD_GoTo(2,1);
    5988:	82 e0       	ldi	r24, 0x02	; 2
    598a:	61 e0       	ldi	r22, 0x01	; 1
    598c:	0e 94 99 20 	call	0x4132	; 0x4132 <CLCD_GoTo>
							CLCD_WriteNum(res);
    5990:	6b 81       	ldd	r22, Y+3	; 0x03
    5992:	7c 81       	ldd	r23, Y+4	; 0x04
    5994:	8d 81       	ldd	r24, Y+5	; 0x05
    5996:	9e 81       	ldd	r25, Y+6	; 0x06
    5998:	0e 94 75 00 	call	0xea	; 0xea <__fixunssfdi>
    599c:	a2 2e       	mov	r10, r18
    599e:	b3 2e       	mov	r11, r19
    59a0:	c4 2e       	mov	r12, r20
    59a2:	d5 2e       	mov	r13, r21
    59a4:	e6 2e       	mov	r14, r22
    59a6:	f7 2e       	mov	r15, r23
    59a8:	08 2f       	mov	r16, r24
    59aa:	19 2f       	mov	r17, r25
    59ac:	2a 2d       	mov	r18, r10
    59ae:	3b 2d       	mov	r19, r11
    59b0:	4c 2d       	mov	r20, r12
    59b2:	5d 2d       	mov	r21, r13
    59b4:	6e 2d       	mov	r22, r14
    59b6:	7f 2d       	mov	r23, r15
    59b8:	80 2f       	mov	r24, r16
    59ba:	91 2f       	mov	r25, r17
    59bc:	0e 94 48 21 	call	0x4290	; 0x4290 <CLCD_WriteNum>
							num = 0;
    59c0:	80 e0       	ldi	r24, 0x00	; 0
    59c2:	90 e0       	ldi	r25, 0x00	; 0
    59c4:	a0 e0       	ldi	r26, 0x00	; 0
    59c6:	b0 e0       	ldi	r27, 0x00	; 0
    59c8:	8f 83       	std	Y+7, r24	; 0x07
    59ca:	98 87       	std	Y+8, r25	; 0x08
    59cc:	a9 87       	std	Y+9, r26	; 0x09
    59ce:	ba 87       	std	Y+10, r27	; 0x0a
    59d0:	36 cb       	rjmp	.-2452   	; 0x503e <main+0x42>
						}
						break;
					default:
						CLCD_DisplayClear();
    59d2:	0e 94 c6 20 	call	0x418c	; 0x418c <CLCD_DisplayClear>
						res = 0;
    59d6:	80 e0       	ldi	r24, 0x00	; 0
    59d8:	90 e0       	ldi	r25, 0x00	; 0
    59da:	a0 e0       	ldi	r26, 0x00	; 0
    59dc:	b0 e0       	ldi	r27, 0x00	; 0
    59de:	8b 83       	std	Y+3, r24	; 0x03
    59e0:	9c 83       	std	Y+4, r25	; 0x04
    59e2:	ad 83       	std	Y+5, r26	; 0x05
    59e4:	be 83       	std	Y+6, r27	; 0x06
						i = 1;
    59e6:	81 e0       	ldi	r24, 0x01	; 1
    59e8:	8a 83       	std	Y+2, r24	; 0x02
						flag = 1;
    59ea:	81 e0       	ldi	r24, 0x01	; 1
    59ec:	89 83       	std	Y+1, r24	; 0x01
    59ee:	27 cb       	rjmp	.-2482   	; 0x503e <main+0x42>

000059f0 <__mulsi3>:
    59f0:	62 9f       	mul	r22, r18
    59f2:	d0 01       	movw	r26, r0
    59f4:	73 9f       	mul	r23, r19
    59f6:	f0 01       	movw	r30, r0
    59f8:	82 9f       	mul	r24, r18
    59fa:	e0 0d       	add	r30, r0
    59fc:	f1 1d       	adc	r31, r1
    59fe:	64 9f       	mul	r22, r20
    5a00:	e0 0d       	add	r30, r0
    5a02:	f1 1d       	adc	r31, r1
    5a04:	92 9f       	mul	r25, r18
    5a06:	f0 0d       	add	r31, r0
    5a08:	83 9f       	mul	r24, r19
    5a0a:	f0 0d       	add	r31, r0
    5a0c:	74 9f       	mul	r23, r20
    5a0e:	f0 0d       	add	r31, r0
    5a10:	65 9f       	mul	r22, r21
    5a12:	f0 0d       	add	r31, r0
    5a14:	99 27       	eor	r25, r25
    5a16:	72 9f       	mul	r23, r18
    5a18:	b0 0d       	add	r27, r0
    5a1a:	e1 1d       	adc	r30, r1
    5a1c:	f9 1f       	adc	r31, r25
    5a1e:	63 9f       	mul	r22, r19
    5a20:	b0 0d       	add	r27, r0
    5a22:	e1 1d       	adc	r30, r1
    5a24:	f9 1f       	adc	r31, r25
    5a26:	bd 01       	movw	r22, r26
    5a28:	cf 01       	movw	r24, r30
    5a2a:	11 24       	eor	r1, r1
    5a2c:	08 95       	ret

00005a2e <__udivmodqi4>:
    5a2e:	99 1b       	sub	r25, r25
    5a30:	79 e0       	ldi	r23, 0x09	; 9
    5a32:	04 c0       	rjmp	.+8      	; 0x5a3c <__udivmodqi4_ep>

00005a34 <__udivmodqi4_loop>:
    5a34:	99 1f       	adc	r25, r25
    5a36:	96 17       	cp	r25, r22
    5a38:	08 f0       	brcs	.+2      	; 0x5a3c <__udivmodqi4_ep>
    5a3a:	96 1b       	sub	r25, r22

00005a3c <__udivmodqi4_ep>:
    5a3c:	88 1f       	adc	r24, r24
    5a3e:	7a 95       	dec	r23
    5a40:	c9 f7       	brne	.-14     	; 0x5a34 <__udivmodqi4_loop>
    5a42:	80 95       	com	r24
    5a44:	08 95       	ret

00005a46 <__udivmodsi4>:
    5a46:	a1 e2       	ldi	r26, 0x21	; 33
    5a48:	1a 2e       	mov	r1, r26
    5a4a:	aa 1b       	sub	r26, r26
    5a4c:	bb 1b       	sub	r27, r27
    5a4e:	fd 01       	movw	r30, r26
    5a50:	0d c0       	rjmp	.+26     	; 0x5a6c <__udivmodsi4_ep>

00005a52 <__udivmodsi4_loop>:
    5a52:	aa 1f       	adc	r26, r26
    5a54:	bb 1f       	adc	r27, r27
    5a56:	ee 1f       	adc	r30, r30
    5a58:	ff 1f       	adc	r31, r31
    5a5a:	a2 17       	cp	r26, r18
    5a5c:	b3 07       	cpc	r27, r19
    5a5e:	e4 07       	cpc	r30, r20
    5a60:	f5 07       	cpc	r31, r21
    5a62:	20 f0       	brcs	.+8      	; 0x5a6c <__udivmodsi4_ep>
    5a64:	a2 1b       	sub	r26, r18
    5a66:	b3 0b       	sbc	r27, r19
    5a68:	e4 0b       	sbc	r30, r20
    5a6a:	f5 0b       	sbc	r31, r21

00005a6c <__udivmodsi4_ep>:
    5a6c:	66 1f       	adc	r22, r22
    5a6e:	77 1f       	adc	r23, r23
    5a70:	88 1f       	adc	r24, r24
    5a72:	99 1f       	adc	r25, r25
    5a74:	1a 94       	dec	r1
    5a76:	69 f7       	brne	.-38     	; 0x5a52 <__udivmodsi4_loop>
    5a78:	60 95       	com	r22
    5a7a:	70 95       	com	r23
    5a7c:	80 95       	com	r24
    5a7e:	90 95       	com	r25
    5a80:	9b 01       	movw	r18, r22
    5a82:	ac 01       	movw	r20, r24
    5a84:	bd 01       	movw	r22, r26
    5a86:	cf 01       	movw	r24, r30
    5a88:	08 95       	ret

00005a8a <__divmodsi4>:
    5a8a:	97 fb       	bst	r25, 7
    5a8c:	09 2e       	mov	r0, r25
    5a8e:	05 26       	eor	r0, r21
    5a90:	0e d0       	rcall	.+28     	; 0x5aae <__divmodsi4_neg1>
    5a92:	57 fd       	sbrc	r21, 7
    5a94:	04 d0       	rcall	.+8      	; 0x5a9e <__divmodsi4_neg2>
    5a96:	d7 df       	rcall	.-82     	; 0x5a46 <__udivmodsi4>
    5a98:	0a d0       	rcall	.+20     	; 0x5aae <__divmodsi4_neg1>
    5a9a:	00 1c       	adc	r0, r0
    5a9c:	38 f4       	brcc	.+14     	; 0x5aac <__divmodsi4_exit>

00005a9e <__divmodsi4_neg2>:
    5a9e:	50 95       	com	r21
    5aa0:	40 95       	com	r20
    5aa2:	30 95       	com	r19
    5aa4:	21 95       	neg	r18
    5aa6:	3f 4f       	sbci	r19, 0xFF	; 255
    5aa8:	4f 4f       	sbci	r20, 0xFF	; 255
    5aaa:	5f 4f       	sbci	r21, 0xFF	; 255

00005aac <__divmodsi4_exit>:
    5aac:	08 95       	ret

00005aae <__divmodsi4_neg1>:
    5aae:	f6 f7       	brtc	.-4      	; 0x5aac <__divmodsi4_exit>
    5ab0:	90 95       	com	r25
    5ab2:	80 95       	com	r24
    5ab4:	70 95       	com	r23
    5ab6:	61 95       	neg	r22
    5ab8:	7f 4f       	sbci	r23, 0xFF	; 255
    5aba:	8f 4f       	sbci	r24, 0xFF	; 255
    5abc:	9f 4f       	sbci	r25, 0xFF	; 255
    5abe:	08 95       	ret

00005ac0 <__prologue_saves__>:
    5ac0:	2f 92       	push	r2
    5ac2:	3f 92       	push	r3
    5ac4:	4f 92       	push	r4
    5ac6:	5f 92       	push	r5
    5ac8:	6f 92       	push	r6
    5aca:	7f 92       	push	r7
    5acc:	8f 92       	push	r8
    5ace:	9f 92       	push	r9
    5ad0:	af 92       	push	r10
    5ad2:	bf 92       	push	r11
    5ad4:	cf 92       	push	r12
    5ad6:	df 92       	push	r13
    5ad8:	ef 92       	push	r14
    5ada:	ff 92       	push	r15
    5adc:	0f 93       	push	r16
    5ade:	1f 93       	push	r17
    5ae0:	cf 93       	push	r28
    5ae2:	df 93       	push	r29
    5ae4:	cd b7       	in	r28, 0x3d	; 61
    5ae6:	de b7       	in	r29, 0x3e	; 62
    5ae8:	ca 1b       	sub	r28, r26
    5aea:	db 0b       	sbc	r29, r27
    5aec:	0f b6       	in	r0, 0x3f	; 63
    5aee:	f8 94       	cli
    5af0:	de bf       	out	0x3e, r29	; 62
    5af2:	0f be       	out	0x3f, r0	; 63
    5af4:	cd bf       	out	0x3d, r28	; 61
    5af6:	09 94       	ijmp

00005af8 <__epilogue_restores__>:
    5af8:	2a 88       	ldd	r2, Y+18	; 0x12
    5afa:	39 88       	ldd	r3, Y+17	; 0x11
    5afc:	48 88       	ldd	r4, Y+16	; 0x10
    5afe:	5f 84       	ldd	r5, Y+15	; 0x0f
    5b00:	6e 84       	ldd	r6, Y+14	; 0x0e
    5b02:	7d 84       	ldd	r7, Y+13	; 0x0d
    5b04:	8c 84       	ldd	r8, Y+12	; 0x0c
    5b06:	9b 84       	ldd	r9, Y+11	; 0x0b
    5b08:	aa 84       	ldd	r10, Y+10	; 0x0a
    5b0a:	b9 84       	ldd	r11, Y+9	; 0x09
    5b0c:	c8 84       	ldd	r12, Y+8	; 0x08
    5b0e:	df 80       	ldd	r13, Y+7	; 0x07
    5b10:	ee 80       	ldd	r14, Y+6	; 0x06
    5b12:	fd 80       	ldd	r15, Y+5	; 0x05
    5b14:	0c 81       	ldd	r16, Y+4	; 0x04
    5b16:	1b 81       	ldd	r17, Y+3	; 0x03
    5b18:	aa 81       	ldd	r26, Y+2	; 0x02
    5b1a:	b9 81       	ldd	r27, Y+1	; 0x01
    5b1c:	ce 0f       	add	r28, r30
    5b1e:	d1 1d       	adc	r29, r1
    5b20:	0f b6       	in	r0, 0x3f	; 63
    5b22:	f8 94       	cli
    5b24:	de bf       	out	0x3e, r29	; 62
    5b26:	0f be       	out	0x3f, r0	; 63
    5b28:	cd bf       	out	0x3d, r28	; 61
    5b2a:	ed 01       	movw	r28, r26
    5b2c:	08 95       	ret

00005b2e <_exit>:
    5b2e:	f8 94       	cli

00005b30 <__stop_program>:
    5b30:	ff cf       	rjmp	.-2      	; 0x5b30 <__stop_program>
