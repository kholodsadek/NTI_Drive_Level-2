
NTI_Project_System_Control_LED_and_DC_Motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000772a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000025c  00800060  0000772a  0000779e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000048b4  00000000  00000000  000079fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00001a0c  00000000  00000000  0000c2b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000180  00000000  00000000  0000dcbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001d0  00000000  00000000  0000de3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b67  00000000  00000000  0000e00c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001266  00000000  00000000  00010b73  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001231  00000000  00000000  00011dd9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  0001300c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000031d  00000000  00000000  000131ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000020f4  00000000  00000000  000134c9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  000155bd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	12 e0       	ldi	r17, 0x02	; 2
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e2       	ldi	r30, 0x2A	; 42
      68:	f7 e7       	ldi	r31, 0x77	; 119
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ac 3b       	cpi	r26, 0xBC	; 188
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 9d 29 	call	0x533a	; 0x533a <main>
      7a:	0c 94 93 3b 	jmp	0x7726	; 0x7726 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 26 10 	call	0x204c	; 0x204c <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 9e 0e 	call	0x1d3c	; 0x1d3c <__subsf3>
      ae:	0e 94 86 10 	call	0x210c	; 0x210c <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 86 10 	call	0x210c	; 0x210c <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <__udivdi3>:
      da:	ae e5       	ldi	r26, 0x5E	; 94
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 5c 3b 	jmp	0x76b8	; 0x76b8 <__prologue_saves__>
      e6:	a8 e0       	ldi	r26, 0x08	; 8
      e8:	4e 01       	movw	r8, r28
      ea:	08 94       	sec
      ec:	81 1c       	adc	r8, r1
      ee:	91 1c       	adc	r9, r1
      f0:	f4 01       	movw	r30, r8
      f2:	6a 2e       	mov	r6, r26
      f4:	11 92       	st	Z+, r1
      f6:	6a 94       	dec	r6
      f8:	e9 f7       	brne	.-6      	; 0xf4 <__udivdi3+0x1a>
      fa:	29 83       	std	Y+1, r18	; 0x01
      fc:	3a 83       	std	Y+2, r19	; 0x02
      fe:	4b 83       	std	Y+3, r20	; 0x03
     100:	5c 83       	std	Y+4, r21	; 0x04
     102:	6d 83       	std	Y+5, r22	; 0x05
     104:	7e 83       	std	Y+6, r23	; 0x06
     106:	8f 83       	std	Y+7, r24	; 0x07
     108:	98 87       	std	Y+8, r25	; 0x08
     10a:	ce 01       	movw	r24, r28
     10c:	09 96       	adiw	r24, 0x09	; 9
     10e:	fc 01       	movw	r30, r24
     110:	11 92       	st	Z+, r1
     112:	aa 95       	dec	r26
     114:	e9 f7       	brne	.-6      	; 0x110 <__udivdi3+0x36>
     116:	a9 86       	std	Y+9, r10	; 0x09
     118:	ba 86       	std	Y+10, r11	; 0x0a
     11a:	cb 86       	std	Y+11, r12	; 0x0b
     11c:	dc 86       	std	Y+12, r13	; 0x0c
     11e:	ed 86       	std	Y+13, r14	; 0x0d
     120:	fe 86       	std	Y+14, r15	; 0x0e
     122:	0f 87       	std	Y+15, r16	; 0x0f
     124:	18 8b       	std	Y+16, r17	; 0x10
     126:	29 84       	ldd	r2, Y+9	; 0x09
     128:	3a 84       	ldd	r3, Y+10	; 0x0a
     12a:	4b 84       	ldd	r4, Y+11	; 0x0b
     12c:	5c 84       	ldd	r5, Y+12	; 0x0c
     12e:	ed 84       	ldd	r14, Y+13	; 0x0d
     130:	fe 84       	ldd	r15, Y+14	; 0x0e
     132:	0f 85       	ldd	r16, Y+15	; 0x0f
     134:	18 89       	ldd	r17, Y+16	; 0x10
     136:	69 80       	ldd	r6, Y+1	; 0x01
     138:	7a 80       	ldd	r7, Y+2	; 0x02
     13a:	8b 80       	ldd	r8, Y+3	; 0x03
     13c:	9c 80       	ldd	r9, Y+4	; 0x04
     13e:	6d a6       	std	Y+45, r6	; 0x2d
     140:	7e a6       	std	Y+46, r7	; 0x2e
     142:	8f a6       	std	Y+47, r8	; 0x2f
     144:	98 aa       	std	Y+48, r9	; 0x30
     146:	6d 80       	ldd	r6, Y+5	; 0x05
     148:	7e 80       	ldd	r7, Y+6	; 0x06
     14a:	8f 80       	ldd	r8, Y+7	; 0x07
     14c:	98 84       	ldd	r9, Y+8	; 0x08
     14e:	e1 14       	cp	r14, r1
     150:	f1 04       	cpc	r15, r1
     152:	01 05       	cpc	r16, r1
     154:	11 05       	cpc	r17, r1
     156:	09 f0       	breq	.+2      	; 0x15a <__udivdi3+0x80>
     158:	b3 c3       	rjmp	.+1894   	; 0x8c0 <__stack+0x61>
     15a:	62 14       	cp	r6, r2
     15c:	73 04       	cpc	r7, r3
     15e:	84 04       	cpc	r8, r4
     160:	95 04       	cpc	r9, r5
     162:	08 f0       	brcs	.+2      	; 0x166 <__udivdi3+0x8c>
     164:	3d c1       	rjmp	.+634    	; 0x3e0 <__udivdi3+0x306>
     166:	00 e0       	ldi	r16, 0x00	; 0
     168:	20 16       	cp	r2, r16
     16a:	00 e0       	ldi	r16, 0x00	; 0
     16c:	30 06       	cpc	r3, r16
     16e:	01 e0       	ldi	r16, 0x01	; 1
     170:	40 06       	cpc	r4, r16
     172:	00 e0       	ldi	r16, 0x00	; 0
     174:	50 06       	cpc	r5, r16
     176:	88 f4       	brcc	.+34     	; 0x19a <__udivdi3+0xc0>
     178:	1f ef       	ldi	r17, 0xFF	; 255
     17a:	21 16       	cp	r2, r17
     17c:	31 04       	cpc	r3, r1
     17e:	41 04       	cpc	r4, r1
     180:	51 04       	cpc	r5, r1
     182:	39 f0       	breq	.+14     	; 0x192 <__udivdi3+0xb8>
     184:	30 f0       	brcs	.+12     	; 0x192 <__udivdi3+0xb8>
     186:	48 e0       	ldi	r20, 0x08	; 8
     188:	e4 2e       	mov	r14, r20
     18a:	f1 2c       	mov	r15, r1
     18c:	01 2d       	mov	r16, r1
     18e:	11 2d       	mov	r17, r1
     190:	18 c0       	rjmp	.+48     	; 0x1c2 <__udivdi3+0xe8>
     192:	ee 24       	eor	r14, r14
     194:	ff 24       	eor	r15, r15
     196:	87 01       	movw	r16, r14
     198:	14 c0       	rjmp	.+40     	; 0x1c2 <__udivdi3+0xe8>
     19a:	20 e0       	ldi	r18, 0x00	; 0
     19c:	22 16       	cp	r2, r18
     19e:	20 e0       	ldi	r18, 0x00	; 0
     1a0:	32 06       	cpc	r3, r18
     1a2:	20 e0       	ldi	r18, 0x00	; 0
     1a4:	42 06       	cpc	r4, r18
     1a6:	21 e0       	ldi	r18, 0x01	; 1
     1a8:	52 06       	cpc	r5, r18
     1aa:	30 f0       	brcs	.+12     	; 0x1b8 <__udivdi3+0xde>
     1ac:	38 e1       	ldi	r19, 0x18	; 24
     1ae:	e3 2e       	mov	r14, r19
     1b0:	f1 2c       	mov	r15, r1
     1b2:	01 2d       	mov	r16, r1
     1b4:	11 2d       	mov	r17, r1
     1b6:	05 c0       	rjmp	.+10     	; 0x1c2 <__udivdi3+0xe8>
     1b8:	20 e1       	ldi	r18, 0x10	; 16
     1ba:	e2 2e       	mov	r14, r18
     1bc:	f1 2c       	mov	r15, r1
     1be:	01 2d       	mov	r16, r1
     1c0:	11 2d       	mov	r17, r1
     1c2:	d2 01       	movw	r26, r4
     1c4:	c1 01       	movw	r24, r2
     1c6:	0e 2c       	mov	r0, r14
     1c8:	04 c0       	rjmp	.+8      	; 0x1d2 <__udivdi3+0xf8>
     1ca:	b6 95       	lsr	r27
     1cc:	a7 95       	ror	r26
     1ce:	97 95       	ror	r25
     1d0:	87 95       	ror	r24
     1d2:	0a 94       	dec	r0
     1d4:	d2 f7       	brpl	.-12     	; 0x1ca <__udivdi3+0xf0>
     1d6:	8e 58       	subi	r24, 0x8E	; 142
     1d8:	9e 4f       	sbci	r25, 0xFE	; 254
     1da:	dc 01       	movw	r26, r24
     1dc:	2c 91       	ld	r18, X
     1de:	80 e2       	ldi	r24, 0x20	; 32
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	a0 e0       	ldi	r26, 0x00	; 0
     1e4:	b0 e0       	ldi	r27, 0x00	; 0
     1e6:	8e 19       	sub	r24, r14
     1e8:	9f 09       	sbc	r25, r15
     1ea:	a0 0b       	sbc	r26, r16
     1ec:	b1 0b       	sbc	r27, r17
     1ee:	7c 01       	movw	r14, r24
     1f0:	8d 01       	movw	r16, r26
     1f2:	e2 1a       	sub	r14, r18
     1f4:	f1 08       	sbc	r15, r1
     1f6:	01 09       	sbc	r16, r1
     1f8:	11 09       	sbc	r17, r1
     1fa:	e1 14       	cp	r14, r1
     1fc:	f1 04       	cpc	r15, r1
     1fe:	01 05       	cpc	r16, r1
     200:	11 05       	cpc	r17, r1
     202:	a1 f1       	breq	.+104    	; 0x26c <__udivdi3+0x192>
     204:	0e 2c       	mov	r0, r14
     206:	04 c0       	rjmp	.+8      	; 0x210 <__udivdi3+0x136>
     208:	22 0c       	add	r2, r2
     20a:	33 1c       	adc	r3, r3
     20c:	44 1c       	adc	r4, r4
     20e:	55 1c       	adc	r5, r5
     210:	0a 94       	dec	r0
     212:	d2 f7       	brpl	.-12     	; 0x208 <__udivdi3+0x12e>
     214:	a4 01       	movw	r20, r8
     216:	93 01       	movw	r18, r6
     218:	0e 2c       	mov	r0, r14
     21a:	04 c0       	rjmp	.+8      	; 0x224 <__udivdi3+0x14a>
     21c:	22 0f       	add	r18, r18
     21e:	33 1f       	adc	r19, r19
     220:	44 1f       	adc	r20, r20
     222:	55 1f       	adc	r21, r21
     224:	0a 94       	dec	r0
     226:	d2 f7       	brpl	.-12     	; 0x21c <__udivdi3+0x142>
     228:	80 e2       	ldi	r24, 0x20	; 32
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	8e 19       	sub	r24, r14
     22e:	9f 09       	sbc	r25, r15
     230:	6d a4       	ldd	r6, Y+45	; 0x2d
     232:	7e a4       	ldd	r7, Y+46	; 0x2e
     234:	8f a4       	ldd	r8, Y+47	; 0x2f
     236:	98 a8       	ldd	r9, Y+48	; 0x30
     238:	04 c0       	rjmp	.+8      	; 0x242 <__udivdi3+0x168>
     23a:	96 94       	lsr	r9
     23c:	87 94       	ror	r8
     23e:	77 94       	ror	r7
     240:	67 94       	ror	r6
     242:	8a 95       	dec	r24
     244:	d2 f7       	brpl	.-12     	; 0x23a <__udivdi3+0x160>
     246:	62 2a       	or	r6, r18
     248:	73 2a       	or	r7, r19
     24a:	84 2a       	or	r8, r20
     24c:	95 2a       	or	r9, r21
     24e:	ad a4       	ldd	r10, Y+45	; 0x2d
     250:	be a4       	ldd	r11, Y+46	; 0x2e
     252:	cf a4       	ldd	r12, Y+47	; 0x2f
     254:	d8 a8       	ldd	r13, Y+48	; 0x30
     256:	04 c0       	rjmp	.+8      	; 0x260 <__udivdi3+0x186>
     258:	aa 0c       	add	r10, r10
     25a:	bb 1c       	adc	r11, r11
     25c:	cc 1c       	adc	r12, r12
     25e:	dd 1c       	adc	r13, r13
     260:	ea 94       	dec	r14
     262:	d2 f7       	brpl	.-12     	; 0x258 <__udivdi3+0x17e>
     264:	ad a6       	std	Y+45, r10	; 0x2d
     266:	be a6       	std	Y+46, r11	; 0x2e
     268:	cf a6       	std	Y+47, r12	; 0x2f
     26a:	d8 aa       	std	Y+48, r13	; 0x30
     26c:	62 01       	movw	r12, r4
     26e:	ee 24       	eor	r14, r14
     270:	ff 24       	eor	r15, r15
     272:	cd aa       	std	Y+53, r12	; 0x35
     274:	de aa       	std	Y+54, r13	; 0x36
     276:	ef aa       	std	Y+55, r14	; 0x37
     278:	f8 ae       	std	Y+56, r15	; 0x38
     27a:	92 01       	movw	r18, r4
     27c:	81 01       	movw	r16, r2
     27e:	20 70       	andi	r18, 0x00	; 0
     280:	30 70       	andi	r19, 0x00	; 0
     282:	09 af       	std	Y+57, r16	; 0x39
     284:	1a af       	std	Y+58, r17	; 0x3a
     286:	2b af       	std	Y+59, r18	; 0x3b
     288:	3c af       	std	Y+60, r19	; 0x3c
     28a:	c4 01       	movw	r24, r8
     28c:	b3 01       	movw	r22, r6
     28e:	a7 01       	movw	r20, r14
     290:	96 01       	movw	r18, r12
     292:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     296:	7b 01       	movw	r14, r22
     298:	8c 01       	movw	r16, r24
     29a:	c4 01       	movw	r24, r8
     29c:	b3 01       	movw	r22, r6
     29e:	2d a9       	ldd	r18, Y+53	; 0x35
     2a0:	3e a9       	ldd	r19, Y+54	; 0x36
     2a2:	4f a9       	ldd	r20, Y+55	; 0x37
     2a4:	58 ad       	ldd	r21, Y+56	; 0x38
     2a6:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     2aa:	c9 01       	movw	r24, r18
     2ac:	da 01       	movw	r26, r20
     2ae:	3c 01       	movw	r6, r24
     2b0:	4d 01       	movw	r8, r26
     2b2:	c4 01       	movw	r24, r8
     2b4:	b3 01       	movw	r22, r6
     2b6:	29 ad       	ldd	r18, Y+57	; 0x39
     2b8:	3a ad       	ldd	r19, Y+58	; 0x3a
     2ba:	4b ad       	ldd	r20, Y+59	; 0x3b
     2bc:	5c ad       	ldd	r21, Y+60	; 0x3c
     2be:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
     2c2:	9b 01       	movw	r18, r22
     2c4:	ac 01       	movw	r20, r24
     2c6:	87 01       	movw	r16, r14
     2c8:	ff 24       	eor	r15, r15
     2ca:	ee 24       	eor	r14, r14
     2cc:	ad a4       	ldd	r10, Y+45	; 0x2d
     2ce:	be a4       	ldd	r11, Y+46	; 0x2e
     2d0:	cf a4       	ldd	r12, Y+47	; 0x2f
     2d2:	d8 a8       	ldd	r13, Y+48	; 0x30
     2d4:	c6 01       	movw	r24, r12
     2d6:	aa 27       	eor	r26, r26
     2d8:	bb 27       	eor	r27, r27
     2da:	57 01       	movw	r10, r14
     2dc:	68 01       	movw	r12, r16
     2de:	a8 2a       	or	r10, r24
     2e0:	b9 2a       	or	r11, r25
     2e2:	ca 2a       	or	r12, r26
     2e4:	db 2a       	or	r13, r27
     2e6:	a2 16       	cp	r10, r18
     2e8:	b3 06       	cpc	r11, r19
     2ea:	c4 06       	cpc	r12, r20
     2ec:	d5 06       	cpc	r13, r21
     2ee:	e0 f4       	brcc	.+56     	; 0x328 <__udivdi3+0x24e>
     2f0:	08 94       	sec
     2f2:	61 08       	sbc	r6, r1
     2f4:	71 08       	sbc	r7, r1
     2f6:	81 08       	sbc	r8, r1
     2f8:	91 08       	sbc	r9, r1
     2fa:	a2 0c       	add	r10, r2
     2fc:	b3 1c       	adc	r11, r3
     2fe:	c4 1c       	adc	r12, r4
     300:	d5 1c       	adc	r13, r5
     302:	a2 14       	cp	r10, r2
     304:	b3 04       	cpc	r11, r3
     306:	c4 04       	cpc	r12, r4
     308:	d5 04       	cpc	r13, r5
     30a:	70 f0       	brcs	.+28     	; 0x328 <__udivdi3+0x24e>
     30c:	a2 16       	cp	r10, r18
     30e:	b3 06       	cpc	r11, r19
     310:	c4 06       	cpc	r12, r20
     312:	d5 06       	cpc	r13, r21
     314:	48 f4       	brcc	.+18     	; 0x328 <__udivdi3+0x24e>
     316:	08 94       	sec
     318:	61 08       	sbc	r6, r1
     31a:	71 08       	sbc	r7, r1
     31c:	81 08       	sbc	r8, r1
     31e:	91 08       	sbc	r9, r1
     320:	a2 0c       	add	r10, r2
     322:	b3 1c       	adc	r11, r3
     324:	c4 1c       	adc	r12, r4
     326:	d5 1c       	adc	r13, r5
     328:	a2 1a       	sub	r10, r18
     32a:	b3 0a       	sbc	r11, r19
     32c:	c4 0a       	sbc	r12, r20
     32e:	d5 0a       	sbc	r13, r21
     330:	c6 01       	movw	r24, r12
     332:	b5 01       	movw	r22, r10
     334:	2d a9       	ldd	r18, Y+53	; 0x35
     336:	3e a9       	ldd	r19, Y+54	; 0x36
     338:	4f a9       	ldd	r20, Y+55	; 0x37
     33a:	58 ad       	ldd	r21, Y+56	; 0x38
     33c:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     340:	7b 01       	movw	r14, r22
     342:	8c 01       	movw	r16, r24
     344:	c6 01       	movw	r24, r12
     346:	b5 01       	movw	r22, r10
     348:	2d a9       	ldd	r18, Y+53	; 0x35
     34a:	3e a9       	ldd	r19, Y+54	; 0x36
     34c:	4f a9       	ldd	r20, Y+55	; 0x37
     34e:	58 ad       	ldd	r21, Y+56	; 0x38
     350:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     354:	c9 01       	movw	r24, r18
     356:	da 01       	movw	r26, r20
     358:	5c 01       	movw	r10, r24
     35a:	6d 01       	movw	r12, r26
     35c:	c6 01       	movw	r24, r12
     35e:	b5 01       	movw	r22, r10
     360:	29 ad       	ldd	r18, Y+57	; 0x39
     362:	3a ad       	ldd	r19, Y+58	; 0x3a
     364:	4b ad       	ldd	r20, Y+59	; 0x3b
     366:	5c ad       	ldd	r21, Y+60	; 0x3c
     368:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
     36c:	9b 01       	movw	r18, r22
     36e:	ac 01       	movw	r20, r24
     370:	87 01       	movw	r16, r14
     372:	ff 24       	eor	r15, r15
     374:	ee 24       	eor	r14, r14
     376:	8d a5       	ldd	r24, Y+45	; 0x2d
     378:	9e a5       	ldd	r25, Y+46	; 0x2e
     37a:	af a5       	ldd	r26, Y+47	; 0x2f
     37c:	b8 a9       	ldd	r27, Y+48	; 0x30
     37e:	a0 70       	andi	r26, 0x00	; 0
     380:	b0 70       	andi	r27, 0x00	; 0
     382:	e8 2a       	or	r14, r24
     384:	f9 2a       	or	r15, r25
     386:	0a 2b       	or	r16, r26
     388:	1b 2b       	or	r17, r27
     38a:	e2 16       	cp	r14, r18
     38c:	f3 06       	cpc	r15, r19
     38e:	04 07       	cpc	r16, r20
     390:	15 07       	cpc	r17, r21
     392:	c0 f4       	brcc	.+48     	; 0x3c4 <__udivdi3+0x2ea>
     394:	08 94       	sec
     396:	a1 08       	sbc	r10, r1
     398:	b1 08       	sbc	r11, r1
     39a:	c1 08       	sbc	r12, r1
     39c:	d1 08       	sbc	r13, r1
     39e:	e2 0c       	add	r14, r2
     3a0:	f3 1c       	adc	r15, r3
     3a2:	04 1d       	adc	r16, r4
     3a4:	15 1d       	adc	r17, r5
     3a6:	e2 14       	cp	r14, r2
     3a8:	f3 04       	cpc	r15, r3
     3aa:	04 05       	cpc	r16, r4
     3ac:	15 05       	cpc	r17, r5
     3ae:	50 f0       	brcs	.+20     	; 0x3c4 <__udivdi3+0x2ea>
     3b0:	e2 16       	cp	r14, r18
     3b2:	f3 06       	cpc	r15, r19
     3b4:	04 07       	cpc	r16, r20
     3b6:	15 07       	cpc	r17, r21
     3b8:	28 f4       	brcc	.+10     	; 0x3c4 <__udivdi3+0x2ea>
     3ba:	08 94       	sec
     3bc:	a1 08       	sbc	r10, r1
     3be:	b1 08       	sbc	r11, r1
     3c0:	c1 08       	sbc	r12, r1
     3c2:	d1 08       	sbc	r13, r1
     3c4:	d3 01       	movw	r26, r6
     3c6:	99 27       	eor	r25, r25
     3c8:	88 27       	eor	r24, r24
     3ca:	86 01       	movw	r16, r12
     3cc:	75 01       	movw	r14, r10
     3ce:	e8 2a       	or	r14, r24
     3d0:	f9 2a       	or	r15, r25
     3d2:	0a 2b       	or	r16, r26
     3d4:	1b 2b       	or	r17, r27
     3d6:	e9 aa       	std	Y+49, r14	; 0x31
     3d8:	fa aa       	std	Y+50, r15	; 0x32
     3da:	0b ab       	std	Y+51, r16	; 0x33
     3dc:	1c ab       	std	Y+52, r17	; 0x34
     3de:	cf c4       	rjmp	.+2462   	; 0xd7e <__stack+0x51f>
     3e0:	21 14       	cp	r2, r1
     3e2:	31 04       	cpc	r3, r1
     3e4:	41 04       	cpc	r4, r1
     3e6:	51 04       	cpc	r5, r1
     3e8:	71 f4       	brne	.+28     	; 0x406 <__udivdi3+0x32c>
     3ea:	61 e0       	ldi	r22, 0x01	; 1
     3ec:	70 e0       	ldi	r23, 0x00	; 0
     3ee:	80 e0       	ldi	r24, 0x00	; 0
     3f0:	90 e0       	ldi	r25, 0x00	; 0
     3f2:	20 e0       	ldi	r18, 0x00	; 0
     3f4:	30 e0       	ldi	r19, 0x00	; 0
     3f6:	40 e0       	ldi	r20, 0x00	; 0
     3f8:	50 e0       	ldi	r21, 0x00	; 0
     3fa:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     3fe:	c9 01       	movw	r24, r18
     400:	da 01       	movw	r26, r20
     402:	1c 01       	movw	r2, r24
     404:	2d 01       	movw	r4, r26
     406:	00 e0       	ldi	r16, 0x00	; 0
     408:	20 16       	cp	r2, r16
     40a:	00 e0       	ldi	r16, 0x00	; 0
     40c:	30 06       	cpc	r3, r16
     40e:	01 e0       	ldi	r16, 0x01	; 1
     410:	40 06       	cpc	r4, r16
     412:	00 e0       	ldi	r16, 0x00	; 0
     414:	50 06       	cpc	r5, r16
     416:	88 f4       	brcc	.+34     	; 0x43a <__udivdi3+0x360>
     418:	1f ef       	ldi	r17, 0xFF	; 255
     41a:	21 16       	cp	r2, r17
     41c:	31 04       	cpc	r3, r1
     41e:	41 04       	cpc	r4, r1
     420:	51 04       	cpc	r5, r1
     422:	31 f0       	breq	.+12     	; 0x430 <__udivdi3+0x356>
     424:	28 f0       	brcs	.+10     	; 0x430 <__udivdi3+0x356>
     426:	48 e0       	ldi	r20, 0x08	; 8
     428:	50 e0       	ldi	r21, 0x00	; 0
     42a:	60 e0       	ldi	r22, 0x00	; 0
     42c:	70 e0       	ldi	r23, 0x00	; 0
     42e:	17 c0       	rjmp	.+46     	; 0x45e <__udivdi3+0x384>
     430:	40 e0       	ldi	r20, 0x00	; 0
     432:	50 e0       	ldi	r21, 0x00	; 0
     434:	60 e0       	ldi	r22, 0x00	; 0
     436:	70 e0       	ldi	r23, 0x00	; 0
     438:	12 c0       	rjmp	.+36     	; 0x45e <__udivdi3+0x384>
     43a:	20 e0       	ldi	r18, 0x00	; 0
     43c:	22 16       	cp	r2, r18
     43e:	20 e0       	ldi	r18, 0x00	; 0
     440:	32 06       	cpc	r3, r18
     442:	20 e0       	ldi	r18, 0x00	; 0
     444:	42 06       	cpc	r4, r18
     446:	21 e0       	ldi	r18, 0x01	; 1
     448:	52 06       	cpc	r5, r18
     44a:	28 f0       	brcs	.+10     	; 0x456 <__udivdi3+0x37c>
     44c:	48 e1       	ldi	r20, 0x18	; 24
     44e:	50 e0       	ldi	r21, 0x00	; 0
     450:	60 e0       	ldi	r22, 0x00	; 0
     452:	70 e0       	ldi	r23, 0x00	; 0
     454:	04 c0       	rjmp	.+8      	; 0x45e <__udivdi3+0x384>
     456:	40 e1       	ldi	r20, 0x10	; 16
     458:	50 e0       	ldi	r21, 0x00	; 0
     45a:	60 e0       	ldi	r22, 0x00	; 0
     45c:	70 e0       	ldi	r23, 0x00	; 0
     45e:	d2 01       	movw	r26, r4
     460:	c1 01       	movw	r24, r2
     462:	04 2e       	mov	r0, r20
     464:	04 c0       	rjmp	.+8      	; 0x46e <__udivdi3+0x394>
     466:	b6 95       	lsr	r27
     468:	a7 95       	ror	r26
     46a:	97 95       	ror	r25
     46c:	87 95       	ror	r24
     46e:	0a 94       	dec	r0
     470:	d2 f7       	brpl	.-12     	; 0x466 <__udivdi3+0x38c>
     472:	8e 58       	subi	r24, 0x8E	; 142
     474:	9e 4f       	sbci	r25, 0xFE	; 254
     476:	dc 01       	movw	r26, r24
     478:	2c 91       	ld	r18, X
     47a:	e0 e2       	ldi	r30, 0x20	; 32
     47c:	ee 2e       	mov	r14, r30
     47e:	f1 2c       	mov	r15, r1
     480:	01 2d       	mov	r16, r1
     482:	11 2d       	mov	r17, r1
     484:	d8 01       	movw	r26, r16
     486:	c7 01       	movw	r24, r14
     488:	84 1b       	sub	r24, r20
     48a:	95 0b       	sbc	r25, r21
     48c:	a6 0b       	sbc	r26, r22
     48e:	b7 0b       	sbc	r27, r23
     490:	82 1b       	sub	r24, r18
     492:	91 09       	sbc	r25, r1
     494:	a1 09       	sbc	r26, r1
     496:	b1 09       	sbc	r27, r1
     498:	00 97       	sbiw	r24, 0x00	; 0
     49a:	a1 05       	cpc	r26, r1
     49c:	b1 05       	cpc	r27, r1
     49e:	61 f4       	brne	.+24     	; 0x4b8 <__udivdi3+0x3de>
     4a0:	64 01       	movw	r12, r8
     4a2:	53 01       	movw	r10, r6
     4a4:	a2 18       	sub	r10, r2
     4a6:	b3 08       	sbc	r11, r3
     4a8:	c4 08       	sbc	r12, r4
     4aa:	d5 08       	sbc	r13, r5
     4ac:	31 e0       	ldi	r19, 0x01	; 1
     4ae:	63 2e       	mov	r6, r19
     4b0:	71 2c       	mov	r7, r1
     4b2:	81 2c       	mov	r8, r1
     4b4:	91 2c       	mov	r9, r1
     4b6:	1e c1       	rjmp	.+572    	; 0x6f4 <__udivdi3+0x61a>
     4b8:	6f 96       	adiw	r28, 0x1f	; 31
     4ba:	8f af       	std	Y+63, r24	; 0x3f
     4bc:	6f 97       	sbiw	r28, 0x1f	; 31
     4be:	08 2e       	mov	r0, r24
     4c0:	04 c0       	rjmp	.+8      	; 0x4ca <__udivdi3+0x3f0>
     4c2:	22 0c       	add	r2, r2
     4c4:	33 1c       	adc	r3, r3
     4c6:	44 1c       	adc	r4, r4
     4c8:	55 1c       	adc	r5, r5
     4ca:	0a 94       	dec	r0
     4cc:	d2 f7       	brpl	.-12     	; 0x4c2 <__udivdi3+0x3e8>
     4ce:	ee 2d       	mov	r30, r14
     4d0:	e8 1b       	sub	r30, r24
     4d2:	64 01       	movw	r12, r8
     4d4:	53 01       	movw	r10, r6
     4d6:	0e 2e       	mov	r0, r30
     4d8:	04 c0       	rjmp	.+8      	; 0x4e2 <__udivdi3+0x408>
     4da:	d6 94       	lsr	r13
     4dc:	c7 94       	ror	r12
     4de:	b7 94       	ror	r11
     4e0:	a7 94       	ror	r10
     4e2:	0a 94       	dec	r0
     4e4:	d2 f7       	brpl	.-12     	; 0x4da <__udivdi3+0x400>
     4e6:	a4 01       	movw	r20, r8
     4e8:	93 01       	movw	r18, r6
     4ea:	6f 96       	adiw	r28, 0x1f	; 31
     4ec:	0f ac       	ldd	r0, Y+63	; 0x3f
     4ee:	6f 97       	sbiw	r28, 0x1f	; 31
     4f0:	04 c0       	rjmp	.+8      	; 0x4fa <__udivdi3+0x420>
     4f2:	22 0f       	add	r18, r18
     4f4:	33 1f       	adc	r19, r19
     4f6:	44 1f       	adc	r20, r20
     4f8:	55 1f       	adc	r21, r21
     4fa:	0a 94       	dec	r0
     4fc:	d2 f7       	brpl	.-12     	; 0x4f2 <__udivdi3+0x418>
     4fe:	6d a4       	ldd	r6, Y+45	; 0x2d
     500:	7e a4       	ldd	r7, Y+46	; 0x2e
     502:	8f a4       	ldd	r8, Y+47	; 0x2f
     504:	98 a8       	ldd	r9, Y+48	; 0x30
     506:	0e 2e       	mov	r0, r30
     508:	04 c0       	rjmp	.+8      	; 0x512 <__udivdi3+0x438>
     50a:	96 94       	lsr	r9
     50c:	87 94       	ror	r8
     50e:	77 94       	ror	r7
     510:	67 94       	ror	r6
     512:	0a 94       	dec	r0
     514:	d2 f7       	brpl	.-12     	; 0x50a <__udivdi3+0x430>
     516:	84 01       	movw	r16, r8
     518:	73 01       	movw	r14, r6
     51a:	e2 2a       	or	r14, r18
     51c:	f3 2a       	or	r15, r19
     51e:	04 2b       	or	r16, r20
     520:	15 2b       	or	r17, r21
     522:	e9 a6       	std	Y+41, r14	; 0x29
     524:	fa a6       	std	Y+42, r15	; 0x2a
     526:	0b a7       	std	Y+43, r16	; 0x2b
     528:	1c a7       	std	Y+44, r17	; 0x2c
     52a:	32 01       	movw	r6, r4
     52c:	88 24       	eor	r8, r8
     52e:	99 24       	eor	r9, r9
     530:	92 01       	movw	r18, r4
     532:	81 01       	movw	r16, r2
     534:	20 70       	andi	r18, 0x00	; 0
     536:	30 70       	andi	r19, 0x00	; 0
     538:	21 96       	adiw	r28, 0x01	; 1
     53a:	0c af       	std	Y+60, r16	; 0x3c
     53c:	1d af       	std	Y+61, r17	; 0x3d
     53e:	2e af       	std	Y+62, r18	; 0x3e
     540:	3f af       	std	Y+63, r19	; 0x3f
     542:	21 97       	sbiw	r28, 0x01	; 1
     544:	c6 01       	movw	r24, r12
     546:	b5 01       	movw	r22, r10
     548:	a4 01       	movw	r20, r8
     54a:	93 01       	movw	r18, r6
     54c:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     550:	7b 01       	movw	r14, r22
     552:	8c 01       	movw	r16, r24
     554:	c6 01       	movw	r24, r12
     556:	b5 01       	movw	r22, r10
     558:	a4 01       	movw	r20, r8
     55a:	93 01       	movw	r18, r6
     55c:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     560:	c9 01       	movw	r24, r18
     562:	da 01       	movw	r26, r20
     564:	25 96       	adiw	r28, 0x05	; 5
     566:	8c af       	std	Y+60, r24	; 0x3c
     568:	9d af       	std	Y+61, r25	; 0x3d
     56a:	ae af       	std	Y+62, r26	; 0x3e
     56c:	bf af       	std	Y+63, r27	; 0x3f
     56e:	25 97       	sbiw	r28, 0x05	; 5
     570:	bc 01       	movw	r22, r24
     572:	cd 01       	movw	r24, r26
     574:	21 96       	adiw	r28, 0x01	; 1
     576:	2c ad       	ldd	r18, Y+60	; 0x3c
     578:	3d ad       	ldd	r19, Y+61	; 0x3d
     57a:	4e ad       	ldd	r20, Y+62	; 0x3e
     57c:	5f ad       	ldd	r21, Y+63	; 0x3f
     57e:	21 97       	sbiw	r28, 0x01	; 1
     580:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
     584:	9b 01       	movw	r18, r22
     586:	ac 01       	movw	r20, r24
     588:	87 01       	movw	r16, r14
     58a:	ff 24       	eor	r15, r15
     58c:	ee 24       	eor	r14, r14
     58e:	a9 a4       	ldd	r10, Y+41	; 0x29
     590:	ba a4       	ldd	r11, Y+42	; 0x2a
     592:	cb a4       	ldd	r12, Y+43	; 0x2b
     594:	dc a4       	ldd	r13, Y+44	; 0x2c
     596:	c6 01       	movw	r24, r12
     598:	aa 27       	eor	r26, r26
     59a:	bb 27       	eor	r27, r27
     59c:	5c 01       	movw	r10, r24
     59e:	6d 01       	movw	r12, r26
     5a0:	ae 28       	or	r10, r14
     5a2:	bf 28       	or	r11, r15
     5a4:	c0 2a       	or	r12, r16
     5a6:	d1 2a       	or	r13, r17
     5a8:	a2 16       	cp	r10, r18
     5aa:	b3 06       	cpc	r11, r19
     5ac:	c4 06       	cpc	r12, r20
     5ae:	d5 06       	cpc	r13, r21
     5b0:	60 f5       	brcc	.+88     	; 0x60a <__udivdi3+0x530>
     5b2:	25 96       	adiw	r28, 0x05	; 5
     5b4:	6c ad       	ldd	r22, Y+60	; 0x3c
     5b6:	7d ad       	ldd	r23, Y+61	; 0x3d
     5b8:	8e ad       	ldd	r24, Y+62	; 0x3e
     5ba:	9f ad       	ldd	r25, Y+63	; 0x3f
     5bc:	25 97       	sbiw	r28, 0x05	; 5
     5be:	61 50       	subi	r22, 0x01	; 1
     5c0:	70 40       	sbci	r23, 0x00	; 0
     5c2:	80 40       	sbci	r24, 0x00	; 0
     5c4:	90 40       	sbci	r25, 0x00	; 0
     5c6:	25 96       	adiw	r28, 0x05	; 5
     5c8:	6c af       	std	Y+60, r22	; 0x3c
     5ca:	7d af       	std	Y+61, r23	; 0x3d
     5cc:	8e af       	std	Y+62, r24	; 0x3e
     5ce:	9f af       	std	Y+63, r25	; 0x3f
     5d0:	25 97       	sbiw	r28, 0x05	; 5
     5d2:	a2 0c       	add	r10, r2
     5d4:	b3 1c       	adc	r11, r3
     5d6:	c4 1c       	adc	r12, r4
     5d8:	d5 1c       	adc	r13, r5
     5da:	a2 14       	cp	r10, r2
     5dc:	b3 04       	cpc	r11, r3
     5de:	c4 04       	cpc	r12, r4
     5e0:	d5 04       	cpc	r13, r5
     5e2:	98 f0       	brcs	.+38     	; 0x60a <__udivdi3+0x530>
     5e4:	a2 16       	cp	r10, r18
     5e6:	b3 06       	cpc	r11, r19
     5e8:	c4 06       	cpc	r12, r20
     5ea:	d5 06       	cpc	r13, r21
     5ec:	70 f4       	brcc	.+28     	; 0x60a <__udivdi3+0x530>
     5ee:	61 50       	subi	r22, 0x01	; 1
     5f0:	70 40       	sbci	r23, 0x00	; 0
     5f2:	80 40       	sbci	r24, 0x00	; 0
     5f4:	90 40       	sbci	r25, 0x00	; 0
     5f6:	25 96       	adiw	r28, 0x05	; 5
     5f8:	6c af       	std	Y+60, r22	; 0x3c
     5fa:	7d af       	std	Y+61, r23	; 0x3d
     5fc:	8e af       	std	Y+62, r24	; 0x3e
     5fe:	9f af       	std	Y+63, r25	; 0x3f
     600:	25 97       	sbiw	r28, 0x05	; 5
     602:	a2 0c       	add	r10, r2
     604:	b3 1c       	adc	r11, r3
     606:	c4 1c       	adc	r12, r4
     608:	d5 1c       	adc	r13, r5
     60a:	a2 1a       	sub	r10, r18
     60c:	b3 0a       	sbc	r11, r19
     60e:	c4 0a       	sbc	r12, r20
     610:	d5 0a       	sbc	r13, r21
     612:	c6 01       	movw	r24, r12
     614:	b5 01       	movw	r22, r10
     616:	a4 01       	movw	r20, r8
     618:	93 01       	movw	r18, r6
     61a:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     61e:	7b 01       	movw	r14, r22
     620:	8c 01       	movw	r16, r24
     622:	c6 01       	movw	r24, r12
     624:	b5 01       	movw	r22, r10
     626:	a4 01       	movw	r20, r8
     628:	93 01       	movw	r18, r6
     62a:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     62e:	c9 01       	movw	r24, r18
     630:	da 01       	movw	r26, r20
     632:	3c 01       	movw	r6, r24
     634:	4d 01       	movw	r8, r26
     636:	c4 01       	movw	r24, r8
     638:	b3 01       	movw	r22, r6
     63a:	21 96       	adiw	r28, 0x01	; 1
     63c:	2c ad       	ldd	r18, Y+60	; 0x3c
     63e:	3d ad       	ldd	r19, Y+61	; 0x3d
     640:	4e ad       	ldd	r20, Y+62	; 0x3e
     642:	5f ad       	ldd	r21, Y+63	; 0x3f
     644:	21 97       	sbiw	r28, 0x01	; 1
     646:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
     64a:	9b 01       	movw	r18, r22
     64c:	ac 01       	movw	r20, r24
     64e:	87 01       	movw	r16, r14
     650:	ff 24       	eor	r15, r15
     652:	ee 24       	eor	r14, r14
     654:	89 a5       	ldd	r24, Y+41	; 0x29
     656:	9a a5       	ldd	r25, Y+42	; 0x2a
     658:	ab a5       	ldd	r26, Y+43	; 0x2b
     65a:	bc a5       	ldd	r27, Y+44	; 0x2c
     65c:	a0 70       	andi	r26, 0x00	; 0
     65e:	b0 70       	andi	r27, 0x00	; 0
     660:	57 01       	movw	r10, r14
     662:	68 01       	movw	r12, r16
     664:	a8 2a       	or	r10, r24
     666:	b9 2a       	or	r11, r25
     668:	ca 2a       	or	r12, r26
     66a:	db 2a       	or	r13, r27
     66c:	a2 16       	cp	r10, r18
     66e:	b3 06       	cpc	r11, r19
     670:	c4 06       	cpc	r12, r20
     672:	d5 06       	cpc	r13, r21
     674:	e0 f4       	brcc	.+56     	; 0x6ae <__udivdi3+0x5d4>
     676:	08 94       	sec
     678:	61 08       	sbc	r6, r1
     67a:	71 08       	sbc	r7, r1
     67c:	81 08       	sbc	r8, r1
     67e:	91 08       	sbc	r9, r1
     680:	a2 0c       	add	r10, r2
     682:	b3 1c       	adc	r11, r3
     684:	c4 1c       	adc	r12, r4
     686:	d5 1c       	adc	r13, r5
     688:	a2 14       	cp	r10, r2
     68a:	b3 04       	cpc	r11, r3
     68c:	c4 04       	cpc	r12, r4
     68e:	d5 04       	cpc	r13, r5
     690:	70 f0       	brcs	.+28     	; 0x6ae <__udivdi3+0x5d4>
     692:	a2 16       	cp	r10, r18
     694:	b3 06       	cpc	r11, r19
     696:	c4 06       	cpc	r12, r20
     698:	d5 06       	cpc	r13, r21
     69a:	48 f4       	brcc	.+18     	; 0x6ae <__udivdi3+0x5d4>
     69c:	08 94       	sec
     69e:	61 08       	sbc	r6, r1
     6a0:	71 08       	sbc	r7, r1
     6a2:	81 08       	sbc	r8, r1
     6a4:	91 08       	sbc	r9, r1
     6a6:	a2 0c       	add	r10, r2
     6a8:	b3 1c       	adc	r11, r3
     6aa:	c4 1c       	adc	r12, r4
     6ac:	d5 1c       	adc	r13, r5
     6ae:	8d a5       	ldd	r24, Y+45	; 0x2d
     6b0:	9e a5       	ldd	r25, Y+46	; 0x2e
     6b2:	af a5       	ldd	r26, Y+47	; 0x2f
     6b4:	b8 a9       	ldd	r27, Y+48	; 0x30
     6b6:	6f 96       	adiw	r28, 0x1f	; 31
     6b8:	0f ac       	ldd	r0, Y+63	; 0x3f
     6ba:	6f 97       	sbiw	r28, 0x1f	; 31
     6bc:	04 c0       	rjmp	.+8      	; 0x6c6 <__udivdi3+0x5ec>
     6be:	88 0f       	add	r24, r24
     6c0:	99 1f       	adc	r25, r25
     6c2:	aa 1f       	adc	r26, r26
     6c4:	bb 1f       	adc	r27, r27
     6c6:	0a 94       	dec	r0
     6c8:	d2 f7       	brpl	.-12     	; 0x6be <__udivdi3+0x5e4>
     6ca:	8d a7       	std	Y+45, r24	; 0x2d
     6cc:	9e a7       	std	Y+46, r25	; 0x2e
     6ce:	af a7       	std	Y+47, r26	; 0x2f
     6d0:	b8 ab       	std	Y+48, r27	; 0x30
     6d2:	a2 1a       	sub	r10, r18
     6d4:	b3 0a       	sbc	r11, r19
     6d6:	c4 0a       	sbc	r12, r20
     6d8:	d5 0a       	sbc	r13, r21
     6da:	25 96       	adiw	r28, 0x05	; 5
     6dc:	ec ac       	ldd	r14, Y+60	; 0x3c
     6de:	fd ac       	ldd	r15, Y+61	; 0x3d
     6e0:	0e ad       	ldd	r16, Y+62	; 0x3e
     6e2:	1f ad       	ldd	r17, Y+63	; 0x3f
     6e4:	25 97       	sbiw	r28, 0x05	; 5
     6e6:	d7 01       	movw	r26, r14
     6e8:	99 27       	eor	r25, r25
     6ea:	88 27       	eor	r24, r24
     6ec:	68 2a       	or	r6, r24
     6ee:	79 2a       	or	r7, r25
     6f0:	8a 2a       	or	r8, r26
     6f2:	9b 2a       	or	r9, r27
     6f4:	82 01       	movw	r16, r4
     6f6:	22 27       	eor	r18, r18
     6f8:	33 27       	eor	r19, r19
     6fa:	29 96       	adiw	r28, 0x09	; 9
     6fc:	0c af       	std	Y+60, r16	; 0x3c
     6fe:	1d af       	std	Y+61, r17	; 0x3d
     700:	2e af       	std	Y+62, r18	; 0x3e
     702:	3f af       	std	Y+63, r19	; 0x3f
     704:	29 97       	sbiw	r28, 0x09	; 9
     706:	a2 01       	movw	r20, r4
     708:	91 01       	movw	r18, r2
     70a:	40 70       	andi	r20, 0x00	; 0
     70c:	50 70       	andi	r21, 0x00	; 0
     70e:	2d 96       	adiw	r28, 0x0d	; 13
     710:	2c af       	std	Y+60, r18	; 0x3c
     712:	3d af       	std	Y+61, r19	; 0x3d
     714:	4e af       	std	Y+62, r20	; 0x3e
     716:	5f af       	std	Y+63, r21	; 0x3f
     718:	2d 97       	sbiw	r28, 0x0d	; 13
     71a:	c6 01       	movw	r24, r12
     71c:	b5 01       	movw	r22, r10
     71e:	29 96       	adiw	r28, 0x09	; 9
     720:	2c ad       	ldd	r18, Y+60	; 0x3c
     722:	3d ad       	ldd	r19, Y+61	; 0x3d
     724:	4e ad       	ldd	r20, Y+62	; 0x3e
     726:	5f ad       	ldd	r21, Y+63	; 0x3f
     728:	29 97       	sbiw	r28, 0x09	; 9
     72a:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     72e:	7b 01       	movw	r14, r22
     730:	8c 01       	movw	r16, r24
     732:	c6 01       	movw	r24, r12
     734:	b5 01       	movw	r22, r10
     736:	29 96       	adiw	r28, 0x09	; 9
     738:	2c ad       	ldd	r18, Y+60	; 0x3c
     73a:	3d ad       	ldd	r19, Y+61	; 0x3d
     73c:	4e ad       	ldd	r20, Y+62	; 0x3e
     73e:	5f ad       	ldd	r21, Y+63	; 0x3f
     740:	29 97       	sbiw	r28, 0x09	; 9
     742:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     746:	c9 01       	movw	r24, r18
     748:	da 01       	movw	r26, r20
     74a:	61 96       	adiw	r28, 0x11	; 17
     74c:	8c af       	std	Y+60, r24	; 0x3c
     74e:	9d af       	std	Y+61, r25	; 0x3d
     750:	ae af       	std	Y+62, r26	; 0x3e
     752:	bf af       	std	Y+63, r27	; 0x3f
     754:	61 97       	sbiw	r28, 0x11	; 17
     756:	bc 01       	movw	r22, r24
     758:	cd 01       	movw	r24, r26
     75a:	2d 96       	adiw	r28, 0x0d	; 13
     75c:	2c ad       	ldd	r18, Y+60	; 0x3c
     75e:	3d ad       	ldd	r19, Y+61	; 0x3d
     760:	4e ad       	ldd	r20, Y+62	; 0x3e
     762:	5f ad       	ldd	r21, Y+63	; 0x3f
     764:	2d 97       	sbiw	r28, 0x0d	; 13
     766:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
     76a:	9b 01       	movw	r18, r22
     76c:	ac 01       	movw	r20, r24
     76e:	87 01       	movw	r16, r14
     770:	ff 24       	eor	r15, r15
     772:	ee 24       	eor	r14, r14
     774:	ad a4       	ldd	r10, Y+45	; 0x2d
     776:	be a4       	ldd	r11, Y+46	; 0x2e
     778:	cf a4       	ldd	r12, Y+47	; 0x2f
     77a:	d8 a8       	ldd	r13, Y+48	; 0x30
     77c:	c6 01       	movw	r24, r12
     77e:	aa 27       	eor	r26, r26
     780:	bb 27       	eor	r27, r27
     782:	57 01       	movw	r10, r14
     784:	68 01       	movw	r12, r16
     786:	a8 2a       	or	r10, r24
     788:	b9 2a       	or	r11, r25
     78a:	ca 2a       	or	r12, r26
     78c:	db 2a       	or	r13, r27
     78e:	a2 16       	cp	r10, r18
     790:	b3 06       	cpc	r11, r19
     792:	c4 06       	cpc	r12, r20
     794:	d5 06       	cpc	r13, r21
     796:	60 f5       	brcc	.+88     	; 0x7f0 <__udivdi3+0x716>
     798:	61 96       	adiw	r28, 0x11	; 17
     79a:	6c ad       	ldd	r22, Y+60	; 0x3c
     79c:	7d ad       	ldd	r23, Y+61	; 0x3d
     79e:	8e ad       	ldd	r24, Y+62	; 0x3e
     7a0:	9f ad       	ldd	r25, Y+63	; 0x3f
     7a2:	61 97       	sbiw	r28, 0x11	; 17
     7a4:	61 50       	subi	r22, 0x01	; 1
     7a6:	70 40       	sbci	r23, 0x00	; 0
     7a8:	80 40       	sbci	r24, 0x00	; 0
     7aa:	90 40       	sbci	r25, 0x00	; 0
     7ac:	61 96       	adiw	r28, 0x11	; 17
     7ae:	6c af       	std	Y+60, r22	; 0x3c
     7b0:	7d af       	std	Y+61, r23	; 0x3d
     7b2:	8e af       	std	Y+62, r24	; 0x3e
     7b4:	9f af       	std	Y+63, r25	; 0x3f
     7b6:	61 97       	sbiw	r28, 0x11	; 17
     7b8:	a2 0c       	add	r10, r2
     7ba:	b3 1c       	adc	r11, r3
     7bc:	c4 1c       	adc	r12, r4
     7be:	d5 1c       	adc	r13, r5
     7c0:	a2 14       	cp	r10, r2
     7c2:	b3 04       	cpc	r11, r3
     7c4:	c4 04       	cpc	r12, r4
     7c6:	d5 04       	cpc	r13, r5
     7c8:	98 f0       	brcs	.+38     	; 0x7f0 <__udivdi3+0x716>
     7ca:	a2 16       	cp	r10, r18
     7cc:	b3 06       	cpc	r11, r19
     7ce:	c4 06       	cpc	r12, r20
     7d0:	d5 06       	cpc	r13, r21
     7d2:	70 f4       	brcc	.+28     	; 0x7f0 <__udivdi3+0x716>
     7d4:	61 50       	subi	r22, 0x01	; 1
     7d6:	70 40       	sbci	r23, 0x00	; 0
     7d8:	80 40       	sbci	r24, 0x00	; 0
     7da:	90 40       	sbci	r25, 0x00	; 0
     7dc:	61 96       	adiw	r28, 0x11	; 17
     7de:	6c af       	std	Y+60, r22	; 0x3c
     7e0:	7d af       	std	Y+61, r23	; 0x3d
     7e2:	8e af       	std	Y+62, r24	; 0x3e
     7e4:	9f af       	std	Y+63, r25	; 0x3f
     7e6:	61 97       	sbiw	r28, 0x11	; 17
     7e8:	a2 0c       	add	r10, r2
     7ea:	b3 1c       	adc	r11, r3
     7ec:	c4 1c       	adc	r12, r4
     7ee:	d5 1c       	adc	r13, r5
     7f0:	a2 1a       	sub	r10, r18
     7f2:	b3 0a       	sbc	r11, r19
     7f4:	c4 0a       	sbc	r12, r20
     7f6:	d5 0a       	sbc	r13, r21
     7f8:	c6 01       	movw	r24, r12
     7fa:	b5 01       	movw	r22, r10
     7fc:	29 96       	adiw	r28, 0x09	; 9
     7fe:	2c ad       	ldd	r18, Y+60	; 0x3c
     800:	3d ad       	ldd	r19, Y+61	; 0x3d
     802:	4e ad       	ldd	r20, Y+62	; 0x3e
     804:	5f ad       	ldd	r21, Y+63	; 0x3f
     806:	29 97       	sbiw	r28, 0x09	; 9
     808:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     80c:	7b 01       	movw	r14, r22
     80e:	8c 01       	movw	r16, r24
     810:	c6 01       	movw	r24, r12
     812:	b5 01       	movw	r22, r10
     814:	29 96       	adiw	r28, 0x09	; 9
     816:	2c ad       	ldd	r18, Y+60	; 0x3c
     818:	3d ad       	ldd	r19, Y+61	; 0x3d
     81a:	4e ad       	ldd	r20, Y+62	; 0x3e
     81c:	5f ad       	ldd	r21, Y+63	; 0x3f
     81e:	29 97       	sbiw	r28, 0x09	; 9
     820:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     824:	c9 01       	movw	r24, r18
     826:	da 01       	movw	r26, r20
     828:	5c 01       	movw	r10, r24
     82a:	6d 01       	movw	r12, r26
     82c:	c6 01       	movw	r24, r12
     82e:	b5 01       	movw	r22, r10
     830:	2d 96       	adiw	r28, 0x0d	; 13
     832:	2c ad       	ldd	r18, Y+60	; 0x3c
     834:	3d ad       	ldd	r19, Y+61	; 0x3d
     836:	4e ad       	ldd	r20, Y+62	; 0x3e
     838:	5f ad       	ldd	r21, Y+63	; 0x3f
     83a:	2d 97       	sbiw	r28, 0x0d	; 13
     83c:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
     840:	9b 01       	movw	r18, r22
     842:	ac 01       	movw	r20, r24
     844:	87 01       	movw	r16, r14
     846:	ff 24       	eor	r15, r15
     848:	ee 24       	eor	r14, r14
     84a:	8d a5       	ldd	r24, Y+45	; 0x2d
     84c:	9e a5       	ldd	r25, Y+46	; 0x2e
     84e:	af a5       	ldd	r26, Y+47	; 0x2f
     850:	b8 a9       	ldd	r27, Y+48	; 0x30
     852:	a0 70       	andi	r26, 0x00	; 0
     854:	b0 70       	andi	r27, 0x00	; 0
     856:	e8 2a       	or	r14, r24
     858:	f9 2a       	or	r15, r25
     85a:	0a 2b       	or	r16, r26
     85c:	1b 2b       	or	r17, r27
     85e:	e2 16       	cp	r14, r18
     860:	f3 06       	cpc	r15, r19
     862:	04 07       	cpc	r16, r20
     864:	15 07       	cpc	r17, r21
     866:	c0 f4       	brcc	.+48     	; 0x898 <__stack+0x39>
     868:	08 94       	sec
     86a:	a1 08       	sbc	r10, r1
     86c:	b1 08       	sbc	r11, r1
     86e:	c1 08       	sbc	r12, r1
     870:	d1 08       	sbc	r13, r1
     872:	e2 0c       	add	r14, r2
     874:	f3 1c       	adc	r15, r3
     876:	04 1d       	adc	r16, r4
     878:	15 1d       	adc	r17, r5
     87a:	e2 14       	cp	r14, r2
     87c:	f3 04       	cpc	r15, r3
     87e:	04 05       	cpc	r16, r4
     880:	15 05       	cpc	r17, r5
     882:	50 f0       	brcs	.+20     	; 0x898 <__stack+0x39>
     884:	e2 16       	cp	r14, r18
     886:	f3 06       	cpc	r15, r19
     888:	04 07       	cpc	r16, r20
     88a:	15 07       	cpc	r17, r21
     88c:	28 f4       	brcc	.+10     	; 0x898 <__stack+0x39>
     88e:	08 94       	sec
     890:	a1 08       	sbc	r10, r1
     892:	b1 08       	sbc	r11, r1
     894:	c1 08       	sbc	r12, r1
     896:	d1 08       	sbc	r13, r1
     898:	61 96       	adiw	r28, 0x11	; 17
     89a:	ec ac       	ldd	r14, Y+60	; 0x3c
     89c:	fd ac       	ldd	r15, Y+61	; 0x3d
     89e:	0e ad       	ldd	r16, Y+62	; 0x3e
     8a0:	1f ad       	ldd	r17, Y+63	; 0x3f
     8a2:	61 97       	sbiw	r28, 0x11	; 17
     8a4:	d7 01       	movw	r26, r14
     8a6:	99 27       	eor	r25, r25
     8a8:	88 27       	eor	r24, r24
     8aa:	96 01       	movw	r18, r12
     8ac:	85 01       	movw	r16, r10
     8ae:	08 2b       	or	r16, r24
     8b0:	19 2b       	or	r17, r25
     8b2:	2a 2b       	or	r18, r26
     8b4:	3b 2b       	or	r19, r27
     8b6:	09 ab       	std	Y+49, r16	; 0x31
     8b8:	1a ab       	std	Y+50, r17	; 0x32
     8ba:	2b ab       	std	Y+51, r18	; 0x33
     8bc:	3c ab       	std	Y+52, r19	; 0x34
     8be:	62 c2       	rjmp	.+1220   	; 0xd84 <__stack+0x525>
     8c0:	6e 14       	cp	r6, r14
     8c2:	7f 04       	cpc	r7, r15
     8c4:	80 06       	cpc	r8, r16
     8c6:	91 06       	cpc	r9, r17
     8c8:	08 f4       	brcc	.+2      	; 0x8cc <__stack+0x6d>
     8ca:	51 c2       	rjmp	.+1186   	; 0xd6e <__stack+0x50f>
     8cc:	20 e0       	ldi	r18, 0x00	; 0
     8ce:	e2 16       	cp	r14, r18
     8d0:	20 e0       	ldi	r18, 0x00	; 0
     8d2:	f2 06       	cpc	r15, r18
     8d4:	21 e0       	ldi	r18, 0x01	; 1
     8d6:	02 07       	cpc	r16, r18
     8d8:	20 e0       	ldi	r18, 0x00	; 0
     8da:	12 07       	cpc	r17, r18
     8dc:	88 f4       	brcc	.+34     	; 0x900 <__stack+0xa1>
     8de:	3f ef       	ldi	r19, 0xFF	; 255
     8e0:	e3 16       	cp	r14, r19
     8e2:	f1 04       	cpc	r15, r1
     8e4:	01 05       	cpc	r16, r1
     8e6:	11 05       	cpc	r17, r1
     8e8:	31 f0       	breq	.+12     	; 0x8f6 <__stack+0x97>
     8ea:	28 f0       	brcs	.+10     	; 0x8f6 <__stack+0x97>
     8ec:	48 e0       	ldi	r20, 0x08	; 8
     8ee:	50 e0       	ldi	r21, 0x00	; 0
     8f0:	60 e0       	ldi	r22, 0x00	; 0
     8f2:	70 e0       	ldi	r23, 0x00	; 0
     8f4:	17 c0       	rjmp	.+46     	; 0x924 <__stack+0xc5>
     8f6:	40 e0       	ldi	r20, 0x00	; 0
     8f8:	50 e0       	ldi	r21, 0x00	; 0
     8fa:	60 e0       	ldi	r22, 0x00	; 0
     8fc:	70 e0       	ldi	r23, 0x00	; 0
     8fe:	12 c0       	rjmp	.+36     	; 0x924 <__stack+0xc5>
     900:	40 e0       	ldi	r20, 0x00	; 0
     902:	e4 16       	cp	r14, r20
     904:	40 e0       	ldi	r20, 0x00	; 0
     906:	f4 06       	cpc	r15, r20
     908:	40 e0       	ldi	r20, 0x00	; 0
     90a:	04 07       	cpc	r16, r20
     90c:	41 e0       	ldi	r20, 0x01	; 1
     90e:	14 07       	cpc	r17, r20
     910:	28 f0       	brcs	.+10     	; 0x91c <__stack+0xbd>
     912:	48 e1       	ldi	r20, 0x18	; 24
     914:	50 e0       	ldi	r21, 0x00	; 0
     916:	60 e0       	ldi	r22, 0x00	; 0
     918:	70 e0       	ldi	r23, 0x00	; 0
     91a:	04 c0       	rjmp	.+8      	; 0x924 <__stack+0xc5>
     91c:	40 e1       	ldi	r20, 0x10	; 16
     91e:	50 e0       	ldi	r21, 0x00	; 0
     920:	60 e0       	ldi	r22, 0x00	; 0
     922:	70 e0       	ldi	r23, 0x00	; 0
     924:	d8 01       	movw	r26, r16
     926:	c7 01       	movw	r24, r14
     928:	04 2e       	mov	r0, r20
     92a:	04 c0       	rjmp	.+8      	; 0x934 <__stack+0xd5>
     92c:	b6 95       	lsr	r27
     92e:	a7 95       	ror	r26
     930:	97 95       	ror	r25
     932:	87 95       	ror	r24
     934:	0a 94       	dec	r0
     936:	d2 f7       	brpl	.-12     	; 0x92c <__stack+0xcd>
     938:	8e 58       	subi	r24, 0x8E	; 142
     93a:	9e 4f       	sbci	r25, 0xFE	; 254
     93c:	dc 01       	movw	r26, r24
     93e:	2c 91       	ld	r18, X
     940:	30 e2       	ldi	r19, 0x20	; 32
     942:	a3 2e       	mov	r10, r19
     944:	b1 2c       	mov	r11, r1
     946:	c1 2c       	mov	r12, r1
     948:	d1 2c       	mov	r13, r1
     94a:	d6 01       	movw	r26, r12
     94c:	c5 01       	movw	r24, r10
     94e:	84 1b       	sub	r24, r20
     950:	95 0b       	sbc	r25, r21
     952:	a6 0b       	sbc	r26, r22
     954:	b7 0b       	sbc	r27, r23
     956:	82 1b       	sub	r24, r18
     958:	91 09       	sbc	r25, r1
     95a:	a1 09       	sbc	r26, r1
     95c:	b1 09       	sbc	r27, r1
     95e:	00 97       	sbiw	r24, 0x00	; 0
     960:	a1 05       	cpc	r26, r1
     962:	b1 05       	cpc	r27, r1
     964:	89 f4       	brne	.+34     	; 0x988 <__stack+0x129>
     966:	e6 14       	cp	r14, r6
     968:	f7 04       	cpc	r15, r7
     96a:	08 05       	cpc	r16, r8
     96c:	19 05       	cpc	r17, r9
     96e:	08 f4       	brcc	.+2      	; 0x972 <__stack+0x113>
     970:	f2 c1       	rjmp	.+996    	; 0xd56 <__stack+0x4f7>
     972:	6d a4       	ldd	r6, Y+45	; 0x2d
     974:	7e a4       	ldd	r7, Y+46	; 0x2e
     976:	8f a4       	ldd	r8, Y+47	; 0x2f
     978:	98 a8       	ldd	r9, Y+48	; 0x30
     97a:	62 14       	cp	r6, r2
     97c:	73 04       	cpc	r7, r3
     97e:	84 04       	cpc	r8, r4
     980:	95 04       	cpc	r9, r5
     982:	08 f0       	brcs	.+2      	; 0x986 <__stack+0x127>
     984:	e8 c1       	rjmp	.+976    	; 0xd56 <__stack+0x4f7>
     986:	f3 c1       	rjmp	.+998    	; 0xd6e <__stack+0x50f>
     988:	6e 96       	adiw	r28, 0x1e	; 30
     98a:	8f af       	std	Y+63, r24	; 0x3f
     98c:	6e 97       	sbiw	r28, 0x1e	; 30
     98e:	08 2e       	mov	r0, r24
     990:	04 c0       	rjmp	.+8      	; 0x99a <__stack+0x13b>
     992:	ee 0c       	add	r14, r14
     994:	ff 1c       	adc	r15, r15
     996:	00 1f       	adc	r16, r16
     998:	11 1f       	adc	r17, r17
     99a:	0a 94       	dec	r0
     99c:	d2 f7       	brpl	.-12     	; 0x992 <__stack+0x133>
     99e:	6a 2d       	mov	r22, r10
     9a0:	68 1b       	sub	r22, r24
     9a2:	d2 01       	movw	r26, r4
     9a4:	c1 01       	movw	r24, r2
     9a6:	06 2e       	mov	r0, r22
     9a8:	04 c0       	rjmp	.+8      	; 0x9b2 <__stack+0x153>
     9aa:	b6 95       	lsr	r27
     9ac:	a7 95       	ror	r26
     9ae:	97 95       	ror	r25
     9b0:	87 95       	ror	r24
     9b2:	0a 94       	dec	r0
     9b4:	d2 f7       	brpl	.-12     	; 0x9aa <__stack+0x14b>
     9b6:	5c 01       	movw	r10, r24
     9b8:	6d 01       	movw	r12, r26
     9ba:	ae 28       	or	r10, r14
     9bc:	bf 28       	or	r11, r15
     9be:	c0 2a       	or	r12, r16
     9c0:	d1 2a       	or	r13, r17
     9c2:	ad a2       	std	Y+37, r10	; 0x25
     9c4:	be a2       	std	Y+38, r11	; 0x26
     9c6:	cf a2       	std	Y+39, r12	; 0x27
     9c8:	d8 a6       	std	Y+40, r13	; 0x28
     9ca:	72 01       	movw	r14, r4
     9cc:	61 01       	movw	r12, r2
     9ce:	6e 96       	adiw	r28, 0x1e	; 30
     9d0:	0f ac       	ldd	r0, Y+63	; 0x3f
     9d2:	6e 97       	sbiw	r28, 0x1e	; 30
     9d4:	04 c0       	rjmp	.+8      	; 0x9de <__stack+0x17f>
     9d6:	cc 0c       	add	r12, r12
     9d8:	dd 1c       	adc	r13, r13
     9da:	ee 1c       	adc	r14, r14
     9dc:	ff 1c       	adc	r15, r15
     9de:	0a 94       	dec	r0
     9e0:	d2 f7       	brpl	.-12     	; 0x9d6 <__stack+0x177>
     9e2:	c9 a2       	std	Y+33, r12	; 0x21
     9e4:	da a2       	std	Y+34, r13	; 0x22
     9e6:	eb a2       	std	Y+35, r14	; 0x23
     9e8:	fc a2       	std	Y+36, r15	; 0x24
     9ea:	64 01       	movw	r12, r8
     9ec:	53 01       	movw	r10, r6
     9ee:	06 2e       	mov	r0, r22
     9f0:	04 c0       	rjmp	.+8      	; 0x9fa <__stack+0x19b>
     9f2:	d6 94       	lsr	r13
     9f4:	c7 94       	ror	r12
     9f6:	b7 94       	ror	r11
     9f8:	a7 94       	ror	r10
     9fa:	0a 94       	dec	r0
     9fc:	d2 f7       	brpl	.-12     	; 0x9f2 <__stack+0x193>
     9fe:	d4 01       	movw	r26, r8
     a00:	c3 01       	movw	r24, r6
     a02:	6e 96       	adiw	r28, 0x1e	; 30
     a04:	0f ac       	ldd	r0, Y+63	; 0x3f
     a06:	6e 97       	sbiw	r28, 0x1e	; 30
     a08:	04 c0       	rjmp	.+8      	; 0xa12 <__stack+0x1b3>
     a0a:	88 0f       	add	r24, r24
     a0c:	99 1f       	adc	r25, r25
     a0e:	aa 1f       	adc	r26, r26
     a10:	bb 1f       	adc	r27, r27
     a12:	0a 94       	dec	r0
     a14:	d2 f7       	brpl	.-12     	; 0xa0a <__stack+0x1ab>
     a16:	ed a4       	ldd	r14, Y+45	; 0x2d
     a18:	fe a4       	ldd	r15, Y+46	; 0x2e
     a1a:	0f a5       	ldd	r16, Y+47	; 0x2f
     a1c:	18 a9       	ldd	r17, Y+48	; 0x30
     a1e:	04 c0       	rjmp	.+8      	; 0xa28 <__stack+0x1c9>
     a20:	16 95       	lsr	r17
     a22:	07 95       	ror	r16
     a24:	f7 94       	ror	r15
     a26:	e7 94       	ror	r14
     a28:	6a 95       	dec	r22
     a2a:	d2 f7       	brpl	.-12     	; 0xa20 <__stack+0x1c1>
     a2c:	37 01       	movw	r6, r14
     a2e:	48 01       	movw	r8, r16
     a30:	68 2a       	or	r6, r24
     a32:	79 2a       	or	r7, r25
     a34:	8a 2a       	or	r8, r26
     a36:	9b 2a       	or	r9, r27
     a38:	6d 8e       	std	Y+29, r6	; 0x1d
     a3a:	7e 8e       	std	Y+30, r7	; 0x1e
     a3c:	8f 8e       	std	Y+31, r8	; 0x1f
     a3e:	98 a2       	std	Y+32, r9	; 0x20
     a40:	ed a0       	ldd	r14, Y+37	; 0x25
     a42:	fe a0       	ldd	r15, Y+38	; 0x26
     a44:	0f a1       	ldd	r16, Y+39	; 0x27
     a46:	18 a5       	ldd	r17, Y+40	; 0x28
     a48:	38 01       	movw	r6, r16
     a4a:	88 24       	eor	r8, r8
     a4c:	99 24       	eor	r9, r9
     a4e:	98 01       	movw	r18, r16
     a50:	87 01       	movw	r16, r14
     a52:	20 70       	andi	r18, 0x00	; 0
     a54:	30 70       	andi	r19, 0x00	; 0
     a56:	65 96       	adiw	r28, 0x15	; 21
     a58:	0c af       	std	Y+60, r16	; 0x3c
     a5a:	1d af       	std	Y+61, r17	; 0x3d
     a5c:	2e af       	std	Y+62, r18	; 0x3e
     a5e:	3f af       	std	Y+63, r19	; 0x3f
     a60:	65 97       	sbiw	r28, 0x15	; 21
     a62:	c6 01       	movw	r24, r12
     a64:	b5 01       	movw	r22, r10
     a66:	a4 01       	movw	r20, r8
     a68:	93 01       	movw	r18, r6
     a6a:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     a6e:	7b 01       	movw	r14, r22
     a70:	8c 01       	movw	r16, r24
     a72:	c6 01       	movw	r24, r12
     a74:	b5 01       	movw	r22, r10
     a76:	a4 01       	movw	r20, r8
     a78:	93 01       	movw	r18, r6
     a7a:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     a7e:	c9 01       	movw	r24, r18
     a80:	da 01       	movw	r26, r20
     a82:	1c 01       	movw	r2, r24
     a84:	2d 01       	movw	r4, r26
     a86:	c2 01       	movw	r24, r4
     a88:	b1 01       	movw	r22, r2
     a8a:	65 96       	adiw	r28, 0x15	; 21
     a8c:	2c ad       	ldd	r18, Y+60	; 0x3c
     a8e:	3d ad       	ldd	r19, Y+61	; 0x3d
     a90:	4e ad       	ldd	r20, Y+62	; 0x3e
     a92:	5f ad       	ldd	r21, Y+63	; 0x3f
     a94:	65 97       	sbiw	r28, 0x15	; 21
     a96:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
     a9a:	9b 01       	movw	r18, r22
     a9c:	ac 01       	movw	r20, r24
     a9e:	87 01       	movw	r16, r14
     aa0:	ff 24       	eor	r15, r15
     aa2:	ee 24       	eor	r14, r14
     aa4:	ad 8c       	ldd	r10, Y+29	; 0x1d
     aa6:	be 8c       	ldd	r11, Y+30	; 0x1e
     aa8:	cf 8c       	ldd	r12, Y+31	; 0x1f
     aaa:	d8 a0       	ldd	r13, Y+32	; 0x20
     aac:	c6 01       	movw	r24, r12
     aae:	aa 27       	eor	r26, r26
     ab0:	bb 27       	eor	r27, r27
     ab2:	57 01       	movw	r10, r14
     ab4:	68 01       	movw	r12, r16
     ab6:	a8 2a       	or	r10, r24
     ab8:	b9 2a       	or	r11, r25
     aba:	ca 2a       	or	r12, r26
     abc:	db 2a       	or	r13, r27
     abe:	a2 16       	cp	r10, r18
     ac0:	b3 06       	cpc	r11, r19
     ac2:	c4 06       	cpc	r12, r20
     ac4:	d5 06       	cpc	r13, r21
     ac6:	00 f5       	brcc	.+64     	; 0xb08 <__stack+0x2a9>
     ac8:	08 94       	sec
     aca:	21 08       	sbc	r2, r1
     acc:	31 08       	sbc	r3, r1
     ace:	41 08       	sbc	r4, r1
     ad0:	51 08       	sbc	r5, r1
     ad2:	ed a0       	ldd	r14, Y+37	; 0x25
     ad4:	fe a0       	ldd	r15, Y+38	; 0x26
     ad6:	0f a1       	ldd	r16, Y+39	; 0x27
     ad8:	18 a5       	ldd	r17, Y+40	; 0x28
     ada:	ae 0c       	add	r10, r14
     adc:	bf 1c       	adc	r11, r15
     ade:	c0 1e       	adc	r12, r16
     ae0:	d1 1e       	adc	r13, r17
     ae2:	ae 14       	cp	r10, r14
     ae4:	bf 04       	cpc	r11, r15
     ae6:	c0 06       	cpc	r12, r16
     ae8:	d1 06       	cpc	r13, r17
     aea:	70 f0       	brcs	.+28     	; 0xb08 <__stack+0x2a9>
     aec:	a2 16       	cp	r10, r18
     aee:	b3 06       	cpc	r11, r19
     af0:	c4 06       	cpc	r12, r20
     af2:	d5 06       	cpc	r13, r21
     af4:	48 f4       	brcc	.+18     	; 0xb08 <__stack+0x2a9>
     af6:	08 94       	sec
     af8:	21 08       	sbc	r2, r1
     afa:	31 08       	sbc	r3, r1
     afc:	41 08       	sbc	r4, r1
     afe:	51 08       	sbc	r5, r1
     b00:	ae 0c       	add	r10, r14
     b02:	bf 1c       	adc	r11, r15
     b04:	c0 1e       	adc	r12, r16
     b06:	d1 1e       	adc	r13, r17
     b08:	a2 1a       	sub	r10, r18
     b0a:	b3 0a       	sbc	r11, r19
     b0c:	c4 0a       	sbc	r12, r20
     b0e:	d5 0a       	sbc	r13, r21
     b10:	c6 01       	movw	r24, r12
     b12:	b5 01       	movw	r22, r10
     b14:	a4 01       	movw	r20, r8
     b16:	93 01       	movw	r18, r6
     b18:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     b1c:	7b 01       	movw	r14, r22
     b1e:	8c 01       	movw	r16, r24
     b20:	c6 01       	movw	r24, r12
     b22:	b5 01       	movw	r22, r10
     b24:	a4 01       	movw	r20, r8
     b26:	93 01       	movw	r18, r6
     b28:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     b2c:	c9 01       	movw	r24, r18
     b2e:	da 01       	movw	r26, r20
     b30:	3c 01       	movw	r6, r24
     b32:	4d 01       	movw	r8, r26
     b34:	c4 01       	movw	r24, r8
     b36:	b3 01       	movw	r22, r6
     b38:	65 96       	adiw	r28, 0x15	; 21
     b3a:	2c ad       	ldd	r18, Y+60	; 0x3c
     b3c:	3d ad       	ldd	r19, Y+61	; 0x3d
     b3e:	4e ad       	ldd	r20, Y+62	; 0x3e
     b40:	5f ad       	ldd	r21, Y+63	; 0x3f
     b42:	65 97       	sbiw	r28, 0x15	; 21
     b44:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
     b48:	9b 01       	movw	r18, r22
     b4a:	ac 01       	movw	r20, r24
     b4c:	87 01       	movw	r16, r14
     b4e:	ff 24       	eor	r15, r15
     b50:	ee 24       	eor	r14, r14
     b52:	8d 8d       	ldd	r24, Y+29	; 0x1d
     b54:	9e 8d       	ldd	r25, Y+30	; 0x1e
     b56:	af 8d       	ldd	r26, Y+31	; 0x1f
     b58:	b8 a1       	ldd	r27, Y+32	; 0x20
     b5a:	a0 70       	andi	r26, 0x00	; 0
     b5c:	b0 70       	andi	r27, 0x00	; 0
     b5e:	57 01       	movw	r10, r14
     b60:	68 01       	movw	r12, r16
     b62:	a8 2a       	or	r10, r24
     b64:	b9 2a       	or	r11, r25
     b66:	ca 2a       	or	r12, r26
     b68:	db 2a       	or	r13, r27
     b6a:	a2 16       	cp	r10, r18
     b6c:	b3 06       	cpc	r11, r19
     b6e:	c4 06       	cpc	r12, r20
     b70:	d5 06       	cpc	r13, r21
     b72:	00 f5       	brcc	.+64     	; 0xbb4 <__stack+0x355>
     b74:	08 94       	sec
     b76:	61 08       	sbc	r6, r1
     b78:	71 08       	sbc	r7, r1
     b7a:	81 08       	sbc	r8, r1
     b7c:	91 08       	sbc	r9, r1
     b7e:	6d a1       	ldd	r22, Y+37	; 0x25
     b80:	7e a1       	ldd	r23, Y+38	; 0x26
     b82:	8f a1       	ldd	r24, Y+39	; 0x27
     b84:	98 a5       	ldd	r25, Y+40	; 0x28
     b86:	a6 0e       	add	r10, r22
     b88:	b7 1e       	adc	r11, r23
     b8a:	c8 1e       	adc	r12, r24
     b8c:	d9 1e       	adc	r13, r25
     b8e:	a6 16       	cp	r10, r22
     b90:	b7 06       	cpc	r11, r23
     b92:	c8 06       	cpc	r12, r24
     b94:	d9 06       	cpc	r13, r25
     b96:	70 f0       	brcs	.+28     	; 0xbb4 <__stack+0x355>
     b98:	a2 16       	cp	r10, r18
     b9a:	b3 06       	cpc	r11, r19
     b9c:	c4 06       	cpc	r12, r20
     b9e:	d5 06       	cpc	r13, r21
     ba0:	48 f4       	brcc	.+18     	; 0xbb4 <__stack+0x355>
     ba2:	08 94       	sec
     ba4:	61 08       	sbc	r6, r1
     ba6:	71 08       	sbc	r7, r1
     ba8:	81 08       	sbc	r8, r1
     baa:	91 08       	sbc	r9, r1
     bac:	a6 0e       	add	r10, r22
     bae:	b7 1e       	adc	r11, r23
     bb0:	c8 1e       	adc	r12, r24
     bb2:	d9 1e       	adc	r13, r25
     bb4:	d6 01       	movw	r26, r12
     bb6:	c5 01       	movw	r24, r10
     bb8:	82 1b       	sub	r24, r18
     bba:	93 0b       	sbc	r25, r19
     bbc:	a4 0b       	sbc	r26, r20
     bbe:	b5 0b       	sbc	r27, r21
     bc0:	89 8f       	std	Y+25, r24	; 0x19
     bc2:	9a 8f       	std	Y+26, r25	; 0x1a
     bc4:	ab 8f       	std	Y+27, r26	; 0x1b
     bc6:	bc 8f       	std	Y+28, r27	; 0x1c
     bc8:	d1 01       	movw	r26, r2
     bca:	99 27       	eor	r25, r25
     bcc:	88 27       	eor	r24, r24
     bce:	64 01       	movw	r12, r8
     bd0:	53 01       	movw	r10, r6
     bd2:	a8 2a       	or	r10, r24
     bd4:	b9 2a       	or	r11, r25
     bd6:	ca 2a       	or	r12, r26
     bd8:	db 2a       	or	r13, r27
     bda:	a9 aa       	std	Y+49, r10	; 0x31
     bdc:	ba aa       	std	Y+50, r11	; 0x32
     bde:	cb aa       	std	Y+51, r12	; 0x33
     be0:	dc aa       	std	Y+52, r13	; 0x34
     be2:	86 01       	movw	r16, r12
     be4:	75 01       	movw	r14, r10
     be6:	2f ef       	ldi	r18, 0xFF	; 255
     be8:	3f ef       	ldi	r19, 0xFF	; 255
     bea:	40 e0       	ldi	r20, 0x00	; 0
     bec:	50 e0       	ldi	r21, 0x00	; 0
     bee:	e2 22       	and	r14, r18
     bf0:	f3 22       	and	r15, r19
     bf2:	04 23       	and	r16, r20
     bf4:	15 23       	and	r17, r21
     bf6:	a6 01       	movw	r20, r12
     bf8:	66 27       	eor	r22, r22
     bfa:	77 27       	eor	r23, r23
     bfc:	6d 96       	adiw	r28, 0x1d	; 29
     bfe:	4c af       	std	Y+60, r20	; 0x3c
     c00:	5d af       	std	Y+61, r21	; 0x3d
     c02:	6e af       	std	Y+62, r22	; 0x3e
     c04:	7f af       	std	Y+63, r23	; 0x3f
     c06:	6d 97       	sbiw	r28, 0x1d	; 29
     c08:	a9 a0       	ldd	r10, Y+33	; 0x21
     c0a:	ba a0       	ldd	r11, Y+34	; 0x22
     c0c:	cb a0       	ldd	r12, Y+35	; 0x23
     c0e:	dc a0       	ldd	r13, Y+36	; 0x24
     c10:	6f ef       	ldi	r22, 0xFF	; 255
     c12:	7f ef       	ldi	r23, 0xFF	; 255
     c14:	80 e0       	ldi	r24, 0x00	; 0
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	a6 22       	and	r10, r22
     c1a:	b7 22       	and	r11, r23
     c1c:	c8 22       	and	r12, r24
     c1e:	d9 22       	and	r13, r25
     c20:	89 a1       	ldd	r24, Y+33	; 0x21
     c22:	9a a1       	ldd	r25, Y+34	; 0x22
     c24:	ab a1       	ldd	r26, Y+35	; 0x23
     c26:	bc a1       	ldd	r27, Y+36	; 0x24
     c28:	1d 01       	movw	r2, r26
     c2a:	44 24       	eor	r4, r4
     c2c:	55 24       	eor	r5, r5
     c2e:	c8 01       	movw	r24, r16
     c30:	b7 01       	movw	r22, r14
     c32:	a6 01       	movw	r20, r12
     c34:	95 01       	movw	r18, r10
     c36:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
     c3a:	69 96       	adiw	r28, 0x19	; 25
     c3c:	6c af       	std	Y+60, r22	; 0x3c
     c3e:	7d af       	std	Y+61, r23	; 0x3d
     c40:	8e af       	std	Y+62, r24	; 0x3e
     c42:	9f af       	std	Y+63, r25	; 0x3f
     c44:	69 97       	sbiw	r28, 0x19	; 25
     c46:	c8 01       	movw	r24, r16
     c48:	b7 01       	movw	r22, r14
     c4a:	a2 01       	movw	r20, r4
     c4c:	91 01       	movw	r18, r2
     c4e:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
     c52:	3b 01       	movw	r6, r22
     c54:	4c 01       	movw	r8, r24
     c56:	6d 96       	adiw	r28, 0x1d	; 29
     c58:	6c ad       	ldd	r22, Y+60	; 0x3c
     c5a:	7d ad       	ldd	r23, Y+61	; 0x3d
     c5c:	8e ad       	ldd	r24, Y+62	; 0x3e
     c5e:	9f ad       	ldd	r25, Y+63	; 0x3f
     c60:	6d 97       	sbiw	r28, 0x1d	; 29
     c62:	a6 01       	movw	r20, r12
     c64:	95 01       	movw	r18, r10
     c66:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
     c6a:	7b 01       	movw	r14, r22
     c6c:	8c 01       	movw	r16, r24
     c6e:	6d 96       	adiw	r28, 0x1d	; 29
     c70:	6c ad       	ldd	r22, Y+60	; 0x3c
     c72:	7d ad       	ldd	r23, Y+61	; 0x3d
     c74:	8e ad       	ldd	r24, Y+62	; 0x3e
     c76:	9f ad       	ldd	r25, Y+63	; 0x3f
     c78:	6d 97       	sbiw	r28, 0x1d	; 29
     c7a:	a2 01       	movw	r20, r4
     c7c:	91 01       	movw	r18, r2
     c7e:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
     c82:	5b 01       	movw	r10, r22
     c84:	6c 01       	movw	r12, r24
     c86:	a8 01       	movw	r20, r16
     c88:	97 01       	movw	r18, r14
     c8a:	26 0d       	add	r18, r6
     c8c:	37 1d       	adc	r19, r7
     c8e:	48 1d       	adc	r20, r8
     c90:	59 1d       	adc	r21, r9
     c92:	69 96       	adiw	r28, 0x19	; 25
     c94:	6c ac       	ldd	r6, Y+60	; 0x3c
     c96:	7d ac       	ldd	r7, Y+61	; 0x3d
     c98:	8e ac       	ldd	r8, Y+62	; 0x3e
     c9a:	9f ac       	ldd	r9, Y+63	; 0x3f
     c9c:	69 97       	sbiw	r28, 0x19	; 25
     c9e:	c4 01       	movw	r24, r8
     ca0:	aa 27       	eor	r26, r26
     ca2:	bb 27       	eor	r27, r27
     ca4:	28 0f       	add	r18, r24
     ca6:	39 1f       	adc	r19, r25
     ca8:	4a 1f       	adc	r20, r26
     caa:	5b 1f       	adc	r21, r27
     cac:	2e 15       	cp	r18, r14
     cae:	3f 05       	cpc	r19, r15
     cb0:	40 07       	cpc	r20, r16
     cb2:	51 07       	cpc	r21, r17
     cb4:	48 f4       	brcc	.+18     	; 0xcc8 <__stack+0x469>
     cb6:	e1 2c       	mov	r14, r1
     cb8:	f1 2c       	mov	r15, r1
     cba:	61 e0       	ldi	r22, 0x01	; 1
     cbc:	06 2f       	mov	r16, r22
     cbe:	11 2d       	mov	r17, r1
     cc0:	ae 0c       	add	r10, r14
     cc2:	bf 1c       	adc	r11, r15
     cc4:	c0 1e       	adc	r12, r16
     cc6:	d1 1e       	adc	r13, r17
     cc8:	ca 01       	movw	r24, r20
     cca:	aa 27       	eor	r26, r26
     ccc:	bb 27       	eor	r27, r27
     cce:	bc 01       	movw	r22, r24
     cd0:	cd 01       	movw	r24, r26
     cd2:	6a 0d       	add	r22, r10
     cd4:	7b 1d       	adc	r23, r11
     cd6:	8c 1d       	adc	r24, r12
     cd8:	9d 1d       	adc	r25, r13
     cda:	69 8c       	ldd	r6, Y+25	; 0x19
     cdc:	7a 8c       	ldd	r7, Y+26	; 0x1a
     cde:	8b 8c       	ldd	r8, Y+27	; 0x1b
     ce0:	9c 8c       	ldd	r9, Y+28	; 0x1c
     ce2:	66 16       	cp	r6, r22
     ce4:	77 06       	cpc	r7, r23
     ce6:	88 06       	cpc	r8, r24
     ce8:	99 06       	cpc	r9, r25
     cea:	40 f1       	brcs	.+80     	; 0xd3c <__stack+0x4dd>
     cec:	66 15       	cp	r22, r6
     cee:	77 05       	cpc	r23, r7
     cf0:	88 05       	cpc	r24, r8
     cf2:	99 05       	cpc	r25, r9
     cf4:	09 f0       	breq	.+2      	; 0xcf8 <__stack+0x499>
     cf6:	43 c0       	rjmp	.+134    	; 0xd7e <__stack+0x51f>
     cf8:	d9 01       	movw	r26, r18
     cfa:	99 27       	eor	r25, r25
     cfc:	88 27       	eor	r24, r24
     cfe:	69 96       	adiw	r28, 0x19	; 25
     d00:	2c ad       	ldd	r18, Y+60	; 0x3c
     d02:	3d ad       	ldd	r19, Y+61	; 0x3d
     d04:	4e ad       	ldd	r20, Y+62	; 0x3e
     d06:	5f ad       	ldd	r21, Y+63	; 0x3f
     d08:	69 97       	sbiw	r28, 0x19	; 25
     d0a:	40 70       	andi	r20, 0x00	; 0
     d0c:	50 70       	andi	r21, 0x00	; 0
     d0e:	82 0f       	add	r24, r18
     d10:	93 1f       	adc	r25, r19
     d12:	a4 1f       	adc	r26, r20
     d14:	b5 1f       	adc	r27, r21
     d16:	2d a5       	ldd	r18, Y+45	; 0x2d
     d18:	3e a5       	ldd	r19, Y+46	; 0x2e
     d1a:	4f a5       	ldd	r20, Y+47	; 0x2f
     d1c:	58 a9       	ldd	r21, Y+48	; 0x30
     d1e:	6e 96       	adiw	r28, 0x1e	; 30
     d20:	0f ac       	ldd	r0, Y+63	; 0x3f
     d22:	6e 97       	sbiw	r28, 0x1e	; 30
     d24:	04 c0       	rjmp	.+8      	; 0xd2e <__stack+0x4cf>
     d26:	22 0f       	add	r18, r18
     d28:	33 1f       	adc	r19, r19
     d2a:	44 1f       	adc	r20, r20
     d2c:	55 1f       	adc	r21, r21
     d2e:	0a 94       	dec	r0
     d30:	d2 f7       	brpl	.-12     	; 0xd26 <__stack+0x4c7>
     d32:	28 17       	cp	r18, r24
     d34:	39 07       	cpc	r19, r25
     d36:	4a 07       	cpc	r20, r26
     d38:	5b 07       	cpc	r21, r27
     d3a:	08 f5       	brcc	.+66     	; 0xd7e <__stack+0x51f>
     d3c:	09 a9       	ldd	r16, Y+49	; 0x31
     d3e:	1a a9       	ldd	r17, Y+50	; 0x32
     d40:	2b a9       	ldd	r18, Y+51	; 0x33
     d42:	3c a9       	ldd	r19, Y+52	; 0x34
     d44:	01 50       	subi	r16, 0x01	; 1
     d46:	10 40       	sbci	r17, 0x00	; 0
     d48:	20 40       	sbci	r18, 0x00	; 0
     d4a:	30 40       	sbci	r19, 0x00	; 0
     d4c:	09 ab       	std	Y+49, r16	; 0x31
     d4e:	1a ab       	std	Y+50, r17	; 0x32
     d50:	2b ab       	std	Y+51, r18	; 0x33
     d52:	3c ab       	std	Y+52, r19	; 0x34
     d54:	14 c0       	rjmp	.+40     	; 0xd7e <__stack+0x51f>
     d56:	66 24       	eor	r6, r6
     d58:	77 24       	eor	r7, r7
     d5a:	43 01       	movw	r8, r6
     d5c:	21 e0       	ldi	r18, 0x01	; 1
     d5e:	30 e0       	ldi	r19, 0x00	; 0
     d60:	40 e0       	ldi	r20, 0x00	; 0
     d62:	50 e0       	ldi	r21, 0x00	; 0
     d64:	29 ab       	std	Y+49, r18	; 0x31
     d66:	3a ab       	std	Y+50, r19	; 0x32
     d68:	4b ab       	std	Y+51, r20	; 0x33
     d6a:	5c ab       	std	Y+52, r21	; 0x34
     d6c:	0b c0       	rjmp	.+22     	; 0xd84 <__stack+0x525>
     d6e:	66 24       	eor	r6, r6
     d70:	77 24       	eor	r7, r7
     d72:	43 01       	movw	r8, r6
     d74:	19 aa       	std	Y+49, r1	; 0x31
     d76:	1a aa       	std	Y+50, r1	; 0x32
     d78:	1b aa       	std	Y+51, r1	; 0x33
     d7a:	1c aa       	std	Y+52, r1	; 0x34
     d7c:	03 c0       	rjmp	.+6      	; 0xd84 <__stack+0x525>
     d7e:	66 24       	eor	r6, r6
     d80:	77 24       	eor	r7, r7
     d82:	43 01       	movw	r8, r6
     d84:	fe 01       	movw	r30, r28
     d86:	71 96       	adiw	r30, 0x11	; 17
     d88:	88 e0       	ldi	r24, 0x08	; 8
     d8a:	df 01       	movw	r26, r30
     d8c:	1d 92       	st	X+, r1
     d8e:	8a 95       	dec	r24
     d90:	e9 f7       	brne	.-6      	; 0xd8c <__stack+0x52d>
     d92:	a9 a8       	ldd	r10, Y+49	; 0x31
     d94:	ba a8       	ldd	r11, Y+50	; 0x32
     d96:	cb a8       	ldd	r12, Y+51	; 0x33
     d98:	dc a8       	ldd	r13, Y+52	; 0x34
     d9a:	a9 8a       	std	Y+17, r10	; 0x11
     d9c:	ba 8a       	std	Y+18, r11	; 0x12
     d9e:	cb 8a       	std	Y+19, r12	; 0x13
     da0:	dc 8a       	std	Y+20, r13	; 0x14
     da2:	6d 8a       	std	Y+21, r6	; 0x15
     da4:	7e 8a       	std	Y+22, r7	; 0x16
     da6:	8f 8a       	std	Y+23, r8	; 0x17
     da8:	98 8e       	std	Y+24, r9	; 0x18
     daa:	29 a9       	ldd	r18, Y+49	; 0x31
     dac:	3a 89       	ldd	r19, Y+18	; 0x12
     dae:	4b 89       	ldd	r20, Y+19	; 0x13
     db0:	5c 89       	ldd	r21, Y+20	; 0x14
     db2:	66 2d       	mov	r22, r6
     db4:	7e 89       	ldd	r23, Y+22	; 0x16
     db6:	8f 89       	ldd	r24, Y+23	; 0x17
     db8:	98 8d       	ldd	r25, Y+24	; 0x18
     dba:	c2 5a       	subi	r28, 0xA2	; 162
     dbc:	df 4f       	sbci	r29, 0xFF	; 255
     dbe:	e2 e1       	ldi	r30, 0x12	; 18
     dc0:	0c 94 78 3b 	jmp	0x76f0	; 0x76f0 <__epilogue_restores__>

00000dc4 <__umoddi3>:
     dc4:	ab e5       	ldi	r26, 0x5B	; 91
     dc6:	b0 e0       	ldi	r27, 0x00	; 0
     dc8:	e8 ee       	ldi	r30, 0xE8	; 232
     dca:	f6 e0       	ldi	r31, 0x06	; 6
     dcc:	0c 94 5c 3b 	jmp	0x76b8	; 0x76b8 <__prologue_saves__>
     dd0:	a8 e0       	ldi	r26, 0x08	; 8
     dd2:	4e 01       	movw	r8, r28
     dd4:	08 94       	sec
     dd6:	81 1c       	adc	r8, r1
     dd8:	91 1c       	adc	r9, r1
     dda:	f4 01       	movw	r30, r8
     ddc:	6a 2e       	mov	r6, r26
     dde:	11 92       	st	Z+, r1
     de0:	6a 94       	dec	r6
     de2:	e9 f7       	brne	.-6      	; 0xdde <__umoddi3+0x1a>
     de4:	29 83       	std	Y+1, r18	; 0x01
     de6:	3a 83       	std	Y+2, r19	; 0x02
     de8:	4b 83       	std	Y+3, r20	; 0x03
     dea:	5c 83       	std	Y+4, r21	; 0x04
     dec:	6d 83       	std	Y+5, r22	; 0x05
     dee:	7e 83       	std	Y+6, r23	; 0x06
     df0:	8f 83       	std	Y+7, r24	; 0x07
     df2:	98 87       	std	Y+8, r25	; 0x08
     df4:	ce 01       	movw	r24, r28
     df6:	09 96       	adiw	r24, 0x09	; 9
     df8:	fc 01       	movw	r30, r24
     dfa:	11 92       	st	Z+, r1
     dfc:	aa 95       	dec	r26
     dfe:	e9 f7       	brne	.-6      	; 0xdfa <__umoddi3+0x36>
     e00:	a9 86       	std	Y+9, r10	; 0x09
     e02:	ba 86       	std	Y+10, r11	; 0x0a
     e04:	cb 86       	std	Y+11, r12	; 0x0b
     e06:	dc 86       	std	Y+12, r13	; 0x0c
     e08:	ed 86       	std	Y+13, r14	; 0x0d
     e0a:	fe 86       	std	Y+14, r15	; 0x0e
     e0c:	0f 87       	std	Y+15, r16	; 0x0f
     e0e:	18 8b       	std	Y+16, r17	; 0x10
     e10:	29 84       	ldd	r2, Y+9	; 0x09
     e12:	3a 84       	ldd	r3, Y+10	; 0x0a
     e14:	4b 84       	ldd	r4, Y+11	; 0x0b
     e16:	5c 84       	ldd	r5, Y+12	; 0x0c
     e18:	ad 84       	ldd	r10, Y+13	; 0x0d
     e1a:	be 84       	ldd	r11, Y+14	; 0x0e
     e1c:	cf 84       	ldd	r12, Y+15	; 0x0f
     e1e:	d8 88       	ldd	r13, Y+16	; 0x10
     e20:	29 81       	ldd	r18, Y+1	; 0x01
     e22:	3a 81       	ldd	r19, Y+2	; 0x02
     e24:	4b 81       	ldd	r20, Y+3	; 0x03
     e26:	5c 81       	ldd	r21, Y+4	; 0x04
     e28:	69 96       	adiw	r28, 0x19	; 25
     e2a:	2f af       	std	Y+63, r18	; 0x3f
     e2c:	69 97       	sbiw	r28, 0x19	; 25
     e2e:	6a 96       	adiw	r28, 0x1a	; 26
     e30:	3f af       	std	Y+63, r19	; 0x3f
     e32:	6a 97       	sbiw	r28, 0x1a	; 26
     e34:	6b 96       	adiw	r28, 0x1b	; 27
     e36:	4f af       	std	Y+63, r20	; 0x3f
     e38:	6b 97       	sbiw	r28, 0x1b	; 27
     e3a:	6c 96       	adiw	r28, 0x1c	; 28
     e3c:	5f af       	std	Y+63, r21	; 0x3f
     e3e:	6c 97       	sbiw	r28, 0x1c	; 28
     e40:	6c 96       	adiw	r28, 0x1c	; 28
     e42:	6c ac       	ldd	r6, Y+60	; 0x3c
     e44:	7d ac       	ldd	r7, Y+61	; 0x3d
     e46:	8e ac       	ldd	r8, Y+62	; 0x3e
     e48:	9f ac       	ldd	r9, Y+63	; 0x3f
     e4a:	6c 97       	sbiw	r28, 0x1c	; 28
     e4c:	69 aa       	std	Y+49, r6	; 0x31
     e4e:	7a aa       	std	Y+50, r7	; 0x32
     e50:	8b aa       	std	Y+51, r8	; 0x33
     e52:	9c aa       	std	Y+52, r9	; 0x34
     e54:	6d 81       	ldd	r22, Y+5	; 0x05
     e56:	7e 81       	ldd	r23, Y+6	; 0x06
     e58:	8f 81       	ldd	r24, Y+7	; 0x07
     e5a:	98 85       	ldd	r25, Y+8	; 0x08
     e5c:	3b 01       	movw	r6, r22
     e5e:	4c 01       	movw	r8, r24
     e60:	6d aa       	std	Y+53, r6	; 0x35
     e62:	7e aa       	std	Y+54, r7	; 0x36
     e64:	8f aa       	std	Y+55, r8	; 0x37
     e66:	98 ae       	std	Y+56, r9	; 0x38
     e68:	a1 14       	cp	r10, r1
     e6a:	b1 04       	cpc	r11, r1
     e6c:	c1 04       	cpc	r12, r1
     e6e:	d1 04       	cpc	r13, r1
     e70:	09 f0       	breq	.+2      	; 0xe74 <__umoddi3+0xb0>
     e72:	04 c3       	rjmp	.+1544   	; 0x147c <__umoddi3+0x6b8>
     e74:	62 14       	cp	r6, r2
     e76:	73 04       	cpc	r7, r3
     e78:	84 04       	cpc	r8, r4
     e7a:	95 04       	cpc	r9, r5
     e7c:	08 f0       	brcs	.+2      	; 0xe80 <__umoddi3+0xbc>
     e7e:	00 c1       	rjmp	.+512    	; 0x1080 <__umoddi3+0x2bc>
     e80:	00 e0       	ldi	r16, 0x00	; 0
     e82:	20 16       	cp	r2, r16
     e84:	00 e0       	ldi	r16, 0x00	; 0
     e86:	30 06       	cpc	r3, r16
     e88:	01 e0       	ldi	r16, 0x01	; 1
     e8a:	40 06       	cpc	r4, r16
     e8c:	00 e0       	ldi	r16, 0x00	; 0
     e8e:	50 06       	cpc	r5, r16
     e90:	88 f4       	brcc	.+34     	; 0xeb4 <__umoddi3+0xf0>
     e92:	1f ef       	ldi	r17, 0xFF	; 255
     e94:	21 16       	cp	r2, r17
     e96:	31 04       	cpc	r3, r1
     e98:	41 04       	cpc	r4, r1
     e9a:	51 04       	cpc	r5, r1
     e9c:	39 f0       	breq	.+14     	; 0xeac <__umoddi3+0xe8>
     e9e:	30 f0       	brcs	.+12     	; 0xeac <__umoddi3+0xe8>
     ea0:	88 e0       	ldi	r24, 0x08	; 8
     ea2:	e8 2e       	mov	r14, r24
     ea4:	f1 2c       	mov	r15, r1
     ea6:	01 2d       	mov	r16, r1
     ea8:	11 2d       	mov	r17, r1
     eaa:	18 c0       	rjmp	.+48     	; 0xedc <__umoddi3+0x118>
     eac:	ee 24       	eor	r14, r14
     eae:	ff 24       	eor	r15, r15
     eb0:	87 01       	movw	r16, r14
     eb2:	14 c0       	rjmp	.+40     	; 0xedc <__umoddi3+0x118>
     eb4:	40 e0       	ldi	r20, 0x00	; 0
     eb6:	24 16       	cp	r2, r20
     eb8:	40 e0       	ldi	r20, 0x00	; 0
     eba:	34 06       	cpc	r3, r20
     ebc:	40 e0       	ldi	r20, 0x00	; 0
     ebe:	44 06       	cpc	r4, r20
     ec0:	41 e0       	ldi	r20, 0x01	; 1
     ec2:	54 06       	cpc	r5, r20
     ec4:	30 f0       	brcs	.+12     	; 0xed2 <__umoddi3+0x10e>
     ec6:	b8 e1       	ldi	r27, 0x18	; 24
     ec8:	eb 2e       	mov	r14, r27
     eca:	f1 2c       	mov	r15, r1
     ecc:	01 2d       	mov	r16, r1
     ece:	11 2d       	mov	r17, r1
     ed0:	05 c0       	rjmp	.+10     	; 0xedc <__umoddi3+0x118>
     ed2:	a0 e1       	ldi	r26, 0x10	; 16
     ed4:	ea 2e       	mov	r14, r26
     ed6:	f1 2c       	mov	r15, r1
     ed8:	01 2d       	mov	r16, r1
     eda:	11 2d       	mov	r17, r1
     edc:	d2 01       	movw	r26, r4
     ede:	c1 01       	movw	r24, r2
     ee0:	0e 2c       	mov	r0, r14
     ee2:	04 c0       	rjmp	.+8      	; 0xeec <__umoddi3+0x128>
     ee4:	b6 95       	lsr	r27
     ee6:	a7 95       	ror	r26
     ee8:	97 95       	ror	r25
     eea:	87 95       	ror	r24
     eec:	0a 94       	dec	r0
     eee:	d2 f7       	brpl	.-12     	; 0xee4 <__umoddi3+0x120>
     ef0:	8e 58       	subi	r24, 0x8E	; 142
     ef2:	9e 4f       	sbci	r25, 0xFE	; 254
     ef4:	dc 01       	movw	r26, r24
     ef6:	2c 91       	ld	r18, X
     ef8:	80 e2       	ldi	r24, 0x20	; 32
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	a0 e0       	ldi	r26, 0x00	; 0
     efe:	b0 e0       	ldi	r27, 0x00	; 0
     f00:	8e 19       	sub	r24, r14
     f02:	9f 09       	sbc	r25, r15
     f04:	a0 0b       	sbc	r26, r16
     f06:	b1 0b       	sbc	r27, r17
     f08:	5c 01       	movw	r10, r24
     f0a:	6d 01       	movw	r12, r26
     f0c:	a2 1a       	sub	r10, r18
     f0e:	b1 08       	sbc	r11, r1
     f10:	c1 08       	sbc	r12, r1
     f12:	d1 08       	sbc	r13, r1
     f14:	a9 ae       	std	Y+57, r10	; 0x39
     f16:	ba ae       	std	Y+58, r11	; 0x3a
     f18:	cb ae       	std	Y+59, r12	; 0x3b
     f1a:	dc ae       	std	Y+60, r13	; 0x3c
     f1c:	a1 14       	cp	r10, r1
     f1e:	b1 04       	cpc	r11, r1
     f20:	c1 04       	cpc	r12, r1
     f22:	d1 04       	cpc	r13, r1
     f24:	09 f4       	brne	.+2      	; 0xf28 <__umoddi3+0x164>
     f26:	3f c0       	rjmp	.+126    	; 0xfa6 <__umoddi3+0x1e2>
     f28:	69 ad       	ldd	r22, Y+57	; 0x39
     f2a:	06 2e       	mov	r0, r22
     f2c:	04 c0       	rjmp	.+8      	; 0xf36 <__umoddi3+0x172>
     f2e:	22 0c       	add	r2, r2
     f30:	33 1c       	adc	r3, r3
     f32:	44 1c       	adc	r4, r4
     f34:	55 1c       	adc	r5, r5
     f36:	0a 94       	dec	r0
     f38:	d2 f7       	brpl	.-12     	; 0xf2e <__umoddi3+0x16a>
     f3a:	a4 01       	movw	r20, r8
     f3c:	93 01       	movw	r18, r6
     f3e:	06 2e       	mov	r0, r22
     f40:	04 c0       	rjmp	.+8      	; 0xf4a <__umoddi3+0x186>
     f42:	22 0f       	add	r18, r18
     f44:	33 1f       	adc	r19, r19
     f46:	44 1f       	adc	r20, r20
     f48:	55 1f       	adc	r21, r21
     f4a:	0a 94       	dec	r0
     f4c:	d2 f7       	brpl	.-12     	; 0xf42 <__umoddi3+0x17e>
     f4e:	80 e2       	ldi	r24, 0x20	; 32
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	8a 19       	sub	r24, r10
     f54:	9b 09       	sbc	r25, r11
     f56:	6c 96       	adiw	r28, 0x1c	; 28
     f58:	cc ac       	ldd	r12, Y+60	; 0x3c
     f5a:	dd ac       	ldd	r13, Y+61	; 0x3d
     f5c:	ee ac       	ldd	r14, Y+62	; 0x3e
     f5e:	ff ac       	ldd	r15, Y+63	; 0x3f
     f60:	6c 97       	sbiw	r28, 0x1c	; 28
     f62:	04 c0       	rjmp	.+8      	; 0xf6c <__umoddi3+0x1a8>
     f64:	f6 94       	lsr	r15
     f66:	e7 94       	ror	r14
     f68:	d7 94       	ror	r13
     f6a:	c7 94       	ror	r12
     f6c:	8a 95       	dec	r24
     f6e:	d2 f7       	brpl	.-12     	; 0xf64 <__umoddi3+0x1a0>
     f70:	87 01       	movw	r16, r14
     f72:	76 01       	movw	r14, r12
     f74:	e2 2a       	or	r14, r18
     f76:	f3 2a       	or	r15, r19
     f78:	04 2b       	or	r16, r20
     f7a:	15 2b       	or	r17, r21
     f7c:	ed aa       	std	Y+53, r14	; 0x35
     f7e:	fe aa       	std	Y+54, r15	; 0x36
     f80:	0f ab       	std	Y+55, r16	; 0x37
     f82:	18 af       	std	Y+56, r17	; 0x38
     f84:	6c 96       	adiw	r28, 0x1c	; 28
     f86:	8c ad       	ldd	r24, Y+60	; 0x3c
     f88:	9d ad       	ldd	r25, Y+61	; 0x3d
     f8a:	ae ad       	ldd	r26, Y+62	; 0x3e
     f8c:	bf ad       	ldd	r27, Y+63	; 0x3f
     f8e:	6c 97       	sbiw	r28, 0x1c	; 28
     f90:	04 c0       	rjmp	.+8      	; 0xf9a <__umoddi3+0x1d6>
     f92:	88 0f       	add	r24, r24
     f94:	99 1f       	adc	r25, r25
     f96:	aa 1f       	adc	r26, r26
     f98:	bb 1f       	adc	r27, r27
     f9a:	6a 95       	dec	r22
     f9c:	d2 f7       	brpl	.-12     	; 0xf92 <__umoddi3+0x1ce>
     f9e:	89 ab       	std	Y+49, r24	; 0x31
     fa0:	9a ab       	std	Y+50, r25	; 0x32
     fa2:	ab ab       	std	Y+51, r26	; 0x33
     fa4:	bc ab       	std	Y+52, r27	; 0x34
     fa6:	32 01       	movw	r6, r4
     fa8:	88 24       	eor	r8, r8
     faa:	99 24       	eor	r9, r9
     fac:	b2 01       	movw	r22, r4
     fae:	a1 01       	movw	r20, r2
     fb0:	60 70       	andi	r22, 0x00	; 0
     fb2:	70 70       	andi	r23, 0x00	; 0
     fb4:	21 96       	adiw	r28, 0x01	; 1
     fb6:	4c af       	std	Y+60, r20	; 0x3c
     fb8:	5d af       	std	Y+61, r21	; 0x3d
     fba:	6e af       	std	Y+62, r22	; 0x3e
     fbc:	7f af       	std	Y+63, r23	; 0x3f
     fbe:	21 97       	sbiw	r28, 0x01	; 1
     fc0:	6d a9       	ldd	r22, Y+53	; 0x35
     fc2:	7e a9       	ldd	r23, Y+54	; 0x36
     fc4:	8f a9       	ldd	r24, Y+55	; 0x37
     fc6:	98 ad       	ldd	r25, Y+56	; 0x38
     fc8:	a4 01       	movw	r20, r8
     fca:	93 01       	movw	r18, r6
     fcc:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     fd0:	7b 01       	movw	r14, r22
     fd2:	8c 01       	movw	r16, r24
     fd4:	6d a9       	ldd	r22, Y+53	; 0x35
     fd6:	7e a9       	ldd	r23, Y+54	; 0x36
     fd8:	8f a9       	ldd	r24, Y+55	; 0x37
     fda:	98 ad       	ldd	r25, Y+56	; 0x38
     fdc:	a4 01       	movw	r20, r8
     fde:	93 01       	movw	r18, r6
     fe0:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
     fe4:	ca 01       	movw	r24, r20
     fe6:	b9 01       	movw	r22, r18
     fe8:	21 96       	adiw	r28, 0x01	; 1
     fea:	2c ad       	ldd	r18, Y+60	; 0x3c
     fec:	3d ad       	ldd	r19, Y+61	; 0x3d
     fee:	4e ad       	ldd	r20, Y+62	; 0x3e
     ff0:	5f ad       	ldd	r21, Y+63	; 0x3f
     ff2:	21 97       	sbiw	r28, 0x01	; 1
     ff4:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
     ff8:	9b 01       	movw	r18, r22
     ffa:	ac 01       	movw	r20, r24
     ffc:	87 01       	movw	r16, r14
     ffe:	ff 24       	eor	r15, r15
    1000:	ee 24       	eor	r14, r14
    1002:	a9 a8       	ldd	r10, Y+49	; 0x31
    1004:	ba a8       	ldd	r11, Y+50	; 0x32
    1006:	cb a8       	ldd	r12, Y+51	; 0x33
    1008:	dc a8       	ldd	r13, Y+52	; 0x34
    100a:	c6 01       	movw	r24, r12
    100c:	aa 27       	eor	r26, r26
    100e:	bb 27       	eor	r27, r27
    1010:	57 01       	movw	r10, r14
    1012:	68 01       	movw	r12, r16
    1014:	a8 2a       	or	r10, r24
    1016:	b9 2a       	or	r11, r25
    1018:	ca 2a       	or	r12, r26
    101a:	db 2a       	or	r13, r27
    101c:	a2 16       	cp	r10, r18
    101e:	b3 06       	cpc	r11, r19
    1020:	c4 06       	cpc	r12, r20
    1022:	d5 06       	cpc	r13, r21
    1024:	90 f4       	brcc	.+36     	; 0x104a <__umoddi3+0x286>
    1026:	a2 0c       	add	r10, r2
    1028:	b3 1c       	adc	r11, r3
    102a:	c4 1c       	adc	r12, r4
    102c:	d5 1c       	adc	r13, r5
    102e:	a2 14       	cp	r10, r2
    1030:	b3 04       	cpc	r11, r3
    1032:	c4 04       	cpc	r12, r4
    1034:	d5 04       	cpc	r13, r5
    1036:	48 f0       	brcs	.+18     	; 0x104a <__umoddi3+0x286>
    1038:	a2 16       	cp	r10, r18
    103a:	b3 06       	cpc	r11, r19
    103c:	c4 06       	cpc	r12, r20
    103e:	d5 06       	cpc	r13, r21
    1040:	20 f4       	brcc	.+8      	; 0x104a <__umoddi3+0x286>
    1042:	a2 0c       	add	r10, r2
    1044:	b3 1c       	adc	r11, r3
    1046:	c4 1c       	adc	r12, r4
    1048:	d5 1c       	adc	r13, r5
    104a:	a2 1a       	sub	r10, r18
    104c:	b3 0a       	sbc	r11, r19
    104e:	c4 0a       	sbc	r12, r20
    1050:	d5 0a       	sbc	r13, r21
    1052:	c6 01       	movw	r24, r12
    1054:	b5 01       	movw	r22, r10
    1056:	a4 01       	movw	r20, r8
    1058:	93 01       	movw	r18, r6
    105a:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
    105e:	7b 01       	movw	r14, r22
    1060:	8c 01       	movw	r16, r24
    1062:	c6 01       	movw	r24, r12
    1064:	b5 01       	movw	r22, r10
    1066:	a4 01       	movw	r20, r8
    1068:	93 01       	movw	r18, r6
    106a:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
    106e:	ca 01       	movw	r24, r20
    1070:	b9 01       	movw	r22, r18
    1072:	21 96       	adiw	r28, 0x01	; 1
    1074:	2c ad       	ldd	r18, Y+60	; 0x3c
    1076:	3d ad       	ldd	r19, Y+61	; 0x3d
    1078:	4e ad       	ldd	r20, Y+62	; 0x3e
    107a:	5f ad       	ldd	r21, Y+63	; 0x3f
    107c:	21 97       	sbiw	r28, 0x01	; 1
    107e:	ba c1       	rjmp	.+884    	; 0x13f4 <__umoddi3+0x630>
    1080:	21 14       	cp	r2, r1
    1082:	31 04       	cpc	r3, r1
    1084:	41 04       	cpc	r4, r1
    1086:	51 04       	cpc	r5, r1
    1088:	71 f4       	brne	.+28     	; 0x10a6 <__umoddi3+0x2e2>
    108a:	61 e0       	ldi	r22, 0x01	; 1
    108c:	70 e0       	ldi	r23, 0x00	; 0
    108e:	80 e0       	ldi	r24, 0x00	; 0
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	20 e0       	ldi	r18, 0x00	; 0
    1094:	30 e0       	ldi	r19, 0x00	; 0
    1096:	40 e0       	ldi	r20, 0x00	; 0
    1098:	50 e0       	ldi	r21, 0x00	; 0
    109a:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
    109e:	c9 01       	movw	r24, r18
    10a0:	da 01       	movw	r26, r20
    10a2:	1c 01       	movw	r2, r24
    10a4:	2d 01       	movw	r4, r26
    10a6:	00 e0       	ldi	r16, 0x00	; 0
    10a8:	20 16       	cp	r2, r16
    10aa:	00 e0       	ldi	r16, 0x00	; 0
    10ac:	30 06       	cpc	r3, r16
    10ae:	01 e0       	ldi	r16, 0x01	; 1
    10b0:	40 06       	cpc	r4, r16
    10b2:	00 e0       	ldi	r16, 0x00	; 0
    10b4:	50 06       	cpc	r5, r16
    10b6:	88 f4       	brcc	.+34     	; 0x10da <__umoddi3+0x316>
    10b8:	1f ef       	ldi	r17, 0xFF	; 255
    10ba:	21 16       	cp	r2, r17
    10bc:	31 04       	cpc	r3, r1
    10be:	41 04       	cpc	r4, r1
    10c0:	51 04       	cpc	r5, r1
    10c2:	39 f0       	breq	.+14     	; 0x10d2 <__umoddi3+0x30e>
    10c4:	30 f0       	brcs	.+12     	; 0x10d2 <__umoddi3+0x30e>
    10c6:	68 e0       	ldi	r22, 0x08	; 8
    10c8:	e6 2e       	mov	r14, r22
    10ca:	f1 2c       	mov	r15, r1
    10cc:	01 2d       	mov	r16, r1
    10ce:	11 2d       	mov	r17, r1
    10d0:	18 c0       	rjmp	.+48     	; 0x1102 <__umoddi3+0x33e>
    10d2:	ee 24       	eor	r14, r14
    10d4:	ff 24       	eor	r15, r15
    10d6:	87 01       	movw	r16, r14
    10d8:	14 c0       	rjmp	.+40     	; 0x1102 <__umoddi3+0x33e>
    10da:	40 e0       	ldi	r20, 0x00	; 0
    10dc:	24 16       	cp	r2, r20
    10de:	40 e0       	ldi	r20, 0x00	; 0
    10e0:	34 06       	cpc	r3, r20
    10e2:	40 e0       	ldi	r20, 0x00	; 0
    10e4:	44 06       	cpc	r4, r20
    10e6:	41 e0       	ldi	r20, 0x01	; 1
    10e8:	54 06       	cpc	r5, r20
    10ea:	30 f0       	brcs	.+12     	; 0x10f8 <__umoddi3+0x334>
    10ec:	58 e1       	ldi	r21, 0x18	; 24
    10ee:	e5 2e       	mov	r14, r21
    10f0:	f1 2c       	mov	r15, r1
    10f2:	01 2d       	mov	r16, r1
    10f4:	11 2d       	mov	r17, r1
    10f6:	05 c0       	rjmp	.+10     	; 0x1102 <__umoddi3+0x33e>
    10f8:	40 e1       	ldi	r20, 0x10	; 16
    10fa:	e4 2e       	mov	r14, r20
    10fc:	f1 2c       	mov	r15, r1
    10fe:	01 2d       	mov	r16, r1
    1100:	11 2d       	mov	r17, r1
    1102:	d2 01       	movw	r26, r4
    1104:	c1 01       	movw	r24, r2
    1106:	0e 2c       	mov	r0, r14
    1108:	04 c0       	rjmp	.+8      	; 0x1112 <__umoddi3+0x34e>
    110a:	b6 95       	lsr	r27
    110c:	a7 95       	ror	r26
    110e:	97 95       	ror	r25
    1110:	87 95       	ror	r24
    1112:	0a 94       	dec	r0
    1114:	d2 f7       	brpl	.-12     	; 0x110a <__umoddi3+0x346>
    1116:	8e 58       	subi	r24, 0x8E	; 142
    1118:	9e 4f       	sbci	r25, 0xFE	; 254
    111a:	dc 01       	movw	r26, r24
    111c:	2c 91       	ld	r18, X
    111e:	30 e2       	ldi	r19, 0x20	; 32
    1120:	a3 2e       	mov	r10, r19
    1122:	b1 2c       	mov	r11, r1
    1124:	c1 2c       	mov	r12, r1
    1126:	d1 2c       	mov	r13, r1
    1128:	d6 01       	movw	r26, r12
    112a:	c5 01       	movw	r24, r10
    112c:	8e 19       	sub	r24, r14
    112e:	9f 09       	sbc	r25, r15
    1130:	a0 0b       	sbc	r26, r16
    1132:	b1 0b       	sbc	r27, r17
    1134:	7c 01       	movw	r14, r24
    1136:	8d 01       	movw	r16, r26
    1138:	e2 1a       	sub	r14, r18
    113a:	f1 08       	sbc	r15, r1
    113c:	01 09       	sbc	r16, r1
    113e:	11 09       	sbc	r17, r1
    1140:	e9 ae       	std	Y+57, r14	; 0x39
    1142:	fa ae       	std	Y+58, r15	; 0x3a
    1144:	0b af       	std	Y+59, r16	; 0x3b
    1146:	1c af       	std	Y+60, r17	; 0x3c
    1148:	e1 14       	cp	r14, r1
    114a:	f1 04       	cpc	r15, r1
    114c:	01 05       	cpc	r16, r1
    114e:	11 05       	cpc	r17, r1
    1150:	39 f4       	brne	.+14     	; 0x1160 <__umoddi3+0x39c>
    1152:	64 01       	movw	r12, r8
    1154:	53 01       	movw	r10, r6
    1156:	a2 18       	sub	r10, r2
    1158:	b3 08       	sbc	r11, r3
    115a:	c4 08       	sbc	r12, r4
    115c:	d5 08       	sbc	r13, r5
    115e:	e2 c0       	rjmp	.+452    	; 0x1324 <__umoddi3+0x560>
    1160:	f9 ac       	ldd	r15, Y+57	; 0x39
    1162:	68 96       	adiw	r28, 0x18	; 24
    1164:	ff ae       	std	Y+63, r15	; 0x3f
    1166:	68 97       	sbiw	r28, 0x18	; 24
    1168:	0f 2c       	mov	r0, r15
    116a:	04 c0       	rjmp	.+8      	; 0x1174 <__umoddi3+0x3b0>
    116c:	22 0c       	add	r2, r2
    116e:	33 1c       	adc	r3, r3
    1170:	44 1c       	adc	r4, r4
    1172:	55 1c       	adc	r5, r5
    1174:	0a 94       	dec	r0
    1176:	d2 f7       	brpl	.-12     	; 0x116c <__umoddi3+0x3a8>
    1178:	8a 2d       	mov	r24, r10
    117a:	8f 19       	sub	r24, r15
    117c:	64 01       	movw	r12, r8
    117e:	53 01       	movw	r10, r6
    1180:	08 2e       	mov	r0, r24
    1182:	04 c0       	rjmp	.+8      	; 0x118c <__umoddi3+0x3c8>
    1184:	d6 94       	lsr	r13
    1186:	c7 94       	ror	r12
    1188:	b7 94       	ror	r11
    118a:	a7 94       	ror	r10
    118c:	0a 94       	dec	r0
    118e:	d2 f7       	brpl	.-12     	; 0x1184 <__umoddi3+0x3c0>
    1190:	a4 01       	movw	r20, r8
    1192:	93 01       	movw	r18, r6
    1194:	04 c0       	rjmp	.+8      	; 0x119e <__umoddi3+0x3da>
    1196:	22 0f       	add	r18, r18
    1198:	33 1f       	adc	r19, r19
    119a:	44 1f       	adc	r20, r20
    119c:	55 1f       	adc	r21, r21
    119e:	fa 94       	dec	r15
    11a0:	d2 f7       	brpl	.-12     	; 0x1196 <__umoddi3+0x3d2>
    11a2:	6c 96       	adiw	r28, 0x1c	; 28
    11a4:	6c ac       	ldd	r6, Y+60	; 0x3c
    11a6:	7d ac       	ldd	r7, Y+61	; 0x3d
    11a8:	8e ac       	ldd	r8, Y+62	; 0x3e
    11aa:	9f ac       	ldd	r9, Y+63	; 0x3f
    11ac:	6c 97       	sbiw	r28, 0x1c	; 28
    11ae:	04 c0       	rjmp	.+8      	; 0x11b8 <__umoddi3+0x3f4>
    11b0:	96 94       	lsr	r9
    11b2:	87 94       	ror	r8
    11b4:	77 94       	ror	r7
    11b6:	67 94       	ror	r6
    11b8:	8a 95       	dec	r24
    11ba:	d2 f7       	brpl	.-12     	; 0x11b0 <__umoddi3+0x3ec>
    11bc:	84 01       	movw	r16, r8
    11be:	73 01       	movw	r14, r6
    11c0:	e2 2a       	or	r14, r18
    11c2:	f3 2a       	or	r15, r19
    11c4:	04 2b       	or	r16, r20
    11c6:	15 2b       	or	r17, r21
    11c8:	ed a6       	std	Y+45, r14	; 0x2d
    11ca:	fe a6       	std	Y+46, r15	; 0x2e
    11cc:	0f a7       	std	Y+47, r16	; 0x2f
    11ce:	18 ab       	std	Y+48, r17	; 0x30
    11d0:	32 01       	movw	r6, r4
    11d2:	88 24       	eor	r8, r8
    11d4:	99 24       	eor	r9, r9
    11d6:	b2 01       	movw	r22, r4
    11d8:	a1 01       	movw	r20, r2
    11da:	60 70       	andi	r22, 0x00	; 0
    11dc:	70 70       	andi	r23, 0x00	; 0
    11de:	25 96       	adiw	r28, 0x05	; 5
    11e0:	4c af       	std	Y+60, r20	; 0x3c
    11e2:	5d af       	std	Y+61, r21	; 0x3d
    11e4:	6e af       	std	Y+62, r22	; 0x3e
    11e6:	7f af       	std	Y+63, r23	; 0x3f
    11e8:	25 97       	sbiw	r28, 0x05	; 5
    11ea:	c6 01       	movw	r24, r12
    11ec:	b5 01       	movw	r22, r10
    11ee:	a4 01       	movw	r20, r8
    11f0:	93 01       	movw	r18, r6
    11f2:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
    11f6:	7b 01       	movw	r14, r22
    11f8:	8c 01       	movw	r16, r24
    11fa:	c6 01       	movw	r24, r12
    11fc:	b5 01       	movw	r22, r10
    11fe:	a4 01       	movw	r20, r8
    1200:	93 01       	movw	r18, r6
    1202:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
    1206:	ca 01       	movw	r24, r20
    1208:	b9 01       	movw	r22, r18
    120a:	25 96       	adiw	r28, 0x05	; 5
    120c:	2c ad       	ldd	r18, Y+60	; 0x3c
    120e:	3d ad       	ldd	r19, Y+61	; 0x3d
    1210:	4e ad       	ldd	r20, Y+62	; 0x3e
    1212:	5f ad       	ldd	r21, Y+63	; 0x3f
    1214:	25 97       	sbiw	r28, 0x05	; 5
    1216:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
    121a:	9b 01       	movw	r18, r22
    121c:	ac 01       	movw	r20, r24
    121e:	87 01       	movw	r16, r14
    1220:	ff 24       	eor	r15, r15
    1222:	ee 24       	eor	r14, r14
    1224:	ad a4       	ldd	r10, Y+45	; 0x2d
    1226:	be a4       	ldd	r11, Y+46	; 0x2e
    1228:	cf a4       	ldd	r12, Y+47	; 0x2f
    122a:	d8 a8       	ldd	r13, Y+48	; 0x30
    122c:	c6 01       	movw	r24, r12
    122e:	aa 27       	eor	r26, r26
    1230:	bb 27       	eor	r27, r27
    1232:	5c 01       	movw	r10, r24
    1234:	6d 01       	movw	r12, r26
    1236:	ae 28       	or	r10, r14
    1238:	bf 28       	or	r11, r15
    123a:	c0 2a       	or	r12, r16
    123c:	d1 2a       	or	r13, r17
    123e:	a2 16       	cp	r10, r18
    1240:	b3 06       	cpc	r11, r19
    1242:	c4 06       	cpc	r12, r20
    1244:	d5 06       	cpc	r13, r21
    1246:	90 f4       	brcc	.+36     	; 0x126c <__umoddi3+0x4a8>
    1248:	a2 0c       	add	r10, r2
    124a:	b3 1c       	adc	r11, r3
    124c:	c4 1c       	adc	r12, r4
    124e:	d5 1c       	adc	r13, r5
    1250:	a2 14       	cp	r10, r2
    1252:	b3 04       	cpc	r11, r3
    1254:	c4 04       	cpc	r12, r4
    1256:	d5 04       	cpc	r13, r5
    1258:	48 f0       	brcs	.+18     	; 0x126c <__umoddi3+0x4a8>
    125a:	a2 16       	cp	r10, r18
    125c:	b3 06       	cpc	r11, r19
    125e:	c4 06       	cpc	r12, r20
    1260:	d5 06       	cpc	r13, r21
    1262:	20 f4       	brcc	.+8      	; 0x126c <__umoddi3+0x4a8>
    1264:	a2 0c       	add	r10, r2
    1266:	b3 1c       	adc	r11, r3
    1268:	c4 1c       	adc	r12, r4
    126a:	d5 1c       	adc	r13, r5
    126c:	a2 1a       	sub	r10, r18
    126e:	b3 0a       	sbc	r11, r19
    1270:	c4 0a       	sbc	r12, r20
    1272:	d5 0a       	sbc	r13, r21
    1274:	c6 01       	movw	r24, r12
    1276:	b5 01       	movw	r22, r10
    1278:	a4 01       	movw	r20, r8
    127a:	93 01       	movw	r18, r6
    127c:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
    1280:	7b 01       	movw	r14, r22
    1282:	8c 01       	movw	r16, r24
    1284:	c6 01       	movw	r24, r12
    1286:	b5 01       	movw	r22, r10
    1288:	a4 01       	movw	r20, r8
    128a:	93 01       	movw	r18, r6
    128c:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
    1290:	ca 01       	movw	r24, r20
    1292:	b9 01       	movw	r22, r18
    1294:	25 96       	adiw	r28, 0x05	; 5
    1296:	2c ad       	ldd	r18, Y+60	; 0x3c
    1298:	3d ad       	ldd	r19, Y+61	; 0x3d
    129a:	4e ad       	ldd	r20, Y+62	; 0x3e
    129c:	5f ad       	ldd	r21, Y+63	; 0x3f
    129e:	25 97       	sbiw	r28, 0x05	; 5
    12a0:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
    12a4:	9b 01       	movw	r18, r22
    12a6:	ac 01       	movw	r20, r24
    12a8:	87 01       	movw	r16, r14
    12aa:	ff 24       	eor	r15, r15
    12ac:	ee 24       	eor	r14, r14
    12ae:	8d a5       	ldd	r24, Y+45	; 0x2d
    12b0:	9e a5       	ldd	r25, Y+46	; 0x2e
    12b2:	af a5       	ldd	r26, Y+47	; 0x2f
    12b4:	b8 a9       	ldd	r27, Y+48	; 0x30
    12b6:	a0 70       	andi	r26, 0x00	; 0
    12b8:	b0 70       	andi	r27, 0x00	; 0
    12ba:	57 01       	movw	r10, r14
    12bc:	68 01       	movw	r12, r16
    12be:	a8 2a       	or	r10, r24
    12c0:	b9 2a       	or	r11, r25
    12c2:	ca 2a       	or	r12, r26
    12c4:	db 2a       	or	r13, r27
    12c6:	a2 16       	cp	r10, r18
    12c8:	b3 06       	cpc	r11, r19
    12ca:	c4 06       	cpc	r12, r20
    12cc:	d5 06       	cpc	r13, r21
    12ce:	90 f4       	brcc	.+36     	; 0x12f4 <__umoddi3+0x530>
    12d0:	a2 0c       	add	r10, r2
    12d2:	b3 1c       	adc	r11, r3
    12d4:	c4 1c       	adc	r12, r4
    12d6:	d5 1c       	adc	r13, r5
    12d8:	a2 14       	cp	r10, r2
    12da:	b3 04       	cpc	r11, r3
    12dc:	c4 04       	cpc	r12, r4
    12de:	d5 04       	cpc	r13, r5
    12e0:	48 f0       	brcs	.+18     	; 0x12f4 <__umoddi3+0x530>
    12e2:	a2 16       	cp	r10, r18
    12e4:	b3 06       	cpc	r11, r19
    12e6:	c4 06       	cpc	r12, r20
    12e8:	d5 06       	cpc	r13, r21
    12ea:	20 f4       	brcc	.+8      	; 0x12f4 <__umoddi3+0x530>
    12ec:	a2 0c       	add	r10, r2
    12ee:	b3 1c       	adc	r11, r3
    12f0:	c4 1c       	adc	r12, r4
    12f2:	d5 1c       	adc	r13, r5
    12f4:	6c 96       	adiw	r28, 0x1c	; 28
    12f6:	ec ac       	ldd	r14, Y+60	; 0x3c
    12f8:	fd ac       	ldd	r15, Y+61	; 0x3d
    12fa:	0e ad       	ldd	r16, Y+62	; 0x3e
    12fc:	1f ad       	ldd	r17, Y+63	; 0x3f
    12fe:	6c 97       	sbiw	r28, 0x1c	; 28
    1300:	68 96       	adiw	r28, 0x18	; 24
    1302:	0f ac       	ldd	r0, Y+63	; 0x3f
    1304:	68 97       	sbiw	r28, 0x18	; 24
    1306:	04 c0       	rjmp	.+8      	; 0x1310 <__umoddi3+0x54c>
    1308:	ee 0c       	add	r14, r14
    130a:	ff 1c       	adc	r15, r15
    130c:	00 1f       	adc	r16, r16
    130e:	11 1f       	adc	r17, r17
    1310:	0a 94       	dec	r0
    1312:	d2 f7       	brpl	.-12     	; 0x1308 <__umoddi3+0x544>
    1314:	e9 aa       	std	Y+49, r14	; 0x31
    1316:	fa aa       	std	Y+50, r15	; 0x32
    1318:	0b ab       	std	Y+51, r16	; 0x33
    131a:	1c ab       	std	Y+52, r17	; 0x34
    131c:	a2 1a       	sub	r10, r18
    131e:	b3 0a       	sbc	r11, r19
    1320:	c4 0a       	sbc	r12, r20
    1322:	d5 0a       	sbc	r13, r21
    1324:	32 01       	movw	r6, r4
    1326:	88 24       	eor	r8, r8
    1328:	99 24       	eor	r9, r9
    132a:	b2 01       	movw	r22, r4
    132c:	a1 01       	movw	r20, r2
    132e:	60 70       	andi	r22, 0x00	; 0
    1330:	70 70       	andi	r23, 0x00	; 0
    1332:	29 96       	adiw	r28, 0x09	; 9
    1334:	4c af       	std	Y+60, r20	; 0x3c
    1336:	5d af       	std	Y+61, r21	; 0x3d
    1338:	6e af       	std	Y+62, r22	; 0x3e
    133a:	7f af       	std	Y+63, r23	; 0x3f
    133c:	29 97       	sbiw	r28, 0x09	; 9
    133e:	c6 01       	movw	r24, r12
    1340:	b5 01       	movw	r22, r10
    1342:	a4 01       	movw	r20, r8
    1344:	93 01       	movw	r18, r6
    1346:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
    134a:	7b 01       	movw	r14, r22
    134c:	8c 01       	movw	r16, r24
    134e:	c6 01       	movw	r24, r12
    1350:	b5 01       	movw	r22, r10
    1352:	a4 01       	movw	r20, r8
    1354:	93 01       	movw	r18, r6
    1356:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
    135a:	ca 01       	movw	r24, r20
    135c:	b9 01       	movw	r22, r18
    135e:	29 96       	adiw	r28, 0x09	; 9
    1360:	2c ad       	ldd	r18, Y+60	; 0x3c
    1362:	3d ad       	ldd	r19, Y+61	; 0x3d
    1364:	4e ad       	ldd	r20, Y+62	; 0x3e
    1366:	5f ad       	ldd	r21, Y+63	; 0x3f
    1368:	29 97       	sbiw	r28, 0x09	; 9
    136a:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
    136e:	9b 01       	movw	r18, r22
    1370:	ac 01       	movw	r20, r24
    1372:	87 01       	movw	r16, r14
    1374:	ff 24       	eor	r15, r15
    1376:	ee 24       	eor	r14, r14
    1378:	a9 a8       	ldd	r10, Y+49	; 0x31
    137a:	ba a8       	ldd	r11, Y+50	; 0x32
    137c:	cb a8       	ldd	r12, Y+51	; 0x33
    137e:	dc a8       	ldd	r13, Y+52	; 0x34
    1380:	c6 01       	movw	r24, r12
    1382:	aa 27       	eor	r26, r26
    1384:	bb 27       	eor	r27, r27
    1386:	57 01       	movw	r10, r14
    1388:	68 01       	movw	r12, r16
    138a:	a8 2a       	or	r10, r24
    138c:	b9 2a       	or	r11, r25
    138e:	ca 2a       	or	r12, r26
    1390:	db 2a       	or	r13, r27
    1392:	a2 16       	cp	r10, r18
    1394:	b3 06       	cpc	r11, r19
    1396:	c4 06       	cpc	r12, r20
    1398:	d5 06       	cpc	r13, r21
    139a:	90 f4       	brcc	.+36     	; 0x13c0 <__umoddi3+0x5fc>
    139c:	a2 0c       	add	r10, r2
    139e:	b3 1c       	adc	r11, r3
    13a0:	c4 1c       	adc	r12, r4
    13a2:	d5 1c       	adc	r13, r5
    13a4:	a2 14       	cp	r10, r2
    13a6:	b3 04       	cpc	r11, r3
    13a8:	c4 04       	cpc	r12, r4
    13aa:	d5 04       	cpc	r13, r5
    13ac:	48 f0       	brcs	.+18     	; 0x13c0 <__umoddi3+0x5fc>
    13ae:	a2 16       	cp	r10, r18
    13b0:	b3 06       	cpc	r11, r19
    13b2:	c4 06       	cpc	r12, r20
    13b4:	d5 06       	cpc	r13, r21
    13b6:	20 f4       	brcc	.+8      	; 0x13c0 <__umoddi3+0x5fc>
    13b8:	a2 0c       	add	r10, r2
    13ba:	b3 1c       	adc	r11, r3
    13bc:	c4 1c       	adc	r12, r4
    13be:	d5 1c       	adc	r13, r5
    13c0:	a2 1a       	sub	r10, r18
    13c2:	b3 0a       	sbc	r11, r19
    13c4:	c4 0a       	sbc	r12, r20
    13c6:	d5 0a       	sbc	r13, r21
    13c8:	c6 01       	movw	r24, r12
    13ca:	b5 01       	movw	r22, r10
    13cc:	a4 01       	movw	r20, r8
    13ce:	93 01       	movw	r18, r6
    13d0:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
    13d4:	7b 01       	movw	r14, r22
    13d6:	8c 01       	movw	r16, r24
    13d8:	c6 01       	movw	r24, r12
    13da:	b5 01       	movw	r22, r10
    13dc:	a4 01       	movw	r20, r8
    13de:	93 01       	movw	r18, r6
    13e0:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
    13e4:	ca 01       	movw	r24, r20
    13e6:	b9 01       	movw	r22, r18
    13e8:	29 96       	adiw	r28, 0x09	; 9
    13ea:	2c ad       	ldd	r18, Y+60	; 0x3c
    13ec:	3d ad       	ldd	r19, Y+61	; 0x3d
    13ee:	4e ad       	ldd	r20, Y+62	; 0x3e
    13f0:	5f ad       	ldd	r21, Y+63	; 0x3f
    13f2:	29 97       	sbiw	r28, 0x09	; 9
    13f4:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
    13f8:	9b 01       	movw	r18, r22
    13fa:	ac 01       	movw	r20, r24
    13fc:	87 01       	movw	r16, r14
    13fe:	ff 24       	eor	r15, r15
    1400:	ee 24       	eor	r14, r14
    1402:	89 a9       	ldd	r24, Y+49	; 0x31
    1404:	9a a9       	ldd	r25, Y+50	; 0x32
    1406:	ab a9       	ldd	r26, Y+51	; 0x33
    1408:	bc a9       	ldd	r27, Y+52	; 0x34
    140a:	a0 70       	andi	r26, 0x00	; 0
    140c:	b0 70       	andi	r27, 0x00	; 0
    140e:	e8 2a       	or	r14, r24
    1410:	f9 2a       	or	r15, r25
    1412:	0a 2b       	or	r16, r26
    1414:	1b 2b       	or	r17, r27
    1416:	e2 16       	cp	r14, r18
    1418:	f3 06       	cpc	r15, r19
    141a:	04 07       	cpc	r16, r20
    141c:	15 07       	cpc	r17, r21
    141e:	90 f4       	brcc	.+36     	; 0x1444 <__umoddi3+0x680>
    1420:	e2 0c       	add	r14, r2
    1422:	f3 1c       	adc	r15, r3
    1424:	04 1d       	adc	r16, r4
    1426:	15 1d       	adc	r17, r5
    1428:	e2 14       	cp	r14, r2
    142a:	f3 04       	cpc	r15, r3
    142c:	04 05       	cpc	r16, r4
    142e:	15 05       	cpc	r17, r5
    1430:	48 f0       	brcs	.+18     	; 0x1444 <__umoddi3+0x680>
    1432:	e2 16       	cp	r14, r18
    1434:	f3 06       	cpc	r15, r19
    1436:	04 07       	cpc	r16, r20
    1438:	15 07       	cpc	r17, r21
    143a:	20 f4       	brcc	.+8      	; 0x1444 <__umoddi3+0x680>
    143c:	e2 0c       	add	r14, r2
    143e:	f3 1c       	adc	r15, r3
    1440:	04 1d       	adc	r16, r4
    1442:	15 1d       	adc	r17, r5
    1444:	e2 1a       	sub	r14, r18
    1446:	f3 0a       	sbc	r15, r19
    1448:	04 0b       	sbc	r16, r20
    144a:	15 0b       	sbc	r17, r21
    144c:	d8 01       	movw	r26, r16
    144e:	c7 01       	movw	r24, r14
    1450:	09 ac       	ldd	r0, Y+57	; 0x39
    1452:	04 c0       	rjmp	.+8      	; 0x145c <__umoddi3+0x698>
    1454:	b6 95       	lsr	r27
    1456:	a7 95       	ror	r26
    1458:	97 95       	ror	r25
    145a:	87 95       	ror	r24
    145c:	0a 94       	dec	r0
    145e:	d2 f7       	brpl	.-12     	; 0x1454 <__umoddi3+0x690>
    1460:	89 8b       	std	Y+17, r24	; 0x11
    1462:	9a 8b       	std	Y+18, r25	; 0x12
    1464:	ab 8b       	std	Y+19, r26	; 0x13
    1466:	bc 8b       	std	Y+20, r27	; 0x14
    1468:	1d 8a       	std	Y+21, r1	; 0x15
    146a:	1e 8a       	std	Y+22, r1	; 0x16
    146c:	1f 8a       	std	Y+23, r1	; 0x17
    146e:	18 8e       	std	Y+24, r1	; 0x18
    1470:	28 2f       	mov	r18, r24
    1472:	3a 89       	ldd	r19, Y+18	; 0x12
    1474:	4b 89       	ldd	r20, Y+19	; 0x13
    1476:	5c 89       	ldd	r21, Y+20	; 0x14
    1478:	6d 89       	ldd	r22, Y+21	; 0x15
    147a:	0c c3       	rjmp	.+1560   	; 0x1a94 <__umoddi3+0xcd0>
    147c:	6a 14       	cp	r6, r10
    147e:	7b 04       	cpc	r7, r11
    1480:	8c 04       	cpc	r8, r12
    1482:	9d 04       	cpc	r9, r13
    1484:	08 f4       	brcc	.+2      	; 0x1488 <__umoddi3+0x6c4>
    1486:	09 c3       	rjmp	.+1554   	; 0x1a9a <__umoddi3+0xcd6>
    1488:	00 e0       	ldi	r16, 0x00	; 0
    148a:	a0 16       	cp	r10, r16
    148c:	00 e0       	ldi	r16, 0x00	; 0
    148e:	b0 06       	cpc	r11, r16
    1490:	01 e0       	ldi	r16, 0x01	; 1
    1492:	c0 06       	cpc	r12, r16
    1494:	00 e0       	ldi	r16, 0x00	; 0
    1496:	d0 06       	cpc	r13, r16
    1498:	88 f4       	brcc	.+34     	; 0x14bc <__umoddi3+0x6f8>
    149a:	1f ef       	ldi	r17, 0xFF	; 255
    149c:	a1 16       	cp	r10, r17
    149e:	b1 04       	cpc	r11, r1
    14a0:	c1 04       	cpc	r12, r1
    14a2:	d1 04       	cpc	r13, r1
    14a4:	39 f0       	breq	.+14     	; 0x14b4 <__umoddi3+0x6f0>
    14a6:	30 f0       	brcs	.+12     	; 0x14b4 <__umoddi3+0x6f0>
    14a8:	28 e0       	ldi	r18, 0x08	; 8
    14aa:	e2 2e       	mov	r14, r18
    14ac:	f1 2c       	mov	r15, r1
    14ae:	01 2d       	mov	r16, r1
    14b0:	11 2d       	mov	r17, r1
    14b2:	18 c0       	rjmp	.+48     	; 0x14e4 <__umoddi3+0x720>
    14b4:	ee 24       	eor	r14, r14
    14b6:	ff 24       	eor	r15, r15
    14b8:	87 01       	movw	r16, r14
    14ba:	14 c0       	rjmp	.+40     	; 0x14e4 <__umoddi3+0x720>
    14bc:	40 e0       	ldi	r20, 0x00	; 0
    14be:	a4 16       	cp	r10, r20
    14c0:	40 e0       	ldi	r20, 0x00	; 0
    14c2:	b4 06       	cpc	r11, r20
    14c4:	40 e0       	ldi	r20, 0x00	; 0
    14c6:	c4 06       	cpc	r12, r20
    14c8:	41 e0       	ldi	r20, 0x01	; 1
    14ca:	d4 06       	cpc	r13, r20
    14cc:	30 f0       	brcs	.+12     	; 0x14da <__umoddi3+0x716>
    14ce:	98 e1       	ldi	r25, 0x18	; 24
    14d0:	e9 2e       	mov	r14, r25
    14d2:	f1 2c       	mov	r15, r1
    14d4:	01 2d       	mov	r16, r1
    14d6:	11 2d       	mov	r17, r1
    14d8:	05 c0       	rjmp	.+10     	; 0x14e4 <__umoddi3+0x720>
    14da:	80 e1       	ldi	r24, 0x10	; 16
    14dc:	e8 2e       	mov	r14, r24
    14de:	f1 2c       	mov	r15, r1
    14e0:	01 2d       	mov	r16, r1
    14e2:	11 2d       	mov	r17, r1
    14e4:	d6 01       	movw	r26, r12
    14e6:	c5 01       	movw	r24, r10
    14e8:	0e 2c       	mov	r0, r14
    14ea:	04 c0       	rjmp	.+8      	; 0x14f4 <__umoddi3+0x730>
    14ec:	b6 95       	lsr	r27
    14ee:	a7 95       	ror	r26
    14f0:	97 95       	ror	r25
    14f2:	87 95       	ror	r24
    14f4:	0a 94       	dec	r0
    14f6:	d2 f7       	brpl	.-12     	; 0x14ec <__umoddi3+0x728>
    14f8:	8e 58       	subi	r24, 0x8E	; 142
    14fa:	9e 4f       	sbci	r25, 0xFE	; 254
    14fc:	dc 01       	movw	r26, r24
    14fe:	2c 91       	ld	r18, X
    1500:	80 e2       	ldi	r24, 0x20	; 32
    1502:	90 e0       	ldi	r25, 0x00	; 0
    1504:	a0 e0       	ldi	r26, 0x00	; 0
    1506:	b0 e0       	ldi	r27, 0x00	; 0
    1508:	8e 19       	sub	r24, r14
    150a:	9f 09       	sbc	r25, r15
    150c:	a0 0b       	sbc	r26, r16
    150e:	b1 0b       	sbc	r27, r17
    1510:	82 1b       	sub	r24, r18
    1512:	91 09       	sbc	r25, r1
    1514:	a1 09       	sbc	r26, r1
    1516:	b1 09       	sbc	r27, r1
    1518:	00 97       	sbiw	r24, 0x00	; 0
    151a:	a1 05       	cpc	r26, r1
    151c:	b1 05       	cpc	r27, r1
    151e:	09 f0       	breq	.+2      	; 0x1522 <__umoddi3+0x75e>
    1520:	4f c0       	rjmp	.+158    	; 0x15c0 <__umoddi3+0x7fc>
    1522:	a6 14       	cp	r10, r6
    1524:	b7 04       	cpc	r11, r7
    1526:	c8 04       	cpc	r12, r8
    1528:	d9 04       	cpc	r13, r9
    152a:	58 f0       	brcs	.+22     	; 0x1542 <__umoddi3+0x77e>
    152c:	6c 96       	adiw	r28, 0x1c	; 28
    152e:	ec ac       	ldd	r14, Y+60	; 0x3c
    1530:	fd ac       	ldd	r15, Y+61	; 0x3d
    1532:	0e ad       	ldd	r16, Y+62	; 0x3e
    1534:	1f ad       	ldd	r17, Y+63	; 0x3f
    1536:	6c 97       	sbiw	r28, 0x1c	; 28
    1538:	e2 14       	cp	r14, r2
    153a:	f3 04       	cpc	r15, r3
    153c:	04 05       	cpc	r16, r4
    153e:	15 05       	cpc	r17, r5
    1540:	68 f1       	brcs	.+90     	; 0x159c <__umoddi3+0x7d8>
    1542:	6c 96       	adiw	r28, 0x1c	; 28
    1544:	ec ac       	ldd	r14, Y+60	; 0x3c
    1546:	fd ac       	ldd	r15, Y+61	; 0x3d
    1548:	0e ad       	ldd	r16, Y+62	; 0x3e
    154a:	1f ad       	ldd	r17, Y+63	; 0x3f
    154c:	6c 97       	sbiw	r28, 0x1c	; 28
    154e:	e2 18       	sub	r14, r2
    1550:	f3 08       	sbc	r15, r3
    1552:	04 09       	sbc	r16, r4
    1554:	15 09       	sbc	r17, r5
    1556:	a4 01       	movw	r20, r8
    1558:	93 01       	movw	r18, r6
    155a:	2a 19       	sub	r18, r10
    155c:	3b 09       	sbc	r19, r11
    155e:	4c 09       	sbc	r20, r12
    1560:	5d 09       	sbc	r21, r13
    1562:	aa 24       	eor	r10, r10
    1564:	bb 24       	eor	r11, r11
    1566:	65 01       	movw	r12, r10
    1568:	6c 96       	adiw	r28, 0x1c	; 28
    156a:	6c ad       	ldd	r22, Y+60	; 0x3c
    156c:	7d ad       	ldd	r23, Y+61	; 0x3d
    156e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1570:	9f ad       	ldd	r25, Y+63	; 0x3f
    1572:	6c 97       	sbiw	r28, 0x1c	; 28
    1574:	6e 15       	cp	r22, r14
    1576:	7f 05       	cpc	r23, r15
    1578:	80 07       	cpc	r24, r16
    157a:	91 07       	cpc	r25, r17
    157c:	28 f4       	brcc	.+10     	; 0x1588 <__umoddi3+0x7c4>
    157e:	b1 e0       	ldi	r27, 0x01	; 1
    1580:	ab 2e       	mov	r10, r27
    1582:	b1 2c       	mov	r11, r1
    1584:	c1 2c       	mov	r12, r1
    1586:	d1 2c       	mov	r13, r1
    1588:	da 01       	movw	r26, r20
    158a:	c9 01       	movw	r24, r18
    158c:	8a 19       	sub	r24, r10
    158e:	9b 09       	sbc	r25, r11
    1590:	ac 09       	sbc	r26, r12
    1592:	bd 09       	sbc	r27, r13
    1594:	8d ab       	std	Y+53, r24	; 0x35
    1596:	9e ab       	std	Y+54, r25	; 0x36
    1598:	af ab       	std	Y+55, r26	; 0x37
    159a:	b8 af       	std	Y+56, r27	; 0x38
    159c:	e9 8a       	std	Y+17, r14	; 0x11
    159e:	fa 8a       	std	Y+18, r15	; 0x12
    15a0:	0b 8b       	std	Y+19, r16	; 0x13
    15a2:	1c 8b       	std	Y+20, r17	; 0x14
    15a4:	6d a8       	ldd	r6, Y+53	; 0x35
    15a6:	7e a8       	ldd	r7, Y+54	; 0x36
    15a8:	8f a8       	ldd	r8, Y+55	; 0x37
    15aa:	98 ac       	ldd	r9, Y+56	; 0x38
    15ac:	6d 8a       	std	Y+21, r6	; 0x15
    15ae:	7e 8a       	std	Y+22, r7	; 0x16
    15b0:	8f 8a       	std	Y+23, r8	; 0x17
    15b2:	98 8e       	std	Y+24, r9	; 0x18
    15b4:	2e 2d       	mov	r18, r14
    15b6:	3a 89       	ldd	r19, Y+18	; 0x12
    15b8:	4b 89       	ldd	r20, Y+19	; 0x13
    15ba:	5c 89       	ldd	r21, Y+20	; 0x14
    15bc:	6d a9       	ldd	r22, Y+53	; 0x35
    15be:	6a c2       	rjmp	.+1236   	; 0x1a94 <__umoddi3+0xcd0>
    15c0:	67 96       	adiw	r28, 0x17	; 23
    15c2:	8f af       	std	Y+63, r24	; 0x3f
    15c4:	67 97       	sbiw	r28, 0x17	; 23
    15c6:	a6 01       	movw	r20, r12
    15c8:	95 01       	movw	r18, r10
    15ca:	08 2e       	mov	r0, r24
    15cc:	04 c0       	rjmp	.+8      	; 0x15d6 <__umoddi3+0x812>
    15ce:	22 0f       	add	r18, r18
    15d0:	33 1f       	adc	r19, r19
    15d2:	44 1f       	adc	r20, r20
    15d4:	55 1f       	adc	r21, r21
    15d6:	0a 94       	dec	r0
    15d8:	d2 f7       	brpl	.-12     	; 0x15ce <__umoddi3+0x80a>
    15da:	a0 e2       	ldi	r26, 0x20	; 32
    15dc:	aa 2e       	mov	r10, r26
    15de:	a8 1a       	sub	r10, r24
    15e0:	66 96       	adiw	r28, 0x16	; 22
    15e2:	af ae       	std	Y+63, r10	; 0x3f
    15e4:	66 97       	sbiw	r28, 0x16	; 22
    15e6:	d2 01       	movw	r26, r4
    15e8:	c1 01       	movw	r24, r2
    15ea:	04 c0       	rjmp	.+8      	; 0x15f4 <__umoddi3+0x830>
    15ec:	b6 95       	lsr	r27
    15ee:	a7 95       	ror	r26
    15f0:	97 95       	ror	r25
    15f2:	87 95       	ror	r24
    15f4:	aa 94       	dec	r10
    15f6:	d2 f7       	brpl	.-12     	; 0x15ec <__umoddi3+0x828>
    15f8:	6c 01       	movw	r12, r24
    15fa:	7d 01       	movw	r14, r26
    15fc:	c2 2a       	or	r12, r18
    15fe:	d3 2a       	or	r13, r19
    1600:	e4 2a       	or	r14, r20
    1602:	f5 2a       	or	r15, r21
    1604:	c9 a6       	std	Y+41, r12	; 0x29
    1606:	da a6       	std	Y+42, r13	; 0x2a
    1608:	eb a6       	std	Y+43, r14	; 0x2b
    160a:	fc a6       	std	Y+44, r15	; 0x2c
    160c:	82 01       	movw	r16, r4
    160e:	71 01       	movw	r14, r2
    1610:	67 96       	adiw	r28, 0x17	; 23
    1612:	0f ac       	ldd	r0, Y+63	; 0x3f
    1614:	67 97       	sbiw	r28, 0x17	; 23
    1616:	04 c0       	rjmp	.+8      	; 0x1620 <__umoddi3+0x85c>
    1618:	ee 0c       	add	r14, r14
    161a:	ff 1c       	adc	r15, r15
    161c:	00 1f       	adc	r16, r16
    161e:	11 1f       	adc	r17, r17
    1620:	0a 94       	dec	r0
    1622:	d2 f7       	brpl	.-12     	; 0x1618 <__umoddi3+0x854>
    1624:	ed a2       	std	Y+37, r14	; 0x25
    1626:	fe a2       	std	Y+38, r15	; 0x26
    1628:	0f a3       	std	Y+39, r16	; 0x27
    162a:	18 a7       	std	Y+40, r17	; 0x28
    162c:	64 01       	movw	r12, r8
    162e:	53 01       	movw	r10, r6
    1630:	66 96       	adiw	r28, 0x16	; 22
    1632:	0f ac       	ldd	r0, Y+63	; 0x3f
    1634:	66 97       	sbiw	r28, 0x16	; 22
    1636:	04 c0       	rjmp	.+8      	; 0x1640 <__umoddi3+0x87c>
    1638:	d6 94       	lsr	r13
    163a:	c7 94       	ror	r12
    163c:	b7 94       	ror	r11
    163e:	a7 94       	ror	r10
    1640:	0a 94       	dec	r0
    1642:	d2 f7       	brpl	.-12     	; 0x1638 <__umoddi3+0x874>
    1644:	a4 01       	movw	r20, r8
    1646:	93 01       	movw	r18, r6
    1648:	67 96       	adiw	r28, 0x17	; 23
    164a:	0f ac       	ldd	r0, Y+63	; 0x3f
    164c:	67 97       	sbiw	r28, 0x17	; 23
    164e:	04 c0       	rjmp	.+8      	; 0x1658 <__umoddi3+0x894>
    1650:	22 0f       	add	r18, r18
    1652:	33 1f       	adc	r19, r19
    1654:	44 1f       	adc	r20, r20
    1656:	55 1f       	adc	r21, r21
    1658:	0a 94       	dec	r0
    165a:	d2 f7       	brpl	.-12     	; 0x1650 <__umoddi3+0x88c>
    165c:	6c 96       	adiw	r28, 0x1c	; 28
    165e:	8c ad       	ldd	r24, Y+60	; 0x3c
    1660:	9d ad       	ldd	r25, Y+61	; 0x3d
    1662:	ae ad       	ldd	r26, Y+62	; 0x3e
    1664:	bf ad       	ldd	r27, Y+63	; 0x3f
    1666:	6c 97       	sbiw	r28, 0x1c	; 28
    1668:	66 96       	adiw	r28, 0x16	; 22
    166a:	0f ac       	ldd	r0, Y+63	; 0x3f
    166c:	66 97       	sbiw	r28, 0x16	; 22
    166e:	04 c0       	rjmp	.+8      	; 0x1678 <__umoddi3+0x8b4>
    1670:	b6 95       	lsr	r27
    1672:	a7 95       	ror	r26
    1674:	97 95       	ror	r25
    1676:	87 95       	ror	r24
    1678:	0a 94       	dec	r0
    167a:	d2 f7       	brpl	.-12     	; 0x1670 <__umoddi3+0x8ac>
    167c:	3c 01       	movw	r6, r24
    167e:	4d 01       	movw	r8, r26
    1680:	62 2a       	or	r6, r18
    1682:	73 2a       	or	r7, r19
    1684:	84 2a       	or	r8, r20
    1686:	95 2a       	or	r9, r21
    1688:	69 a2       	std	Y+33, r6	; 0x21
    168a:	7a a2       	std	Y+34, r7	; 0x22
    168c:	8b a2       	std	Y+35, r8	; 0x23
    168e:	9c a2       	std	Y+36, r9	; 0x24
    1690:	6c 96       	adiw	r28, 0x1c	; 28
    1692:	ec ac       	ldd	r14, Y+60	; 0x3c
    1694:	fd ac       	ldd	r15, Y+61	; 0x3d
    1696:	0e ad       	ldd	r16, Y+62	; 0x3e
    1698:	1f ad       	ldd	r17, Y+63	; 0x3f
    169a:	6c 97       	sbiw	r28, 0x1c	; 28
    169c:	67 96       	adiw	r28, 0x17	; 23
    169e:	0f ac       	ldd	r0, Y+63	; 0x3f
    16a0:	67 97       	sbiw	r28, 0x17	; 23
    16a2:	04 c0       	rjmp	.+8      	; 0x16ac <__umoddi3+0x8e8>
    16a4:	ee 0c       	add	r14, r14
    16a6:	ff 1c       	adc	r15, r15
    16a8:	00 1f       	adc	r16, r16
    16aa:	11 1f       	adc	r17, r17
    16ac:	0a 94       	dec	r0
    16ae:	d2 f7       	brpl	.-12     	; 0x16a4 <__umoddi3+0x8e0>
    16b0:	ed 8e       	std	Y+29, r14	; 0x1d
    16b2:	fe 8e       	std	Y+30, r15	; 0x1e
    16b4:	0f 8f       	std	Y+31, r16	; 0x1f
    16b6:	18 a3       	std	Y+32, r17	; 0x20
    16b8:	49 a5       	ldd	r20, Y+41	; 0x29
    16ba:	5a a5       	ldd	r21, Y+42	; 0x2a
    16bc:	6b a5       	ldd	r22, Y+43	; 0x2b
    16be:	7c a5       	ldd	r23, Y+44	; 0x2c
    16c0:	3b 01       	movw	r6, r22
    16c2:	88 24       	eor	r8, r8
    16c4:	99 24       	eor	r9, r9
    16c6:	60 70       	andi	r22, 0x00	; 0
    16c8:	70 70       	andi	r23, 0x00	; 0
    16ca:	2d 96       	adiw	r28, 0x0d	; 13
    16cc:	4c af       	std	Y+60, r20	; 0x3c
    16ce:	5d af       	std	Y+61, r21	; 0x3d
    16d0:	6e af       	std	Y+62, r22	; 0x3e
    16d2:	7f af       	std	Y+63, r23	; 0x3f
    16d4:	2d 97       	sbiw	r28, 0x0d	; 13
    16d6:	c6 01       	movw	r24, r12
    16d8:	b5 01       	movw	r22, r10
    16da:	a4 01       	movw	r20, r8
    16dc:	93 01       	movw	r18, r6
    16de:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
    16e2:	7b 01       	movw	r14, r22
    16e4:	8c 01       	movw	r16, r24
    16e6:	c6 01       	movw	r24, r12
    16e8:	b5 01       	movw	r22, r10
    16ea:	a4 01       	movw	r20, r8
    16ec:	93 01       	movw	r18, r6
    16ee:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
    16f2:	c9 01       	movw	r24, r18
    16f4:	da 01       	movw	r26, r20
    16f6:	1c 01       	movw	r2, r24
    16f8:	2d 01       	movw	r4, r26
    16fa:	c2 01       	movw	r24, r4
    16fc:	b1 01       	movw	r22, r2
    16fe:	2d 96       	adiw	r28, 0x0d	; 13
    1700:	2c ad       	ldd	r18, Y+60	; 0x3c
    1702:	3d ad       	ldd	r19, Y+61	; 0x3d
    1704:	4e ad       	ldd	r20, Y+62	; 0x3e
    1706:	5f ad       	ldd	r21, Y+63	; 0x3f
    1708:	2d 97       	sbiw	r28, 0x0d	; 13
    170a:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
    170e:	9b 01       	movw	r18, r22
    1710:	ac 01       	movw	r20, r24
    1712:	87 01       	movw	r16, r14
    1714:	ff 24       	eor	r15, r15
    1716:	ee 24       	eor	r14, r14
    1718:	a9 a0       	ldd	r10, Y+33	; 0x21
    171a:	ba a0       	ldd	r11, Y+34	; 0x22
    171c:	cb a0       	ldd	r12, Y+35	; 0x23
    171e:	dc a0       	ldd	r13, Y+36	; 0x24
    1720:	c6 01       	movw	r24, r12
    1722:	aa 27       	eor	r26, r26
    1724:	bb 27       	eor	r27, r27
    1726:	57 01       	movw	r10, r14
    1728:	68 01       	movw	r12, r16
    172a:	a8 2a       	or	r10, r24
    172c:	b9 2a       	or	r11, r25
    172e:	ca 2a       	or	r12, r26
    1730:	db 2a       	or	r13, r27
    1732:	a2 16       	cp	r10, r18
    1734:	b3 06       	cpc	r11, r19
    1736:	c4 06       	cpc	r12, r20
    1738:	d5 06       	cpc	r13, r21
    173a:	00 f5       	brcc	.+64     	; 0x177c <__umoddi3+0x9b8>
    173c:	08 94       	sec
    173e:	21 08       	sbc	r2, r1
    1740:	31 08       	sbc	r3, r1
    1742:	41 08       	sbc	r4, r1
    1744:	51 08       	sbc	r5, r1
    1746:	e9 a4       	ldd	r14, Y+41	; 0x29
    1748:	fa a4       	ldd	r15, Y+42	; 0x2a
    174a:	0b a5       	ldd	r16, Y+43	; 0x2b
    174c:	1c a5       	ldd	r17, Y+44	; 0x2c
    174e:	ae 0c       	add	r10, r14
    1750:	bf 1c       	adc	r11, r15
    1752:	c0 1e       	adc	r12, r16
    1754:	d1 1e       	adc	r13, r17
    1756:	ae 14       	cp	r10, r14
    1758:	bf 04       	cpc	r11, r15
    175a:	c0 06       	cpc	r12, r16
    175c:	d1 06       	cpc	r13, r17
    175e:	70 f0       	brcs	.+28     	; 0x177c <__umoddi3+0x9b8>
    1760:	a2 16       	cp	r10, r18
    1762:	b3 06       	cpc	r11, r19
    1764:	c4 06       	cpc	r12, r20
    1766:	d5 06       	cpc	r13, r21
    1768:	48 f4       	brcc	.+18     	; 0x177c <__umoddi3+0x9b8>
    176a:	08 94       	sec
    176c:	21 08       	sbc	r2, r1
    176e:	31 08       	sbc	r3, r1
    1770:	41 08       	sbc	r4, r1
    1772:	51 08       	sbc	r5, r1
    1774:	ae 0c       	add	r10, r14
    1776:	bf 1c       	adc	r11, r15
    1778:	c0 1e       	adc	r12, r16
    177a:	d1 1e       	adc	r13, r17
    177c:	a2 1a       	sub	r10, r18
    177e:	b3 0a       	sbc	r11, r19
    1780:	c4 0a       	sbc	r12, r20
    1782:	d5 0a       	sbc	r13, r21
    1784:	c6 01       	movw	r24, r12
    1786:	b5 01       	movw	r22, r10
    1788:	a4 01       	movw	r20, r8
    178a:	93 01       	movw	r18, r6
    178c:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
    1790:	7b 01       	movw	r14, r22
    1792:	8c 01       	movw	r16, r24
    1794:	c6 01       	movw	r24, r12
    1796:	b5 01       	movw	r22, r10
    1798:	a4 01       	movw	r20, r8
    179a:	93 01       	movw	r18, r6
    179c:	0e 94 3a 3b 	call	0x7674	; 0x7674 <__udivmodsi4>
    17a0:	c9 01       	movw	r24, r18
    17a2:	da 01       	movw	r26, r20
    17a4:	3c 01       	movw	r6, r24
    17a6:	4d 01       	movw	r8, r26
    17a8:	c4 01       	movw	r24, r8
    17aa:	b3 01       	movw	r22, r6
    17ac:	2d 96       	adiw	r28, 0x0d	; 13
    17ae:	2c ad       	ldd	r18, Y+60	; 0x3c
    17b0:	3d ad       	ldd	r19, Y+61	; 0x3d
    17b2:	4e ad       	ldd	r20, Y+62	; 0x3e
    17b4:	5f ad       	ldd	r21, Y+63	; 0x3f
    17b6:	2d 97       	sbiw	r28, 0x0d	; 13
    17b8:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
    17bc:	9b 01       	movw	r18, r22
    17be:	ac 01       	movw	r20, r24
    17c0:	87 01       	movw	r16, r14
    17c2:	ff 24       	eor	r15, r15
    17c4:	ee 24       	eor	r14, r14
    17c6:	89 a1       	ldd	r24, Y+33	; 0x21
    17c8:	9a a1       	ldd	r25, Y+34	; 0x22
    17ca:	ab a1       	ldd	r26, Y+35	; 0x23
    17cc:	bc a1       	ldd	r27, Y+36	; 0x24
    17ce:	a0 70       	andi	r26, 0x00	; 0
    17d0:	b0 70       	andi	r27, 0x00	; 0
    17d2:	57 01       	movw	r10, r14
    17d4:	68 01       	movw	r12, r16
    17d6:	a8 2a       	or	r10, r24
    17d8:	b9 2a       	or	r11, r25
    17da:	ca 2a       	or	r12, r26
    17dc:	db 2a       	or	r13, r27
    17de:	a2 16       	cp	r10, r18
    17e0:	b3 06       	cpc	r11, r19
    17e2:	c4 06       	cpc	r12, r20
    17e4:	d5 06       	cpc	r13, r21
    17e6:	00 f5       	brcc	.+64     	; 0x1828 <__umoddi3+0xa64>
    17e8:	08 94       	sec
    17ea:	61 08       	sbc	r6, r1
    17ec:	71 08       	sbc	r7, r1
    17ee:	81 08       	sbc	r8, r1
    17f0:	91 08       	sbc	r9, r1
    17f2:	69 a5       	ldd	r22, Y+41	; 0x29
    17f4:	7a a5       	ldd	r23, Y+42	; 0x2a
    17f6:	8b a5       	ldd	r24, Y+43	; 0x2b
    17f8:	9c a5       	ldd	r25, Y+44	; 0x2c
    17fa:	a6 0e       	add	r10, r22
    17fc:	b7 1e       	adc	r11, r23
    17fe:	c8 1e       	adc	r12, r24
    1800:	d9 1e       	adc	r13, r25
    1802:	a6 16       	cp	r10, r22
    1804:	b7 06       	cpc	r11, r23
    1806:	c8 06       	cpc	r12, r24
    1808:	d9 06       	cpc	r13, r25
    180a:	70 f0       	brcs	.+28     	; 0x1828 <__umoddi3+0xa64>
    180c:	a2 16       	cp	r10, r18
    180e:	b3 06       	cpc	r11, r19
    1810:	c4 06       	cpc	r12, r20
    1812:	d5 06       	cpc	r13, r21
    1814:	48 f4       	brcc	.+18     	; 0x1828 <__umoddi3+0xa64>
    1816:	08 94       	sec
    1818:	61 08       	sbc	r6, r1
    181a:	71 08       	sbc	r7, r1
    181c:	81 08       	sbc	r8, r1
    181e:	91 08       	sbc	r9, r1
    1820:	a6 0e       	add	r10, r22
    1822:	b7 1e       	adc	r11, r23
    1824:	c8 1e       	adc	r12, r24
    1826:	d9 1e       	adc	r13, r25
    1828:	d6 01       	movw	r26, r12
    182a:	c5 01       	movw	r24, r10
    182c:	82 1b       	sub	r24, r18
    182e:	93 0b       	sbc	r25, r19
    1830:	a4 0b       	sbc	r26, r20
    1832:	b5 0b       	sbc	r27, r21
    1834:	89 8f       	std	Y+25, r24	; 0x19
    1836:	9a 8f       	std	Y+26, r25	; 0x1a
    1838:	ab 8f       	std	Y+27, r26	; 0x1b
    183a:	bc 8f       	std	Y+28, r27	; 0x1c
    183c:	d1 01       	movw	r26, r2
    183e:	99 27       	eor	r25, r25
    1840:	88 27       	eor	r24, r24
    1842:	84 01       	movw	r16, r8
    1844:	73 01       	movw	r14, r6
    1846:	e8 2a       	or	r14, r24
    1848:	f9 2a       	or	r15, r25
    184a:	0a 2b       	or	r16, r26
    184c:	1b 2b       	or	r17, r27
    184e:	4f ef       	ldi	r20, 0xFF	; 255
    1850:	a4 2e       	mov	r10, r20
    1852:	4f ef       	ldi	r20, 0xFF	; 255
    1854:	b4 2e       	mov	r11, r20
    1856:	c1 2c       	mov	r12, r1
    1858:	d1 2c       	mov	r13, r1
    185a:	ae 20       	and	r10, r14
    185c:	bf 20       	and	r11, r15
    185e:	c0 22       	and	r12, r16
    1860:	d1 22       	and	r13, r17
    1862:	78 01       	movw	r14, r16
    1864:	00 27       	eor	r16, r16
    1866:	11 27       	eor	r17, r17
    1868:	6d a0       	ldd	r6, Y+37	; 0x25
    186a:	7e a0       	ldd	r7, Y+38	; 0x26
    186c:	8f a0       	ldd	r8, Y+39	; 0x27
    186e:	98 a4       	ldd	r9, Y+40	; 0x28
    1870:	4f ef       	ldi	r20, 0xFF	; 255
    1872:	5f ef       	ldi	r21, 0xFF	; 255
    1874:	60 e0       	ldi	r22, 0x00	; 0
    1876:	70 e0       	ldi	r23, 0x00	; 0
    1878:	64 22       	and	r6, r20
    187a:	75 22       	and	r7, r21
    187c:	86 22       	and	r8, r22
    187e:	97 22       	and	r9, r23
    1880:	8d a1       	ldd	r24, Y+37	; 0x25
    1882:	9e a1       	ldd	r25, Y+38	; 0x26
    1884:	af a1       	ldd	r26, Y+39	; 0x27
    1886:	b8 a5       	ldd	r27, Y+40	; 0x28
    1888:	bd 01       	movw	r22, r26
    188a:	88 27       	eor	r24, r24
    188c:	99 27       	eor	r25, r25
    188e:	65 96       	adiw	r28, 0x15	; 21
    1890:	6c af       	std	Y+60, r22	; 0x3c
    1892:	7d af       	std	Y+61, r23	; 0x3d
    1894:	8e af       	std	Y+62, r24	; 0x3e
    1896:	9f af       	std	Y+63, r25	; 0x3f
    1898:	65 97       	sbiw	r28, 0x15	; 21
    189a:	c6 01       	movw	r24, r12
    189c:	b5 01       	movw	r22, r10
    189e:	a4 01       	movw	r20, r8
    18a0:	93 01       	movw	r18, r6
    18a2:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
    18a6:	61 96       	adiw	r28, 0x11	; 17
    18a8:	6c af       	std	Y+60, r22	; 0x3c
    18aa:	7d af       	std	Y+61, r23	; 0x3d
    18ac:	8e af       	std	Y+62, r24	; 0x3e
    18ae:	9f af       	std	Y+63, r25	; 0x3f
    18b0:	61 97       	sbiw	r28, 0x11	; 17
    18b2:	c6 01       	movw	r24, r12
    18b4:	b5 01       	movw	r22, r10
    18b6:	65 96       	adiw	r28, 0x15	; 21
    18b8:	2c ad       	ldd	r18, Y+60	; 0x3c
    18ba:	3d ad       	ldd	r19, Y+61	; 0x3d
    18bc:	4e ad       	ldd	r20, Y+62	; 0x3e
    18be:	5f ad       	ldd	r21, Y+63	; 0x3f
    18c0:	65 97       	sbiw	r28, 0x15	; 21
    18c2:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
    18c6:	1b 01       	movw	r2, r22
    18c8:	2c 01       	movw	r4, r24
    18ca:	c8 01       	movw	r24, r16
    18cc:	b7 01       	movw	r22, r14
    18ce:	a4 01       	movw	r20, r8
    18d0:	93 01       	movw	r18, r6
    18d2:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
    18d6:	5b 01       	movw	r10, r22
    18d8:	6c 01       	movw	r12, r24
    18da:	c8 01       	movw	r24, r16
    18dc:	b7 01       	movw	r22, r14
    18de:	65 96       	adiw	r28, 0x15	; 21
    18e0:	2c ad       	ldd	r18, Y+60	; 0x3c
    18e2:	3d ad       	ldd	r19, Y+61	; 0x3d
    18e4:	4e ad       	ldd	r20, Y+62	; 0x3e
    18e6:	5f ad       	ldd	r21, Y+63	; 0x3f
    18e8:	65 97       	sbiw	r28, 0x15	; 21
    18ea:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
    18ee:	7b 01       	movw	r14, r22
    18f0:	8c 01       	movw	r16, r24
    18f2:	a6 01       	movw	r20, r12
    18f4:	95 01       	movw	r18, r10
    18f6:	22 0d       	add	r18, r2
    18f8:	33 1d       	adc	r19, r3
    18fa:	44 1d       	adc	r20, r4
    18fc:	55 1d       	adc	r21, r5
    18fe:	61 96       	adiw	r28, 0x11	; 17
    1900:	6c ac       	ldd	r6, Y+60	; 0x3c
    1902:	7d ac       	ldd	r7, Y+61	; 0x3d
    1904:	8e ac       	ldd	r8, Y+62	; 0x3e
    1906:	9f ac       	ldd	r9, Y+63	; 0x3f
    1908:	61 97       	sbiw	r28, 0x11	; 17
    190a:	c4 01       	movw	r24, r8
    190c:	aa 27       	eor	r26, r26
    190e:	bb 27       	eor	r27, r27
    1910:	28 0f       	add	r18, r24
    1912:	39 1f       	adc	r19, r25
    1914:	4a 1f       	adc	r20, r26
    1916:	5b 1f       	adc	r21, r27
    1918:	2a 15       	cp	r18, r10
    191a:	3b 05       	cpc	r19, r11
    191c:	4c 05       	cpc	r20, r12
    191e:	5d 05       	cpc	r21, r13
    1920:	48 f4       	brcc	.+18     	; 0x1934 <__umoddi3+0xb70>
    1922:	81 2c       	mov	r8, r1
    1924:	91 2c       	mov	r9, r1
    1926:	e1 e0       	ldi	r30, 0x01	; 1
    1928:	ae 2e       	mov	r10, r30
    192a:	b1 2c       	mov	r11, r1
    192c:	e8 0c       	add	r14, r8
    192e:	f9 1c       	adc	r15, r9
    1930:	0a 1d       	adc	r16, r10
    1932:	1b 1d       	adc	r17, r11
    1934:	ca 01       	movw	r24, r20
    1936:	aa 27       	eor	r26, r26
    1938:	bb 27       	eor	r27, r27
    193a:	57 01       	movw	r10, r14
    193c:	68 01       	movw	r12, r16
    193e:	a8 0e       	add	r10, r24
    1940:	b9 1e       	adc	r11, r25
    1942:	ca 1e       	adc	r12, r26
    1944:	db 1e       	adc	r13, r27
    1946:	a9 01       	movw	r20, r18
    1948:	33 27       	eor	r19, r19
    194a:	22 27       	eor	r18, r18
    194c:	61 96       	adiw	r28, 0x11	; 17
    194e:	8c ad       	ldd	r24, Y+60	; 0x3c
    1950:	9d ad       	ldd	r25, Y+61	; 0x3d
    1952:	ae ad       	ldd	r26, Y+62	; 0x3e
    1954:	bf ad       	ldd	r27, Y+63	; 0x3f
    1956:	61 97       	sbiw	r28, 0x11	; 17
    1958:	a0 70       	andi	r26, 0x00	; 0
    195a:	b0 70       	andi	r27, 0x00	; 0
    195c:	28 0f       	add	r18, r24
    195e:	39 1f       	adc	r19, r25
    1960:	4a 1f       	adc	r20, r26
    1962:	5b 1f       	adc	r21, r27
    1964:	e9 8c       	ldd	r14, Y+25	; 0x19
    1966:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1968:	0b 8d       	ldd	r16, Y+27	; 0x1b
    196a:	1c 8d       	ldd	r17, Y+28	; 0x1c
    196c:	ea 14       	cp	r14, r10
    196e:	fb 04       	cpc	r15, r11
    1970:	0c 05       	cpc	r16, r12
    1972:	1d 05       	cpc	r17, r13
    1974:	70 f0       	brcs	.+28     	; 0x1992 <__umoddi3+0xbce>
    1976:	ae 14       	cp	r10, r14
    1978:	bf 04       	cpc	r11, r15
    197a:	c0 06       	cpc	r12, r16
    197c:	d1 06       	cpc	r13, r17
    197e:	69 f5       	brne	.+90     	; 0x19da <__umoddi3+0xc16>
    1980:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1982:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1984:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1986:	98 a1       	ldd	r25, Y+32	; 0x20
    1988:	62 17       	cp	r22, r18
    198a:	73 07       	cpc	r23, r19
    198c:	84 07       	cpc	r24, r20
    198e:	95 07       	cpc	r25, r21
    1990:	20 f5       	brcc	.+72     	; 0x19da <__umoddi3+0xc16>
    1992:	da 01       	movw	r26, r20
    1994:	c9 01       	movw	r24, r18
    1996:	6d a0       	ldd	r6, Y+37	; 0x25
    1998:	7e a0       	ldd	r7, Y+38	; 0x26
    199a:	8f a0       	ldd	r8, Y+39	; 0x27
    199c:	98 a4       	ldd	r9, Y+40	; 0x28
    199e:	86 19       	sub	r24, r6
    19a0:	97 09       	sbc	r25, r7
    19a2:	a8 09       	sbc	r26, r8
    19a4:	b9 09       	sbc	r27, r9
    19a6:	e9 a4       	ldd	r14, Y+41	; 0x29
    19a8:	fa a4       	ldd	r15, Y+42	; 0x2a
    19aa:	0b a5       	ldd	r16, Y+43	; 0x2b
    19ac:	1c a5       	ldd	r17, Y+44	; 0x2c
    19ae:	ae 18       	sub	r10, r14
    19b0:	bf 08       	sbc	r11, r15
    19b2:	c0 0a       	sbc	r12, r16
    19b4:	d1 0a       	sbc	r13, r17
    19b6:	ee 24       	eor	r14, r14
    19b8:	ff 24       	eor	r15, r15
    19ba:	87 01       	movw	r16, r14
    19bc:	28 17       	cp	r18, r24
    19be:	39 07       	cpc	r19, r25
    19c0:	4a 07       	cpc	r20, r26
    19c2:	5b 07       	cpc	r21, r27
    19c4:	28 f4       	brcc	.+10     	; 0x19d0 <__umoddi3+0xc0c>
    19c6:	21 e0       	ldi	r18, 0x01	; 1
    19c8:	e2 2e       	mov	r14, r18
    19ca:	f1 2c       	mov	r15, r1
    19cc:	01 2d       	mov	r16, r1
    19ce:	11 2d       	mov	r17, r1
    19d0:	ae 18       	sub	r10, r14
    19d2:	bf 08       	sbc	r11, r15
    19d4:	c0 0a       	sbc	r12, r16
    19d6:	d1 0a       	sbc	r13, r17
    19d8:	02 c0       	rjmp	.+4      	; 0x19de <__umoddi3+0xc1a>
    19da:	da 01       	movw	r26, r20
    19dc:	c9 01       	movw	r24, r18
    19de:	6d 8c       	ldd	r6, Y+29	; 0x1d
    19e0:	7e 8c       	ldd	r7, Y+30	; 0x1e
    19e2:	8f 8c       	ldd	r8, Y+31	; 0x1f
    19e4:	98 a0       	ldd	r9, Y+32	; 0x20
    19e6:	68 1a       	sub	r6, r24
    19e8:	79 0a       	sbc	r7, r25
    19ea:	8a 0a       	sbc	r8, r26
    19ec:	9b 0a       	sbc	r9, r27
    19ee:	49 8d       	ldd	r20, Y+25	; 0x19
    19f0:	5a 8d       	ldd	r21, Y+26	; 0x1a
    19f2:	6b 8d       	ldd	r22, Y+27	; 0x1b
    19f4:	7c 8d       	ldd	r23, Y+28	; 0x1c
    19f6:	4a 19       	sub	r20, r10
    19f8:	5b 09       	sbc	r21, r11
    19fa:	6c 09       	sbc	r22, r12
    19fc:	7d 09       	sbc	r23, r13
    19fe:	5a 01       	movw	r10, r20
    1a00:	6b 01       	movw	r12, r22
    1a02:	22 24       	eor	r2, r2
    1a04:	33 24       	eor	r3, r3
    1a06:	21 01       	movw	r4, r2
    1a08:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1a0a:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1a0c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1a0e:	98 a1       	ldd	r25, Y+32	; 0x20
    1a10:	66 15       	cp	r22, r6
    1a12:	77 05       	cpc	r23, r7
    1a14:	88 05       	cpc	r24, r8
    1a16:	99 05       	cpc	r25, r9
    1a18:	28 f4       	brcc	.+10     	; 0x1a24 <__umoddi3+0xc60>
    1a1a:	81 e0       	ldi	r24, 0x01	; 1
    1a1c:	28 2e       	mov	r2, r24
    1a1e:	31 2c       	mov	r3, r1
    1a20:	41 2c       	mov	r4, r1
    1a22:	51 2c       	mov	r5, r1
    1a24:	86 01       	movw	r16, r12
    1a26:	75 01       	movw	r14, r10
    1a28:	e2 18       	sub	r14, r2
    1a2a:	f3 08       	sbc	r15, r3
    1a2c:	04 09       	sbc	r16, r4
    1a2e:	15 09       	sbc	r17, r5
    1a30:	a8 01       	movw	r20, r16
    1a32:	97 01       	movw	r18, r14
    1a34:	66 96       	adiw	r28, 0x16	; 22
    1a36:	0f ac       	ldd	r0, Y+63	; 0x3f
    1a38:	66 97       	sbiw	r28, 0x16	; 22
    1a3a:	04 c0       	rjmp	.+8      	; 0x1a44 <__umoddi3+0xc80>
    1a3c:	22 0f       	add	r18, r18
    1a3e:	33 1f       	adc	r19, r19
    1a40:	44 1f       	adc	r20, r20
    1a42:	55 1f       	adc	r21, r21
    1a44:	0a 94       	dec	r0
    1a46:	d2 f7       	brpl	.-12     	; 0x1a3c <__umoddi3+0xc78>
    1a48:	d4 01       	movw	r26, r8
    1a4a:	c3 01       	movw	r24, r6
    1a4c:	67 96       	adiw	r28, 0x17	; 23
    1a4e:	0f ac       	ldd	r0, Y+63	; 0x3f
    1a50:	67 97       	sbiw	r28, 0x17	; 23
    1a52:	04 c0       	rjmp	.+8      	; 0x1a5c <__umoddi3+0xc98>
    1a54:	b6 95       	lsr	r27
    1a56:	a7 95       	ror	r26
    1a58:	97 95       	ror	r25
    1a5a:	87 95       	ror	r24
    1a5c:	0a 94       	dec	r0
    1a5e:	d2 f7       	brpl	.-12     	; 0x1a54 <__umoddi3+0xc90>
    1a60:	28 2b       	or	r18, r24
    1a62:	39 2b       	or	r19, r25
    1a64:	4a 2b       	or	r20, r26
    1a66:	5b 2b       	or	r21, r27
    1a68:	29 8b       	std	Y+17, r18	; 0x11
    1a6a:	3a 8b       	std	Y+18, r19	; 0x12
    1a6c:	4b 8b       	std	Y+19, r20	; 0x13
    1a6e:	5c 8b       	std	Y+20, r21	; 0x14
    1a70:	67 96       	adiw	r28, 0x17	; 23
    1a72:	0f ac       	ldd	r0, Y+63	; 0x3f
    1a74:	67 97       	sbiw	r28, 0x17	; 23
    1a76:	04 c0       	rjmp	.+8      	; 0x1a80 <__umoddi3+0xcbc>
    1a78:	16 95       	lsr	r17
    1a7a:	07 95       	ror	r16
    1a7c:	f7 94       	ror	r15
    1a7e:	e7 94       	ror	r14
    1a80:	0a 94       	dec	r0
    1a82:	d2 f7       	brpl	.-12     	; 0x1a78 <__umoddi3+0xcb4>
    1a84:	ed 8a       	std	Y+21, r14	; 0x15
    1a86:	fe 8a       	std	Y+22, r15	; 0x16
    1a88:	0f 8b       	std	Y+23, r16	; 0x17
    1a8a:	18 8f       	std	Y+24, r17	; 0x18
    1a8c:	3a 89       	ldd	r19, Y+18	; 0x12
    1a8e:	4b 89       	ldd	r20, Y+19	; 0x13
    1a90:	5c 89       	ldd	r21, Y+20	; 0x14
    1a92:	6e 2d       	mov	r22, r14
    1a94:	7e 89       	ldd	r23, Y+22	; 0x16
    1a96:	8f 89       	ldd	r24, Y+23	; 0x17
    1a98:	98 8d       	ldd	r25, Y+24	; 0x18
    1a9a:	c5 5a       	subi	r28, 0xA5	; 165
    1a9c:	df 4f       	sbci	r29, 0xFF	; 255
    1a9e:	e2 e1       	ldi	r30, 0x12	; 18
    1aa0:	0c 94 78 3b 	jmp	0x76f0	; 0x76f0 <__epilogue_restores__>

00001aa4 <_fpadd_parts>:
    1aa4:	a0 e0       	ldi	r26, 0x00	; 0
    1aa6:	b0 e0       	ldi	r27, 0x00	; 0
    1aa8:	e8 e5       	ldi	r30, 0x58	; 88
    1aaa:	fd e0       	ldi	r31, 0x0D	; 13
    1aac:	0c 94 5c 3b 	jmp	0x76b8	; 0x76b8 <__prologue_saves__>
    1ab0:	dc 01       	movw	r26, r24
    1ab2:	2b 01       	movw	r4, r22
    1ab4:	fa 01       	movw	r30, r20
    1ab6:	9c 91       	ld	r25, X
    1ab8:	92 30       	cpi	r25, 0x02	; 2
    1aba:	08 f4       	brcc	.+2      	; 0x1abe <_fpadd_parts+0x1a>
    1abc:	39 c1       	rjmp	.+626    	; 0x1d30 <_fpadd_parts+0x28c>
    1abe:	eb 01       	movw	r28, r22
    1ac0:	88 81       	ld	r24, Y
    1ac2:	82 30       	cpi	r24, 0x02	; 2
    1ac4:	08 f4       	brcc	.+2      	; 0x1ac8 <_fpadd_parts+0x24>
    1ac6:	33 c1       	rjmp	.+614    	; 0x1d2e <_fpadd_parts+0x28a>
    1ac8:	94 30       	cpi	r25, 0x04	; 4
    1aca:	69 f4       	brne	.+26     	; 0x1ae6 <_fpadd_parts+0x42>
    1acc:	84 30       	cpi	r24, 0x04	; 4
    1ace:	09 f0       	breq	.+2      	; 0x1ad2 <_fpadd_parts+0x2e>
    1ad0:	2f c1       	rjmp	.+606    	; 0x1d30 <_fpadd_parts+0x28c>
    1ad2:	11 96       	adiw	r26, 0x01	; 1
    1ad4:	9c 91       	ld	r25, X
    1ad6:	11 97       	sbiw	r26, 0x01	; 1
    1ad8:	89 81       	ldd	r24, Y+1	; 0x01
    1ada:	98 17       	cp	r25, r24
    1adc:	09 f4       	brne	.+2      	; 0x1ae0 <_fpadd_parts+0x3c>
    1ade:	28 c1       	rjmp	.+592    	; 0x1d30 <_fpadd_parts+0x28c>
    1ae0:	aa e6       	ldi	r26, 0x6A	; 106
    1ae2:	b1 e0       	ldi	r27, 0x01	; 1
    1ae4:	25 c1       	rjmp	.+586    	; 0x1d30 <_fpadd_parts+0x28c>
    1ae6:	84 30       	cpi	r24, 0x04	; 4
    1ae8:	09 f4       	brne	.+2      	; 0x1aec <_fpadd_parts+0x48>
    1aea:	21 c1       	rjmp	.+578    	; 0x1d2e <_fpadd_parts+0x28a>
    1aec:	82 30       	cpi	r24, 0x02	; 2
    1aee:	a9 f4       	brne	.+42     	; 0x1b1a <_fpadd_parts+0x76>
    1af0:	92 30       	cpi	r25, 0x02	; 2
    1af2:	09 f0       	breq	.+2      	; 0x1af6 <_fpadd_parts+0x52>
    1af4:	1d c1       	rjmp	.+570    	; 0x1d30 <_fpadd_parts+0x28c>
    1af6:	9a 01       	movw	r18, r20
    1af8:	ad 01       	movw	r20, r26
    1afa:	88 e0       	ldi	r24, 0x08	; 8
    1afc:	ea 01       	movw	r28, r20
    1afe:	09 90       	ld	r0, Y+
    1b00:	ae 01       	movw	r20, r28
    1b02:	e9 01       	movw	r28, r18
    1b04:	09 92       	st	Y+, r0
    1b06:	9e 01       	movw	r18, r28
    1b08:	81 50       	subi	r24, 0x01	; 1
    1b0a:	c1 f7       	brne	.-16     	; 0x1afc <_fpadd_parts+0x58>
    1b0c:	e2 01       	movw	r28, r4
    1b0e:	89 81       	ldd	r24, Y+1	; 0x01
    1b10:	11 96       	adiw	r26, 0x01	; 1
    1b12:	9c 91       	ld	r25, X
    1b14:	89 23       	and	r24, r25
    1b16:	81 83       	std	Z+1, r24	; 0x01
    1b18:	08 c1       	rjmp	.+528    	; 0x1d2a <_fpadd_parts+0x286>
    1b1a:	92 30       	cpi	r25, 0x02	; 2
    1b1c:	09 f4       	brne	.+2      	; 0x1b20 <_fpadd_parts+0x7c>
    1b1e:	07 c1       	rjmp	.+526    	; 0x1d2e <_fpadd_parts+0x28a>
    1b20:	12 96       	adiw	r26, 0x02	; 2
    1b22:	2d 90       	ld	r2, X+
    1b24:	3c 90       	ld	r3, X
    1b26:	13 97       	sbiw	r26, 0x03	; 3
    1b28:	eb 01       	movw	r28, r22
    1b2a:	8a 81       	ldd	r24, Y+2	; 0x02
    1b2c:	9b 81       	ldd	r25, Y+3	; 0x03
    1b2e:	14 96       	adiw	r26, 0x04	; 4
    1b30:	ad 90       	ld	r10, X+
    1b32:	bd 90       	ld	r11, X+
    1b34:	cd 90       	ld	r12, X+
    1b36:	dc 90       	ld	r13, X
    1b38:	17 97       	sbiw	r26, 0x07	; 7
    1b3a:	ec 80       	ldd	r14, Y+4	; 0x04
    1b3c:	fd 80       	ldd	r15, Y+5	; 0x05
    1b3e:	0e 81       	ldd	r16, Y+6	; 0x06
    1b40:	1f 81       	ldd	r17, Y+7	; 0x07
    1b42:	91 01       	movw	r18, r2
    1b44:	28 1b       	sub	r18, r24
    1b46:	39 0b       	sbc	r19, r25
    1b48:	b9 01       	movw	r22, r18
    1b4a:	37 ff       	sbrs	r19, 7
    1b4c:	04 c0       	rjmp	.+8      	; 0x1b56 <_fpadd_parts+0xb2>
    1b4e:	66 27       	eor	r22, r22
    1b50:	77 27       	eor	r23, r23
    1b52:	62 1b       	sub	r22, r18
    1b54:	73 0b       	sbc	r23, r19
    1b56:	60 32       	cpi	r22, 0x20	; 32
    1b58:	71 05       	cpc	r23, r1
    1b5a:	0c f0       	brlt	.+2      	; 0x1b5e <_fpadd_parts+0xba>
    1b5c:	61 c0       	rjmp	.+194    	; 0x1c20 <_fpadd_parts+0x17c>
    1b5e:	12 16       	cp	r1, r18
    1b60:	13 06       	cpc	r1, r19
    1b62:	6c f5       	brge	.+90     	; 0x1bbe <_fpadd_parts+0x11a>
    1b64:	37 01       	movw	r6, r14
    1b66:	48 01       	movw	r8, r16
    1b68:	06 2e       	mov	r0, r22
    1b6a:	04 c0       	rjmp	.+8      	; 0x1b74 <_fpadd_parts+0xd0>
    1b6c:	96 94       	lsr	r9
    1b6e:	87 94       	ror	r8
    1b70:	77 94       	ror	r7
    1b72:	67 94       	ror	r6
    1b74:	0a 94       	dec	r0
    1b76:	d2 f7       	brpl	.-12     	; 0x1b6c <_fpadd_parts+0xc8>
    1b78:	21 e0       	ldi	r18, 0x01	; 1
    1b7a:	30 e0       	ldi	r19, 0x00	; 0
    1b7c:	40 e0       	ldi	r20, 0x00	; 0
    1b7e:	50 e0       	ldi	r21, 0x00	; 0
    1b80:	04 c0       	rjmp	.+8      	; 0x1b8a <_fpadd_parts+0xe6>
    1b82:	22 0f       	add	r18, r18
    1b84:	33 1f       	adc	r19, r19
    1b86:	44 1f       	adc	r20, r20
    1b88:	55 1f       	adc	r21, r21
    1b8a:	6a 95       	dec	r22
    1b8c:	d2 f7       	brpl	.-12     	; 0x1b82 <_fpadd_parts+0xde>
    1b8e:	21 50       	subi	r18, 0x01	; 1
    1b90:	30 40       	sbci	r19, 0x00	; 0
    1b92:	40 40       	sbci	r20, 0x00	; 0
    1b94:	50 40       	sbci	r21, 0x00	; 0
    1b96:	2e 21       	and	r18, r14
    1b98:	3f 21       	and	r19, r15
    1b9a:	40 23       	and	r20, r16
    1b9c:	51 23       	and	r21, r17
    1b9e:	21 15       	cp	r18, r1
    1ba0:	31 05       	cpc	r19, r1
    1ba2:	41 05       	cpc	r20, r1
    1ba4:	51 05       	cpc	r21, r1
    1ba6:	21 f0       	breq	.+8      	; 0x1bb0 <_fpadd_parts+0x10c>
    1ba8:	21 e0       	ldi	r18, 0x01	; 1
    1baa:	30 e0       	ldi	r19, 0x00	; 0
    1bac:	40 e0       	ldi	r20, 0x00	; 0
    1bae:	50 e0       	ldi	r21, 0x00	; 0
    1bb0:	79 01       	movw	r14, r18
    1bb2:	8a 01       	movw	r16, r20
    1bb4:	e6 28       	or	r14, r6
    1bb6:	f7 28       	or	r15, r7
    1bb8:	08 29       	or	r16, r8
    1bba:	19 29       	or	r17, r9
    1bbc:	3c c0       	rjmp	.+120    	; 0x1c36 <_fpadd_parts+0x192>
    1bbe:	23 2b       	or	r18, r19
    1bc0:	d1 f1       	breq	.+116    	; 0x1c36 <_fpadd_parts+0x192>
    1bc2:	26 0e       	add	r2, r22
    1bc4:	37 1e       	adc	r3, r23
    1bc6:	35 01       	movw	r6, r10
    1bc8:	46 01       	movw	r8, r12
    1bca:	06 2e       	mov	r0, r22
    1bcc:	04 c0       	rjmp	.+8      	; 0x1bd6 <_fpadd_parts+0x132>
    1bce:	96 94       	lsr	r9
    1bd0:	87 94       	ror	r8
    1bd2:	77 94       	ror	r7
    1bd4:	67 94       	ror	r6
    1bd6:	0a 94       	dec	r0
    1bd8:	d2 f7       	brpl	.-12     	; 0x1bce <_fpadd_parts+0x12a>
    1bda:	21 e0       	ldi	r18, 0x01	; 1
    1bdc:	30 e0       	ldi	r19, 0x00	; 0
    1bde:	40 e0       	ldi	r20, 0x00	; 0
    1be0:	50 e0       	ldi	r21, 0x00	; 0
    1be2:	04 c0       	rjmp	.+8      	; 0x1bec <_fpadd_parts+0x148>
    1be4:	22 0f       	add	r18, r18
    1be6:	33 1f       	adc	r19, r19
    1be8:	44 1f       	adc	r20, r20
    1bea:	55 1f       	adc	r21, r21
    1bec:	6a 95       	dec	r22
    1bee:	d2 f7       	brpl	.-12     	; 0x1be4 <_fpadd_parts+0x140>
    1bf0:	21 50       	subi	r18, 0x01	; 1
    1bf2:	30 40       	sbci	r19, 0x00	; 0
    1bf4:	40 40       	sbci	r20, 0x00	; 0
    1bf6:	50 40       	sbci	r21, 0x00	; 0
    1bf8:	2a 21       	and	r18, r10
    1bfa:	3b 21       	and	r19, r11
    1bfc:	4c 21       	and	r20, r12
    1bfe:	5d 21       	and	r21, r13
    1c00:	21 15       	cp	r18, r1
    1c02:	31 05       	cpc	r19, r1
    1c04:	41 05       	cpc	r20, r1
    1c06:	51 05       	cpc	r21, r1
    1c08:	21 f0       	breq	.+8      	; 0x1c12 <_fpadd_parts+0x16e>
    1c0a:	21 e0       	ldi	r18, 0x01	; 1
    1c0c:	30 e0       	ldi	r19, 0x00	; 0
    1c0e:	40 e0       	ldi	r20, 0x00	; 0
    1c10:	50 e0       	ldi	r21, 0x00	; 0
    1c12:	59 01       	movw	r10, r18
    1c14:	6a 01       	movw	r12, r20
    1c16:	a6 28       	or	r10, r6
    1c18:	b7 28       	or	r11, r7
    1c1a:	c8 28       	or	r12, r8
    1c1c:	d9 28       	or	r13, r9
    1c1e:	0b c0       	rjmp	.+22     	; 0x1c36 <_fpadd_parts+0x192>
    1c20:	82 15       	cp	r24, r2
    1c22:	93 05       	cpc	r25, r3
    1c24:	2c f0       	brlt	.+10     	; 0x1c30 <_fpadd_parts+0x18c>
    1c26:	1c 01       	movw	r2, r24
    1c28:	aa 24       	eor	r10, r10
    1c2a:	bb 24       	eor	r11, r11
    1c2c:	65 01       	movw	r12, r10
    1c2e:	03 c0       	rjmp	.+6      	; 0x1c36 <_fpadd_parts+0x192>
    1c30:	ee 24       	eor	r14, r14
    1c32:	ff 24       	eor	r15, r15
    1c34:	87 01       	movw	r16, r14
    1c36:	11 96       	adiw	r26, 0x01	; 1
    1c38:	9c 91       	ld	r25, X
    1c3a:	d2 01       	movw	r26, r4
    1c3c:	11 96       	adiw	r26, 0x01	; 1
    1c3e:	8c 91       	ld	r24, X
    1c40:	98 17       	cp	r25, r24
    1c42:	09 f4       	brne	.+2      	; 0x1c46 <_fpadd_parts+0x1a2>
    1c44:	45 c0       	rjmp	.+138    	; 0x1cd0 <_fpadd_parts+0x22c>
    1c46:	99 23       	and	r25, r25
    1c48:	39 f0       	breq	.+14     	; 0x1c58 <_fpadd_parts+0x1b4>
    1c4a:	a8 01       	movw	r20, r16
    1c4c:	97 01       	movw	r18, r14
    1c4e:	2a 19       	sub	r18, r10
    1c50:	3b 09       	sbc	r19, r11
    1c52:	4c 09       	sbc	r20, r12
    1c54:	5d 09       	sbc	r21, r13
    1c56:	06 c0       	rjmp	.+12     	; 0x1c64 <_fpadd_parts+0x1c0>
    1c58:	a6 01       	movw	r20, r12
    1c5a:	95 01       	movw	r18, r10
    1c5c:	2e 19       	sub	r18, r14
    1c5e:	3f 09       	sbc	r19, r15
    1c60:	40 0b       	sbc	r20, r16
    1c62:	51 0b       	sbc	r21, r17
    1c64:	57 fd       	sbrc	r21, 7
    1c66:	08 c0       	rjmp	.+16     	; 0x1c78 <_fpadd_parts+0x1d4>
    1c68:	11 82       	std	Z+1, r1	; 0x01
    1c6a:	33 82       	std	Z+3, r3	; 0x03
    1c6c:	22 82       	std	Z+2, r2	; 0x02
    1c6e:	24 83       	std	Z+4, r18	; 0x04
    1c70:	35 83       	std	Z+5, r19	; 0x05
    1c72:	46 83       	std	Z+6, r20	; 0x06
    1c74:	57 83       	std	Z+7, r21	; 0x07
    1c76:	1d c0       	rjmp	.+58     	; 0x1cb2 <_fpadd_parts+0x20e>
    1c78:	81 e0       	ldi	r24, 0x01	; 1
    1c7a:	81 83       	std	Z+1, r24	; 0x01
    1c7c:	33 82       	std	Z+3, r3	; 0x03
    1c7e:	22 82       	std	Z+2, r2	; 0x02
    1c80:	88 27       	eor	r24, r24
    1c82:	99 27       	eor	r25, r25
    1c84:	dc 01       	movw	r26, r24
    1c86:	82 1b       	sub	r24, r18
    1c88:	93 0b       	sbc	r25, r19
    1c8a:	a4 0b       	sbc	r26, r20
    1c8c:	b5 0b       	sbc	r27, r21
    1c8e:	84 83       	std	Z+4, r24	; 0x04
    1c90:	95 83       	std	Z+5, r25	; 0x05
    1c92:	a6 83       	std	Z+6, r26	; 0x06
    1c94:	b7 83       	std	Z+7, r27	; 0x07
    1c96:	0d c0       	rjmp	.+26     	; 0x1cb2 <_fpadd_parts+0x20e>
    1c98:	22 0f       	add	r18, r18
    1c9a:	33 1f       	adc	r19, r19
    1c9c:	44 1f       	adc	r20, r20
    1c9e:	55 1f       	adc	r21, r21
    1ca0:	24 83       	std	Z+4, r18	; 0x04
    1ca2:	35 83       	std	Z+5, r19	; 0x05
    1ca4:	46 83       	std	Z+6, r20	; 0x06
    1ca6:	57 83       	std	Z+7, r21	; 0x07
    1ca8:	82 81       	ldd	r24, Z+2	; 0x02
    1caa:	93 81       	ldd	r25, Z+3	; 0x03
    1cac:	01 97       	sbiw	r24, 0x01	; 1
    1cae:	93 83       	std	Z+3, r25	; 0x03
    1cb0:	82 83       	std	Z+2, r24	; 0x02
    1cb2:	24 81       	ldd	r18, Z+4	; 0x04
    1cb4:	35 81       	ldd	r19, Z+5	; 0x05
    1cb6:	46 81       	ldd	r20, Z+6	; 0x06
    1cb8:	57 81       	ldd	r21, Z+7	; 0x07
    1cba:	da 01       	movw	r26, r20
    1cbc:	c9 01       	movw	r24, r18
    1cbe:	01 97       	sbiw	r24, 0x01	; 1
    1cc0:	a1 09       	sbc	r26, r1
    1cc2:	b1 09       	sbc	r27, r1
    1cc4:	8f 5f       	subi	r24, 0xFF	; 255
    1cc6:	9f 4f       	sbci	r25, 0xFF	; 255
    1cc8:	af 4f       	sbci	r26, 0xFF	; 255
    1cca:	bf 43       	sbci	r27, 0x3F	; 63
    1ccc:	28 f3       	brcs	.-54     	; 0x1c98 <_fpadd_parts+0x1f4>
    1cce:	0b c0       	rjmp	.+22     	; 0x1ce6 <_fpadd_parts+0x242>
    1cd0:	91 83       	std	Z+1, r25	; 0x01
    1cd2:	33 82       	std	Z+3, r3	; 0x03
    1cd4:	22 82       	std	Z+2, r2	; 0x02
    1cd6:	ea 0c       	add	r14, r10
    1cd8:	fb 1c       	adc	r15, r11
    1cda:	0c 1d       	adc	r16, r12
    1cdc:	1d 1d       	adc	r17, r13
    1cde:	e4 82       	std	Z+4, r14	; 0x04
    1ce0:	f5 82       	std	Z+5, r15	; 0x05
    1ce2:	06 83       	std	Z+6, r16	; 0x06
    1ce4:	17 83       	std	Z+7, r17	; 0x07
    1ce6:	83 e0       	ldi	r24, 0x03	; 3
    1ce8:	80 83       	st	Z, r24
    1cea:	24 81       	ldd	r18, Z+4	; 0x04
    1cec:	35 81       	ldd	r19, Z+5	; 0x05
    1cee:	46 81       	ldd	r20, Z+6	; 0x06
    1cf0:	57 81       	ldd	r21, Z+7	; 0x07
    1cf2:	57 ff       	sbrs	r21, 7
    1cf4:	1a c0       	rjmp	.+52     	; 0x1d2a <_fpadd_parts+0x286>
    1cf6:	c9 01       	movw	r24, r18
    1cf8:	aa 27       	eor	r26, r26
    1cfa:	97 fd       	sbrc	r25, 7
    1cfc:	a0 95       	com	r26
    1cfe:	ba 2f       	mov	r27, r26
    1d00:	81 70       	andi	r24, 0x01	; 1
    1d02:	90 70       	andi	r25, 0x00	; 0
    1d04:	a0 70       	andi	r26, 0x00	; 0
    1d06:	b0 70       	andi	r27, 0x00	; 0
    1d08:	56 95       	lsr	r21
    1d0a:	47 95       	ror	r20
    1d0c:	37 95       	ror	r19
    1d0e:	27 95       	ror	r18
    1d10:	82 2b       	or	r24, r18
    1d12:	93 2b       	or	r25, r19
    1d14:	a4 2b       	or	r26, r20
    1d16:	b5 2b       	or	r27, r21
    1d18:	84 83       	std	Z+4, r24	; 0x04
    1d1a:	95 83       	std	Z+5, r25	; 0x05
    1d1c:	a6 83       	std	Z+6, r26	; 0x06
    1d1e:	b7 83       	std	Z+7, r27	; 0x07
    1d20:	82 81       	ldd	r24, Z+2	; 0x02
    1d22:	93 81       	ldd	r25, Z+3	; 0x03
    1d24:	01 96       	adiw	r24, 0x01	; 1
    1d26:	93 83       	std	Z+3, r25	; 0x03
    1d28:	82 83       	std	Z+2, r24	; 0x02
    1d2a:	df 01       	movw	r26, r30
    1d2c:	01 c0       	rjmp	.+2      	; 0x1d30 <_fpadd_parts+0x28c>
    1d2e:	d2 01       	movw	r26, r4
    1d30:	cd 01       	movw	r24, r26
    1d32:	cd b7       	in	r28, 0x3d	; 61
    1d34:	de b7       	in	r29, 0x3e	; 62
    1d36:	e2 e1       	ldi	r30, 0x12	; 18
    1d38:	0c 94 78 3b 	jmp	0x76f0	; 0x76f0 <__epilogue_restores__>

00001d3c <__subsf3>:
    1d3c:	a0 e2       	ldi	r26, 0x20	; 32
    1d3e:	b0 e0       	ldi	r27, 0x00	; 0
    1d40:	e4 ea       	ldi	r30, 0xA4	; 164
    1d42:	fe e0       	ldi	r31, 0x0E	; 14
    1d44:	0c 94 68 3b 	jmp	0x76d0	; 0x76d0 <__prologue_saves__+0x18>
    1d48:	69 83       	std	Y+1, r22	; 0x01
    1d4a:	7a 83       	std	Y+2, r23	; 0x02
    1d4c:	8b 83       	std	Y+3, r24	; 0x03
    1d4e:	9c 83       	std	Y+4, r25	; 0x04
    1d50:	2d 83       	std	Y+5, r18	; 0x05
    1d52:	3e 83       	std	Y+6, r19	; 0x06
    1d54:	4f 83       	std	Y+7, r20	; 0x07
    1d56:	58 87       	std	Y+8, r21	; 0x08
    1d58:	e9 e0       	ldi	r30, 0x09	; 9
    1d5a:	ee 2e       	mov	r14, r30
    1d5c:	f1 2c       	mov	r15, r1
    1d5e:	ec 0e       	add	r14, r28
    1d60:	fd 1e       	adc	r15, r29
    1d62:	ce 01       	movw	r24, r28
    1d64:	01 96       	adiw	r24, 0x01	; 1
    1d66:	b7 01       	movw	r22, r14
    1d68:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    1d6c:	8e 01       	movw	r16, r28
    1d6e:	0f 5e       	subi	r16, 0xEF	; 239
    1d70:	1f 4f       	sbci	r17, 0xFF	; 255
    1d72:	ce 01       	movw	r24, r28
    1d74:	05 96       	adiw	r24, 0x05	; 5
    1d76:	b8 01       	movw	r22, r16
    1d78:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    1d7c:	8a 89       	ldd	r24, Y+18	; 0x12
    1d7e:	91 e0       	ldi	r25, 0x01	; 1
    1d80:	89 27       	eor	r24, r25
    1d82:	8a 8b       	std	Y+18, r24	; 0x12
    1d84:	c7 01       	movw	r24, r14
    1d86:	b8 01       	movw	r22, r16
    1d88:	ae 01       	movw	r20, r28
    1d8a:	47 5e       	subi	r20, 0xE7	; 231
    1d8c:	5f 4f       	sbci	r21, 0xFF	; 255
    1d8e:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <_fpadd_parts>
    1d92:	0e 94 da 10 	call	0x21b4	; 0x21b4 <__pack_f>
    1d96:	a0 96       	adiw	r28, 0x20	; 32
    1d98:	e6 e0       	ldi	r30, 0x06	; 6
    1d9a:	0c 94 84 3b 	jmp	0x7708	; 0x7708 <__epilogue_restores__+0x18>

00001d9e <__addsf3>:
    1d9e:	a0 e2       	ldi	r26, 0x20	; 32
    1da0:	b0 e0       	ldi	r27, 0x00	; 0
    1da2:	e5 ed       	ldi	r30, 0xD5	; 213
    1da4:	fe e0       	ldi	r31, 0x0E	; 14
    1da6:	0c 94 68 3b 	jmp	0x76d0	; 0x76d0 <__prologue_saves__+0x18>
    1daa:	69 83       	std	Y+1, r22	; 0x01
    1dac:	7a 83       	std	Y+2, r23	; 0x02
    1dae:	8b 83       	std	Y+3, r24	; 0x03
    1db0:	9c 83       	std	Y+4, r25	; 0x04
    1db2:	2d 83       	std	Y+5, r18	; 0x05
    1db4:	3e 83       	std	Y+6, r19	; 0x06
    1db6:	4f 83       	std	Y+7, r20	; 0x07
    1db8:	58 87       	std	Y+8, r21	; 0x08
    1dba:	f9 e0       	ldi	r31, 0x09	; 9
    1dbc:	ef 2e       	mov	r14, r31
    1dbe:	f1 2c       	mov	r15, r1
    1dc0:	ec 0e       	add	r14, r28
    1dc2:	fd 1e       	adc	r15, r29
    1dc4:	ce 01       	movw	r24, r28
    1dc6:	01 96       	adiw	r24, 0x01	; 1
    1dc8:	b7 01       	movw	r22, r14
    1dca:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    1dce:	8e 01       	movw	r16, r28
    1dd0:	0f 5e       	subi	r16, 0xEF	; 239
    1dd2:	1f 4f       	sbci	r17, 0xFF	; 255
    1dd4:	ce 01       	movw	r24, r28
    1dd6:	05 96       	adiw	r24, 0x05	; 5
    1dd8:	b8 01       	movw	r22, r16
    1dda:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    1dde:	c7 01       	movw	r24, r14
    1de0:	b8 01       	movw	r22, r16
    1de2:	ae 01       	movw	r20, r28
    1de4:	47 5e       	subi	r20, 0xE7	; 231
    1de6:	5f 4f       	sbci	r21, 0xFF	; 255
    1de8:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <_fpadd_parts>
    1dec:	0e 94 da 10 	call	0x21b4	; 0x21b4 <__pack_f>
    1df0:	a0 96       	adiw	r28, 0x20	; 32
    1df2:	e6 e0       	ldi	r30, 0x06	; 6
    1df4:	0c 94 84 3b 	jmp	0x7708	; 0x7708 <__epilogue_restores__+0x18>

00001df8 <__mulsf3>:
    1df8:	a0 e2       	ldi	r26, 0x20	; 32
    1dfa:	b0 e0       	ldi	r27, 0x00	; 0
    1dfc:	e2 e0       	ldi	r30, 0x02	; 2
    1dfe:	ff e0       	ldi	r31, 0x0F	; 15
    1e00:	0c 94 5c 3b 	jmp	0x76b8	; 0x76b8 <__prologue_saves__>
    1e04:	69 83       	std	Y+1, r22	; 0x01
    1e06:	7a 83       	std	Y+2, r23	; 0x02
    1e08:	8b 83       	std	Y+3, r24	; 0x03
    1e0a:	9c 83       	std	Y+4, r25	; 0x04
    1e0c:	2d 83       	std	Y+5, r18	; 0x05
    1e0e:	3e 83       	std	Y+6, r19	; 0x06
    1e10:	4f 83       	std	Y+7, r20	; 0x07
    1e12:	58 87       	std	Y+8, r21	; 0x08
    1e14:	ce 01       	movw	r24, r28
    1e16:	01 96       	adiw	r24, 0x01	; 1
    1e18:	be 01       	movw	r22, r28
    1e1a:	67 5f       	subi	r22, 0xF7	; 247
    1e1c:	7f 4f       	sbci	r23, 0xFF	; 255
    1e1e:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    1e22:	ce 01       	movw	r24, r28
    1e24:	05 96       	adiw	r24, 0x05	; 5
    1e26:	be 01       	movw	r22, r28
    1e28:	6f 5e       	subi	r22, 0xEF	; 239
    1e2a:	7f 4f       	sbci	r23, 0xFF	; 255
    1e2c:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    1e30:	99 85       	ldd	r25, Y+9	; 0x09
    1e32:	92 30       	cpi	r25, 0x02	; 2
    1e34:	88 f0       	brcs	.+34     	; 0x1e58 <__mulsf3+0x60>
    1e36:	89 89       	ldd	r24, Y+17	; 0x11
    1e38:	82 30       	cpi	r24, 0x02	; 2
    1e3a:	c8 f0       	brcs	.+50     	; 0x1e6e <__mulsf3+0x76>
    1e3c:	94 30       	cpi	r25, 0x04	; 4
    1e3e:	19 f4       	brne	.+6      	; 0x1e46 <__mulsf3+0x4e>
    1e40:	82 30       	cpi	r24, 0x02	; 2
    1e42:	51 f4       	brne	.+20     	; 0x1e58 <__mulsf3+0x60>
    1e44:	04 c0       	rjmp	.+8      	; 0x1e4e <__mulsf3+0x56>
    1e46:	84 30       	cpi	r24, 0x04	; 4
    1e48:	29 f4       	brne	.+10     	; 0x1e54 <__mulsf3+0x5c>
    1e4a:	92 30       	cpi	r25, 0x02	; 2
    1e4c:	81 f4       	brne	.+32     	; 0x1e6e <__mulsf3+0x76>
    1e4e:	8a e6       	ldi	r24, 0x6A	; 106
    1e50:	91 e0       	ldi	r25, 0x01	; 1
    1e52:	c6 c0       	rjmp	.+396    	; 0x1fe0 <__mulsf3+0x1e8>
    1e54:	92 30       	cpi	r25, 0x02	; 2
    1e56:	49 f4       	brne	.+18     	; 0x1e6a <__mulsf3+0x72>
    1e58:	20 e0       	ldi	r18, 0x00	; 0
    1e5a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e5c:	8a 89       	ldd	r24, Y+18	; 0x12
    1e5e:	98 13       	cpse	r25, r24
    1e60:	21 e0       	ldi	r18, 0x01	; 1
    1e62:	2a 87       	std	Y+10, r18	; 0x0a
    1e64:	ce 01       	movw	r24, r28
    1e66:	09 96       	adiw	r24, 0x09	; 9
    1e68:	bb c0       	rjmp	.+374    	; 0x1fe0 <__mulsf3+0x1e8>
    1e6a:	82 30       	cpi	r24, 0x02	; 2
    1e6c:	49 f4       	brne	.+18     	; 0x1e80 <__mulsf3+0x88>
    1e6e:	20 e0       	ldi	r18, 0x00	; 0
    1e70:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e72:	8a 89       	ldd	r24, Y+18	; 0x12
    1e74:	98 13       	cpse	r25, r24
    1e76:	21 e0       	ldi	r18, 0x01	; 1
    1e78:	2a 8b       	std	Y+18, r18	; 0x12
    1e7a:	ce 01       	movw	r24, r28
    1e7c:	41 96       	adiw	r24, 0x11	; 17
    1e7e:	b0 c0       	rjmp	.+352    	; 0x1fe0 <__mulsf3+0x1e8>
    1e80:	2d 84       	ldd	r2, Y+13	; 0x0d
    1e82:	3e 84       	ldd	r3, Y+14	; 0x0e
    1e84:	4f 84       	ldd	r4, Y+15	; 0x0f
    1e86:	58 88       	ldd	r5, Y+16	; 0x10
    1e88:	6d 88       	ldd	r6, Y+21	; 0x15
    1e8a:	7e 88       	ldd	r7, Y+22	; 0x16
    1e8c:	8f 88       	ldd	r8, Y+23	; 0x17
    1e8e:	98 8c       	ldd	r9, Y+24	; 0x18
    1e90:	ee 24       	eor	r14, r14
    1e92:	ff 24       	eor	r15, r15
    1e94:	87 01       	movw	r16, r14
    1e96:	aa 24       	eor	r10, r10
    1e98:	bb 24       	eor	r11, r11
    1e9a:	65 01       	movw	r12, r10
    1e9c:	40 e0       	ldi	r20, 0x00	; 0
    1e9e:	50 e0       	ldi	r21, 0x00	; 0
    1ea0:	60 e0       	ldi	r22, 0x00	; 0
    1ea2:	70 e0       	ldi	r23, 0x00	; 0
    1ea4:	e0 e0       	ldi	r30, 0x00	; 0
    1ea6:	f0 e0       	ldi	r31, 0x00	; 0
    1ea8:	c1 01       	movw	r24, r2
    1eaa:	81 70       	andi	r24, 0x01	; 1
    1eac:	90 70       	andi	r25, 0x00	; 0
    1eae:	89 2b       	or	r24, r25
    1eb0:	e9 f0       	breq	.+58     	; 0x1eec <__mulsf3+0xf4>
    1eb2:	e6 0c       	add	r14, r6
    1eb4:	f7 1c       	adc	r15, r7
    1eb6:	08 1d       	adc	r16, r8
    1eb8:	19 1d       	adc	r17, r9
    1eba:	9a 01       	movw	r18, r20
    1ebc:	ab 01       	movw	r20, r22
    1ebe:	2a 0d       	add	r18, r10
    1ec0:	3b 1d       	adc	r19, r11
    1ec2:	4c 1d       	adc	r20, r12
    1ec4:	5d 1d       	adc	r21, r13
    1ec6:	80 e0       	ldi	r24, 0x00	; 0
    1ec8:	90 e0       	ldi	r25, 0x00	; 0
    1eca:	a0 e0       	ldi	r26, 0x00	; 0
    1ecc:	b0 e0       	ldi	r27, 0x00	; 0
    1ece:	e6 14       	cp	r14, r6
    1ed0:	f7 04       	cpc	r15, r7
    1ed2:	08 05       	cpc	r16, r8
    1ed4:	19 05       	cpc	r17, r9
    1ed6:	20 f4       	brcc	.+8      	; 0x1ee0 <__mulsf3+0xe8>
    1ed8:	81 e0       	ldi	r24, 0x01	; 1
    1eda:	90 e0       	ldi	r25, 0x00	; 0
    1edc:	a0 e0       	ldi	r26, 0x00	; 0
    1ede:	b0 e0       	ldi	r27, 0x00	; 0
    1ee0:	ba 01       	movw	r22, r20
    1ee2:	a9 01       	movw	r20, r18
    1ee4:	48 0f       	add	r20, r24
    1ee6:	59 1f       	adc	r21, r25
    1ee8:	6a 1f       	adc	r22, r26
    1eea:	7b 1f       	adc	r23, r27
    1eec:	aa 0c       	add	r10, r10
    1eee:	bb 1c       	adc	r11, r11
    1ef0:	cc 1c       	adc	r12, r12
    1ef2:	dd 1c       	adc	r13, r13
    1ef4:	97 fe       	sbrs	r9, 7
    1ef6:	08 c0       	rjmp	.+16     	; 0x1f08 <__mulsf3+0x110>
    1ef8:	81 e0       	ldi	r24, 0x01	; 1
    1efa:	90 e0       	ldi	r25, 0x00	; 0
    1efc:	a0 e0       	ldi	r26, 0x00	; 0
    1efe:	b0 e0       	ldi	r27, 0x00	; 0
    1f00:	a8 2a       	or	r10, r24
    1f02:	b9 2a       	or	r11, r25
    1f04:	ca 2a       	or	r12, r26
    1f06:	db 2a       	or	r13, r27
    1f08:	31 96       	adiw	r30, 0x01	; 1
    1f0a:	e0 32       	cpi	r30, 0x20	; 32
    1f0c:	f1 05       	cpc	r31, r1
    1f0e:	49 f0       	breq	.+18     	; 0x1f22 <__mulsf3+0x12a>
    1f10:	66 0c       	add	r6, r6
    1f12:	77 1c       	adc	r7, r7
    1f14:	88 1c       	adc	r8, r8
    1f16:	99 1c       	adc	r9, r9
    1f18:	56 94       	lsr	r5
    1f1a:	47 94       	ror	r4
    1f1c:	37 94       	ror	r3
    1f1e:	27 94       	ror	r2
    1f20:	c3 cf       	rjmp	.-122    	; 0x1ea8 <__mulsf3+0xb0>
    1f22:	fa 85       	ldd	r31, Y+10	; 0x0a
    1f24:	ea 89       	ldd	r30, Y+18	; 0x12
    1f26:	2b 89       	ldd	r18, Y+19	; 0x13
    1f28:	3c 89       	ldd	r19, Y+20	; 0x14
    1f2a:	8b 85       	ldd	r24, Y+11	; 0x0b
    1f2c:	9c 85       	ldd	r25, Y+12	; 0x0c
    1f2e:	28 0f       	add	r18, r24
    1f30:	39 1f       	adc	r19, r25
    1f32:	2e 5f       	subi	r18, 0xFE	; 254
    1f34:	3f 4f       	sbci	r19, 0xFF	; 255
    1f36:	17 c0       	rjmp	.+46     	; 0x1f66 <__mulsf3+0x16e>
    1f38:	ca 01       	movw	r24, r20
    1f3a:	81 70       	andi	r24, 0x01	; 1
    1f3c:	90 70       	andi	r25, 0x00	; 0
    1f3e:	89 2b       	or	r24, r25
    1f40:	61 f0       	breq	.+24     	; 0x1f5a <__mulsf3+0x162>
    1f42:	16 95       	lsr	r17
    1f44:	07 95       	ror	r16
    1f46:	f7 94       	ror	r15
    1f48:	e7 94       	ror	r14
    1f4a:	80 e0       	ldi	r24, 0x00	; 0
    1f4c:	90 e0       	ldi	r25, 0x00	; 0
    1f4e:	a0 e0       	ldi	r26, 0x00	; 0
    1f50:	b0 e8       	ldi	r27, 0x80	; 128
    1f52:	e8 2a       	or	r14, r24
    1f54:	f9 2a       	or	r15, r25
    1f56:	0a 2b       	or	r16, r26
    1f58:	1b 2b       	or	r17, r27
    1f5a:	76 95       	lsr	r23
    1f5c:	67 95       	ror	r22
    1f5e:	57 95       	ror	r21
    1f60:	47 95       	ror	r20
    1f62:	2f 5f       	subi	r18, 0xFF	; 255
    1f64:	3f 4f       	sbci	r19, 0xFF	; 255
    1f66:	77 fd       	sbrc	r23, 7
    1f68:	e7 cf       	rjmp	.-50     	; 0x1f38 <__mulsf3+0x140>
    1f6a:	0c c0       	rjmp	.+24     	; 0x1f84 <__mulsf3+0x18c>
    1f6c:	44 0f       	add	r20, r20
    1f6e:	55 1f       	adc	r21, r21
    1f70:	66 1f       	adc	r22, r22
    1f72:	77 1f       	adc	r23, r23
    1f74:	17 fd       	sbrc	r17, 7
    1f76:	41 60       	ori	r20, 0x01	; 1
    1f78:	ee 0c       	add	r14, r14
    1f7a:	ff 1c       	adc	r15, r15
    1f7c:	00 1f       	adc	r16, r16
    1f7e:	11 1f       	adc	r17, r17
    1f80:	21 50       	subi	r18, 0x01	; 1
    1f82:	30 40       	sbci	r19, 0x00	; 0
    1f84:	40 30       	cpi	r20, 0x00	; 0
    1f86:	90 e0       	ldi	r25, 0x00	; 0
    1f88:	59 07       	cpc	r21, r25
    1f8a:	90 e0       	ldi	r25, 0x00	; 0
    1f8c:	69 07       	cpc	r22, r25
    1f8e:	90 e4       	ldi	r25, 0x40	; 64
    1f90:	79 07       	cpc	r23, r25
    1f92:	60 f3       	brcs	.-40     	; 0x1f6c <__mulsf3+0x174>
    1f94:	2b 8f       	std	Y+27, r18	; 0x1b
    1f96:	3c 8f       	std	Y+28, r19	; 0x1c
    1f98:	db 01       	movw	r26, r22
    1f9a:	ca 01       	movw	r24, r20
    1f9c:	8f 77       	andi	r24, 0x7F	; 127
    1f9e:	90 70       	andi	r25, 0x00	; 0
    1fa0:	a0 70       	andi	r26, 0x00	; 0
    1fa2:	b0 70       	andi	r27, 0x00	; 0
    1fa4:	80 34       	cpi	r24, 0x40	; 64
    1fa6:	91 05       	cpc	r25, r1
    1fa8:	a1 05       	cpc	r26, r1
    1faa:	b1 05       	cpc	r27, r1
    1fac:	61 f4       	brne	.+24     	; 0x1fc6 <__mulsf3+0x1ce>
    1fae:	47 fd       	sbrc	r20, 7
    1fb0:	0a c0       	rjmp	.+20     	; 0x1fc6 <__mulsf3+0x1ce>
    1fb2:	e1 14       	cp	r14, r1
    1fb4:	f1 04       	cpc	r15, r1
    1fb6:	01 05       	cpc	r16, r1
    1fb8:	11 05       	cpc	r17, r1
    1fba:	29 f0       	breq	.+10     	; 0x1fc6 <__mulsf3+0x1ce>
    1fbc:	40 5c       	subi	r20, 0xC0	; 192
    1fbe:	5f 4f       	sbci	r21, 0xFF	; 255
    1fc0:	6f 4f       	sbci	r22, 0xFF	; 255
    1fc2:	7f 4f       	sbci	r23, 0xFF	; 255
    1fc4:	40 78       	andi	r20, 0x80	; 128
    1fc6:	1a 8e       	std	Y+26, r1	; 0x1a
    1fc8:	fe 17       	cp	r31, r30
    1fca:	11 f0       	breq	.+4      	; 0x1fd0 <__mulsf3+0x1d8>
    1fcc:	81 e0       	ldi	r24, 0x01	; 1
    1fce:	8a 8f       	std	Y+26, r24	; 0x1a
    1fd0:	4d 8f       	std	Y+29, r20	; 0x1d
    1fd2:	5e 8f       	std	Y+30, r21	; 0x1e
    1fd4:	6f 8f       	std	Y+31, r22	; 0x1f
    1fd6:	78 a3       	std	Y+32, r23	; 0x20
    1fd8:	83 e0       	ldi	r24, 0x03	; 3
    1fda:	89 8f       	std	Y+25, r24	; 0x19
    1fdc:	ce 01       	movw	r24, r28
    1fde:	49 96       	adiw	r24, 0x19	; 25
    1fe0:	0e 94 da 10 	call	0x21b4	; 0x21b4 <__pack_f>
    1fe4:	a0 96       	adiw	r28, 0x20	; 32
    1fe6:	e2 e1       	ldi	r30, 0x12	; 18
    1fe8:	0c 94 78 3b 	jmp	0x76f0	; 0x76f0 <__epilogue_restores__>

00001fec <__gtsf2>:
    1fec:	a8 e1       	ldi	r26, 0x18	; 24
    1fee:	b0 e0       	ldi	r27, 0x00	; 0
    1ff0:	ec ef       	ldi	r30, 0xFC	; 252
    1ff2:	ff e0       	ldi	r31, 0x0F	; 15
    1ff4:	0c 94 68 3b 	jmp	0x76d0	; 0x76d0 <__prologue_saves__+0x18>
    1ff8:	69 83       	std	Y+1, r22	; 0x01
    1ffa:	7a 83       	std	Y+2, r23	; 0x02
    1ffc:	8b 83       	std	Y+3, r24	; 0x03
    1ffe:	9c 83       	std	Y+4, r25	; 0x04
    2000:	2d 83       	std	Y+5, r18	; 0x05
    2002:	3e 83       	std	Y+6, r19	; 0x06
    2004:	4f 83       	std	Y+7, r20	; 0x07
    2006:	58 87       	std	Y+8, r21	; 0x08
    2008:	89 e0       	ldi	r24, 0x09	; 9
    200a:	e8 2e       	mov	r14, r24
    200c:	f1 2c       	mov	r15, r1
    200e:	ec 0e       	add	r14, r28
    2010:	fd 1e       	adc	r15, r29
    2012:	ce 01       	movw	r24, r28
    2014:	01 96       	adiw	r24, 0x01	; 1
    2016:	b7 01       	movw	r22, r14
    2018:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    201c:	8e 01       	movw	r16, r28
    201e:	0f 5e       	subi	r16, 0xEF	; 239
    2020:	1f 4f       	sbci	r17, 0xFF	; 255
    2022:	ce 01       	movw	r24, r28
    2024:	05 96       	adiw	r24, 0x05	; 5
    2026:	b8 01       	movw	r22, r16
    2028:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    202c:	89 85       	ldd	r24, Y+9	; 0x09
    202e:	82 30       	cpi	r24, 0x02	; 2
    2030:	40 f0       	brcs	.+16     	; 0x2042 <__gtsf2+0x56>
    2032:	89 89       	ldd	r24, Y+17	; 0x11
    2034:	82 30       	cpi	r24, 0x02	; 2
    2036:	28 f0       	brcs	.+10     	; 0x2042 <__gtsf2+0x56>
    2038:	c7 01       	movw	r24, r14
    203a:	b8 01       	movw	r22, r16
    203c:	0e 94 27 12 	call	0x244e	; 0x244e <__fpcmp_parts_f>
    2040:	01 c0       	rjmp	.+2      	; 0x2044 <__gtsf2+0x58>
    2042:	8f ef       	ldi	r24, 0xFF	; 255
    2044:	68 96       	adiw	r28, 0x18	; 24
    2046:	e6 e0       	ldi	r30, 0x06	; 6
    2048:	0c 94 84 3b 	jmp	0x7708	; 0x7708 <__epilogue_restores__+0x18>

0000204c <__gesf2>:
    204c:	a8 e1       	ldi	r26, 0x18	; 24
    204e:	b0 e0       	ldi	r27, 0x00	; 0
    2050:	ec e2       	ldi	r30, 0x2C	; 44
    2052:	f0 e1       	ldi	r31, 0x10	; 16
    2054:	0c 94 68 3b 	jmp	0x76d0	; 0x76d0 <__prologue_saves__+0x18>
    2058:	69 83       	std	Y+1, r22	; 0x01
    205a:	7a 83       	std	Y+2, r23	; 0x02
    205c:	8b 83       	std	Y+3, r24	; 0x03
    205e:	9c 83       	std	Y+4, r25	; 0x04
    2060:	2d 83       	std	Y+5, r18	; 0x05
    2062:	3e 83       	std	Y+6, r19	; 0x06
    2064:	4f 83       	std	Y+7, r20	; 0x07
    2066:	58 87       	std	Y+8, r21	; 0x08
    2068:	89 e0       	ldi	r24, 0x09	; 9
    206a:	e8 2e       	mov	r14, r24
    206c:	f1 2c       	mov	r15, r1
    206e:	ec 0e       	add	r14, r28
    2070:	fd 1e       	adc	r15, r29
    2072:	ce 01       	movw	r24, r28
    2074:	01 96       	adiw	r24, 0x01	; 1
    2076:	b7 01       	movw	r22, r14
    2078:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    207c:	8e 01       	movw	r16, r28
    207e:	0f 5e       	subi	r16, 0xEF	; 239
    2080:	1f 4f       	sbci	r17, 0xFF	; 255
    2082:	ce 01       	movw	r24, r28
    2084:	05 96       	adiw	r24, 0x05	; 5
    2086:	b8 01       	movw	r22, r16
    2088:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    208c:	89 85       	ldd	r24, Y+9	; 0x09
    208e:	82 30       	cpi	r24, 0x02	; 2
    2090:	40 f0       	brcs	.+16     	; 0x20a2 <__gesf2+0x56>
    2092:	89 89       	ldd	r24, Y+17	; 0x11
    2094:	82 30       	cpi	r24, 0x02	; 2
    2096:	28 f0       	brcs	.+10     	; 0x20a2 <__gesf2+0x56>
    2098:	c7 01       	movw	r24, r14
    209a:	b8 01       	movw	r22, r16
    209c:	0e 94 27 12 	call	0x244e	; 0x244e <__fpcmp_parts_f>
    20a0:	01 c0       	rjmp	.+2      	; 0x20a4 <__gesf2+0x58>
    20a2:	8f ef       	ldi	r24, 0xFF	; 255
    20a4:	68 96       	adiw	r28, 0x18	; 24
    20a6:	e6 e0       	ldi	r30, 0x06	; 6
    20a8:	0c 94 84 3b 	jmp	0x7708	; 0x7708 <__epilogue_restores__+0x18>

000020ac <__ltsf2>:
    20ac:	a8 e1       	ldi	r26, 0x18	; 24
    20ae:	b0 e0       	ldi	r27, 0x00	; 0
    20b0:	ec e5       	ldi	r30, 0x5C	; 92
    20b2:	f0 e1       	ldi	r31, 0x10	; 16
    20b4:	0c 94 68 3b 	jmp	0x76d0	; 0x76d0 <__prologue_saves__+0x18>
    20b8:	69 83       	std	Y+1, r22	; 0x01
    20ba:	7a 83       	std	Y+2, r23	; 0x02
    20bc:	8b 83       	std	Y+3, r24	; 0x03
    20be:	9c 83       	std	Y+4, r25	; 0x04
    20c0:	2d 83       	std	Y+5, r18	; 0x05
    20c2:	3e 83       	std	Y+6, r19	; 0x06
    20c4:	4f 83       	std	Y+7, r20	; 0x07
    20c6:	58 87       	std	Y+8, r21	; 0x08
    20c8:	89 e0       	ldi	r24, 0x09	; 9
    20ca:	e8 2e       	mov	r14, r24
    20cc:	f1 2c       	mov	r15, r1
    20ce:	ec 0e       	add	r14, r28
    20d0:	fd 1e       	adc	r15, r29
    20d2:	ce 01       	movw	r24, r28
    20d4:	01 96       	adiw	r24, 0x01	; 1
    20d6:	b7 01       	movw	r22, r14
    20d8:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    20dc:	8e 01       	movw	r16, r28
    20de:	0f 5e       	subi	r16, 0xEF	; 239
    20e0:	1f 4f       	sbci	r17, 0xFF	; 255
    20e2:	ce 01       	movw	r24, r28
    20e4:	05 96       	adiw	r24, 0x05	; 5
    20e6:	b8 01       	movw	r22, r16
    20e8:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    20ec:	89 85       	ldd	r24, Y+9	; 0x09
    20ee:	82 30       	cpi	r24, 0x02	; 2
    20f0:	40 f0       	brcs	.+16     	; 0x2102 <__ltsf2+0x56>
    20f2:	89 89       	ldd	r24, Y+17	; 0x11
    20f4:	82 30       	cpi	r24, 0x02	; 2
    20f6:	28 f0       	brcs	.+10     	; 0x2102 <__ltsf2+0x56>
    20f8:	c7 01       	movw	r24, r14
    20fa:	b8 01       	movw	r22, r16
    20fc:	0e 94 27 12 	call	0x244e	; 0x244e <__fpcmp_parts_f>
    2100:	01 c0       	rjmp	.+2      	; 0x2104 <__ltsf2+0x58>
    2102:	81 e0       	ldi	r24, 0x01	; 1
    2104:	68 96       	adiw	r28, 0x18	; 24
    2106:	e6 e0       	ldi	r30, 0x06	; 6
    2108:	0c 94 84 3b 	jmp	0x7708	; 0x7708 <__epilogue_restores__+0x18>

0000210c <__fixsfsi>:
    210c:	ac e0       	ldi	r26, 0x0C	; 12
    210e:	b0 e0       	ldi	r27, 0x00	; 0
    2110:	ec e8       	ldi	r30, 0x8C	; 140
    2112:	f0 e1       	ldi	r31, 0x10	; 16
    2114:	0c 94 6c 3b 	jmp	0x76d8	; 0x76d8 <__prologue_saves__+0x20>
    2118:	69 83       	std	Y+1, r22	; 0x01
    211a:	7a 83       	std	Y+2, r23	; 0x02
    211c:	8b 83       	std	Y+3, r24	; 0x03
    211e:	9c 83       	std	Y+4, r25	; 0x04
    2120:	ce 01       	movw	r24, r28
    2122:	01 96       	adiw	r24, 0x01	; 1
    2124:	be 01       	movw	r22, r28
    2126:	6b 5f       	subi	r22, 0xFB	; 251
    2128:	7f 4f       	sbci	r23, 0xFF	; 255
    212a:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    212e:	8d 81       	ldd	r24, Y+5	; 0x05
    2130:	82 30       	cpi	r24, 0x02	; 2
    2132:	61 f1       	breq	.+88     	; 0x218c <__fixsfsi+0x80>
    2134:	82 30       	cpi	r24, 0x02	; 2
    2136:	50 f1       	brcs	.+84     	; 0x218c <__fixsfsi+0x80>
    2138:	84 30       	cpi	r24, 0x04	; 4
    213a:	21 f4       	brne	.+8      	; 0x2144 <__fixsfsi+0x38>
    213c:	8e 81       	ldd	r24, Y+6	; 0x06
    213e:	88 23       	and	r24, r24
    2140:	51 f1       	breq	.+84     	; 0x2196 <__fixsfsi+0x8a>
    2142:	2e c0       	rjmp	.+92     	; 0x21a0 <__fixsfsi+0x94>
    2144:	2f 81       	ldd	r18, Y+7	; 0x07
    2146:	38 85       	ldd	r19, Y+8	; 0x08
    2148:	37 fd       	sbrc	r19, 7
    214a:	20 c0       	rjmp	.+64     	; 0x218c <__fixsfsi+0x80>
    214c:	6e 81       	ldd	r22, Y+6	; 0x06
    214e:	2f 31       	cpi	r18, 0x1F	; 31
    2150:	31 05       	cpc	r19, r1
    2152:	1c f0       	brlt	.+6      	; 0x215a <__fixsfsi+0x4e>
    2154:	66 23       	and	r22, r22
    2156:	f9 f0       	breq	.+62     	; 0x2196 <__fixsfsi+0x8a>
    2158:	23 c0       	rjmp	.+70     	; 0x21a0 <__fixsfsi+0x94>
    215a:	8e e1       	ldi	r24, 0x1E	; 30
    215c:	90 e0       	ldi	r25, 0x00	; 0
    215e:	82 1b       	sub	r24, r18
    2160:	93 0b       	sbc	r25, r19
    2162:	29 85       	ldd	r18, Y+9	; 0x09
    2164:	3a 85       	ldd	r19, Y+10	; 0x0a
    2166:	4b 85       	ldd	r20, Y+11	; 0x0b
    2168:	5c 85       	ldd	r21, Y+12	; 0x0c
    216a:	04 c0       	rjmp	.+8      	; 0x2174 <__fixsfsi+0x68>
    216c:	56 95       	lsr	r21
    216e:	47 95       	ror	r20
    2170:	37 95       	ror	r19
    2172:	27 95       	ror	r18
    2174:	8a 95       	dec	r24
    2176:	d2 f7       	brpl	.-12     	; 0x216c <__fixsfsi+0x60>
    2178:	66 23       	and	r22, r22
    217a:	b1 f0       	breq	.+44     	; 0x21a8 <__fixsfsi+0x9c>
    217c:	50 95       	com	r21
    217e:	40 95       	com	r20
    2180:	30 95       	com	r19
    2182:	21 95       	neg	r18
    2184:	3f 4f       	sbci	r19, 0xFF	; 255
    2186:	4f 4f       	sbci	r20, 0xFF	; 255
    2188:	5f 4f       	sbci	r21, 0xFF	; 255
    218a:	0e c0       	rjmp	.+28     	; 0x21a8 <__fixsfsi+0x9c>
    218c:	20 e0       	ldi	r18, 0x00	; 0
    218e:	30 e0       	ldi	r19, 0x00	; 0
    2190:	40 e0       	ldi	r20, 0x00	; 0
    2192:	50 e0       	ldi	r21, 0x00	; 0
    2194:	09 c0       	rjmp	.+18     	; 0x21a8 <__fixsfsi+0x9c>
    2196:	2f ef       	ldi	r18, 0xFF	; 255
    2198:	3f ef       	ldi	r19, 0xFF	; 255
    219a:	4f ef       	ldi	r20, 0xFF	; 255
    219c:	5f e7       	ldi	r21, 0x7F	; 127
    219e:	04 c0       	rjmp	.+8      	; 0x21a8 <__fixsfsi+0x9c>
    21a0:	20 e0       	ldi	r18, 0x00	; 0
    21a2:	30 e0       	ldi	r19, 0x00	; 0
    21a4:	40 e0       	ldi	r20, 0x00	; 0
    21a6:	50 e8       	ldi	r21, 0x80	; 128
    21a8:	b9 01       	movw	r22, r18
    21aa:	ca 01       	movw	r24, r20
    21ac:	2c 96       	adiw	r28, 0x0c	; 12
    21ae:	e2 e0       	ldi	r30, 0x02	; 2
    21b0:	0c 94 88 3b 	jmp	0x7710	; 0x7710 <__epilogue_restores__+0x20>

000021b4 <__pack_f>:
    21b4:	df 92       	push	r13
    21b6:	ef 92       	push	r14
    21b8:	ff 92       	push	r15
    21ba:	0f 93       	push	r16
    21bc:	1f 93       	push	r17
    21be:	fc 01       	movw	r30, r24
    21c0:	e4 80       	ldd	r14, Z+4	; 0x04
    21c2:	f5 80       	ldd	r15, Z+5	; 0x05
    21c4:	06 81       	ldd	r16, Z+6	; 0x06
    21c6:	17 81       	ldd	r17, Z+7	; 0x07
    21c8:	d1 80       	ldd	r13, Z+1	; 0x01
    21ca:	80 81       	ld	r24, Z
    21cc:	82 30       	cpi	r24, 0x02	; 2
    21ce:	48 f4       	brcc	.+18     	; 0x21e2 <__pack_f+0x2e>
    21d0:	80 e0       	ldi	r24, 0x00	; 0
    21d2:	90 e0       	ldi	r25, 0x00	; 0
    21d4:	a0 e1       	ldi	r26, 0x10	; 16
    21d6:	b0 e0       	ldi	r27, 0x00	; 0
    21d8:	e8 2a       	or	r14, r24
    21da:	f9 2a       	or	r15, r25
    21dc:	0a 2b       	or	r16, r26
    21de:	1b 2b       	or	r17, r27
    21e0:	a5 c0       	rjmp	.+330    	; 0x232c <__pack_f+0x178>
    21e2:	84 30       	cpi	r24, 0x04	; 4
    21e4:	09 f4       	brne	.+2      	; 0x21e8 <__pack_f+0x34>
    21e6:	9f c0       	rjmp	.+318    	; 0x2326 <__pack_f+0x172>
    21e8:	82 30       	cpi	r24, 0x02	; 2
    21ea:	21 f4       	brne	.+8      	; 0x21f4 <__pack_f+0x40>
    21ec:	ee 24       	eor	r14, r14
    21ee:	ff 24       	eor	r15, r15
    21f0:	87 01       	movw	r16, r14
    21f2:	05 c0       	rjmp	.+10     	; 0x21fe <__pack_f+0x4a>
    21f4:	e1 14       	cp	r14, r1
    21f6:	f1 04       	cpc	r15, r1
    21f8:	01 05       	cpc	r16, r1
    21fa:	11 05       	cpc	r17, r1
    21fc:	19 f4       	brne	.+6      	; 0x2204 <__pack_f+0x50>
    21fe:	e0 e0       	ldi	r30, 0x00	; 0
    2200:	f0 e0       	ldi	r31, 0x00	; 0
    2202:	96 c0       	rjmp	.+300    	; 0x2330 <__pack_f+0x17c>
    2204:	62 81       	ldd	r22, Z+2	; 0x02
    2206:	73 81       	ldd	r23, Z+3	; 0x03
    2208:	9f ef       	ldi	r25, 0xFF	; 255
    220a:	62 38       	cpi	r22, 0x82	; 130
    220c:	79 07       	cpc	r23, r25
    220e:	0c f0       	brlt	.+2      	; 0x2212 <__pack_f+0x5e>
    2210:	5b c0       	rjmp	.+182    	; 0x22c8 <__pack_f+0x114>
    2212:	22 e8       	ldi	r18, 0x82	; 130
    2214:	3f ef       	ldi	r19, 0xFF	; 255
    2216:	26 1b       	sub	r18, r22
    2218:	37 0b       	sbc	r19, r23
    221a:	2a 31       	cpi	r18, 0x1A	; 26
    221c:	31 05       	cpc	r19, r1
    221e:	2c f0       	brlt	.+10     	; 0x222a <__pack_f+0x76>
    2220:	20 e0       	ldi	r18, 0x00	; 0
    2222:	30 e0       	ldi	r19, 0x00	; 0
    2224:	40 e0       	ldi	r20, 0x00	; 0
    2226:	50 e0       	ldi	r21, 0x00	; 0
    2228:	2a c0       	rjmp	.+84     	; 0x227e <__pack_f+0xca>
    222a:	b8 01       	movw	r22, r16
    222c:	a7 01       	movw	r20, r14
    222e:	02 2e       	mov	r0, r18
    2230:	04 c0       	rjmp	.+8      	; 0x223a <__pack_f+0x86>
    2232:	76 95       	lsr	r23
    2234:	67 95       	ror	r22
    2236:	57 95       	ror	r21
    2238:	47 95       	ror	r20
    223a:	0a 94       	dec	r0
    223c:	d2 f7       	brpl	.-12     	; 0x2232 <__pack_f+0x7e>
    223e:	81 e0       	ldi	r24, 0x01	; 1
    2240:	90 e0       	ldi	r25, 0x00	; 0
    2242:	a0 e0       	ldi	r26, 0x00	; 0
    2244:	b0 e0       	ldi	r27, 0x00	; 0
    2246:	04 c0       	rjmp	.+8      	; 0x2250 <__pack_f+0x9c>
    2248:	88 0f       	add	r24, r24
    224a:	99 1f       	adc	r25, r25
    224c:	aa 1f       	adc	r26, r26
    224e:	bb 1f       	adc	r27, r27
    2250:	2a 95       	dec	r18
    2252:	d2 f7       	brpl	.-12     	; 0x2248 <__pack_f+0x94>
    2254:	01 97       	sbiw	r24, 0x01	; 1
    2256:	a1 09       	sbc	r26, r1
    2258:	b1 09       	sbc	r27, r1
    225a:	8e 21       	and	r24, r14
    225c:	9f 21       	and	r25, r15
    225e:	a0 23       	and	r26, r16
    2260:	b1 23       	and	r27, r17
    2262:	00 97       	sbiw	r24, 0x00	; 0
    2264:	a1 05       	cpc	r26, r1
    2266:	b1 05       	cpc	r27, r1
    2268:	21 f0       	breq	.+8      	; 0x2272 <__pack_f+0xbe>
    226a:	81 e0       	ldi	r24, 0x01	; 1
    226c:	90 e0       	ldi	r25, 0x00	; 0
    226e:	a0 e0       	ldi	r26, 0x00	; 0
    2270:	b0 e0       	ldi	r27, 0x00	; 0
    2272:	9a 01       	movw	r18, r20
    2274:	ab 01       	movw	r20, r22
    2276:	28 2b       	or	r18, r24
    2278:	39 2b       	or	r19, r25
    227a:	4a 2b       	or	r20, r26
    227c:	5b 2b       	or	r21, r27
    227e:	da 01       	movw	r26, r20
    2280:	c9 01       	movw	r24, r18
    2282:	8f 77       	andi	r24, 0x7F	; 127
    2284:	90 70       	andi	r25, 0x00	; 0
    2286:	a0 70       	andi	r26, 0x00	; 0
    2288:	b0 70       	andi	r27, 0x00	; 0
    228a:	80 34       	cpi	r24, 0x40	; 64
    228c:	91 05       	cpc	r25, r1
    228e:	a1 05       	cpc	r26, r1
    2290:	b1 05       	cpc	r27, r1
    2292:	39 f4       	brne	.+14     	; 0x22a2 <__pack_f+0xee>
    2294:	27 ff       	sbrs	r18, 7
    2296:	09 c0       	rjmp	.+18     	; 0x22aa <__pack_f+0xf6>
    2298:	20 5c       	subi	r18, 0xC0	; 192
    229a:	3f 4f       	sbci	r19, 0xFF	; 255
    229c:	4f 4f       	sbci	r20, 0xFF	; 255
    229e:	5f 4f       	sbci	r21, 0xFF	; 255
    22a0:	04 c0       	rjmp	.+8      	; 0x22aa <__pack_f+0xf6>
    22a2:	21 5c       	subi	r18, 0xC1	; 193
    22a4:	3f 4f       	sbci	r19, 0xFF	; 255
    22a6:	4f 4f       	sbci	r20, 0xFF	; 255
    22a8:	5f 4f       	sbci	r21, 0xFF	; 255
    22aa:	e0 e0       	ldi	r30, 0x00	; 0
    22ac:	f0 e0       	ldi	r31, 0x00	; 0
    22ae:	20 30       	cpi	r18, 0x00	; 0
    22b0:	a0 e0       	ldi	r26, 0x00	; 0
    22b2:	3a 07       	cpc	r19, r26
    22b4:	a0 e0       	ldi	r26, 0x00	; 0
    22b6:	4a 07       	cpc	r20, r26
    22b8:	a0 e4       	ldi	r26, 0x40	; 64
    22ba:	5a 07       	cpc	r21, r26
    22bc:	10 f0       	brcs	.+4      	; 0x22c2 <__pack_f+0x10e>
    22be:	e1 e0       	ldi	r30, 0x01	; 1
    22c0:	f0 e0       	ldi	r31, 0x00	; 0
    22c2:	79 01       	movw	r14, r18
    22c4:	8a 01       	movw	r16, r20
    22c6:	27 c0       	rjmp	.+78     	; 0x2316 <__pack_f+0x162>
    22c8:	60 38       	cpi	r22, 0x80	; 128
    22ca:	71 05       	cpc	r23, r1
    22cc:	64 f5       	brge	.+88     	; 0x2326 <__pack_f+0x172>
    22ce:	fb 01       	movw	r30, r22
    22d0:	e1 58       	subi	r30, 0x81	; 129
    22d2:	ff 4f       	sbci	r31, 0xFF	; 255
    22d4:	d8 01       	movw	r26, r16
    22d6:	c7 01       	movw	r24, r14
    22d8:	8f 77       	andi	r24, 0x7F	; 127
    22da:	90 70       	andi	r25, 0x00	; 0
    22dc:	a0 70       	andi	r26, 0x00	; 0
    22de:	b0 70       	andi	r27, 0x00	; 0
    22e0:	80 34       	cpi	r24, 0x40	; 64
    22e2:	91 05       	cpc	r25, r1
    22e4:	a1 05       	cpc	r26, r1
    22e6:	b1 05       	cpc	r27, r1
    22e8:	39 f4       	brne	.+14     	; 0x22f8 <__pack_f+0x144>
    22ea:	e7 fe       	sbrs	r14, 7
    22ec:	0d c0       	rjmp	.+26     	; 0x2308 <__pack_f+0x154>
    22ee:	80 e4       	ldi	r24, 0x40	; 64
    22f0:	90 e0       	ldi	r25, 0x00	; 0
    22f2:	a0 e0       	ldi	r26, 0x00	; 0
    22f4:	b0 e0       	ldi	r27, 0x00	; 0
    22f6:	04 c0       	rjmp	.+8      	; 0x2300 <__pack_f+0x14c>
    22f8:	8f e3       	ldi	r24, 0x3F	; 63
    22fa:	90 e0       	ldi	r25, 0x00	; 0
    22fc:	a0 e0       	ldi	r26, 0x00	; 0
    22fe:	b0 e0       	ldi	r27, 0x00	; 0
    2300:	e8 0e       	add	r14, r24
    2302:	f9 1e       	adc	r15, r25
    2304:	0a 1f       	adc	r16, r26
    2306:	1b 1f       	adc	r17, r27
    2308:	17 ff       	sbrs	r17, 7
    230a:	05 c0       	rjmp	.+10     	; 0x2316 <__pack_f+0x162>
    230c:	16 95       	lsr	r17
    230e:	07 95       	ror	r16
    2310:	f7 94       	ror	r15
    2312:	e7 94       	ror	r14
    2314:	31 96       	adiw	r30, 0x01	; 1
    2316:	87 e0       	ldi	r24, 0x07	; 7
    2318:	16 95       	lsr	r17
    231a:	07 95       	ror	r16
    231c:	f7 94       	ror	r15
    231e:	e7 94       	ror	r14
    2320:	8a 95       	dec	r24
    2322:	d1 f7       	brne	.-12     	; 0x2318 <__pack_f+0x164>
    2324:	05 c0       	rjmp	.+10     	; 0x2330 <__pack_f+0x17c>
    2326:	ee 24       	eor	r14, r14
    2328:	ff 24       	eor	r15, r15
    232a:	87 01       	movw	r16, r14
    232c:	ef ef       	ldi	r30, 0xFF	; 255
    232e:	f0 e0       	ldi	r31, 0x00	; 0
    2330:	6e 2f       	mov	r22, r30
    2332:	67 95       	ror	r22
    2334:	66 27       	eor	r22, r22
    2336:	67 95       	ror	r22
    2338:	90 2f       	mov	r25, r16
    233a:	9f 77       	andi	r25, 0x7F	; 127
    233c:	d7 94       	ror	r13
    233e:	dd 24       	eor	r13, r13
    2340:	d7 94       	ror	r13
    2342:	8e 2f       	mov	r24, r30
    2344:	86 95       	lsr	r24
    2346:	49 2f       	mov	r20, r25
    2348:	46 2b       	or	r20, r22
    234a:	58 2f       	mov	r21, r24
    234c:	5d 29       	or	r21, r13
    234e:	b7 01       	movw	r22, r14
    2350:	ca 01       	movw	r24, r20
    2352:	1f 91       	pop	r17
    2354:	0f 91       	pop	r16
    2356:	ff 90       	pop	r15
    2358:	ef 90       	pop	r14
    235a:	df 90       	pop	r13
    235c:	08 95       	ret

0000235e <__unpack_f>:
    235e:	fc 01       	movw	r30, r24
    2360:	db 01       	movw	r26, r22
    2362:	40 81       	ld	r20, Z
    2364:	51 81       	ldd	r21, Z+1	; 0x01
    2366:	22 81       	ldd	r18, Z+2	; 0x02
    2368:	62 2f       	mov	r22, r18
    236a:	6f 77       	andi	r22, 0x7F	; 127
    236c:	70 e0       	ldi	r23, 0x00	; 0
    236e:	22 1f       	adc	r18, r18
    2370:	22 27       	eor	r18, r18
    2372:	22 1f       	adc	r18, r18
    2374:	93 81       	ldd	r25, Z+3	; 0x03
    2376:	89 2f       	mov	r24, r25
    2378:	88 0f       	add	r24, r24
    237a:	82 2b       	or	r24, r18
    237c:	28 2f       	mov	r18, r24
    237e:	30 e0       	ldi	r19, 0x00	; 0
    2380:	99 1f       	adc	r25, r25
    2382:	99 27       	eor	r25, r25
    2384:	99 1f       	adc	r25, r25
    2386:	11 96       	adiw	r26, 0x01	; 1
    2388:	9c 93       	st	X, r25
    238a:	11 97       	sbiw	r26, 0x01	; 1
    238c:	21 15       	cp	r18, r1
    238e:	31 05       	cpc	r19, r1
    2390:	a9 f5       	brne	.+106    	; 0x23fc <__unpack_f+0x9e>
    2392:	41 15       	cp	r20, r1
    2394:	51 05       	cpc	r21, r1
    2396:	61 05       	cpc	r22, r1
    2398:	71 05       	cpc	r23, r1
    239a:	11 f4       	brne	.+4      	; 0x23a0 <__unpack_f+0x42>
    239c:	82 e0       	ldi	r24, 0x02	; 2
    239e:	37 c0       	rjmp	.+110    	; 0x240e <__unpack_f+0xb0>
    23a0:	82 e8       	ldi	r24, 0x82	; 130
    23a2:	9f ef       	ldi	r25, 0xFF	; 255
    23a4:	13 96       	adiw	r26, 0x03	; 3
    23a6:	9c 93       	st	X, r25
    23a8:	8e 93       	st	-X, r24
    23aa:	12 97       	sbiw	r26, 0x02	; 2
    23ac:	9a 01       	movw	r18, r20
    23ae:	ab 01       	movw	r20, r22
    23b0:	67 e0       	ldi	r22, 0x07	; 7
    23b2:	22 0f       	add	r18, r18
    23b4:	33 1f       	adc	r19, r19
    23b6:	44 1f       	adc	r20, r20
    23b8:	55 1f       	adc	r21, r21
    23ba:	6a 95       	dec	r22
    23bc:	d1 f7       	brne	.-12     	; 0x23b2 <__unpack_f+0x54>
    23be:	83 e0       	ldi	r24, 0x03	; 3
    23c0:	8c 93       	st	X, r24
    23c2:	0d c0       	rjmp	.+26     	; 0x23de <__unpack_f+0x80>
    23c4:	22 0f       	add	r18, r18
    23c6:	33 1f       	adc	r19, r19
    23c8:	44 1f       	adc	r20, r20
    23ca:	55 1f       	adc	r21, r21
    23cc:	12 96       	adiw	r26, 0x02	; 2
    23ce:	8d 91       	ld	r24, X+
    23d0:	9c 91       	ld	r25, X
    23d2:	13 97       	sbiw	r26, 0x03	; 3
    23d4:	01 97       	sbiw	r24, 0x01	; 1
    23d6:	13 96       	adiw	r26, 0x03	; 3
    23d8:	9c 93       	st	X, r25
    23da:	8e 93       	st	-X, r24
    23dc:	12 97       	sbiw	r26, 0x02	; 2
    23de:	20 30       	cpi	r18, 0x00	; 0
    23e0:	80 e0       	ldi	r24, 0x00	; 0
    23e2:	38 07       	cpc	r19, r24
    23e4:	80 e0       	ldi	r24, 0x00	; 0
    23e6:	48 07       	cpc	r20, r24
    23e8:	80 e4       	ldi	r24, 0x40	; 64
    23ea:	58 07       	cpc	r21, r24
    23ec:	58 f3       	brcs	.-42     	; 0x23c4 <__unpack_f+0x66>
    23ee:	14 96       	adiw	r26, 0x04	; 4
    23f0:	2d 93       	st	X+, r18
    23f2:	3d 93       	st	X+, r19
    23f4:	4d 93       	st	X+, r20
    23f6:	5c 93       	st	X, r21
    23f8:	17 97       	sbiw	r26, 0x07	; 7
    23fa:	08 95       	ret
    23fc:	2f 3f       	cpi	r18, 0xFF	; 255
    23fe:	31 05       	cpc	r19, r1
    2400:	79 f4       	brne	.+30     	; 0x2420 <__unpack_f+0xc2>
    2402:	41 15       	cp	r20, r1
    2404:	51 05       	cpc	r21, r1
    2406:	61 05       	cpc	r22, r1
    2408:	71 05       	cpc	r23, r1
    240a:	19 f4       	brne	.+6      	; 0x2412 <__unpack_f+0xb4>
    240c:	84 e0       	ldi	r24, 0x04	; 4
    240e:	8c 93       	st	X, r24
    2410:	08 95       	ret
    2412:	64 ff       	sbrs	r22, 4
    2414:	03 c0       	rjmp	.+6      	; 0x241c <__unpack_f+0xbe>
    2416:	81 e0       	ldi	r24, 0x01	; 1
    2418:	8c 93       	st	X, r24
    241a:	12 c0       	rjmp	.+36     	; 0x2440 <__unpack_f+0xe2>
    241c:	1c 92       	st	X, r1
    241e:	10 c0       	rjmp	.+32     	; 0x2440 <__unpack_f+0xe2>
    2420:	2f 57       	subi	r18, 0x7F	; 127
    2422:	30 40       	sbci	r19, 0x00	; 0
    2424:	13 96       	adiw	r26, 0x03	; 3
    2426:	3c 93       	st	X, r19
    2428:	2e 93       	st	-X, r18
    242a:	12 97       	sbiw	r26, 0x02	; 2
    242c:	83 e0       	ldi	r24, 0x03	; 3
    242e:	8c 93       	st	X, r24
    2430:	87 e0       	ldi	r24, 0x07	; 7
    2432:	44 0f       	add	r20, r20
    2434:	55 1f       	adc	r21, r21
    2436:	66 1f       	adc	r22, r22
    2438:	77 1f       	adc	r23, r23
    243a:	8a 95       	dec	r24
    243c:	d1 f7       	brne	.-12     	; 0x2432 <__unpack_f+0xd4>
    243e:	70 64       	ori	r23, 0x40	; 64
    2440:	14 96       	adiw	r26, 0x04	; 4
    2442:	4d 93       	st	X+, r20
    2444:	5d 93       	st	X+, r21
    2446:	6d 93       	st	X+, r22
    2448:	7c 93       	st	X, r23
    244a:	17 97       	sbiw	r26, 0x07	; 7
    244c:	08 95       	ret

0000244e <__fpcmp_parts_f>:
    244e:	1f 93       	push	r17
    2450:	dc 01       	movw	r26, r24
    2452:	fb 01       	movw	r30, r22
    2454:	9c 91       	ld	r25, X
    2456:	92 30       	cpi	r25, 0x02	; 2
    2458:	08 f4       	brcc	.+2      	; 0x245c <__fpcmp_parts_f+0xe>
    245a:	47 c0       	rjmp	.+142    	; 0x24ea <__fpcmp_parts_f+0x9c>
    245c:	80 81       	ld	r24, Z
    245e:	82 30       	cpi	r24, 0x02	; 2
    2460:	08 f4       	brcc	.+2      	; 0x2464 <__fpcmp_parts_f+0x16>
    2462:	43 c0       	rjmp	.+134    	; 0x24ea <__fpcmp_parts_f+0x9c>
    2464:	94 30       	cpi	r25, 0x04	; 4
    2466:	51 f4       	brne	.+20     	; 0x247c <__fpcmp_parts_f+0x2e>
    2468:	11 96       	adiw	r26, 0x01	; 1
    246a:	1c 91       	ld	r17, X
    246c:	84 30       	cpi	r24, 0x04	; 4
    246e:	99 f5       	brne	.+102    	; 0x24d6 <__fpcmp_parts_f+0x88>
    2470:	81 81       	ldd	r24, Z+1	; 0x01
    2472:	68 2f       	mov	r22, r24
    2474:	70 e0       	ldi	r23, 0x00	; 0
    2476:	61 1b       	sub	r22, r17
    2478:	71 09       	sbc	r23, r1
    247a:	3f c0       	rjmp	.+126    	; 0x24fa <__fpcmp_parts_f+0xac>
    247c:	84 30       	cpi	r24, 0x04	; 4
    247e:	21 f0       	breq	.+8      	; 0x2488 <__fpcmp_parts_f+0x3a>
    2480:	92 30       	cpi	r25, 0x02	; 2
    2482:	31 f4       	brne	.+12     	; 0x2490 <__fpcmp_parts_f+0x42>
    2484:	82 30       	cpi	r24, 0x02	; 2
    2486:	b9 f1       	breq	.+110    	; 0x24f6 <__fpcmp_parts_f+0xa8>
    2488:	81 81       	ldd	r24, Z+1	; 0x01
    248a:	88 23       	and	r24, r24
    248c:	89 f1       	breq	.+98     	; 0x24f0 <__fpcmp_parts_f+0xa2>
    248e:	2d c0       	rjmp	.+90     	; 0x24ea <__fpcmp_parts_f+0x9c>
    2490:	11 96       	adiw	r26, 0x01	; 1
    2492:	1c 91       	ld	r17, X
    2494:	11 97       	sbiw	r26, 0x01	; 1
    2496:	82 30       	cpi	r24, 0x02	; 2
    2498:	f1 f0       	breq	.+60     	; 0x24d6 <__fpcmp_parts_f+0x88>
    249a:	81 81       	ldd	r24, Z+1	; 0x01
    249c:	18 17       	cp	r17, r24
    249e:	d9 f4       	brne	.+54     	; 0x24d6 <__fpcmp_parts_f+0x88>
    24a0:	12 96       	adiw	r26, 0x02	; 2
    24a2:	2d 91       	ld	r18, X+
    24a4:	3c 91       	ld	r19, X
    24a6:	13 97       	sbiw	r26, 0x03	; 3
    24a8:	82 81       	ldd	r24, Z+2	; 0x02
    24aa:	93 81       	ldd	r25, Z+3	; 0x03
    24ac:	82 17       	cp	r24, r18
    24ae:	93 07       	cpc	r25, r19
    24b0:	94 f0       	brlt	.+36     	; 0x24d6 <__fpcmp_parts_f+0x88>
    24b2:	28 17       	cp	r18, r24
    24b4:	39 07       	cpc	r19, r25
    24b6:	bc f0       	brlt	.+46     	; 0x24e6 <__fpcmp_parts_f+0x98>
    24b8:	14 96       	adiw	r26, 0x04	; 4
    24ba:	8d 91       	ld	r24, X+
    24bc:	9d 91       	ld	r25, X+
    24be:	0d 90       	ld	r0, X+
    24c0:	bc 91       	ld	r27, X
    24c2:	a0 2d       	mov	r26, r0
    24c4:	24 81       	ldd	r18, Z+4	; 0x04
    24c6:	35 81       	ldd	r19, Z+5	; 0x05
    24c8:	46 81       	ldd	r20, Z+6	; 0x06
    24ca:	57 81       	ldd	r21, Z+7	; 0x07
    24cc:	28 17       	cp	r18, r24
    24ce:	39 07       	cpc	r19, r25
    24d0:	4a 07       	cpc	r20, r26
    24d2:	5b 07       	cpc	r21, r27
    24d4:	18 f4       	brcc	.+6      	; 0x24dc <__fpcmp_parts_f+0x8e>
    24d6:	11 23       	and	r17, r17
    24d8:	41 f0       	breq	.+16     	; 0x24ea <__fpcmp_parts_f+0x9c>
    24da:	0a c0       	rjmp	.+20     	; 0x24f0 <__fpcmp_parts_f+0xa2>
    24dc:	82 17       	cp	r24, r18
    24de:	93 07       	cpc	r25, r19
    24e0:	a4 07       	cpc	r26, r20
    24e2:	b5 07       	cpc	r27, r21
    24e4:	40 f4       	brcc	.+16     	; 0x24f6 <__fpcmp_parts_f+0xa8>
    24e6:	11 23       	and	r17, r17
    24e8:	19 f0       	breq	.+6      	; 0x24f0 <__fpcmp_parts_f+0xa2>
    24ea:	61 e0       	ldi	r22, 0x01	; 1
    24ec:	70 e0       	ldi	r23, 0x00	; 0
    24ee:	05 c0       	rjmp	.+10     	; 0x24fa <__fpcmp_parts_f+0xac>
    24f0:	6f ef       	ldi	r22, 0xFF	; 255
    24f2:	7f ef       	ldi	r23, 0xFF	; 255
    24f4:	02 c0       	rjmp	.+4      	; 0x24fa <__fpcmp_parts_f+0xac>
    24f6:	60 e0       	ldi	r22, 0x00	; 0
    24f8:	70 e0       	ldi	r23, 0x00	; 0
    24fa:	cb 01       	movw	r24, r22
    24fc:	1f 91       	pop	r17
    24fe:	08 95       	ret

00002500 <DIO_voidSetPinDirection>:
#include "../../01-LIB/BIT_MATH.h"
#include "DIO_Config.h"
#include "DIO_Interface.h"
#include "DIO_Private.h"

void DIO_voidSetPinDirection(u8 Copy_u8PortNum, u8 Copy_u8PinNum, u8 Copy_u8Mode){
    2500:	df 93       	push	r29
    2502:	cf 93       	push	r28
    2504:	cd b7       	in	r28, 0x3d	; 61
    2506:	de b7       	in	r29, 0x3e	; 62
    2508:	27 97       	sbiw	r28, 0x07	; 7
    250a:	0f b6       	in	r0, 0x3f	; 63
    250c:	f8 94       	cli
    250e:	de bf       	out	0x3e, r29	; 62
    2510:	0f be       	out	0x3f, r0	; 63
    2512:	cd bf       	out	0x3d, r28	; 61
    2514:	89 83       	std	Y+1, r24	; 0x01
    2516:	6a 83       	std	Y+2, r22	; 0x02
    2518:	4b 83       	std	Y+3, r20	; 0x03
	if (Copy_u8Mode == DIO_u8OUTPUT){
    251a:	8b 81       	ldd	r24, Y+3	; 0x03
    251c:	81 30       	cpi	r24, 0x01	; 1
    251e:	09 f0       	breq	.+2      	; 0x2522 <DIO_voidSetPinDirection+0x22>
    2520:	70 c0       	rjmp	.+224    	; 0x2602 <DIO_voidSetPinDirection+0x102>
		switch (Copy_u8PortNum)
    2522:	89 81       	ldd	r24, Y+1	; 0x01
    2524:	28 2f       	mov	r18, r24
    2526:	30 e0       	ldi	r19, 0x00	; 0
    2528:	3f 83       	std	Y+7, r19	; 0x07
    252a:	2e 83       	std	Y+6, r18	; 0x06
    252c:	8e 81       	ldd	r24, Y+6	; 0x06
    252e:	9f 81       	ldd	r25, Y+7	; 0x07
    2530:	82 30       	cpi	r24, 0x02	; 2
    2532:	91 05       	cpc	r25, r1
    2534:	51 f1       	breq	.+84     	; 0x258a <DIO_voidSetPinDirection+0x8a>
    2536:	2e 81       	ldd	r18, Y+6	; 0x06
    2538:	3f 81       	ldd	r19, Y+7	; 0x07
    253a:	23 30       	cpi	r18, 0x03	; 3
    253c:	31 05       	cpc	r19, r1
    253e:	34 f4       	brge	.+12     	; 0x254c <DIO_voidSetPinDirection+0x4c>
    2540:	8e 81       	ldd	r24, Y+6	; 0x06
    2542:	9f 81       	ldd	r25, Y+7	; 0x07
    2544:	81 30       	cpi	r24, 0x01	; 1
    2546:	91 05       	cpc	r25, r1
    2548:	61 f0       	breq	.+24     	; 0x2562 <DIO_voidSetPinDirection+0x62>
    254a:	d3 c0       	rjmp	.+422    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
    254c:	2e 81       	ldd	r18, Y+6	; 0x06
    254e:	3f 81       	ldd	r19, Y+7	; 0x07
    2550:	23 30       	cpi	r18, 0x03	; 3
    2552:	31 05       	cpc	r19, r1
    2554:	71 f1       	breq	.+92     	; 0x25b2 <DIO_voidSetPinDirection+0xb2>
    2556:	8e 81       	ldd	r24, Y+6	; 0x06
    2558:	9f 81       	ldd	r25, Y+7	; 0x07
    255a:	84 30       	cpi	r24, 0x04	; 4
    255c:	91 05       	cpc	r25, r1
    255e:	e9 f1       	breq	.+122    	; 0x25da <DIO_voidSetPinDirection+0xda>
    2560:	c8 c0       	rjmp	.+400    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
		{
			case DIO_u8PORTA: SET_BIT(DDRA, Copy_u8PinNum); break;
    2562:	aa e3       	ldi	r26, 0x3A	; 58
    2564:	b0 e0       	ldi	r27, 0x00	; 0
    2566:	ea e3       	ldi	r30, 0x3A	; 58
    2568:	f0 e0       	ldi	r31, 0x00	; 0
    256a:	80 81       	ld	r24, Z
    256c:	48 2f       	mov	r20, r24
    256e:	8a 81       	ldd	r24, Y+2	; 0x02
    2570:	28 2f       	mov	r18, r24
    2572:	30 e0       	ldi	r19, 0x00	; 0
    2574:	81 e0       	ldi	r24, 0x01	; 1
    2576:	90 e0       	ldi	r25, 0x00	; 0
    2578:	02 2e       	mov	r0, r18
    257a:	02 c0       	rjmp	.+4      	; 0x2580 <DIO_voidSetPinDirection+0x80>
    257c:	88 0f       	add	r24, r24
    257e:	99 1f       	adc	r25, r25
    2580:	0a 94       	dec	r0
    2582:	e2 f7       	brpl	.-8      	; 0x257c <DIO_voidSetPinDirection+0x7c>
    2584:	84 2b       	or	r24, r20
    2586:	8c 93       	st	X, r24
    2588:	b4 c0       	rjmp	.+360    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTB: SET_BIT(DDRB, Copy_u8PinNum); break;
    258a:	a7 e3       	ldi	r26, 0x37	; 55
    258c:	b0 e0       	ldi	r27, 0x00	; 0
    258e:	e7 e3       	ldi	r30, 0x37	; 55
    2590:	f0 e0       	ldi	r31, 0x00	; 0
    2592:	80 81       	ld	r24, Z
    2594:	48 2f       	mov	r20, r24
    2596:	8a 81       	ldd	r24, Y+2	; 0x02
    2598:	28 2f       	mov	r18, r24
    259a:	30 e0       	ldi	r19, 0x00	; 0
    259c:	81 e0       	ldi	r24, 0x01	; 1
    259e:	90 e0       	ldi	r25, 0x00	; 0
    25a0:	02 2e       	mov	r0, r18
    25a2:	02 c0       	rjmp	.+4      	; 0x25a8 <DIO_voidSetPinDirection+0xa8>
    25a4:	88 0f       	add	r24, r24
    25a6:	99 1f       	adc	r25, r25
    25a8:	0a 94       	dec	r0
    25aa:	e2 f7       	brpl	.-8      	; 0x25a4 <DIO_voidSetPinDirection+0xa4>
    25ac:	84 2b       	or	r24, r20
    25ae:	8c 93       	st	X, r24
    25b0:	a0 c0       	rjmp	.+320    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTC: SET_BIT(DDRC, Copy_u8PinNum); break;
    25b2:	a4 e3       	ldi	r26, 0x34	; 52
    25b4:	b0 e0       	ldi	r27, 0x00	; 0
    25b6:	e4 e3       	ldi	r30, 0x34	; 52
    25b8:	f0 e0       	ldi	r31, 0x00	; 0
    25ba:	80 81       	ld	r24, Z
    25bc:	48 2f       	mov	r20, r24
    25be:	8a 81       	ldd	r24, Y+2	; 0x02
    25c0:	28 2f       	mov	r18, r24
    25c2:	30 e0       	ldi	r19, 0x00	; 0
    25c4:	81 e0       	ldi	r24, 0x01	; 1
    25c6:	90 e0       	ldi	r25, 0x00	; 0
    25c8:	02 2e       	mov	r0, r18
    25ca:	02 c0       	rjmp	.+4      	; 0x25d0 <DIO_voidSetPinDirection+0xd0>
    25cc:	88 0f       	add	r24, r24
    25ce:	99 1f       	adc	r25, r25
    25d0:	0a 94       	dec	r0
    25d2:	e2 f7       	brpl	.-8      	; 0x25cc <DIO_voidSetPinDirection+0xcc>
    25d4:	84 2b       	or	r24, r20
    25d6:	8c 93       	st	X, r24
    25d8:	8c c0       	rjmp	.+280    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTD: SET_BIT(DDRD, Copy_u8PinNum); break;
    25da:	a1 e3       	ldi	r26, 0x31	; 49
    25dc:	b0 e0       	ldi	r27, 0x00	; 0
    25de:	e1 e3       	ldi	r30, 0x31	; 49
    25e0:	f0 e0       	ldi	r31, 0x00	; 0
    25e2:	80 81       	ld	r24, Z
    25e4:	48 2f       	mov	r20, r24
    25e6:	8a 81       	ldd	r24, Y+2	; 0x02
    25e8:	28 2f       	mov	r18, r24
    25ea:	30 e0       	ldi	r19, 0x00	; 0
    25ec:	81 e0       	ldi	r24, 0x01	; 1
    25ee:	90 e0       	ldi	r25, 0x00	; 0
    25f0:	02 2e       	mov	r0, r18
    25f2:	02 c0       	rjmp	.+4      	; 0x25f8 <DIO_voidSetPinDirection+0xf8>
    25f4:	88 0f       	add	r24, r24
    25f6:	99 1f       	adc	r25, r25
    25f8:	0a 94       	dec	r0
    25fa:	e2 f7       	brpl	.-8      	; 0x25f4 <DIO_voidSetPinDirection+0xf4>
    25fc:	84 2b       	or	r24, r20
    25fe:	8c 93       	st	X, r24
    2600:	78 c0       	rjmp	.+240    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
			default:    /*return error*/      				 break;
		}
	} else if (Copy_u8Mode == DIO_u8INPUT){
    2602:	8b 81       	ldd	r24, Y+3	; 0x03
    2604:	88 23       	and	r24, r24
    2606:	09 f0       	breq	.+2      	; 0x260a <DIO_voidSetPinDirection+0x10a>
    2608:	74 c0       	rjmp	.+232    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
		switch (Copy_u8PortNum)
    260a:	89 81       	ldd	r24, Y+1	; 0x01
    260c:	28 2f       	mov	r18, r24
    260e:	30 e0       	ldi	r19, 0x00	; 0
    2610:	3d 83       	std	Y+5, r19	; 0x05
    2612:	2c 83       	std	Y+4, r18	; 0x04
    2614:	8c 81       	ldd	r24, Y+4	; 0x04
    2616:	9d 81       	ldd	r25, Y+5	; 0x05
    2618:	82 30       	cpi	r24, 0x02	; 2
    261a:	91 05       	cpc	r25, r1
    261c:	61 f1       	breq	.+88     	; 0x2676 <DIO_voidSetPinDirection+0x176>
    261e:	2c 81       	ldd	r18, Y+4	; 0x04
    2620:	3d 81       	ldd	r19, Y+5	; 0x05
    2622:	23 30       	cpi	r18, 0x03	; 3
    2624:	31 05       	cpc	r19, r1
    2626:	34 f4       	brge	.+12     	; 0x2634 <DIO_voidSetPinDirection+0x134>
    2628:	8c 81       	ldd	r24, Y+4	; 0x04
    262a:	9d 81       	ldd	r25, Y+5	; 0x05
    262c:	81 30       	cpi	r24, 0x01	; 1
    262e:	91 05       	cpc	r25, r1
    2630:	69 f0       	breq	.+26     	; 0x264c <DIO_voidSetPinDirection+0x14c>
    2632:	5f c0       	rjmp	.+190    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
    2634:	2c 81       	ldd	r18, Y+4	; 0x04
    2636:	3d 81       	ldd	r19, Y+5	; 0x05
    2638:	23 30       	cpi	r18, 0x03	; 3
    263a:	31 05       	cpc	r19, r1
    263c:	89 f1       	breq	.+98     	; 0x26a0 <DIO_voidSetPinDirection+0x1a0>
    263e:	8c 81       	ldd	r24, Y+4	; 0x04
    2640:	9d 81       	ldd	r25, Y+5	; 0x05
    2642:	84 30       	cpi	r24, 0x04	; 4
    2644:	91 05       	cpc	r25, r1
    2646:	09 f4       	brne	.+2      	; 0x264a <DIO_voidSetPinDirection+0x14a>
    2648:	40 c0       	rjmp	.+128    	; 0x26ca <DIO_voidSetPinDirection+0x1ca>
    264a:	53 c0       	rjmp	.+166    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
		{
			case DIO_u8PORTA: CLR_BIT(DDRA, Copy_u8PinNum); break;
    264c:	aa e3       	ldi	r26, 0x3A	; 58
    264e:	b0 e0       	ldi	r27, 0x00	; 0
    2650:	ea e3       	ldi	r30, 0x3A	; 58
    2652:	f0 e0       	ldi	r31, 0x00	; 0
    2654:	80 81       	ld	r24, Z
    2656:	48 2f       	mov	r20, r24
    2658:	8a 81       	ldd	r24, Y+2	; 0x02
    265a:	28 2f       	mov	r18, r24
    265c:	30 e0       	ldi	r19, 0x00	; 0
    265e:	81 e0       	ldi	r24, 0x01	; 1
    2660:	90 e0       	ldi	r25, 0x00	; 0
    2662:	02 2e       	mov	r0, r18
    2664:	02 c0       	rjmp	.+4      	; 0x266a <DIO_voidSetPinDirection+0x16a>
    2666:	88 0f       	add	r24, r24
    2668:	99 1f       	adc	r25, r25
    266a:	0a 94       	dec	r0
    266c:	e2 f7       	brpl	.-8      	; 0x2666 <DIO_voidSetPinDirection+0x166>
    266e:	80 95       	com	r24
    2670:	84 23       	and	r24, r20
    2672:	8c 93       	st	X, r24
    2674:	3e c0       	rjmp	.+124    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTB: CLR_BIT(DDRB, Copy_u8PinNum); break;
    2676:	a7 e3       	ldi	r26, 0x37	; 55
    2678:	b0 e0       	ldi	r27, 0x00	; 0
    267a:	e7 e3       	ldi	r30, 0x37	; 55
    267c:	f0 e0       	ldi	r31, 0x00	; 0
    267e:	80 81       	ld	r24, Z
    2680:	48 2f       	mov	r20, r24
    2682:	8a 81       	ldd	r24, Y+2	; 0x02
    2684:	28 2f       	mov	r18, r24
    2686:	30 e0       	ldi	r19, 0x00	; 0
    2688:	81 e0       	ldi	r24, 0x01	; 1
    268a:	90 e0       	ldi	r25, 0x00	; 0
    268c:	02 2e       	mov	r0, r18
    268e:	02 c0       	rjmp	.+4      	; 0x2694 <DIO_voidSetPinDirection+0x194>
    2690:	88 0f       	add	r24, r24
    2692:	99 1f       	adc	r25, r25
    2694:	0a 94       	dec	r0
    2696:	e2 f7       	brpl	.-8      	; 0x2690 <DIO_voidSetPinDirection+0x190>
    2698:	80 95       	com	r24
    269a:	84 23       	and	r24, r20
    269c:	8c 93       	st	X, r24
    269e:	29 c0       	rjmp	.+82     	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTC: CLR_BIT(DDRC, Copy_u8PinNum); break;
    26a0:	a4 e3       	ldi	r26, 0x34	; 52
    26a2:	b0 e0       	ldi	r27, 0x00	; 0
    26a4:	e4 e3       	ldi	r30, 0x34	; 52
    26a6:	f0 e0       	ldi	r31, 0x00	; 0
    26a8:	80 81       	ld	r24, Z
    26aa:	48 2f       	mov	r20, r24
    26ac:	8a 81       	ldd	r24, Y+2	; 0x02
    26ae:	28 2f       	mov	r18, r24
    26b0:	30 e0       	ldi	r19, 0x00	; 0
    26b2:	81 e0       	ldi	r24, 0x01	; 1
    26b4:	90 e0       	ldi	r25, 0x00	; 0
    26b6:	02 2e       	mov	r0, r18
    26b8:	02 c0       	rjmp	.+4      	; 0x26be <DIO_voidSetPinDirection+0x1be>
    26ba:	88 0f       	add	r24, r24
    26bc:	99 1f       	adc	r25, r25
    26be:	0a 94       	dec	r0
    26c0:	e2 f7       	brpl	.-8      	; 0x26ba <DIO_voidSetPinDirection+0x1ba>
    26c2:	80 95       	com	r24
    26c4:	84 23       	and	r24, r20
    26c6:	8c 93       	st	X, r24
    26c8:	14 c0       	rjmp	.+40     	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTD: CLR_BIT(DDRD, Copy_u8PinNum); break;
    26ca:	a1 e3       	ldi	r26, 0x31	; 49
    26cc:	b0 e0       	ldi	r27, 0x00	; 0
    26ce:	e1 e3       	ldi	r30, 0x31	; 49
    26d0:	f0 e0       	ldi	r31, 0x00	; 0
    26d2:	80 81       	ld	r24, Z
    26d4:	48 2f       	mov	r20, r24
    26d6:	8a 81       	ldd	r24, Y+2	; 0x02
    26d8:	28 2f       	mov	r18, r24
    26da:	30 e0       	ldi	r19, 0x00	; 0
    26dc:	81 e0       	ldi	r24, 0x01	; 1
    26de:	90 e0       	ldi	r25, 0x00	; 0
    26e0:	02 2e       	mov	r0, r18
    26e2:	02 c0       	rjmp	.+4      	; 0x26e8 <DIO_voidSetPinDirection+0x1e8>
    26e4:	88 0f       	add	r24, r24
    26e6:	99 1f       	adc	r25, r25
    26e8:	0a 94       	dec	r0
    26ea:	e2 f7       	brpl	.-8      	; 0x26e4 <DIO_voidSetPinDirection+0x1e4>
    26ec:	80 95       	com	r24
    26ee:	84 23       	and	r24, r20
    26f0:	8c 93       	st	X, r24
			default:    /*return error*/      				 break;
		}
	} else{
		/*return error*/
	}
}
    26f2:	27 96       	adiw	r28, 0x07	; 7
    26f4:	0f b6       	in	r0, 0x3f	; 63
    26f6:	f8 94       	cli
    26f8:	de bf       	out	0x3e, r29	; 62
    26fa:	0f be       	out	0x3f, r0	; 63
    26fc:	cd bf       	out	0x3d, r28	; 61
    26fe:	cf 91       	pop	r28
    2700:	df 91       	pop	r29
    2702:	08 95       	ret

00002704 <DIO_voidSetPinValue>:
void DIO_voidSetPinValue(u8 Copy_u8PortNum, u8 Copy_u8PinNum, u8 Copy_u8Value){
    2704:	df 93       	push	r29
    2706:	cf 93       	push	r28
    2708:	cd b7       	in	r28, 0x3d	; 61
    270a:	de b7       	in	r29, 0x3e	; 62
    270c:	27 97       	sbiw	r28, 0x07	; 7
    270e:	0f b6       	in	r0, 0x3f	; 63
    2710:	f8 94       	cli
    2712:	de bf       	out	0x3e, r29	; 62
    2714:	0f be       	out	0x3f, r0	; 63
    2716:	cd bf       	out	0x3d, r28	; 61
    2718:	89 83       	std	Y+1, r24	; 0x01
    271a:	6a 83       	std	Y+2, r22	; 0x02
    271c:	4b 83       	std	Y+3, r20	; 0x03
	if (Copy_u8Value == DIO_u8HIGH){
    271e:	8b 81       	ldd	r24, Y+3	; 0x03
    2720:	81 30       	cpi	r24, 0x01	; 1
    2722:	09 f0       	breq	.+2      	; 0x2726 <DIO_voidSetPinValue+0x22>
    2724:	70 c0       	rjmp	.+224    	; 0x2806 <DIO_voidSetPinValue+0x102>
		switch (Copy_u8PortNum)
    2726:	89 81       	ldd	r24, Y+1	; 0x01
    2728:	28 2f       	mov	r18, r24
    272a:	30 e0       	ldi	r19, 0x00	; 0
    272c:	3f 83       	std	Y+7, r19	; 0x07
    272e:	2e 83       	std	Y+6, r18	; 0x06
    2730:	8e 81       	ldd	r24, Y+6	; 0x06
    2732:	9f 81       	ldd	r25, Y+7	; 0x07
    2734:	82 30       	cpi	r24, 0x02	; 2
    2736:	91 05       	cpc	r25, r1
    2738:	51 f1       	breq	.+84     	; 0x278e <DIO_voidSetPinValue+0x8a>
    273a:	2e 81       	ldd	r18, Y+6	; 0x06
    273c:	3f 81       	ldd	r19, Y+7	; 0x07
    273e:	23 30       	cpi	r18, 0x03	; 3
    2740:	31 05       	cpc	r19, r1
    2742:	34 f4       	brge	.+12     	; 0x2750 <DIO_voidSetPinValue+0x4c>
    2744:	8e 81       	ldd	r24, Y+6	; 0x06
    2746:	9f 81       	ldd	r25, Y+7	; 0x07
    2748:	81 30       	cpi	r24, 0x01	; 1
    274a:	91 05       	cpc	r25, r1
    274c:	61 f0       	breq	.+24     	; 0x2766 <DIO_voidSetPinValue+0x62>
    274e:	d3 c0       	rjmp	.+422    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
    2750:	2e 81       	ldd	r18, Y+6	; 0x06
    2752:	3f 81       	ldd	r19, Y+7	; 0x07
    2754:	23 30       	cpi	r18, 0x03	; 3
    2756:	31 05       	cpc	r19, r1
    2758:	71 f1       	breq	.+92     	; 0x27b6 <DIO_voidSetPinValue+0xb2>
    275a:	8e 81       	ldd	r24, Y+6	; 0x06
    275c:	9f 81       	ldd	r25, Y+7	; 0x07
    275e:	84 30       	cpi	r24, 0x04	; 4
    2760:	91 05       	cpc	r25, r1
    2762:	e9 f1       	breq	.+122    	; 0x27de <DIO_voidSetPinValue+0xda>
    2764:	c8 c0       	rjmp	.+400    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
		{
			case DIO_u8PORTA: SET_BIT(PORTA, Copy_u8PinNum); break;
    2766:	ab e3       	ldi	r26, 0x3B	; 59
    2768:	b0 e0       	ldi	r27, 0x00	; 0
    276a:	eb e3       	ldi	r30, 0x3B	; 59
    276c:	f0 e0       	ldi	r31, 0x00	; 0
    276e:	80 81       	ld	r24, Z
    2770:	48 2f       	mov	r20, r24
    2772:	8a 81       	ldd	r24, Y+2	; 0x02
    2774:	28 2f       	mov	r18, r24
    2776:	30 e0       	ldi	r19, 0x00	; 0
    2778:	81 e0       	ldi	r24, 0x01	; 1
    277a:	90 e0       	ldi	r25, 0x00	; 0
    277c:	02 2e       	mov	r0, r18
    277e:	02 c0       	rjmp	.+4      	; 0x2784 <DIO_voidSetPinValue+0x80>
    2780:	88 0f       	add	r24, r24
    2782:	99 1f       	adc	r25, r25
    2784:	0a 94       	dec	r0
    2786:	e2 f7       	brpl	.-8      	; 0x2780 <DIO_voidSetPinValue+0x7c>
    2788:	84 2b       	or	r24, r20
    278a:	8c 93       	st	X, r24
    278c:	b4 c0       	rjmp	.+360    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTB: SET_BIT(PORTB, Copy_u8PinNum); break;
    278e:	a8 e3       	ldi	r26, 0x38	; 56
    2790:	b0 e0       	ldi	r27, 0x00	; 0
    2792:	e8 e3       	ldi	r30, 0x38	; 56
    2794:	f0 e0       	ldi	r31, 0x00	; 0
    2796:	80 81       	ld	r24, Z
    2798:	48 2f       	mov	r20, r24
    279a:	8a 81       	ldd	r24, Y+2	; 0x02
    279c:	28 2f       	mov	r18, r24
    279e:	30 e0       	ldi	r19, 0x00	; 0
    27a0:	81 e0       	ldi	r24, 0x01	; 1
    27a2:	90 e0       	ldi	r25, 0x00	; 0
    27a4:	02 2e       	mov	r0, r18
    27a6:	02 c0       	rjmp	.+4      	; 0x27ac <DIO_voidSetPinValue+0xa8>
    27a8:	88 0f       	add	r24, r24
    27aa:	99 1f       	adc	r25, r25
    27ac:	0a 94       	dec	r0
    27ae:	e2 f7       	brpl	.-8      	; 0x27a8 <DIO_voidSetPinValue+0xa4>
    27b0:	84 2b       	or	r24, r20
    27b2:	8c 93       	st	X, r24
    27b4:	a0 c0       	rjmp	.+320    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTC: SET_BIT(PORTC, Copy_u8PinNum); break;
    27b6:	a5 e3       	ldi	r26, 0x35	; 53
    27b8:	b0 e0       	ldi	r27, 0x00	; 0
    27ba:	e5 e3       	ldi	r30, 0x35	; 53
    27bc:	f0 e0       	ldi	r31, 0x00	; 0
    27be:	80 81       	ld	r24, Z
    27c0:	48 2f       	mov	r20, r24
    27c2:	8a 81       	ldd	r24, Y+2	; 0x02
    27c4:	28 2f       	mov	r18, r24
    27c6:	30 e0       	ldi	r19, 0x00	; 0
    27c8:	81 e0       	ldi	r24, 0x01	; 1
    27ca:	90 e0       	ldi	r25, 0x00	; 0
    27cc:	02 2e       	mov	r0, r18
    27ce:	02 c0       	rjmp	.+4      	; 0x27d4 <DIO_voidSetPinValue+0xd0>
    27d0:	88 0f       	add	r24, r24
    27d2:	99 1f       	adc	r25, r25
    27d4:	0a 94       	dec	r0
    27d6:	e2 f7       	brpl	.-8      	; 0x27d0 <DIO_voidSetPinValue+0xcc>
    27d8:	84 2b       	or	r24, r20
    27da:	8c 93       	st	X, r24
    27dc:	8c c0       	rjmp	.+280    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTD: SET_BIT(PORTD, Copy_u8PinNum); break;
    27de:	a2 e3       	ldi	r26, 0x32	; 50
    27e0:	b0 e0       	ldi	r27, 0x00	; 0
    27e2:	e2 e3       	ldi	r30, 0x32	; 50
    27e4:	f0 e0       	ldi	r31, 0x00	; 0
    27e6:	80 81       	ld	r24, Z
    27e8:	48 2f       	mov	r20, r24
    27ea:	8a 81       	ldd	r24, Y+2	; 0x02
    27ec:	28 2f       	mov	r18, r24
    27ee:	30 e0       	ldi	r19, 0x00	; 0
    27f0:	81 e0       	ldi	r24, 0x01	; 1
    27f2:	90 e0       	ldi	r25, 0x00	; 0
    27f4:	02 2e       	mov	r0, r18
    27f6:	02 c0       	rjmp	.+4      	; 0x27fc <DIO_voidSetPinValue+0xf8>
    27f8:	88 0f       	add	r24, r24
    27fa:	99 1f       	adc	r25, r25
    27fc:	0a 94       	dec	r0
    27fe:	e2 f7       	brpl	.-8      	; 0x27f8 <DIO_voidSetPinValue+0xf4>
    2800:	84 2b       	or	r24, r20
    2802:	8c 93       	st	X, r24
    2804:	78 c0       	rjmp	.+240    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
			default:    /*return error*/      				  break;
		}
	} else if (Copy_u8Value == DIO_u8LOW){
    2806:	8b 81       	ldd	r24, Y+3	; 0x03
    2808:	88 23       	and	r24, r24
    280a:	09 f0       	breq	.+2      	; 0x280e <DIO_voidSetPinValue+0x10a>
    280c:	74 c0       	rjmp	.+232    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
		switch (Copy_u8PortNum)
    280e:	89 81       	ldd	r24, Y+1	; 0x01
    2810:	28 2f       	mov	r18, r24
    2812:	30 e0       	ldi	r19, 0x00	; 0
    2814:	3d 83       	std	Y+5, r19	; 0x05
    2816:	2c 83       	std	Y+4, r18	; 0x04
    2818:	8c 81       	ldd	r24, Y+4	; 0x04
    281a:	9d 81       	ldd	r25, Y+5	; 0x05
    281c:	82 30       	cpi	r24, 0x02	; 2
    281e:	91 05       	cpc	r25, r1
    2820:	61 f1       	breq	.+88     	; 0x287a <DIO_voidSetPinValue+0x176>
    2822:	2c 81       	ldd	r18, Y+4	; 0x04
    2824:	3d 81       	ldd	r19, Y+5	; 0x05
    2826:	23 30       	cpi	r18, 0x03	; 3
    2828:	31 05       	cpc	r19, r1
    282a:	34 f4       	brge	.+12     	; 0x2838 <DIO_voidSetPinValue+0x134>
    282c:	8c 81       	ldd	r24, Y+4	; 0x04
    282e:	9d 81       	ldd	r25, Y+5	; 0x05
    2830:	81 30       	cpi	r24, 0x01	; 1
    2832:	91 05       	cpc	r25, r1
    2834:	69 f0       	breq	.+26     	; 0x2850 <DIO_voidSetPinValue+0x14c>
    2836:	5f c0       	rjmp	.+190    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
    2838:	2c 81       	ldd	r18, Y+4	; 0x04
    283a:	3d 81       	ldd	r19, Y+5	; 0x05
    283c:	23 30       	cpi	r18, 0x03	; 3
    283e:	31 05       	cpc	r19, r1
    2840:	89 f1       	breq	.+98     	; 0x28a4 <DIO_voidSetPinValue+0x1a0>
    2842:	8c 81       	ldd	r24, Y+4	; 0x04
    2844:	9d 81       	ldd	r25, Y+5	; 0x05
    2846:	84 30       	cpi	r24, 0x04	; 4
    2848:	91 05       	cpc	r25, r1
    284a:	09 f4       	brne	.+2      	; 0x284e <DIO_voidSetPinValue+0x14a>
    284c:	40 c0       	rjmp	.+128    	; 0x28ce <DIO_voidSetPinValue+0x1ca>
    284e:	53 c0       	rjmp	.+166    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
		{
			case DIO_u8PORTA: CLR_BIT(PORTA, Copy_u8PinNum); break;
    2850:	ab e3       	ldi	r26, 0x3B	; 59
    2852:	b0 e0       	ldi	r27, 0x00	; 0
    2854:	eb e3       	ldi	r30, 0x3B	; 59
    2856:	f0 e0       	ldi	r31, 0x00	; 0
    2858:	80 81       	ld	r24, Z
    285a:	48 2f       	mov	r20, r24
    285c:	8a 81       	ldd	r24, Y+2	; 0x02
    285e:	28 2f       	mov	r18, r24
    2860:	30 e0       	ldi	r19, 0x00	; 0
    2862:	81 e0       	ldi	r24, 0x01	; 1
    2864:	90 e0       	ldi	r25, 0x00	; 0
    2866:	02 2e       	mov	r0, r18
    2868:	02 c0       	rjmp	.+4      	; 0x286e <DIO_voidSetPinValue+0x16a>
    286a:	88 0f       	add	r24, r24
    286c:	99 1f       	adc	r25, r25
    286e:	0a 94       	dec	r0
    2870:	e2 f7       	brpl	.-8      	; 0x286a <DIO_voidSetPinValue+0x166>
    2872:	80 95       	com	r24
    2874:	84 23       	and	r24, r20
    2876:	8c 93       	st	X, r24
    2878:	3e c0       	rjmp	.+124    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTB: CLR_BIT(PORTB, Copy_u8PinNum); break;
    287a:	a8 e3       	ldi	r26, 0x38	; 56
    287c:	b0 e0       	ldi	r27, 0x00	; 0
    287e:	e8 e3       	ldi	r30, 0x38	; 56
    2880:	f0 e0       	ldi	r31, 0x00	; 0
    2882:	80 81       	ld	r24, Z
    2884:	48 2f       	mov	r20, r24
    2886:	8a 81       	ldd	r24, Y+2	; 0x02
    2888:	28 2f       	mov	r18, r24
    288a:	30 e0       	ldi	r19, 0x00	; 0
    288c:	81 e0       	ldi	r24, 0x01	; 1
    288e:	90 e0       	ldi	r25, 0x00	; 0
    2890:	02 2e       	mov	r0, r18
    2892:	02 c0       	rjmp	.+4      	; 0x2898 <DIO_voidSetPinValue+0x194>
    2894:	88 0f       	add	r24, r24
    2896:	99 1f       	adc	r25, r25
    2898:	0a 94       	dec	r0
    289a:	e2 f7       	brpl	.-8      	; 0x2894 <DIO_voidSetPinValue+0x190>
    289c:	80 95       	com	r24
    289e:	84 23       	and	r24, r20
    28a0:	8c 93       	st	X, r24
    28a2:	29 c0       	rjmp	.+82     	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTC: CLR_BIT(PORTC, Copy_u8PinNum); break;
    28a4:	a5 e3       	ldi	r26, 0x35	; 53
    28a6:	b0 e0       	ldi	r27, 0x00	; 0
    28a8:	e5 e3       	ldi	r30, 0x35	; 53
    28aa:	f0 e0       	ldi	r31, 0x00	; 0
    28ac:	80 81       	ld	r24, Z
    28ae:	48 2f       	mov	r20, r24
    28b0:	8a 81       	ldd	r24, Y+2	; 0x02
    28b2:	28 2f       	mov	r18, r24
    28b4:	30 e0       	ldi	r19, 0x00	; 0
    28b6:	81 e0       	ldi	r24, 0x01	; 1
    28b8:	90 e0       	ldi	r25, 0x00	; 0
    28ba:	02 2e       	mov	r0, r18
    28bc:	02 c0       	rjmp	.+4      	; 0x28c2 <DIO_voidSetPinValue+0x1be>
    28be:	88 0f       	add	r24, r24
    28c0:	99 1f       	adc	r25, r25
    28c2:	0a 94       	dec	r0
    28c4:	e2 f7       	brpl	.-8      	; 0x28be <DIO_voidSetPinValue+0x1ba>
    28c6:	80 95       	com	r24
    28c8:	84 23       	and	r24, r20
    28ca:	8c 93       	st	X, r24
    28cc:	14 c0       	rjmp	.+40     	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTD: CLR_BIT(PORTD, Copy_u8PinNum); break;
    28ce:	a2 e3       	ldi	r26, 0x32	; 50
    28d0:	b0 e0       	ldi	r27, 0x00	; 0
    28d2:	e2 e3       	ldi	r30, 0x32	; 50
    28d4:	f0 e0       	ldi	r31, 0x00	; 0
    28d6:	80 81       	ld	r24, Z
    28d8:	48 2f       	mov	r20, r24
    28da:	8a 81       	ldd	r24, Y+2	; 0x02
    28dc:	28 2f       	mov	r18, r24
    28de:	30 e0       	ldi	r19, 0x00	; 0
    28e0:	81 e0       	ldi	r24, 0x01	; 1
    28e2:	90 e0       	ldi	r25, 0x00	; 0
    28e4:	02 2e       	mov	r0, r18
    28e6:	02 c0       	rjmp	.+4      	; 0x28ec <DIO_voidSetPinValue+0x1e8>
    28e8:	88 0f       	add	r24, r24
    28ea:	99 1f       	adc	r25, r25
    28ec:	0a 94       	dec	r0
    28ee:	e2 f7       	brpl	.-8      	; 0x28e8 <DIO_voidSetPinValue+0x1e4>
    28f0:	80 95       	com	r24
    28f2:	84 23       	and	r24, r20
    28f4:	8c 93       	st	X, r24
			default:    /*return error*/      				  break;
		}
	} else{
		/*return error*/
	}
}
    28f6:	27 96       	adiw	r28, 0x07	; 7
    28f8:	0f b6       	in	r0, 0x3f	; 63
    28fa:	f8 94       	cli
    28fc:	de bf       	out	0x3e, r29	; 62
    28fe:	0f be       	out	0x3f, r0	; 63
    2900:	cd bf       	out	0x3d, r28	; 61
    2902:	cf 91       	pop	r28
    2904:	df 91       	pop	r29
    2906:	08 95       	ret

00002908 <DIO_voidSetPortDirection>:
void DIO_voidSetPortDirection(u8 Copy_u8PortNum, u8 Copy_u8Mode){
    2908:	df 93       	push	r29
    290a:	cf 93       	push	r28
    290c:	00 d0       	rcall	.+0      	; 0x290e <DIO_voidSetPortDirection+0x6>
    290e:	00 d0       	rcall	.+0      	; 0x2910 <DIO_voidSetPortDirection+0x8>
    2910:	cd b7       	in	r28, 0x3d	; 61
    2912:	de b7       	in	r29, 0x3e	; 62
    2914:	89 83       	std	Y+1, r24	; 0x01
    2916:	6a 83       	std	Y+2, r22	; 0x02
	switch (Copy_u8PortNum)
    2918:	89 81       	ldd	r24, Y+1	; 0x01
    291a:	28 2f       	mov	r18, r24
    291c:	30 e0       	ldi	r19, 0x00	; 0
    291e:	3c 83       	std	Y+4, r19	; 0x04
    2920:	2b 83       	std	Y+3, r18	; 0x03
    2922:	8b 81       	ldd	r24, Y+3	; 0x03
    2924:	9c 81       	ldd	r25, Y+4	; 0x04
    2926:	82 30       	cpi	r24, 0x02	; 2
    2928:	91 05       	cpc	r25, r1
    292a:	d9 f0       	breq	.+54     	; 0x2962 <DIO_voidSetPortDirection+0x5a>
    292c:	2b 81       	ldd	r18, Y+3	; 0x03
    292e:	3c 81       	ldd	r19, Y+4	; 0x04
    2930:	23 30       	cpi	r18, 0x03	; 3
    2932:	31 05       	cpc	r19, r1
    2934:	34 f4       	brge	.+12     	; 0x2942 <DIO_voidSetPortDirection+0x3a>
    2936:	8b 81       	ldd	r24, Y+3	; 0x03
    2938:	9c 81       	ldd	r25, Y+4	; 0x04
    293a:	81 30       	cpi	r24, 0x01	; 1
    293c:	91 05       	cpc	r25, r1
    293e:	61 f0       	breq	.+24     	; 0x2958 <DIO_voidSetPortDirection+0x50>
    2940:	1e c0       	rjmp	.+60     	; 0x297e <DIO_voidSetPortDirection+0x76>
    2942:	2b 81       	ldd	r18, Y+3	; 0x03
    2944:	3c 81       	ldd	r19, Y+4	; 0x04
    2946:	23 30       	cpi	r18, 0x03	; 3
    2948:	31 05       	cpc	r19, r1
    294a:	81 f0       	breq	.+32     	; 0x296c <DIO_voidSetPortDirection+0x64>
    294c:	8b 81       	ldd	r24, Y+3	; 0x03
    294e:	9c 81       	ldd	r25, Y+4	; 0x04
    2950:	84 30       	cpi	r24, 0x04	; 4
    2952:	91 05       	cpc	r25, r1
    2954:	81 f0       	breq	.+32     	; 0x2976 <DIO_voidSetPortDirection+0x6e>
    2956:	13 c0       	rjmp	.+38     	; 0x297e <DIO_voidSetPortDirection+0x76>
	{
		case DIO_u8PORTA: DDRA = Copy_u8Mode; break;
    2958:	ea e3       	ldi	r30, 0x3A	; 58
    295a:	f0 e0       	ldi	r31, 0x00	; 0
    295c:	8a 81       	ldd	r24, Y+2	; 0x02
    295e:	80 83       	st	Z, r24
    2960:	0e c0       	rjmp	.+28     	; 0x297e <DIO_voidSetPortDirection+0x76>
		case DIO_u8PORTB: DDRB = Copy_u8Mode; break;
    2962:	e7 e3       	ldi	r30, 0x37	; 55
    2964:	f0 e0       	ldi	r31, 0x00	; 0
    2966:	8a 81       	ldd	r24, Y+2	; 0x02
    2968:	80 83       	st	Z, r24
    296a:	09 c0       	rjmp	.+18     	; 0x297e <DIO_voidSetPortDirection+0x76>
		case DIO_u8PORTC: DDRC = Copy_u8Mode; break;
    296c:	e4 e3       	ldi	r30, 0x34	; 52
    296e:	f0 e0       	ldi	r31, 0x00	; 0
    2970:	8a 81       	ldd	r24, Y+2	; 0x02
    2972:	80 83       	st	Z, r24
    2974:	04 c0       	rjmp	.+8      	; 0x297e <DIO_voidSetPortDirection+0x76>
		case DIO_u8PORTD: DDRD = Copy_u8Mode; break;
    2976:	e1 e3       	ldi	r30, 0x31	; 49
    2978:	f0 e0       	ldi	r31, 0x00	; 0
    297a:	8a 81       	ldd	r24, Y+2	; 0x02
    297c:	80 83       	st	Z, r24
		default:    /*return error*/      	  break;
	}
}
    297e:	0f 90       	pop	r0
    2980:	0f 90       	pop	r0
    2982:	0f 90       	pop	r0
    2984:	0f 90       	pop	r0
    2986:	cf 91       	pop	r28
    2988:	df 91       	pop	r29
    298a:	08 95       	ret

0000298c <DIO_voidSetPortValue>:
void DIO_voidSetPortValue(u8 Copy_u8PortNum, u8 Copy_u8Value){
    298c:	df 93       	push	r29
    298e:	cf 93       	push	r28
    2990:	00 d0       	rcall	.+0      	; 0x2992 <DIO_voidSetPortValue+0x6>
    2992:	00 d0       	rcall	.+0      	; 0x2994 <DIO_voidSetPortValue+0x8>
    2994:	cd b7       	in	r28, 0x3d	; 61
    2996:	de b7       	in	r29, 0x3e	; 62
    2998:	89 83       	std	Y+1, r24	; 0x01
    299a:	6a 83       	std	Y+2, r22	; 0x02
	switch (Copy_u8PortNum)
    299c:	89 81       	ldd	r24, Y+1	; 0x01
    299e:	28 2f       	mov	r18, r24
    29a0:	30 e0       	ldi	r19, 0x00	; 0
    29a2:	3c 83       	std	Y+4, r19	; 0x04
    29a4:	2b 83       	std	Y+3, r18	; 0x03
    29a6:	8b 81       	ldd	r24, Y+3	; 0x03
    29a8:	9c 81       	ldd	r25, Y+4	; 0x04
    29aa:	82 30       	cpi	r24, 0x02	; 2
    29ac:	91 05       	cpc	r25, r1
    29ae:	d9 f0       	breq	.+54     	; 0x29e6 <DIO_voidSetPortValue+0x5a>
    29b0:	2b 81       	ldd	r18, Y+3	; 0x03
    29b2:	3c 81       	ldd	r19, Y+4	; 0x04
    29b4:	23 30       	cpi	r18, 0x03	; 3
    29b6:	31 05       	cpc	r19, r1
    29b8:	34 f4       	brge	.+12     	; 0x29c6 <DIO_voidSetPortValue+0x3a>
    29ba:	8b 81       	ldd	r24, Y+3	; 0x03
    29bc:	9c 81       	ldd	r25, Y+4	; 0x04
    29be:	81 30       	cpi	r24, 0x01	; 1
    29c0:	91 05       	cpc	r25, r1
    29c2:	61 f0       	breq	.+24     	; 0x29dc <DIO_voidSetPortValue+0x50>
    29c4:	1e c0       	rjmp	.+60     	; 0x2a02 <DIO_voidSetPortValue+0x76>
    29c6:	2b 81       	ldd	r18, Y+3	; 0x03
    29c8:	3c 81       	ldd	r19, Y+4	; 0x04
    29ca:	23 30       	cpi	r18, 0x03	; 3
    29cc:	31 05       	cpc	r19, r1
    29ce:	81 f0       	breq	.+32     	; 0x29f0 <DIO_voidSetPortValue+0x64>
    29d0:	8b 81       	ldd	r24, Y+3	; 0x03
    29d2:	9c 81       	ldd	r25, Y+4	; 0x04
    29d4:	84 30       	cpi	r24, 0x04	; 4
    29d6:	91 05       	cpc	r25, r1
    29d8:	81 f0       	breq	.+32     	; 0x29fa <DIO_voidSetPortValue+0x6e>
    29da:	13 c0       	rjmp	.+38     	; 0x2a02 <DIO_voidSetPortValue+0x76>
	{
		case DIO_u8PORTA: PORTA = Copy_u8Value; break;
    29dc:	eb e3       	ldi	r30, 0x3B	; 59
    29de:	f0 e0       	ldi	r31, 0x00	; 0
    29e0:	8a 81       	ldd	r24, Y+2	; 0x02
    29e2:	80 83       	st	Z, r24
    29e4:	0e c0       	rjmp	.+28     	; 0x2a02 <DIO_voidSetPortValue+0x76>
		case DIO_u8PORTB: PORTB = Copy_u8Value; break;
    29e6:	e8 e3       	ldi	r30, 0x38	; 56
    29e8:	f0 e0       	ldi	r31, 0x00	; 0
    29ea:	8a 81       	ldd	r24, Y+2	; 0x02
    29ec:	80 83       	st	Z, r24
    29ee:	09 c0       	rjmp	.+18     	; 0x2a02 <DIO_voidSetPortValue+0x76>
		case DIO_u8PORTC: PORTC = Copy_u8Value; break;
    29f0:	e5 e3       	ldi	r30, 0x35	; 53
    29f2:	f0 e0       	ldi	r31, 0x00	; 0
    29f4:	8a 81       	ldd	r24, Y+2	; 0x02
    29f6:	80 83       	st	Z, r24
    29f8:	04 c0       	rjmp	.+8      	; 0x2a02 <DIO_voidSetPortValue+0x76>
		case DIO_u8PORTD: PORTD = Copy_u8Value; break;
    29fa:	e2 e3       	ldi	r30, 0x32	; 50
    29fc:	f0 e0       	ldi	r31, 0x00	; 0
    29fe:	8a 81       	ldd	r24, Y+2	; 0x02
    2a00:	80 83       	st	Z, r24
		default:    /*return error*/      	  break;
	}
}
    2a02:	0f 90       	pop	r0
    2a04:	0f 90       	pop	r0
    2a06:	0f 90       	pop	r0
    2a08:	0f 90       	pop	r0
    2a0a:	cf 91       	pop	r28
    2a0c:	df 91       	pop	r29
    2a0e:	08 95       	ret

00002a10 <DIO_voidToggleValue>:
void DIO_voidToggleValue(u8 Copy_u8PortNum, u8 Copy_u8PinNum){
    2a10:	df 93       	push	r29
    2a12:	cf 93       	push	r28
    2a14:	00 d0       	rcall	.+0      	; 0x2a16 <DIO_voidToggleValue+0x6>
    2a16:	00 d0       	rcall	.+0      	; 0x2a18 <DIO_voidToggleValue+0x8>
    2a18:	cd b7       	in	r28, 0x3d	; 61
    2a1a:	de b7       	in	r29, 0x3e	; 62
    2a1c:	89 83       	std	Y+1, r24	; 0x01
    2a1e:	6a 83       	std	Y+2, r22	; 0x02
	switch (Copy_u8PortNum)
    2a20:	89 81       	ldd	r24, Y+1	; 0x01
    2a22:	28 2f       	mov	r18, r24
    2a24:	30 e0       	ldi	r19, 0x00	; 0
    2a26:	3c 83       	std	Y+4, r19	; 0x04
    2a28:	2b 83       	std	Y+3, r18	; 0x03
    2a2a:	8b 81       	ldd	r24, Y+3	; 0x03
    2a2c:	9c 81       	ldd	r25, Y+4	; 0x04
    2a2e:	82 30       	cpi	r24, 0x02	; 2
    2a30:	91 05       	cpc	r25, r1
    2a32:	51 f1       	breq	.+84     	; 0x2a88 <DIO_voidToggleValue+0x78>
    2a34:	2b 81       	ldd	r18, Y+3	; 0x03
    2a36:	3c 81       	ldd	r19, Y+4	; 0x04
    2a38:	23 30       	cpi	r18, 0x03	; 3
    2a3a:	31 05       	cpc	r19, r1
    2a3c:	34 f4       	brge	.+12     	; 0x2a4a <DIO_voidToggleValue+0x3a>
    2a3e:	8b 81       	ldd	r24, Y+3	; 0x03
    2a40:	9c 81       	ldd	r25, Y+4	; 0x04
    2a42:	81 30       	cpi	r24, 0x01	; 1
    2a44:	91 05       	cpc	r25, r1
    2a46:	61 f0       	breq	.+24     	; 0x2a60 <DIO_voidToggleValue+0x50>
    2a48:	5a c0       	rjmp	.+180    	; 0x2afe <DIO_voidToggleValue+0xee>
    2a4a:	2b 81       	ldd	r18, Y+3	; 0x03
    2a4c:	3c 81       	ldd	r19, Y+4	; 0x04
    2a4e:	23 30       	cpi	r18, 0x03	; 3
    2a50:	31 05       	cpc	r19, r1
    2a52:	71 f1       	breq	.+92     	; 0x2ab0 <DIO_voidToggleValue+0xa0>
    2a54:	8b 81       	ldd	r24, Y+3	; 0x03
    2a56:	9c 81       	ldd	r25, Y+4	; 0x04
    2a58:	84 30       	cpi	r24, 0x04	; 4
    2a5a:	91 05       	cpc	r25, r1
    2a5c:	e9 f1       	breq	.+122    	; 0x2ad8 <DIO_voidToggleValue+0xc8>
    2a5e:	4f c0       	rjmp	.+158    	; 0x2afe <DIO_voidToggleValue+0xee>
	{
		case DIO_u8PORTA: TOGGLE_BIT(PORTA,Copy_u8PinNum); break;
    2a60:	ab e3       	ldi	r26, 0x3B	; 59
    2a62:	b0 e0       	ldi	r27, 0x00	; 0
    2a64:	eb e3       	ldi	r30, 0x3B	; 59
    2a66:	f0 e0       	ldi	r31, 0x00	; 0
    2a68:	80 81       	ld	r24, Z
    2a6a:	48 2f       	mov	r20, r24
    2a6c:	8a 81       	ldd	r24, Y+2	; 0x02
    2a6e:	28 2f       	mov	r18, r24
    2a70:	30 e0       	ldi	r19, 0x00	; 0
    2a72:	81 e0       	ldi	r24, 0x01	; 1
    2a74:	90 e0       	ldi	r25, 0x00	; 0
    2a76:	02 2e       	mov	r0, r18
    2a78:	02 c0       	rjmp	.+4      	; 0x2a7e <DIO_voidToggleValue+0x6e>
    2a7a:	88 0f       	add	r24, r24
    2a7c:	99 1f       	adc	r25, r25
    2a7e:	0a 94       	dec	r0
    2a80:	e2 f7       	brpl	.-8      	; 0x2a7a <DIO_voidToggleValue+0x6a>
    2a82:	84 27       	eor	r24, r20
    2a84:	8c 93       	st	X, r24
    2a86:	3b c0       	rjmp	.+118    	; 0x2afe <DIO_voidToggleValue+0xee>
		case DIO_u8PORTB: TOGGLE_BIT(PORTB,Copy_u8PinNum); break;
    2a88:	a8 e3       	ldi	r26, 0x38	; 56
    2a8a:	b0 e0       	ldi	r27, 0x00	; 0
    2a8c:	e8 e3       	ldi	r30, 0x38	; 56
    2a8e:	f0 e0       	ldi	r31, 0x00	; 0
    2a90:	80 81       	ld	r24, Z
    2a92:	48 2f       	mov	r20, r24
    2a94:	8a 81       	ldd	r24, Y+2	; 0x02
    2a96:	28 2f       	mov	r18, r24
    2a98:	30 e0       	ldi	r19, 0x00	; 0
    2a9a:	81 e0       	ldi	r24, 0x01	; 1
    2a9c:	90 e0       	ldi	r25, 0x00	; 0
    2a9e:	02 2e       	mov	r0, r18
    2aa0:	02 c0       	rjmp	.+4      	; 0x2aa6 <DIO_voidToggleValue+0x96>
    2aa2:	88 0f       	add	r24, r24
    2aa4:	99 1f       	adc	r25, r25
    2aa6:	0a 94       	dec	r0
    2aa8:	e2 f7       	brpl	.-8      	; 0x2aa2 <DIO_voidToggleValue+0x92>
    2aaa:	84 27       	eor	r24, r20
    2aac:	8c 93       	st	X, r24
    2aae:	27 c0       	rjmp	.+78     	; 0x2afe <DIO_voidToggleValue+0xee>
		case DIO_u8PORTC: TOGGLE_BIT(PORTC,Copy_u8PinNum); break;
    2ab0:	a5 e3       	ldi	r26, 0x35	; 53
    2ab2:	b0 e0       	ldi	r27, 0x00	; 0
    2ab4:	e5 e3       	ldi	r30, 0x35	; 53
    2ab6:	f0 e0       	ldi	r31, 0x00	; 0
    2ab8:	80 81       	ld	r24, Z
    2aba:	48 2f       	mov	r20, r24
    2abc:	8a 81       	ldd	r24, Y+2	; 0x02
    2abe:	28 2f       	mov	r18, r24
    2ac0:	30 e0       	ldi	r19, 0x00	; 0
    2ac2:	81 e0       	ldi	r24, 0x01	; 1
    2ac4:	90 e0       	ldi	r25, 0x00	; 0
    2ac6:	02 2e       	mov	r0, r18
    2ac8:	02 c0       	rjmp	.+4      	; 0x2ace <DIO_voidToggleValue+0xbe>
    2aca:	88 0f       	add	r24, r24
    2acc:	99 1f       	adc	r25, r25
    2ace:	0a 94       	dec	r0
    2ad0:	e2 f7       	brpl	.-8      	; 0x2aca <DIO_voidToggleValue+0xba>
    2ad2:	84 27       	eor	r24, r20
    2ad4:	8c 93       	st	X, r24
    2ad6:	13 c0       	rjmp	.+38     	; 0x2afe <DIO_voidToggleValue+0xee>
		case DIO_u8PORTD: TOGGLE_BIT(PORTD,Copy_u8PinNum); break;
    2ad8:	a2 e3       	ldi	r26, 0x32	; 50
    2ada:	b0 e0       	ldi	r27, 0x00	; 0
    2adc:	e2 e3       	ldi	r30, 0x32	; 50
    2ade:	f0 e0       	ldi	r31, 0x00	; 0
    2ae0:	80 81       	ld	r24, Z
    2ae2:	48 2f       	mov	r20, r24
    2ae4:	8a 81       	ldd	r24, Y+2	; 0x02
    2ae6:	28 2f       	mov	r18, r24
    2ae8:	30 e0       	ldi	r19, 0x00	; 0
    2aea:	81 e0       	ldi	r24, 0x01	; 1
    2aec:	90 e0       	ldi	r25, 0x00	; 0
    2aee:	02 2e       	mov	r0, r18
    2af0:	02 c0       	rjmp	.+4      	; 0x2af6 <DIO_voidToggleValue+0xe6>
    2af2:	88 0f       	add	r24, r24
    2af4:	99 1f       	adc	r25, r25
    2af6:	0a 94       	dec	r0
    2af8:	e2 f7       	brpl	.-8      	; 0x2af2 <DIO_voidToggleValue+0xe2>
    2afa:	84 27       	eor	r24, r20
    2afc:	8c 93       	st	X, r24
		default:    /*return error*/      	  break;
	}
}
    2afe:	0f 90       	pop	r0
    2b00:	0f 90       	pop	r0
    2b02:	0f 90       	pop	r0
    2b04:	0f 90       	pop	r0
    2b06:	cf 91       	pop	r28
    2b08:	df 91       	pop	r29
    2b0a:	08 95       	ret

00002b0c <DIO_u8GetPinValue>:
u8 DIO_u8GetPinValue(u8 Copy_u8PortNum, u8 Copy_u8PinNum){
    2b0c:	df 93       	push	r29
    2b0e:	cf 93       	push	r28
    2b10:	00 d0       	rcall	.+0      	; 0x2b12 <DIO_u8GetPinValue+0x6>
    2b12:	00 d0       	rcall	.+0      	; 0x2b14 <DIO_u8GetPinValue+0x8>
    2b14:	0f 92       	push	r0
    2b16:	cd b7       	in	r28, 0x3d	; 61
    2b18:	de b7       	in	r29, 0x3e	; 62
    2b1a:	8a 83       	std	Y+2, r24	; 0x02
    2b1c:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8Result = 5;
    2b1e:	85 e0       	ldi	r24, 0x05	; 5
    2b20:	89 83       	std	Y+1, r24	; 0x01

	switch (Copy_u8PortNum)
    2b22:	8a 81       	ldd	r24, Y+2	; 0x02
    2b24:	28 2f       	mov	r18, r24
    2b26:	30 e0       	ldi	r19, 0x00	; 0
    2b28:	3d 83       	std	Y+5, r19	; 0x05
    2b2a:	2c 83       	std	Y+4, r18	; 0x04
    2b2c:	4c 81       	ldd	r20, Y+4	; 0x04
    2b2e:	5d 81       	ldd	r21, Y+5	; 0x05
    2b30:	42 30       	cpi	r20, 0x02	; 2
    2b32:	51 05       	cpc	r21, r1
    2b34:	41 f1       	breq	.+80     	; 0x2b86 <DIO_u8GetPinValue+0x7a>
    2b36:	8c 81       	ldd	r24, Y+4	; 0x04
    2b38:	9d 81       	ldd	r25, Y+5	; 0x05
    2b3a:	83 30       	cpi	r24, 0x03	; 3
    2b3c:	91 05       	cpc	r25, r1
    2b3e:	34 f4       	brge	.+12     	; 0x2b4c <DIO_u8GetPinValue+0x40>
    2b40:	2c 81       	ldd	r18, Y+4	; 0x04
    2b42:	3d 81       	ldd	r19, Y+5	; 0x05
    2b44:	21 30       	cpi	r18, 0x01	; 1
    2b46:	31 05       	cpc	r19, r1
    2b48:	61 f0       	breq	.+24     	; 0x2b62 <DIO_u8GetPinValue+0x56>
    2b4a:	52 c0       	rjmp	.+164    	; 0x2bf0 <DIO_u8GetPinValue+0xe4>
    2b4c:	4c 81       	ldd	r20, Y+4	; 0x04
    2b4e:	5d 81       	ldd	r21, Y+5	; 0x05
    2b50:	43 30       	cpi	r20, 0x03	; 3
    2b52:	51 05       	cpc	r21, r1
    2b54:	51 f1       	breq	.+84     	; 0x2baa <DIO_u8GetPinValue+0x9e>
    2b56:	8c 81       	ldd	r24, Y+4	; 0x04
    2b58:	9d 81       	ldd	r25, Y+5	; 0x05
    2b5a:	84 30       	cpi	r24, 0x04	; 4
    2b5c:	91 05       	cpc	r25, r1
    2b5e:	b9 f1       	breq	.+110    	; 0x2bce <DIO_u8GetPinValue+0xc2>
    2b60:	47 c0       	rjmp	.+142    	; 0x2bf0 <DIO_u8GetPinValue+0xe4>
	{
		case DIO_u8PORTA: Local_u8Result = GET_BIT(PINA, Copy_u8PinNum); break;
    2b62:	e9 e3       	ldi	r30, 0x39	; 57
    2b64:	f0 e0       	ldi	r31, 0x00	; 0
    2b66:	80 81       	ld	r24, Z
    2b68:	28 2f       	mov	r18, r24
    2b6a:	30 e0       	ldi	r19, 0x00	; 0
    2b6c:	8b 81       	ldd	r24, Y+3	; 0x03
    2b6e:	88 2f       	mov	r24, r24
    2b70:	90 e0       	ldi	r25, 0x00	; 0
    2b72:	a9 01       	movw	r20, r18
    2b74:	02 c0       	rjmp	.+4      	; 0x2b7a <DIO_u8GetPinValue+0x6e>
    2b76:	55 95       	asr	r21
    2b78:	47 95       	ror	r20
    2b7a:	8a 95       	dec	r24
    2b7c:	e2 f7       	brpl	.-8      	; 0x2b76 <DIO_u8GetPinValue+0x6a>
    2b7e:	ca 01       	movw	r24, r20
    2b80:	81 70       	andi	r24, 0x01	; 1
    2b82:	89 83       	std	Y+1, r24	; 0x01
    2b84:	35 c0       	rjmp	.+106    	; 0x2bf0 <DIO_u8GetPinValue+0xe4>
		case DIO_u8PORTB: Local_u8Result = GET_BIT(PINB, Copy_u8PinNum); break;
    2b86:	e6 e3       	ldi	r30, 0x36	; 54
    2b88:	f0 e0       	ldi	r31, 0x00	; 0
    2b8a:	80 81       	ld	r24, Z
    2b8c:	28 2f       	mov	r18, r24
    2b8e:	30 e0       	ldi	r19, 0x00	; 0
    2b90:	8b 81       	ldd	r24, Y+3	; 0x03
    2b92:	88 2f       	mov	r24, r24
    2b94:	90 e0       	ldi	r25, 0x00	; 0
    2b96:	a9 01       	movw	r20, r18
    2b98:	02 c0       	rjmp	.+4      	; 0x2b9e <DIO_u8GetPinValue+0x92>
    2b9a:	55 95       	asr	r21
    2b9c:	47 95       	ror	r20
    2b9e:	8a 95       	dec	r24
    2ba0:	e2 f7       	brpl	.-8      	; 0x2b9a <DIO_u8GetPinValue+0x8e>
    2ba2:	ca 01       	movw	r24, r20
    2ba4:	81 70       	andi	r24, 0x01	; 1
    2ba6:	89 83       	std	Y+1, r24	; 0x01
    2ba8:	23 c0       	rjmp	.+70     	; 0x2bf0 <DIO_u8GetPinValue+0xe4>
		case DIO_u8PORTC: Local_u8Result = GET_BIT(PINC, Copy_u8PinNum); break;
    2baa:	e3 e3       	ldi	r30, 0x33	; 51
    2bac:	f0 e0       	ldi	r31, 0x00	; 0
    2bae:	80 81       	ld	r24, Z
    2bb0:	28 2f       	mov	r18, r24
    2bb2:	30 e0       	ldi	r19, 0x00	; 0
    2bb4:	8b 81       	ldd	r24, Y+3	; 0x03
    2bb6:	88 2f       	mov	r24, r24
    2bb8:	90 e0       	ldi	r25, 0x00	; 0
    2bba:	a9 01       	movw	r20, r18
    2bbc:	02 c0       	rjmp	.+4      	; 0x2bc2 <DIO_u8GetPinValue+0xb6>
    2bbe:	55 95       	asr	r21
    2bc0:	47 95       	ror	r20
    2bc2:	8a 95       	dec	r24
    2bc4:	e2 f7       	brpl	.-8      	; 0x2bbe <DIO_u8GetPinValue+0xb2>
    2bc6:	ca 01       	movw	r24, r20
    2bc8:	81 70       	andi	r24, 0x01	; 1
    2bca:	89 83       	std	Y+1, r24	; 0x01
    2bcc:	11 c0       	rjmp	.+34     	; 0x2bf0 <DIO_u8GetPinValue+0xe4>
		case DIO_u8PORTD: Local_u8Result = GET_BIT(PIND, Copy_u8PinNum); break;
    2bce:	e0 e3       	ldi	r30, 0x30	; 48
    2bd0:	f0 e0       	ldi	r31, 0x00	; 0
    2bd2:	80 81       	ld	r24, Z
    2bd4:	28 2f       	mov	r18, r24
    2bd6:	30 e0       	ldi	r19, 0x00	; 0
    2bd8:	8b 81       	ldd	r24, Y+3	; 0x03
    2bda:	88 2f       	mov	r24, r24
    2bdc:	90 e0       	ldi	r25, 0x00	; 0
    2bde:	a9 01       	movw	r20, r18
    2be0:	02 c0       	rjmp	.+4      	; 0x2be6 <DIO_u8GetPinValue+0xda>
    2be2:	55 95       	asr	r21
    2be4:	47 95       	ror	r20
    2be6:	8a 95       	dec	r24
    2be8:	e2 f7       	brpl	.-8      	; 0x2be2 <DIO_u8GetPinValue+0xd6>
    2bea:	ca 01       	movw	r24, r20
    2bec:	81 70       	andi	r24, 0x01	; 1
    2bee:	89 83       	std	Y+1, r24	; 0x01
		default:    /*return error*/      								   break;
	}
	return Local_u8Result;
    2bf0:	89 81       	ldd	r24, Y+1	; 0x01
}
    2bf2:	0f 90       	pop	r0
    2bf4:	0f 90       	pop	r0
    2bf6:	0f 90       	pop	r0
    2bf8:	0f 90       	pop	r0
    2bfa:	0f 90       	pop	r0
    2bfc:	cf 91       	pop	r28
    2bfe:	df 91       	pop	r29
    2c00:	08 95       	ret

00002c02 <DCMotor_init>:
 *      Author: hp
 */

#include "DC_Motor_Interface.h"

void DCMotor_init(Motor *motor){
    2c02:	df 93       	push	r29
    2c04:	cf 93       	push	r28
    2c06:	00 d0       	rcall	.+0      	; 0x2c08 <DCMotor_init+0x6>
    2c08:	cd b7       	in	r28, 0x3d	; 61
    2c0a:	de b7       	in	r29, 0x3e	; 62
    2c0c:	9a 83       	std	Y+2, r25	; 0x02
    2c0e:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPinDirection(motor->motor_port, motor->motor_pin1, DIO_u8OUTPUT);
    2c10:	e9 81       	ldd	r30, Y+1	; 0x01
    2c12:	fa 81       	ldd	r31, Y+2	; 0x02
    2c14:	80 81       	ld	r24, Z
    2c16:	e9 81       	ldd	r30, Y+1	; 0x01
    2c18:	fa 81       	ldd	r31, Y+2	; 0x02
    2c1a:	91 81       	ldd	r25, Z+1	; 0x01
    2c1c:	69 2f       	mov	r22, r25
    2c1e:	41 e0       	ldi	r20, 0x01	; 1
    2c20:	0e 94 80 12 	call	0x2500	; 0x2500 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(motor->motor_port, motor->motor_pin2, DIO_u8OUTPUT);
    2c24:	e9 81       	ldd	r30, Y+1	; 0x01
    2c26:	fa 81       	ldd	r31, Y+2	; 0x02
    2c28:	80 81       	ld	r24, Z
    2c2a:	e9 81       	ldd	r30, Y+1	; 0x01
    2c2c:	fa 81       	ldd	r31, Y+2	; 0x02
    2c2e:	92 81       	ldd	r25, Z+2	; 0x02
    2c30:	69 2f       	mov	r22, r25
    2c32:	41 e0       	ldi	r20, 0x01	; 1
    2c34:	0e 94 80 12 	call	0x2500	; 0x2500 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(motor->motor_port, motor->motor_pin3, DIO_u8OUTPUT);
    2c38:	e9 81       	ldd	r30, Y+1	; 0x01
    2c3a:	fa 81       	ldd	r31, Y+2	; 0x02
    2c3c:	80 81       	ld	r24, Z
    2c3e:	e9 81       	ldd	r30, Y+1	; 0x01
    2c40:	fa 81       	ldd	r31, Y+2	; 0x02
    2c42:	93 81       	ldd	r25, Z+3	; 0x03
    2c44:	69 2f       	mov	r22, r25
    2c46:	41 e0       	ldi	r20, 0x01	; 1
    2c48:	0e 94 80 12 	call	0x2500	; 0x2500 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(motor->motor_port, motor->motor_pin4, DIO_u8OUTPUT);
    2c4c:	e9 81       	ldd	r30, Y+1	; 0x01
    2c4e:	fa 81       	ldd	r31, Y+2	; 0x02
    2c50:	80 81       	ld	r24, Z
    2c52:	e9 81       	ldd	r30, Y+1	; 0x01
    2c54:	fa 81       	ldd	r31, Y+2	; 0x02
    2c56:	94 81       	ldd	r25, Z+4	; 0x04
    2c58:	69 2f       	mov	r22, r25
    2c5a:	41 e0       	ldi	r20, 0x01	; 1
    2c5c:	0e 94 80 12 	call	0x2500	; 0x2500 <DIO_voidSetPinDirection>
}
    2c60:	0f 90       	pop	r0
    2c62:	0f 90       	pop	r0
    2c64:	cf 91       	pop	r28
    2c66:	df 91       	pop	r29
    2c68:	08 95       	ret

00002c6a <DCMotor_OFF>:

void DCMotor_OFF(Motor *motor){
    2c6a:	df 93       	push	r29
    2c6c:	cf 93       	push	r28
    2c6e:	00 d0       	rcall	.+0      	; 0x2c70 <DCMotor_OFF+0x6>
    2c70:	cd b7       	in	r28, 0x3d	; 61
    2c72:	de b7       	in	r29, 0x3e	; 62
    2c74:	9a 83       	std	Y+2, r25	; 0x02
    2c76:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin1, DIO_u8LOW);
    2c78:	e9 81       	ldd	r30, Y+1	; 0x01
    2c7a:	fa 81       	ldd	r31, Y+2	; 0x02
    2c7c:	80 81       	ld	r24, Z
    2c7e:	e9 81       	ldd	r30, Y+1	; 0x01
    2c80:	fa 81       	ldd	r31, Y+2	; 0x02
    2c82:	91 81       	ldd	r25, Z+1	; 0x01
    2c84:	69 2f       	mov	r22, r25
    2c86:	40 e0       	ldi	r20, 0x00	; 0
    2c88:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin2, DIO_u8LOW);
    2c8c:	e9 81       	ldd	r30, Y+1	; 0x01
    2c8e:	fa 81       	ldd	r31, Y+2	; 0x02
    2c90:	80 81       	ld	r24, Z
    2c92:	e9 81       	ldd	r30, Y+1	; 0x01
    2c94:	fa 81       	ldd	r31, Y+2	; 0x02
    2c96:	92 81       	ldd	r25, Z+2	; 0x02
    2c98:	69 2f       	mov	r22, r25
    2c9a:	40 e0       	ldi	r20, 0x00	; 0
    2c9c:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin3, DIO_u8LOW);
    2ca0:	e9 81       	ldd	r30, Y+1	; 0x01
    2ca2:	fa 81       	ldd	r31, Y+2	; 0x02
    2ca4:	80 81       	ld	r24, Z
    2ca6:	e9 81       	ldd	r30, Y+1	; 0x01
    2ca8:	fa 81       	ldd	r31, Y+2	; 0x02
    2caa:	93 81       	ldd	r25, Z+3	; 0x03
    2cac:	69 2f       	mov	r22, r25
    2cae:	40 e0       	ldi	r20, 0x00	; 0
    2cb0:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin4, DIO_u8LOW);
    2cb4:	e9 81       	ldd	r30, Y+1	; 0x01
    2cb6:	fa 81       	ldd	r31, Y+2	; 0x02
    2cb8:	80 81       	ld	r24, Z
    2cba:	e9 81       	ldd	r30, Y+1	; 0x01
    2cbc:	fa 81       	ldd	r31, Y+2	; 0x02
    2cbe:	94 81       	ldd	r25, Z+4	; 0x04
    2cc0:	69 2f       	mov	r22, r25
    2cc2:	40 e0       	ldi	r20, 0x00	; 0
    2cc4:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
}
    2cc8:	0f 90       	pop	r0
    2cca:	0f 90       	pop	r0
    2ccc:	cf 91       	pop	r28
    2cce:	df 91       	pop	r29
    2cd0:	08 95       	ret

00002cd2 <DCMotor_SetCW>:
/*
 * CW  -> pin 2,3
 * CCW -> pin 1,4
 * */

void DCMotor_SetCW(Motor *motor){
    2cd2:	df 93       	push	r29
    2cd4:	cf 93       	push	r28
    2cd6:	00 d0       	rcall	.+0      	; 0x2cd8 <DCMotor_SetCW+0x6>
    2cd8:	cd b7       	in	r28, 0x3d	; 61
    2cda:	de b7       	in	r29, 0x3e	; 62
    2cdc:	9a 83       	std	Y+2, r25	; 0x02
    2cde:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin1, DIO_u8LOW);
    2ce0:	e9 81       	ldd	r30, Y+1	; 0x01
    2ce2:	fa 81       	ldd	r31, Y+2	; 0x02
    2ce4:	80 81       	ld	r24, Z
    2ce6:	e9 81       	ldd	r30, Y+1	; 0x01
    2ce8:	fa 81       	ldd	r31, Y+2	; 0x02
    2cea:	91 81       	ldd	r25, Z+1	; 0x01
    2cec:	69 2f       	mov	r22, r25
    2cee:	40 e0       	ldi	r20, 0x00	; 0
    2cf0:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin2, DIO_u8HIGH);
    2cf4:	e9 81       	ldd	r30, Y+1	; 0x01
    2cf6:	fa 81       	ldd	r31, Y+2	; 0x02
    2cf8:	80 81       	ld	r24, Z
    2cfa:	e9 81       	ldd	r30, Y+1	; 0x01
    2cfc:	fa 81       	ldd	r31, Y+2	; 0x02
    2cfe:	92 81       	ldd	r25, Z+2	; 0x02
    2d00:	69 2f       	mov	r22, r25
    2d02:	41 e0       	ldi	r20, 0x01	; 1
    2d04:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin3, DIO_u8HIGH);
    2d08:	e9 81       	ldd	r30, Y+1	; 0x01
    2d0a:	fa 81       	ldd	r31, Y+2	; 0x02
    2d0c:	80 81       	ld	r24, Z
    2d0e:	e9 81       	ldd	r30, Y+1	; 0x01
    2d10:	fa 81       	ldd	r31, Y+2	; 0x02
    2d12:	93 81       	ldd	r25, Z+3	; 0x03
    2d14:	69 2f       	mov	r22, r25
    2d16:	41 e0       	ldi	r20, 0x01	; 1
    2d18:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin4, DIO_u8LOW);
    2d1c:	e9 81       	ldd	r30, Y+1	; 0x01
    2d1e:	fa 81       	ldd	r31, Y+2	; 0x02
    2d20:	80 81       	ld	r24, Z
    2d22:	e9 81       	ldd	r30, Y+1	; 0x01
    2d24:	fa 81       	ldd	r31, Y+2	; 0x02
    2d26:	94 81       	ldd	r25, Z+4	; 0x04
    2d28:	69 2f       	mov	r22, r25
    2d2a:	40 e0       	ldi	r20, 0x00	; 0
    2d2c:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
}
    2d30:	0f 90       	pop	r0
    2d32:	0f 90       	pop	r0
    2d34:	cf 91       	pop	r28
    2d36:	df 91       	pop	r29
    2d38:	08 95       	ret

00002d3a <DCMotor_SetCCW>:

void DCMotor_SetCCW(Motor *motor){
    2d3a:	df 93       	push	r29
    2d3c:	cf 93       	push	r28
    2d3e:	00 d0       	rcall	.+0      	; 0x2d40 <DCMotor_SetCCW+0x6>
    2d40:	cd b7       	in	r28, 0x3d	; 61
    2d42:	de b7       	in	r29, 0x3e	; 62
    2d44:	9a 83       	std	Y+2, r25	; 0x02
    2d46:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin1, DIO_u8HIGH);
    2d48:	e9 81       	ldd	r30, Y+1	; 0x01
    2d4a:	fa 81       	ldd	r31, Y+2	; 0x02
    2d4c:	80 81       	ld	r24, Z
    2d4e:	e9 81       	ldd	r30, Y+1	; 0x01
    2d50:	fa 81       	ldd	r31, Y+2	; 0x02
    2d52:	91 81       	ldd	r25, Z+1	; 0x01
    2d54:	69 2f       	mov	r22, r25
    2d56:	41 e0       	ldi	r20, 0x01	; 1
    2d58:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin2, DIO_u8LOW);
    2d5c:	e9 81       	ldd	r30, Y+1	; 0x01
    2d5e:	fa 81       	ldd	r31, Y+2	; 0x02
    2d60:	80 81       	ld	r24, Z
    2d62:	e9 81       	ldd	r30, Y+1	; 0x01
    2d64:	fa 81       	ldd	r31, Y+2	; 0x02
    2d66:	92 81       	ldd	r25, Z+2	; 0x02
    2d68:	69 2f       	mov	r22, r25
    2d6a:	40 e0       	ldi	r20, 0x00	; 0
    2d6c:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin3, DIO_u8LOW);
    2d70:	e9 81       	ldd	r30, Y+1	; 0x01
    2d72:	fa 81       	ldd	r31, Y+2	; 0x02
    2d74:	80 81       	ld	r24, Z
    2d76:	e9 81       	ldd	r30, Y+1	; 0x01
    2d78:	fa 81       	ldd	r31, Y+2	; 0x02
    2d7a:	93 81       	ldd	r25, Z+3	; 0x03
    2d7c:	69 2f       	mov	r22, r25
    2d7e:	40 e0       	ldi	r20, 0x00	; 0
    2d80:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(motor->motor_port, motor->motor_pin4, DIO_u8HIGH);
    2d84:	e9 81       	ldd	r30, Y+1	; 0x01
    2d86:	fa 81       	ldd	r31, Y+2	; 0x02
    2d88:	80 81       	ld	r24, Z
    2d8a:	e9 81       	ldd	r30, Y+1	; 0x01
    2d8c:	fa 81       	ldd	r31, Y+2	; 0x02
    2d8e:	94 81       	ldd	r25, Z+4	; 0x04
    2d90:	69 2f       	mov	r22, r25
    2d92:	41 e0       	ldi	r20, 0x01	; 1
    2d94:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
}
    2d98:	0f 90       	pop	r0
    2d9a:	0f 90       	pop	r0
    2d9c:	cf 91       	pop	r28
    2d9e:	df 91       	pop	r29
    2da0:	08 95       	ret

00002da2 <KPD_init>:
u8 static KPD_Arr[4][4] = { {'7','8','9','/'},
							{'4','5','6','*'},
							{'1','2','3','-'},
							{'C','0','=','+'} };

void KPD_init(void){
    2da2:	df 93       	push	r29
    2da4:	cf 93       	push	r28
    2da6:	00 d0       	rcall	.+0      	; 0x2da8 <KPD_init+0x6>
    2da8:	cd b7       	in	r28, 0x3d	; 61
    2daa:	de b7       	in	r29, 0x3e	; 62
	//R0->R3 (rows)    //C0->C3 //0x0f
	//C0->C3 (columns) //C4->C7 //0xf0
	for (u8 i=0;i<4;i++){
    2dac:	1a 82       	std	Y+2, r1	; 0x02
    2dae:	08 c0       	rjmp	.+16     	; 0x2dc0 <KPD_init+0x1e>
		DIO_voidSetPinDirection(KPD_PORT, i, DIO_u8OUTPUT);
    2db0:	83 e0       	ldi	r24, 0x03	; 3
    2db2:	6a 81       	ldd	r22, Y+2	; 0x02
    2db4:	41 e0       	ldi	r20, 0x01	; 1
    2db6:	0e 94 80 12 	call	0x2500	; 0x2500 <DIO_voidSetPinDirection>
							{'C','0','=','+'} };

void KPD_init(void){
	//R0->R3 (rows)    //C0->C3 //0x0f
	//C0->C3 (columns) //C4->C7 //0xf0
	for (u8 i=0;i<4;i++){
    2dba:	8a 81       	ldd	r24, Y+2	; 0x02
    2dbc:	8f 5f       	subi	r24, 0xFF	; 255
    2dbe:	8a 83       	std	Y+2, r24	; 0x02
    2dc0:	8a 81       	ldd	r24, Y+2	; 0x02
    2dc2:	84 30       	cpi	r24, 0x04	; 4
    2dc4:	a8 f3       	brcs	.-22     	; 0x2db0 <KPD_init+0xe>
		DIO_voidSetPinDirection(KPD_PORT, i, DIO_u8OUTPUT);
	}
	for (u8 i=4;i<8;i++){
    2dc6:	84 e0       	ldi	r24, 0x04	; 4
    2dc8:	89 83       	std	Y+1, r24	; 0x01
    2dca:	08 c0       	rjmp	.+16     	; 0x2ddc <KPD_init+0x3a>
		DIO_voidSetPinDirection(KPD_PORT, i, DIO_u8INPUT);
    2dcc:	83 e0       	ldi	r24, 0x03	; 3
    2dce:	69 81       	ldd	r22, Y+1	; 0x01
    2dd0:	40 e0       	ldi	r20, 0x00	; 0
    2dd2:	0e 94 80 12 	call	0x2500	; 0x2500 <DIO_voidSetPinDirection>
	//R0->R3 (rows)    //C0->C3 //0x0f
	//C0->C3 (columns) //C4->C7 //0xf0
	for (u8 i=0;i<4;i++){
		DIO_voidSetPinDirection(KPD_PORT, i, DIO_u8OUTPUT);
	}
	for (u8 i=4;i<8;i++){
    2dd6:	89 81       	ldd	r24, Y+1	; 0x01
    2dd8:	8f 5f       	subi	r24, 0xFF	; 255
    2dda:	89 83       	std	Y+1, r24	; 0x01
    2ddc:	89 81       	ldd	r24, Y+1	; 0x01
    2dde:	88 30       	cpi	r24, 0x08	; 8
    2de0:	a8 f3       	brcs	.-22     	; 0x2dcc <KPD_init+0x2a>
		DIO_voidSetPinDirection(KPD_PORT, i, DIO_u8INPUT);
	}
	DIO_voidSetPortValue(KPD_PORT, 0xff); //PORTC =
    2de2:	83 e0       	ldi	r24, 0x03	; 3
    2de4:	6f ef       	ldi	r22, 0xFF	; 255
    2de6:	0e 94 c6 14 	call	0x298c	; 0x298c <DIO_voidSetPortValue>
}
    2dea:	0f 90       	pop	r0
    2dec:	0f 90       	pop	r0
    2dee:	cf 91       	pop	r28
    2df0:	df 91       	pop	r29
    2df2:	08 95       	ret

00002df4 <KPD_GetPressedKey>:

u8 KPD_GetPressedKey(void){
    2df4:	df 93       	push	r29
    2df6:	cf 93       	push	r28
    2df8:	cd b7       	in	r28, 0x3d	; 61
    2dfa:	de b7       	in	r29, 0x3e	; 62
    2dfc:	61 97       	sbiw	r28, 0x11	; 17
    2dfe:	0f b6       	in	r0, 0x3f	; 63
    2e00:	f8 94       	cli
    2e02:	de bf       	out	0x3e, r29	; 62
    2e04:	0f be       	out	0x3f, r0	; 63
    2e06:	cd bf       	out	0x3d, r28	; 61
	u8 Key = 0;
    2e08:	19 8a       	std	Y+17, r1	; 0x11
	u8 row,col;
	for (row = 0; row < 4; row++){
    2e0a:	18 8a       	std	Y+16, r1	; 0x10
    2e0c:	b6 c0       	rjmp	.+364    	; 0x2f7a <KPD_GetPressedKey+0x186>
		DIO_voidSetPinValue(KPD_PORT, row, DIO_u8LOW);
    2e0e:	83 e0       	ldi	r24, 0x03	; 3
    2e10:	68 89       	ldd	r22, Y+16	; 0x10
    2e12:	40 e0       	ldi	r20, 0x00	; 0
    2e14:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
		for(col = 4; col < 8; col++){
    2e18:	84 e0       	ldi	r24, 0x04	; 4
    2e1a:	8f 87       	std	Y+15, r24	; 0x0f
    2e1c:	a2 c0       	rjmp	.+324    	; 0x2f62 <KPD_GetPressedKey+0x16e>
			if (DIO_u8GetPinValue(KPD_PORT, col) == 0){
    2e1e:	83 e0       	ldi	r24, 0x03	; 3
    2e20:	6f 85       	ldd	r22, Y+15	; 0x0f
    2e22:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <DIO_u8GetPinValue>
    2e26:	88 23       	and	r24, r24
    2e28:	09 f0       	breq	.+2      	; 0x2e2c <KPD_GetPressedKey+0x38>
    2e2a:	98 c0       	rjmp	.+304    	; 0x2f5c <KPD_GetPressedKey+0x168>
    2e2c:	80 e0       	ldi	r24, 0x00	; 0
    2e2e:	90 e0       	ldi	r25, 0x00	; 0
    2e30:	a0 ef       	ldi	r26, 0xF0	; 240
    2e32:	b1 e4       	ldi	r27, 0x41	; 65
    2e34:	8b 87       	std	Y+11, r24	; 0x0b
    2e36:	9c 87       	std	Y+12, r25	; 0x0c
    2e38:	ad 87       	std	Y+13, r26	; 0x0d
    2e3a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e3c:	6b 85       	ldd	r22, Y+11	; 0x0b
    2e3e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2e40:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e42:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e44:	20 e0       	ldi	r18, 0x00	; 0
    2e46:	30 e0       	ldi	r19, 0x00	; 0
    2e48:	4a ef       	ldi	r20, 0xFA	; 250
    2e4a:	54 e4       	ldi	r21, 0x44	; 68
    2e4c:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    2e50:	dc 01       	movw	r26, r24
    2e52:	cb 01       	movw	r24, r22
    2e54:	8f 83       	std	Y+7, r24	; 0x07
    2e56:	98 87       	std	Y+8, r25	; 0x08
    2e58:	a9 87       	std	Y+9, r26	; 0x09
    2e5a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2e5c:	6f 81       	ldd	r22, Y+7	; 0x07
    2e5e:	78 85       	ldd	r23, Y+8	; 0x08
    2e60:	89 85       	ldd	r24, Y+9	; 0x09
    2e62:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e64:	20 e0       	ldi	r18, 0x00	; 0
    2e66:	30 e0       	ldi	r19, 0x00	; 0
    2e68:	40 e8       	ldi	r20, 0x80	; 128
    2e6a:	5f e3       	ldi	r21, 0x3F	; 63
    2e6c:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    2e70:	88 23       	and	r24, r24
    2e72:	2c f4       	brge	.+10     	; 0x2e7e <KPD_GetPressedKey+0x8a>
		__ticks = 1;
    2e74:	81 e0       	ldi	r24, 0x01	; 1
    2e76:	90 e0       	ldi	r25, 0x00	; 0
    2e78:	9e 83       	std	Y+6, r25	; 0x06
    2e7a:	8d 83       	std	Y+5, r24	; 0x05
    2e7c:	3f c0       	rjmp	.+126    	; 0x2efc <KPD_GetPressedKey+0x108>
	else if (__tmp > 65535)
    2e7e:	6f 81       	ldd	r22, Y+7	; 0x07
    2e80:	78 85       	ldd	r23, Y+8	; 0x08
    2e82:	89 85       	ldd	r24, Y+9	; 0x09
    2e84:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e86:	20 e0       	ldi	r18, 0x00	; 0
    2e88:	3f ef       	ldi	r19, 0xFF	; 255
    2e8a:	4f e7       	ldi	r20, 0x7F	; 127
    2e8c:	57 e4       	ldi	r21, 0x47	; 71
    2e8e:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    2e92:	18 16       	cp	r1, r24
    2e94:	4c f5       	brge	.+82     	; 0x2ee8 <KPD_GetPressedKey+0xf4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e96:	6b 85       	ldd	r22, Y+11	; 0x0b
    2e98:	7c 85       	ldd	r23, Y+12	; 0x0c
    2e9a:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e9c:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e9e:	20 e0       	ldi	r18, 0x00	; 0
    2ea0:	30 e0       	ldi	r19, 0x00	; 0
    2ea2:	40 e2       	ldi	r20, 0x20	; 32
    2ea4:	51 e4       	ldi	r21, 0x41	; 65
    2ea6:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    2eaa:	dc 01       	movw	r26, r24
    2eac:	cb 01       	movw	r24, r22
    2eae:	bc 01       	movw	r22, r24
    2eb0:	cd 01       	movw	r24, r26
    2eb2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2eb6:	dc 01       	movw	r26, r24
    2eb8:	cb 01       	movw	r24, r22
    2eba:	9e 83       	std	Y+6, r25	; 0x06
    2ebc:	8d 83       	std	Y+5, r24	; 0x05
    2ebe:	0f c0       	rjmp	.+30     	; 0x2ede <KPD_GetPressedKey+0xea>
    2ec0:	88 ec       	ldi	r24, 0xC8	; 200
    2ec2:	90 e0       	ldi	r25, 0x00	; 0
    2ec4:	9c 83       	std	Y+4, r25	; 0x04
    2ec6:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2ec8:	8b 81       	ldd	r24, Y+3	; 0x03
    2eca:	9c 81       	ldd	r25, Y+4	; 0x04
    2ecc:	01 97       	sbiw	r24, 0x01	; 1
    2ece:	f1 f7       	brne	.-4      	; 0x2ecc <KPD_GetPressedKey+0xd8>
    2ed0:	9c 83       	std	Y+4, r25	; 0x04
    2ed2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ed4:	8d 81       	ldd	r24, Y+5	; 0x05
    2ed6:	9e 81       	ldd	r25, Y+6	; 0x06
    2ed8:	01 97       	sbiw	r24, 0x01	; 1
    2eda:	9e 83       	std	Y+6, r25	; 0x06
    2edc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ede:	8d 81       	ldd	r24, Y+5	; 0x05
    2ee0:	9e 81       	ldd	r25, Y+6	; 0x06
    2ee2:	00 97       	sbiw	r24, 0x00	; 0
    2ee4:	69 f7       	brne	.-38     	; 0x2ec0 <KPD_GetPressedKey+0xcc>
    2ee6:	14 c0       	rjmp	.+40     	; 0x2f10 <KPD_GetPressedKey+0x11c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ee8:	6f 81       	ldd	r22, Y+7	; 0x07
    2eea:	78 85       	ldd	r23, Y+8	; 0x08
    2eec:	89 85       	ldd	r24, Y+9	; 0x09
    2eee:	9a 85       	ldd	r25, Y+10	; 0x0a
    2ef0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ef4:	dc 01       	movw	r26, r24
    2ef6:	cb 01       	movw	r24, r22
    2ef8:	9e 83       	std	Y+6, r25	; 0x06
    2efa:	8d 83       	std	Y+5, r24	; 0x05
    2efc:	8d 81       	ldd	r24, Y+5	; 0x05
    2efe:	9e 81       	ldd	r25, Y+6	; 0x06
    2f00:	9a 83       	std	Y+2, r25	; 0x02
    2f02:	89 83       	std	Y+1, r24	; 0x01
    2f04:	89 81       	ldd	r24, Y+1	; 0x01
    2f06:	9a 81       	ldd	r25, Y+2	; 0x02
    2f08:	01 97       	sbiw	r24, 0x01	; 1
    2f0a:	f1 f7       	brne	.-4      	; 0x2f08 <KPD_GetPressedKey+0x114>
    2f0c:	9a 83       	std	Y+2, r25	; 0x02
    2f0e:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(30);
				if (DIO_u8GetPinValue(KPD_PORT, col) == 0){
    2f10:	83 e0       	ldi	r24, 0x03	; 3
    2f12:	6f 85       	ldd	r22, Y+15	; 0x0f
    2f14:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <DIO_u8GetPinValue>
    2f18:	88 23       	and	r24, r24
    2f1a:	01 f5       	brne	.+64     	; 0x2f5c <KPD_GetPressedKey+0x168>
					while(DIO_u8GetPinValue(KPD_PORT, col) == 0);
    2f1c:	83 e0       	ldi	r24, 0x03	; 3
    2f1e:	6f 85       	ldd	r22, Y+15	; 0x0f
    2f20:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <DIO_u8GetPinValue>
    2f24:	88 23       	and	r24, r24
    2f26:	d1 f3       	breq	.-12     	; 0x2f1c <KPD_GetPressedKey+0x128>
					Key = KPD_Arr[row][col-4];
    2f28:	88 89       	ldd	r24, Y+16	; 0x10
    2f2a:	48 2f       	mov	r20, r24
    2f2c:	50 e0       	ldi	r21, 0x00	; 0
    2f2e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f30:	88 2f       	mov	r24, r24
    2f32:	90 e0       	ldi	r25, 0x00	; 0
    2f34:	9c 01       	movw	r18, r24
    2f36:	24 50       	subi	r18, 0x04	; 4
    2f38:	30 40       	sbci	r19, 0x00	; 0
    2f3a:	ca 01       	movw	r24, r20
    2f3c:	88 0f       	add	r24, r24
    2f3e:	99 1f       	adc	r25, r25
    2f40:	88 0f       	add	r24, r24
    2f42:	99 1f       	adc	r25, r25
    2f44:	82 0f       	add	r24, r18
    2f46:	93 1f       	adc	r25, r19
    2f48:	fc 01       	movw	r30, r24
    2f4a:	ee 58       	subi	r30, 0x8E	; 142
    2f4c:	fd 4f       	sbci	r31, 0xFD	; 253
    2f4e:	80 81       	ld	r24, Z
    2f50:	89 8b       	std	Y+17, r24	; 0x11
					DIO_voidSetPinValue(KPD_PORT,row,DIO_u8HIGH);
    2f52:	83 e0       	ldi	r24, 0x03	; 3
    2f54:	68 89       	ldd	r22, Y+16	; 0x10
    2f56:	41 e0       	ldi	r20, 0x01	; 1
    2f58:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
u8 KPD_GetPressedKey(void){
	u8 Key = 0;
	u8 row,col;
	for (row = 0; row < 4; row++){
		DIO_voidSetPinValue(KPD_PORT, row, DIO_u8LOW);
		for(col = 4; col < 8; col++){
    2f5c:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f5e:	8f 5f       	subi	r24, 0xFF	; 255
    2f60:	8f 87       	std	Y+15, r24	; 0x0f
    2f62:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f64:	88 30       	cpi	r24, 0x08	; 8
    2f66:	08 f4       	brcc	.+2      	; 0x2f6a <KPD_GetPressedKey+0x176>
    2f68:	5a cf       	rjmp	.-332    	; 0x2e1e <KPD_GetPressedKey+0x2a>
					Key = KPD_Arr[row][col-4];
					DIO_voidSetPinValue(KPD_PORT,row,DIO_u8HIGH);
				}
			}
		}
		DIO_voidSetPinValue(KPD_PORT,row,DIO_u8HIGH);
    2f6a:	83 e0       	ldi	r24, 0x03	; 3
    2f6c:	68 89       	ldd	r22, Y+16	; 0x10
    2f6e:	41 e0       	ldi	r20, 0x01	; 1
    2f70:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
}

u8 KPD_GetPressedKey(void){
	u8 Key = 0;
	u8 row,col;
	for (row = 0; row < 4; row++){
    2f74:	88 89       	ldd	r24, Y+16	; 0x10
    2f76:	8f 5f       	subi	r24, 0xFF	; 255
    2f78:	88 8b       	std	Y+16, r24	; 0x10
    2f7a:	88 89       	ldd	r24, Y+16	; 0x10
    2f7c:	84 30       	cpi	r24, 0x04	; 4
    2f7e:	08 f4       	brcc	.+2      	; 0x2f82 <KPD_GetPressedKey+0x18e>
    2f80:	46 cf       	rjmp	.-372    	; 0x2e0e <KPD_GetPressedKey+0x1a>
			}
		}
		DIO_voidSetPinValue(KPD_PORT,row,DIO_u8HIGH);
	}
	//not pressed
	return Key;
    2f82:	89 89       	ldd	r24, Y+17	; 0x11
}
    2f84:	61 96       	adiw	r28, 0x11	; 17
    2f86:	0f b6       	in	r0, 0x3f	; 63
    2f88:	f8 94       	cli
    2f8a:	de bf       	out	0x3e, r29	; 62
    2f8c:	0f be       	out	0x3f, r0	; 63
    2f8e:	cd bf       	out	0x3d, r28	; 61
    2f90:	cf 91       	pop	r28
    2f92:	df 91       	pop	r29
    2f94:	08 95       	ret

00002f96 <CLCD_init>:
 */

#include "util/delay.h"
#include "../04-CLCD/CLCD_Interface.h"

void CLCD_init(void){
    2f96:	df 93       	push	r29
    2f98:	cf 93       	push	r28
    2f9a:	cd b7       	in	r28, 0x3d	; 61
    2f9c:	de b7       	in	r29, 0x3e	; 62
    2f9e:	6c 97       	sbiw	r28, 0x1c	; 28
    2fa0:	0f b6       	in	r0, 0x3f	; 63
    2fa2:	f8 94       	cli
    2fa4:	de bf       	out	0x3e, r29	; 62
    2fa6:	0f be       	out	0x3f, r0	; 63
    2fa8:	cd bf       	out	0x3d, r28	; 61
	/* data port output */
	DIO_voidSetPortDirection(CLCD_Data_Port, 255);
    2faa:	81 e0       	ldi	r24, 0x01	; 1
    2fac:	6f ef       	ldi	r22, 0xFF	; 255
    2fae:	0e 94 84 14 	call	0x2908	; 0x2908 <DIO_voidSetPortDirection>
	/* RS output */
	DIO_voidSetPinDirection(CLCD_Control_Port, CLCD_RS_PIN, DIO_u8OUTPUT);
    2fb2:	82 e0       	ldi	r24, 0x02	; 2
    2fb4:	60 e0       	ldi	r22, 0x00	; 0
    2fb6:	41 e0       	ldi	r20, 0x01	; 1
    2fb8:	0e 94 80 12 	call	0x2500	; 0x2500 <DIO_voidSetPinDirection>
	/* RW output */
	DIO_voidSetPinDirection(CLCD_Control_Port, CLCD_RW_PIN, DIO_u8OUTPUT);
    2fbc:	82 e0       	ldi	r24, 0x02	; 2
    2fbe:	61 e0       	ldi	r22, 0x01	; 1
    2fc0:	41 e0       	ldi	r20, 0x01	; 1
    2fc2:	0e 94 80 12 	call	0x2500	; 0x2500 <DIO_voidSetPinDirection>
	/* EN output */
	DIO_voidSetPinDirection(CLCD_Control_Port, CLCD_EN_PIN, DIO_u8OUTPUT);
    2fc6:	82 e0       	ldi	r24, 0x02	; 2
    2fc8:	62 e0       	ldi	r22, 0x02	; 2
    2fca:	41 e0       	ldi	r20, 0x01	; 1
    2fcc:	0e 94 80 12 	call	0x2500	; 0x2500 <DIO_voidSetPinDirection>
    2fd0:	80 e0       	ldi	r24, 0x00	; 0
    2fd2:	90 e0       	ldi	r25, 0x00	; 0
    2fd4:	a8 e4       	ldi	r26, 0x48	; 72
    2fd6:	b2 e4       	ldi	r27, 0x42	; 66
    2fd8:	89 8f       	std	Y+25, r24	; 0x19
    2fda:	9a 8f       	std	Y+26, r25	; 0x1a
    2fdc:	ab 8f       	std	Y+27, r26	; 0x1b
    2fde:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2fe0:	69 8d       	ldd	r22, Y+25	; 0x19
    2fe2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2fe4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2fe6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2fe8:	20 e0       	ldi	r18, 0x00	; 0
    2fea:	30 e0       	ldi	r19, 0x00	; 0
    2fec:	4a ef       	ldi	r20, 0xFA	; 250
    2fee:	54 e4       	ldi	r21, 0x44	; 68
    2ff0:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    2ff4:	dc 01       	movw	r26, r24
    2ff6:	cb 01       	movw	r24, r22
    2ff8:	8d 8b       	std	Y+21, r24	; 0x15
    2ffa:	9e 8b       	std	Y+22, r25	; 0x16
    2ffc:	af 8b       	std	Y+23, r26	; 0x17
    2ffe:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3000:	6d 89       	ldd	r22, Y+21	; 0x15
    3002:	7e 89       	ldd	r23, Y+22	; 0x16
    3004:	8f 89       	ldd	r24, Y+23	; 0x17
    3006:	98 8d       	ldd	r25, Y+24	; 0x18
    3008:	20 e0       	ldi	r18, 0x00	; 0
    300a:	30 e0       	ldi	r19, 0x00	; 0
    300c:	40 e8       	ldi	r20, 0x80	; 128
    300e:	5f e3       	ldi	r21, 0x3F	; 63
    3010:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    3014:	88 23       	and	r24, r24
    3016:	2c f4       	brge	.+10     	; 0x3022 <CLCD_init+0x8c>
		__ticks = 1;
    3018:	81 e0       	ldi	r24, 0x01	; 1
    301a:	90 e0       	ldi	r25, 0x00	; 0
    301c:	9c 8b       	std	Y+20, r25	; 0x14
    301e:	8b 8b       	std	Y+19, r24	; 0x13
    3020:	3f c0       	rjmp	.+126    	; 0x30a0 <CLCD_init+0x10a>
	else if (__tmp > 65535)
    3022:	6d 89       	ldd	r22, Y+21	; 0x15
    3024:	7e 89       	ldd	r23, Y+22	; 0x16
    3026:	8f 89       	ldd	r24, Y+23	; 0x17
    3028:	98 8d       	ldd	r25, Y+24	; 0x18
    302a:	20 e0       	ldi	r18, 0x00	; 0
    302c:	3f ef       	ldi	r19, 0xFF	; 255
    302e:	4f e7       	ldi	r20, 0x7F	; 127
    3030:	57 e4       	ldi	r21, 0x47	; 71
    3032:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    3036:	18 16       	cp	r1, r24
    3038:	4c f5       	brge	.+82     	; 0x308c <CLCD_init+0xf6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    303a:	69 8d       	ldd	r22, Y+25	; 0x19
    303c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    303e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3040:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3042:	20 e0       	ldi	r18, 0x00	; 0
    3044:	30 e0       	ldi	r19, 0x00	; 0
    3046:	40 e2       	ldi	r20, 0x20	; 32
    3048:	51 e4       	ldi	r21, 0x41	; 65
    304a:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    304e:	dc 01       	movw	r26, r24
    3050:	cb 01       	movw	r24, r22
    3052:	bc 01       	movw	r22, r24
    3054:	cd 01       	movw	r24, r26
    3056:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    305a:	dc 01       	movw	r26, r24
    305c:	cb 01       	movw	r24, r22
    305e:	9c 8b       	std	Y+20, r25	; 0x14
    3060:	8b 8b       	std	Y+19, r24	; 0x13
    3062:	0f c0       	rjmp	.+30     	; 0x3082 <CLCD_init+0xec>
    3064:	88 ec       	ldi	r24, 0xC8	; 200
    3066:	90 e0       	ldi	r25, 0x00	; 0
    3068:	9a 8b       	std	Y+18, r25	; 0x12
    306a:	89 8b       	std	Y+17, r24	; 0x11
    306c:	89 89       	ldd	r24, Y+17	; 0x11
    306e:	9a 89       	ldd	r25, Y+18	; 0x12
    3070:	01 97       	sbiw	r24, 0x01	; 1
    3072:	f1 f7       	brne	.-4      	; 0x3070 <CLCD_init+0xda>
    3074:	9a 8b       	std	Y+18, r25	; 0x12
    3076:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3078:	8b 89       	ldd	r24, Y+19	; 0x13
    307a:	9c 89       	ldd	r25, Y+20	; 0x14
    307c:	01 97       	sbiw	r24, 0x01	; 1
    307e:	9c 8b       	std	Y+20, r25	; 0x14
    3080:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3082:	8b 89       	ldd	r24, Y+19	; 0x13
    3084:	9c 89       	ldd	r25, Y+20	; 0x14
    3086:	00 97       	sbiw	r24, 0x00	; 0
    3088:	69 f7       	brne	.-38     	; 0x3064 <CLCD_init+0xce>
    308a:	14 c0       	rjmp	.+40     	; 0x30b4 <CLCD_init+0x11e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    308c:	6d 89       	ldd	r22, Y+21	; 0x15
    308e:	7e 89       	ldd	r23, Y+22	; 0x16
    3090:	8f 89       	ldd	r24, Y+23	; 0x17
    3092:	98 8d       	ldd	r25, Y+24	; 0x18
    3094:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3098:	dc 01       	movw	r26, r24
    309a:	cb 01       	movw	r24, r22
    309c:	9c 8b       	std	Y+20, r25	; 0x14
    309e:	8b 8b       	std	Y+19, r24	; 0x13
    30a0:	8b 89       	ldd	r24, Y+19	; 0x13
    30a2:	9c 89       	ldd	r25, Y+20	; 0x14
    30a4:	98 8b       	std	Y+16, r25	; 0x10
    30a6:	8f 87       	std	Y+15, r24	; 0x0f
    30a8:	8f 85       	ldd	r24, Y+15	; 0x0f
    30aa:	98 89       	ldd	r25, Y+16	; 0x10
    30ac:	01 97       	sbiw	r24, 0x01	; 1
    30ae:	f1 f7       	brne	.-4      	; 0x30ac <CLCD_init+0x116>
    30b0:	98 8b       	std	Y+16, r25	; 0x10
    30b2:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(50);
	CLCD_WriteInes(0x38); //0b00111000 //FUNCTION_SET
    30b4:	88 e3       	ldi	r24, 0x38	; 56
    30b6:	0e 94 e1 18 	call	0x31c2	; 0x31c2 <CLCD_WriteInes>
	CLCD_WriteInes(0x0C); //0b00001111 //DISPLAY_ON
    30ba:	8c e0       	ldi	r24, 0x0C	; 12
    30bc:	0e 94 e1 18 	call	0x31c2	; 0x31c2 <CLCD_WriteInes>
	CLCD_WriteInes(0x01); //0b00000001 //DISPLAY_CLEAR
    30c0:	81 e0       	ldi	r24, 0x01	; 1
    30c2:	0e 94 e1 18 	call	0x31c2	; 0x31c2 <CLCD_WriteInes>
    30c6:	80 e0       	ldi	r24, 0x00	; 0
    30c8:	90 e0       	ldi	r25, 0x00	; 0
    30ca:	a0 e8       	ldi	r26, 0x80	; 128
    30cc:	bf e3       	ldi	r27, 0x3F	; 63
    30ce:	8b 87       	std	Y+11, r24	; 0x0b
    30d0:	9c 87       	std	Y+12, r25	; 0x0c
    30d2:	ad 87       	std	Y+13, r26	; 0x0d
    30d4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    30d6:	6b 85       	ldd	r22, Y+11	; 0x0b
    30d8:	7c 85       	ldd	r23, Y+12	; 0x0c
    30da:	8d 85       	ldd	r24, Y+13	; 0x0d
    30dc:	9e 85       	ldd	r25, Y+14	; 0x0e
    30de:	20 e0       	ldi	r18, 0x00	; 0
    30e0:	30 e0       	ldi	r19, 0x00	; 0
    30e2:	4a ef       	ldi	r20, 0xFA	; 250
    30e4:	54 e4       	ldi	r21, 0x44	; 68
    30e6:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    30ea:	dc 01       	movw	r26, r24
    30ec:	cb 01       	movw	r24, r22
    30ee:	8f 83       	std	Y+7, r24	; 0x07
    30f0:	98 87       	std	Y+8, r25	; 0x08
    30f2:	a9 87       	std	Y+9, r26	; 0x09
    30f4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    30f6:	6f 81       	ldd	r22, Y+7	; 0x07
    30f8:	78 85       	ldd	r23, Y+8	; 0x08
    30fa:	89 85       	ldd	r24, Y+9	; 0x09
    30fc:	9a 85       	ldd	r25, Y+10	; 0x0a
    30fe:	20 e0       	ldi	r18, 0x00	; 0
    3100:	30 e0       	ldi	r19, 0x00	; 0
    3102:	40 e8       	ldi	r20, 0x80	; 128
    3104:	5f e3       	ldi	r21, 0x3F	; 63
    3106:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    310a:	88 23       	and	r24, r24
    310c:	2c f4       	brge	.+10     	; 0x3118 <CLCD_init+0x182>
		__ticks = 1;
    310e:	81 e0       	ldi	r24, 0x01	; 1
    3110:	90 e0       	ldi	r25, 0x00	; 0
    3112:	9e 83       	std	Y+6, r25	; 0x06
    3114:	8d 83       	std	Y+5, r24	; 0x05
    3116:	3f c0       	rjmp	.+126    	; 0x3196 <CLCD_init+0x200>
	else if (__tmp > 65535)
    3118:	6f 81       	ldd	r22, Y+7	; 0x07
    311a:	78 85       	ldd	r23, Y+8	; 0x08
    311c:	89 85       	ldd	r24, Y+9	; 0x09
    311e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3120:	20 e0       	ldi	r18, 0x00	; 0
    3122:	3f ef       	ldi	r19, 0xFF	; 255
    3124:	4f e7       	ldi	r20, 0x7F	; 127
    3126:	57 e4       	ldi	r21, 0x47	; 71
    3128:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    312c:	18 16       	cp	r1, r24
    312e:	4c f5       	brge	.+82     	; 0x3182 <CLCD_init+0x1ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3130:	6b 85       	ldd	r22, Y+11	; 0x0b
    3132:	7c 85       	ldd	r23, Y+12	; 0x0c
    3134:	8d 85       	ldd	r24, Y+13	; 0x0d
    3136:	9e 85       	ldd	r25, Y+14	; 0x0e
    3138:	20 e0       	ldi	r18, 0x00	; 0
    313a:	30 e0       	ldi	r19, 0x00	; 0
    313c:	40 e2       	ldi	r20, 0x20	; 32
    313e:	51 e4       	ldi	r21, 0x41	; 65
    3140:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    3144:	dc 01       	movw	r26, r24
    3146:	cb 01       	movw	r24, r22
    3148:	bc 01       	movw	r22, r24
    314a:	cd 01       	movw	r24, r26
    314c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3150:	dc 01       	movw	r26, r24
    3152:	cb 01       	movw	r24, r22
    3154:	9e 83       	std	Y+6, r25	; 0x06
    3156:	8d 83       	std	Y+5, r24	; 0x05
    3158:	0f c0       	rjmp	.+30     	; 0x3178 <CLCD_init+0x1e2>
    315a:	88 ec       	ldi	r24, 0xC8	; 200
    315c:	90 e0       	ldi	r25, 0x00	; 0
    315e:	9c 83       	std	Y+4, r25	; 0x04
    3160:	8b 83       	std	Y+3, r24	; 0x03
    3162:	8b 81       	ldd	r24, Y+3	; 0x03
    3164:	9c 81       	ldd	r25, Y+4	; 0x04
    3166:	01 97       	sbiw	r24, 0x01	; 1
    3168:	f1 f7       	brne	.-4      	; 0x3166 <CLCD_init+0x1d0>
    316a:	9c 83       	std	Y+4, r25	; 0x04
    316c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    316e:	8d 81       	ldd	r24, Y+5	; 0x05
    3170:	9e 81       	ldd	r25, Y+6	; 0x06
    3172:	01 97       	sbiw	r24, 0x01	; 1
    3174:	9e 83       	std	Y+6, r25	; 0x06
    3176:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3178:	8d 81       	ldd	r24, Y+5	; 0x05
    317a:	9e 81       	ldd	r25, Y+6	; 0x06
    317c:	00 97       	sbiw	r24, 0x00	; 0
    317e:	69 f7       	brne	.-38     	; 0x315a <CLCD_init+0x1c4>
    3180:	14 c0       	rjmp	.+40     	; 0x31aa <CLCD_init+0x214>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3182:	6f 81       	ldd	r22, Y+7	; 0x07
    3184:	78 85       	ldd	r23, Y+8	; 0x08
    3186:	89 85       	ldd	r24, Y+9	; 0x09
    3188:	9a 85       	ldd	r25, Y+10	; 0x0a
    318a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    318e:	dc 01       	movw	r26, r24
    3190:	cb 01       	movw	r24, r22
    3192:	9e 83       	std	Y+6, r25	; 0x06
    3194:	8d 83       	std	Y+5, r24	; 0x05
    3196:	8d 81       	ldd	r24, Y+5	; 0x05
    3198:	9e 81       	ldd	r25, Y+6	; 0x06
    319a:	9a 83       	std	Y+2, r25	; 0x02
    319c:	89 83       	std	Y+1, r24	; 0x01
    319e:	89 81       	ldd	r24, Y+1	; 0x01
    31a0:	9a 81       	ldd	r25, Y+2	; 0x02
    31a2:	01 97       	sbiw	r24, 0x01	; 1
    31a4:	f1 f7       	brne	.-4      	; 0x31a2 <CLCD_init+0x20c>
    31a6:	9a 83       	std	Y+2, r25	; 0x02
    31a8:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	CLCD_WriteInes(0x06); //0b00000110 //ENTRY_MODE_SET
    31aa:	86 e0       	ldi	r24, 0x06	; 6
    31ac:	0e 94 e1 18 	call	0x31c2	; 0x31c2 <CLCD_WriteInes>
}
    31b0:	6c 96       	adiw	r28, 0x1c	; 28
    31b2:	0f b6       	in	r0, 0x3f	; 63
    31b4:	f8 94       	cli
    31b6:	de bf       	out	0x3e, r29	; 62
    31b8:	0f be       	out	0x3f, r0	; 63
    31ba:	cd bf       	out	0x3d, r28	; 61
    31bc:	cf 91       	pop	r28
    31be:	df 91       	pop	r29
    31c0:	08 95       	ret

000031c2 <CLCD_WriteInes>:

void CLCD_WriteInes(u8 A_u8Command){
    31c2:	df 93       	push	r29
    31c4:	cf 93       	push	r28
    31c6:	cd b7       	in	r28, 0x3d	; 61
    31c8:	de b7       	in	r29, 0x3e	; 62
    31ca:	6d 97       	sbiw	r28, 0x1d	; 29
    31cc:	0f b6       	in	r0, 0x3f	; 63
    31ce:	f8 94       	cli
    31d0:	de bf       	out	0x3e, r29	; 62
    31d2:	0f be       	out	0x3f, r0	; 63
    31d4:	cd bf       	out	0x3d, r28	; 61
    31d6:	8d 8f       	std	Y+29, r24	; 0x1d
	/* RS = 0 (Command mode) */
	DIO_voidSetPinValue(CLCD_Control_Port, CLCD_RS_PIN, DIO_u8LOW); //send commend
    31d8:	82 e0       	ldi	r24, 0x02	; 2
    31da:	60 e0       	ldi	r22, 0x00	; 0
    31dc:	40 e0       	ldi	r20, 0x00	; 0
    31de:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
	/* RW = 0 (Write mode) */
	DIO_voidSetPinValue(CLCD_Control_Port, CLCD_RW_PIN, DIO_u8LOW);
    31e2:	82 e0       	ldi	r24, 0x02	; 2
    31e4:	61 e0       	ldi	r22, 0x01	; 1
    31e6:	40 e0       	ldi	r20, 0x00	; 0
    31e8:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
	/* send command through the port */
	DIO_voidSetPortValue(CLCD_Data_Port, A_u8Command); //function set
    31ec:	81 e0       	ldi	r24, 0x01	; 1
    31ee:	6d 8d       	ldd	r22, Y+29	; 0x1d
    31f0:	0e 94 c6 14 	call	0x298c	; 0x298c <DIO_voidSetPortValue>
	/* Enable sequence */
	DIO_voidSetPinValue(CLCD_Control_Port, CLCD_EN_PIN, DIO_u8HIGH);
    31f4:	82 e0       	ldi	r24, 0x02	; 2
    31f6:	62 e0       	ldi	r22, 0x02	; 2
    31f8:	41 e0       	ldi	r20, 0x01	; 1
    31fa:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
    31fe:	80 e0       	ldi	r24, 0x00	; 0
    3200:	90 e0       	ldi	r25, 0x00	; 0
    3202:	a0 e8       	ldi	r26, 0x80	; 128
    3204:	bf e3       	ldi	r27, 0x3F	; 63
    3206:	89 8f       	std	Y+25, r24	; 0x19
    3208:	9a 8f       	std	Y+26, r25	; 0x1a
    320a:	ab 8f       	std	Y+27, r26	; 0x1b
    320c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    320e:	69 8d       	ldd	r22, Y+25	; 0x19
    3210:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3212:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3214:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3216:	20 e0       	ldi	r18, 0x00	; 0
    3218:	30 e0       	ldi	r19, 0x00	; 0
    321a:	4a ef       	ldi	r20, 0xFA	; 250
    321c:	54 e4       	ldi	r21, 0x44	; 68
    321e:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    3222:	dc 01       	movw	r26, r24
    3224:	cb 01       	movw	r24, r22
    3226:	8d 8b       	std	Y+21, r24	; 0x15
    3228:	9e 8b       	std	Y+22, r25	; 0x16
    322a:	af 8b       	std	Y+23, r26	; 0x17
    322c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    322e:	6d 89       	ldd	r22, Y+21	; 0x15
    3230:	7e 89       	ldd	r23, Y+22	; 0x16
    3232:	8f 89       	ldd	r24, Y+23	; 0x17
    3234:	98 8d       	ldd	r25, Y+24	; 0x18
    3236:	20 e0       	ldi	r18, 0x00	; 0
    3238:	30 e0       	ldi	r19, 0x00	; 0
    323a:	40 e8       	ldi	r20, 0x80	; 128
    323c:	5f e3       	ldi	r21, 0x3F	; 63
    323e:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    3242:	88 23       	and	r24, r24
    3244:	2c f4       	brge	.+10     	; 0x3250 <CLCD_WriteInes+0x8e>
		__ticks = 1;
    3246:	81 e0       	ldi	r24, 0x01	; 1
    3248:	90 e0       	ldi	r25, 0x00	; 0
    324a:	9c 8b       	std	Y+20, r25	; 0x14
    324c:	8b 8b       	std	Y+19, r24	; 0x13
    324e:	3f c0       	rjmp	.+126    	; 0x32ce <CLCD_WriteInes+0x10c>
	else if (__tmp > 65535)
    3250:	6d 89       	ldd	r22, Y+21	; 0x15
    3252:	7e 89       	ldd	r23, Y+22	; 0x16
    3254:	8f 89       	ldd	r24, Y+23	; 0x17
    3256:	98 8d       	ldd	r25, Y+24	; 0x18
    3258:	20 e0       	ldi	r18, 0x00	; 0
    325a:	3f ef       	ldi	r19, 0xFF	; 255
    325c:	4f e7       	ldi	r20, 0x7F	; 127
    325e:	57 e4       	ldi	r21, 0x47	; 71
    3260:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    3264:	18 16       	cp	r1, r24
    3266:	4c f5       	brge	.+82     	; 0x32ba <CLCD_WriteInes+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3268:	69 8d       	ldd	r22, Y+25	; 0x19
    326a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    326c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    326e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3270:	20 e0       	ldi	r18, 0x00	; 0
    3272:	30 e0       	ldi	r19, 0x00	; 0
    3274:	40 e2       	ldi	r20, 0x20	; 32
    3276:	51 e4       	ldi	r21, 0x41	; 65
    3278:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    327c:	dc 01       	movw	r26, r24
    327e:	cb 01       	movw	r24, r22
    3280:	bc 01       	movw	r22, r24
    3282:	cd 01       	movw	r24, r26
    3284:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3288:	dc 01       	movw	r26, r24
    328a:	cb 01       	movw	r24, r22
    328c:	9c 8b       	std	Y+20, r25	; 0x14
    328e:	8b 8b       	std	Y+19, r24	; 0x13
    3290:	0f c0       	rjmp	.+30     	; 0x32b0 <CLCD_WriteInes+0xee>
    3292:	88 ec       	ldi	r24, 0xC8	; 200
    3294:	90 e0       	ldi	r25, 0x00	; 0
    3296:	9a 8b       	std	Y+18, r25	; 0x12
    3298:	89 8b       	std	Y+17, r24	; 0x11
    329a:	89 89       	ldd	r24, Y+17	; 0x11
    329c:	9a 89       	ldd	r25, Y+18	; 0x12
    329e:	01 97       	sbiw	r24, 0x01	; 1
    32a0:	f1 f7       	brne	.-4      	; 0x329e <CLCD_WriteInes+0xdc>
    32a2:	9a 8b       	std	Y+18, r25	; 0x12
    32a4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    32a6:	8b 89       	ldd	r24, Y+19	; 0x13
    32a8:	9c 89       	ldd	r25, Y+20	; 0x14
    32aa:	01 97       	sbiw	r24, 0x01	; 1
    32ac:	9c 8b       	std	Y+20, r25	; 0x14
    32ae:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    32b0:	8b 89       	ldd	r24, Y+19	; 0x13
    32b2:	9c 89       	ldd	r25, Y+20	; 0x14
    32b4:	00 97       	sbiw	r24, 0x00	; 0
    32b6:	69 f7       	brne	.-38     	; 0x3292 <CLCD_WriteInes+0xd0>
    32b8:	14 c0       	rjmp	.+40     	; 0x32e2 <CLCD_WriteInes+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32ba:	6d 89       	ldd	r22, Y+21	; 0x15
    32bc:	7e 89       	ldd	r23, Y+22	; 0x16
    32be:	8f 89       	ldd	r24, Y+23	; 0x17
    32c0:	98 8d       	ldd	r25, Y+24	; 0x18
    32c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    32c6:	dc 01       	movw	r26, r24
    32c8:	cb 01       	movw	r24, r22
    32ca:	9c 8b       	std	Y+20, r25	; 0x14
    32cc:	8b 8b       	std	Y+19, r24	; 0x13
    32ce:	8b 89       	ldd	r24, Y+19	; 0x13
    32d0:	9c 89       	ldd	r25, Y+20	; 0x14
    32d2:	98 8b       	std	Y+16, r25	; 0x10
    32d4:	8f 87       	std	Y+15, r24	; 0x0f
    32d6:	8f 85       	ldd	r24, Y+15	; 0x0f
    32d8:	98 89       	ldd	r25, Y+16	; 0x10
    32da:	01 97       	sbiw	r24, 0x01	; 1
    32dc:	f1 f7       	brne	.-4      	; 0x32da <CLCD_WriteInes+0x118>
    32de:	98 8b       	std	Y+16, r25	; 0x10
    32e0:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_voidSetPinValue(CLCD_Control_Port,CLCD_EN_PIN, DIO_u8LOW);
    32e2:	82 e0       	ldi	r24, 0x02	; 2
    32e4:	62 e0       	ldi	r22, 0x02	; 2
    32e6:	40 e0       	ldi	r20, 0x00	; 0
    32e8:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
    32ec:	80 e0       	ldi	r24, 0x00	; 0
    32ee:	90 e0       	ldi	r25, 0x00	; 0
    32f0:	a0 e8       	ldi	r26, 0x80	; 128
    32f2:	bf e3       	ldi	r27, 0x3F	; 63
    32f4:	8b 87       	std	Y+11, r24	; 0x0b
    32f6:	9c 87       	std	Y+12, r25	; 0x0c
    32f8:	ad 87       	std	Y+13, r26	; 0x0d
    32fa:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    32fc:	6b 85       	ldd	r22, Y+11	; 0x0b
    32fe:	7c 85       	ldd	r23, Y+12	; 0x0c
    3300:	8d 85       	ldd	r24, Y+13	; 0x0d
    3302:	9e 85       	ldd	r25, Y+14	; 0x0e
    3304:	20 e0       	ldi	r18, 0x00	; 0
    3306:	30 e0       	ldi	r19, 0x00	; 0
    3308:	4a ef       	ldi	r20, 0xFA	; 250
    330a:	54 e4       	ldi	r21, 0x44	; 68
    330c:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    3310:	dc 01       	movw	r26, r24
    3312:	cb 01       	movw	r24, r22
    3314:	8f 83       	std	Y+7, r24	; 0x07
    3316:	98 87       	std	Y+8, r25	; 0x08
    3318:	a9 87       	std	Y+9, r26	; 0x09
    331a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    331c:	6f 81       	ldd	r22, Y+7	; 0x07
    331e:	78 85       	ldd	r23, Y+8	; 0x08
    3320:	89 85       	ldd	r24, Y+9	; 0x09
    3322:	9a 85       	ldd	r25, Y+10	; 0x0a
    3324:	20 e0       	ldi	r18, 0x00	; 0
    3326:	30 e0       	ldi	r19, 0x00	; 0
    3328:	40 e8       	ldi	r20, 0x80	; 128
    332a:	5f e3       	ldi	r21, 0x3F	; 63
    332c:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    3330:	88 23       	and	r24, r24
    3332:	2c f4       	brge	.+10     	; 0x333e <CLCD_WriteInes+0x17c>
		__ticks = 1;
    3334:	81 e0       	ldi	r24, 0x01	; 1
    3336:	90 e0       	ldi	r25, 0x00	; 0
    3338:	9e 83       	std	Y+6, r25	; 0x06
    333a:	8d 83       	std	Y+5, r24	; 0x05
    333c:	3f c0       	rjmp	.+126    	; 0x33bc <CLCD_WriteInes+0x1fa>
	else if (__tmp > 65535)
    333e:	6f 81       	ldd	r22, Y+7	; 0x07
    3340:	78 85       	ldd	r23, Y+8	; 0x08
    3342:	89 85       	ldd	r24, Y+9	; 0x09
    3344:	9a 85       	ldd	r25, Y+10	; 0x0a
    3346:	20 e0       	ldi	r18, 0x00	; 0
    3348:	3f ef       	ldi	r19, 0xFF	; 255
    334a:	4f e7       	ldi	r20, 0x7F	; 127
    334c:	57 e4       	ldi	r21, 0x47	; 71
    334e:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    3352:	18 16       	cp	r1, r24
    3354:	4c f5       	brge	.+82     	; 0x33a8 <CLCD_WriteInes+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3356:	6b 85       	ldd	r22, Y+11	; 0x0b
    3358:	7c 85       	ldd	r23, Y+12	; 0x0c
    335a:	8d 85       	ldd	r24, Y+13	; 0x0d
    335c:	9e 85       	ldd	r25, Y+14	; 0x0e
    335e:	20 e0       	ldi	r18, 0x00	; 0
    3360:	30 e0       	ldi	r19, 0x00	; 0
    3362:	40 e2       	ldi	r20, 0x20	; 32
    3364:	51 e4       	ldi	r21, 0x41	; 65
    3366:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    336a:	dc 01       	movw	r26, r24
    336c:	cb 01       	movw	r24, r22
    336e:	bc 01       	movw	r22, r24
    3370:	cd 01       	movw	r24, r26
    3372:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3376:	dc 01       	movw	r26, r24
    3378:	cb 01       	movw	r24, r22
    337a:	9e 83       	std	Y+6, r25	; 0x06
    337c:	8d 83       	std	Y+5, r24	; 0x05
    337e:	0f c0       	rjmp	.+30     	; 0x339e <CLCD_WriteInes+0x1dc>
    3380:	88 ec       	ldi	r24, 0xC8	; 200
    3382:	90 e0       	ldi	r25, 0x00	; 0
    3384:	9c 83       	std	Y+4, r25	; 0x04
    3386:	8b 83       	std	Y+3, r24	; 0x03
    3388:	8b 81       	ldd	r24, Y+3	; 0x03
    338a:	9c 81       	ldd	r25, Y+4	; 0x04
    338c:	01 97       	sbiw	r24, 0x01	; 1
    338e:	f1 f7       	brne	.-4      	; 0x338c <CLCD_WriteInes+0x1ca>
    3390:	9c 83       	std	Y+4, r25	; 0x04
    3392:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3394:	8d 81       	ldd	r24, Y+5	; 0x05
    3396:	9e 81       	ldd	r25, Y+6	; 0x06
    3398:	01 97       	sbiw	r24, 0x01	; 1
    339a:	9e 83       	std	Y+6, r25	; 0x06
    339c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    339e:	8d 81       	ldd	r24, Y+5	; 0x05
    33a0:	9e 81       	ldd	r25, Y+6	; 0x06
    33a2:	00 97       	sbiw	r24, 0x00	; 0
    33a4:	69 f7       	brne	.-38     	; 0x3380 <CLCD_WriteInes+0x1be>
    33a6:	14 c0       	rjmp	.+40     	; 0x33d0 <CLCD_WriteInes+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33a8:	6f 81       	ldd	r22, Y+7	; 0x07
    33aa:	78 85       	ldd	r23, Y+8	; 0x08
    33ac:	89 85       	ldd	r24, Y+9	; 0x09
    33ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    33b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33b4:	dc 01       	movw	r26, r24
    33b6:	cb 01       	movw	r24, r22
    33b8:	9e 83       	std	Y+6, r25	; 0x06
    33ba:	8d 83       	std	Y+5, r24	; 0x05
    33bc:	8d 81       	ldd	r24, Y+5	; 0x05
    33be:	9e 81       	ldd	r25, Y+6	; 0x06
    33c0:	9a 83       	std	Y+2, r25	; 0x02
    33c2:	89 83       	std	Y+1, r24	; 0x01
    33c4:	89 81       	ldd	r24, Y+1	; 0x01
    33c6:	9a 81       	ldd	r25, Y+2	; 0x02
    33c8:	01 97       	sbiw	r24, 0x01	; 1
    33ca:	f1 f7       	brne	.-4      	; 0x33c8 <CLCD_WriteInes+0x206>
    33cc:	9a 83       	std	Y+2, r25	; 0x02
    33ce:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    33d0:	6d 96       	adiw	r28, 0x1d	; 29
    33d2:	0f b6       	in	r0, 0x3f	; 63
    33d4:	f8 94       	cli
    33d6:	de bf       	out	0x3e, r29	; 62
    33d8:	0f be       	out	0x3f, r0	; 63
    33da:	cd bf       	out	0x3d, r28	; 61
    33dc:	cf 91       	pop	r28
    33de:	df 91       	pop	r29
    33e0:	08 95       	ret

000033e2 <CLCD_WriteData>:

void CLCD_WriteData(u8 Data){
    33e2:	df 93       	push	r29
    33e4:	cf 93       	push	r28
    33e6:	cd b7       	in	r28, 0x3d	; 61
    33e8:	de b7       	in	r29, 0x3e	; 62
    33ea:	6d 97       	sbiw	r28, 0x1d	; 29
    33ec:	0f b6       	in	r0, 0x3f	; 63
    33ee:	f8 94       	cli
    33f0:	de bf       	out	0x3e, r29	; 62
    33f2:	0f be       	out	0x3f, r0	; 63
    33f4:	cd bf       	out	0x3d, r28	; 61
    33f6:	8d 8f       	std	Y+29, r24	; 0x1d
	/* RS = 1 (Command mode) */
	DIO_voidSetPinValue(CLCD_Control_Port, CLCD_RS_PIN, DIO_u8HIGH); //send commend
    33f8:	82 e0       	ldi	r24, 0x02	; 2
    33fa:	60 e0       	ldi	r22, 0x00	; 0
    33fc:	41 e0       	ldi	r20, 0x01	; 1
    33fe:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
	/* RW = 0 (Write mode) */
	DIO_voidSetPinValue(CLCD_Control_Port, CLCD_RW_PIN, DIO_u8LOW);
    3402:	82 e0       	ldi	r24, 0x02	; 2
    3404:	61 e0       	ldi	r22, 0x01	; 1
    3406:	40 e0       	ldi	r20, 0x00	; 0
    3408:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
	/* send command through the port */
	DIO_voidSetPortValue(CLCD_Data_Port, Data); //function set
    340c:	81 e0       	ldi	r24, 0x01	; 1
    340e:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3410:	0e 94 c6 14 	call	0x298c	; 0x298c <DIO_voidSetPortValue>
	/* Enable sequence */
	DIO_voidSetPinValue(CLCD_Control_Port, CLCD_EN_PIN, DIO_u8HIGH);
    3414:	82 e0       	ldi	r24, 0x02	; 2
    3416:	62 e0       	ldi	r22, 0x02	; 2
    3418:	41 e0       	ldi	r20, 0x01	; 1
    341a:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
    341e:	80 e0       	ldi	r24, 0x00	; 0
    3420:	90 e0       	ldi	r25, 0x00	; 0
    3422:	a0 e8       	ldi	r26, 0x80	; 128
    3424:	bf e3       	ldi	r27, 0x3F	; 63
    3426:	89 8f       	std	Y+25, r24	; 0x19
    3428:	9a 8f       	std	Y+26, r25	; 0x1a
    342a:	ab 8f       	std	Y+27, r26	; 0x1b
    342c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    342e:	69 8d       	ldd	r22, Y+25	; 0x19
    3430:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3432:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3434:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3436:	20 e0       	ldi	r18, 0x00	; 0
    3438:	30 e0       	ldi	r19, 0x00	; 0
    343a:	4a ef       	ldi	r20, 0xFA	; 250
    343c:	54 e4       	ldi	r21, 0x44	; 68
    343e:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    3442:	dc 01       	movw	r26, r24
    3444:	cb 01       	movw	r24, r22
    3446:	8d 8b       	std	Y+21, r24	; 0x15
    3448:	9e 8b       	std	Y+22, r25	; 0x16
    344a:	af 8b       	std	Y+23, r26	; 0x17
    344c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    344e:	6d 89       	ldd	r22, Y+21	; 0x15
    3450:	7e 89       	ldd	r23, Y+22	; 0x16
    3452:	8f 89       	ldd	r24, Y+23	; 0x17
    3454:	98 8d       	ldd	r25, Y+24	; 0x18
    3456:	20 e0       	ldi	r18, 0x00	; 0
    3458:	30 e0       	ldi	r19, 0x00	; 0
    345a:	40 e8       	ldi	r20, 0x80	; 128
    345c:	5f e3       	ldi	r21, 0x3F	; 63
    345e:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    3462:	88 23       	and	r24, r24
    3464:	2c f4       	brge	.+10     	; 0x3470 <CLCD_WriteData+0x8e>
		__ticks = 1;
    3466:	81 e0       	ldi	r24, 0x01	; 1
    3468:	90 e0       	ldi	r25, 0x00	; 0
    346a:	9c 8b       	std	Y+20, r25	; 0x14
    346c:	8b 8b       	std	Y+19, r24	; 0x13
    346e:	3f c0       	rjmp	.+126    	; 0x34ee <CLCD_WriteData+0x10c>
	else if (__tmp > 65535)
    3470:	6d 89       	ldd	r22, Y+21	; 0x15
    3472:	7e 89       	ldd	r23, Y+22	; 0x16
    3474:	8f 89       	ldd	r24, Y+23	; 0x17
    3476:	98 8d       	ldd	r25, Y+24	; 0x18
    3478:	20 e0       	ldi	r18, 0x00	; 0
    347a:	3f ef       	ldi	r19, 0xFF	; 255
    347c:	4f e7       	ldi	r20, 0x7F	; 127
    347e:	57 e4       	ldi	r21, 0x47	; 71
    3480:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    3484:	18 16       	cp	r1, r24
    3486:	4c f5       	brge	.+82     	; 0x34da <CLCD_WriteData+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3488:	69 8d       	ldd	r22, Y+25	; 0x19
    348a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    348c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    348e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3490:	20 e0       	ldi	r18, 0x00	; 0
    3492:	30 e0       	ldi	r19, 0x00	; 0
    3494:	40 e2       	ldi	r20, 0x20	; 32
    3496:	51 e4       	ldi	r21, 0x41	; 65
    3498:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    349c:	dc 01       	movw	r26, r24
    349e:	cb 01       	movw	r24, r22
    34a0:	bc 01       	movw	r22, r24
    34a2:	cd 01       	movw	r24, r26
    34a4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34a8:	dc 01       	movw	r26, r24
    34aa:	cb 01       	movw	r24, r22
    34ac:	9c 8b       	std	Y+20, r25	; 0x14
    34ae:	8b 8b       	std	Y+19, r24	; 0x13
    34b0:	0f c0       	rjmp	.+30     	; 0x34d0 <CLCD_WriteData+0xee>
    34b2:	88 ec       	ldi	r24, 0xC8	; 200
    34b4:	90 e0       	ldi	r25, 0x00	; 0
    34b6:	9a 8b       	std	Y+18, r25	; 0x12
    34b8:	89 8b       	std	Y+17, r24	; 0x11
    34ba:	89 89       	ldd	r24, Y+17	; 0x11
    34bc:	9a 89       	ldd	r25, Y+18	; 0x12
    34be:	01 97       	sbiw	r24, 0x01	; 1
    34c0:	f1 f7       	brne	.-4      	; 0x34be <CLCD_WriteData+0xdc>
    34c2:	9a 8b       	std	Y+18, r25	; 0x12
    34c4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34c6:	8b 89       	ldd	r24, Y+19	; 0x13
    34c8:	9c 89       	ldd	r25, Y+20	; 0x14
    34ca:	01 97       	sbiw	r24, 0x01	; 1
    34cc:	9c 8b       	std	Y+20, r25	; 0x14
    34ce:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34d0:	8b 89       	ldd	r24, Y+19	; 0x13
    34d2:	9c 89       	ldd	r25, Y+20	; 0x14
    34d4:	00 97       	sbiw	r24, 0x00	; 0
    34d6:	69 f7       	brne	.-38     	; 0x34b2 <CLCD_WriteData+0xd0>
    34d8:	14 c0       	rjmp	.+40     	; 0x3502 <CLCD_WriteData+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    34da:	6d 89       	ldd	r22, Y+21	; 0x15
    34dc:	7e 89       	ldd	r23, Y+22	; 0x16
    34de:	8f 89       	ldd	r24, Y+23	; 0x17
    34e0:	98 8d       	ldd	r25, Y+24	; 0x18
    34e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34e6:	dc 01       	movw	r26, r24
    34e8:	cb 01       	movw	r24, r22
    34ea:	9c 8b       	std	Y+20, r25	; 0x14
    34ec:	8b 8b       	std	Y+19, r24	; 0x13
    34ee:	8b 89       	ldd	r24, Y+19	; 0x13
    34f0:	9c 89       	ldd	r25, Y+20	; 0x14
    34f2:	98 8b       	std	Y+16, r25	; 0x10
    34f4:	8f 87       	std	Y+15, r24	; 0x0f
    34f6:	8f 85       	ldd	r24, Y+15	; 0x0f
    34f8:	98 89       	ldd	r25, Y+16	; 0x10
    34fa:	01 97       	sbiw	r24, 0x01	; 1
    34fc:	f1 f7       	brne	.-4      	; 0x34fa <CLCD_WriteData+0x118>
    34fe:	98 8b       	std	Y+16, r25	; 0x10
    3500:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_voidSetPinValue(CLCD_Control_Port,CLCD_EN_PIN, DIO_u8LOW);
    3502:	82 e0       	ldi	r24, 0x02	; 2
    3504:	62 e0       	ldi	r22, 0x02	; 2
    3506:	40 e0       	ldi	r20, 0x00	; 0
    3508:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
    350c:	80 e0       	ldi	r24, 0x00	; 0
    350e:	90 e0       	ldi	r25, 0x00	; 0
    3510:	a0 e8       	ldi	r26, 0x80	; 128
    3512:	bf e3       	ldi	r27, 0x3F	; 63
    3514:	8b 87       	std	Y+11, r24	; 0x0b
    3516:	9c 87       	std	Y+12, r25	; 0x0c
    3518:	ad 87       	std	Y+13, r26	; 0x0d
    351a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    351c:	6b 85       	ldd	r22, Y+11	; 0x0b
    351e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3520:	8d 85       	ldd	r24, Y+13	; 0x0d
    3522:	9e 85       	ldd	r25, Y+14	; 0x0e
    3524:	20 e0       	ldi	r18, 0x00	; 0
    3526:	30 e0       	ldi	r19, 0x00	; 0
    3528:	4a ef       	ldi	r20, 0xFA	; 250
    352a:	54 e4       	ldi	r21, 0x44	; 68
    352c:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    3530:	dc 01       	movw	r26, r24
    3532:	cb 01       	movw	r24, r22
    3534:	8f 83       	std	Y+7, r24	; 0x07
    3536:	98 87       	std	Y+8, r25	; 0x08
    3538:	a9 87       	std	Y+9, r26	; 0x09
    353a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    353c:	6f 81       	ldd	r22, Y+7	; 0x07
    353e:	78 85       	ldd	r23, Y+8	; 0x08
    3540:	89 85       	ldd	r24, Y+9	; 0x09
    3542:	9a 85       	ldd	r25, Y+10	; 0x0a
    3544:	20 e0       	ldi	r18, 0x00	; 0
    3546:	30 e0       	ldi	r19, 0x00	; 0
    3548:	40 e8       	ldi	r20, 0x80	; 128
    354a:	5f e3       	ldi	r21, 0x3F	; 63
    354c:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    3550:	88 23       	and	r24, r24
    3552:	2c f4       	brge	.+10     	; 0x355e <CLCD_WriteData+0x17c>
		__ticks = 1;
    3554:	81 e0       	ldi	r24, 0x01	; 1
    3556:	90 e0       	ldi	r25, 0x00	; 0
    3558:	9e 83       	std	Y+6, r25	; 0x06
    355a:	8d 83       	std	Y+5, r24	; 0x05
    355c:	3f c0       	rjmp	.+126    	; 0x35dc <CLCD_WriteData+0x1fa>
	else if (__tmp > 65535)
    355e:	6f 81       	ldd	r22, Y+7	; 0x07
    3560:	78 85       	ldd	r23, Y+8	; 0x08
    3562:	89 85       	ldd	r24, Y+9	; 0x09
    3564:	9a 85       	ldd	r25, Y+10	; 0x0a
    3566:	20 e0       	ldi	r18, 0x00	; 0
    3568:	3f ef       	ldi	r19, 0xFF	; 255
    356a:	4f e7       	ldi	r20, 0x7F	; 127
    356c:	57 e4       	ldi	r21, 0x47	; 71
    356e:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    3572:	18 16       	cp	r1, r24
    3574:	4c f5       	brge	.+82     	; 0x35c8 <CLCD_WriteData+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3576:	6b 85       	ldd	r22, Y+11	; 0x0b
    3578:	7c 85       	ldd	r23, Y+12	; 0x0c
    357a:	8d 85       	ldd	r24, Y+13	; 0x0d
    357c:	9e 85       	ldd	r25, Y+14	; 0x0e
    357e:	20 e0       	ldi	r18, 0x00	; 0
    3580:	30 e0       	ldi	r19, 0x00	; 0
    3582:	40 e2       	ldi	r20, 0x20	; 32
    3584:	51 e4       	ldi	r21, 0x41	; 65
    3586:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    358a:	dc 01       	movw	r26, r24
    358c:	cb 01       	movw	r24, r22
    358e:	bc 01       	movw	r22, r24
    3590:	cd 01       	movw	r24, r26
    3592:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3596:	dc 01       	movw	r26, r24
    3598:	cb 01       	movw	r24, r22
    359a:	9e 83       	std	Y+6, r25	; 0x06
    359c:	8d 83       	std	Y+5, r24	; 0x05
    359e:	0f c0       	rjmp	.+30     	; 0x35be <CLCD_WriteData+0x1dc>
    35a0:	88 ec       	ldi	r24, 0xC8	; 200
    35a2:	90 e0       	ldi	r25, 0x00	; 0
    35a4:	9c 83       	std	Y+4, r25	; 0x04
    35a6:	8b 83       	std	Y+3, r24	; 0x03
    35a8:	8b 81       	ldd	r24, Y+3	; 0x03
    35aa:	9c 81       	ldd	r25, Y+4	; 0x04
    35ac:	01 97       	sbiw	r24, 0x01	; 1
    35ae:	f1 f7       	brne	.-4      	; 0x35ac <CLCD_WriteData+0x1ca>
    35b0:	9c 83       	std	Y+4, r25	; 0x04
    35b2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    35b4:	8d 81       	ldd	r24, Y+5	; 0x05
    35b6:	9e 81       	ldd	r25, Y+6	; 0x06
    35b8:	01 97       	sbiw	r24, 0x01	; 1
    35ba:	9e 83       	std	Y+6, r25	; 0x06
    35bc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    35be:	8d 81       	ldd	r24, Y+5	; 0x05
    35c0:	9e 81       	ldd	r25, Y+6	; 0x06
    35c2:	00 97       	sbiw	r24, 0x00	; 0
    35c4:	69 f7       	brne	.-38     	; 0x35a0 <CLCD_WriteData+0x1be>
    35c6:	14 c0       	rjmp	.+40     	; 0x35f0 <CLCD_WriteData+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    35c8:	6f 81       	ldd	r22, Y+7	; 0x07
    35ca:	78 85       	ldd	r23, Y+8	; 0x08
    35cc:	89 85       	ldd	r24, Y+9	; 0x09
    35ce:	9a 85       	ldd	r25, Y+10	; 0x0a
    35d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    35d4:	dc 01       	movw	r26, r24
    35d6:	cb 01       	movw	r24, r22
    35d8:	9e 83       	std	Y+6, r25	; 0x06
    35da:	8d 83       	std	Y+5, r24	; 0x05
    35dc:	8d 81       	ldd	r24, Y+5	; 0x05
    35de:	9e 81       	ldd	r25, Y+6	; 0x06
    35e0:	9a 83       	std	Y+2, r25	; 0x02
    35e2:	89 83       	std	Y+1, r24	; 0x01
    35e4:	89 81       	ldd	r24, Y+1	; 0x01
    35e6:	9a 81       	ldd	r25, Y+2	; 0x02
    35e8:	01 97       	sbiw	r24, 0x01	; 1
    35ea:	f1 f7       	brne	.-4      	; 0x35e8 <CLCD_WriteData+0x206>
    35ec:	9a 83       	std	Y+2, r25	; 0x02
    35ee:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    35f0:	6d 96       	adiw	r28, 0x1d	; 29
    35f2:	0f b6       	in	r0, 0x3f	; 63
    35f4:	f8 94       	cli
    35f6:	de bf       	out	0x3e, r29	; 62
    35f8:	0f be       	out	0x3f, r0	; 63
    35fa:	cd bf       	out	0x3d, r28	; 61
    35fc:	cf 91       	pop	r28
    35fe:	df 91       	pop	r29
    3600:	08 95       	ret

00003602 <CLCD_WriteChar>:

void CLCD_WriteChar(u8 Char){
    3602:	df 93       	push	r29
    3604:	cf 93       	push	r28
    3606:	0f 92       	push	r0
    3608:	cd b7       	in	r28, 0x3d	; 61
    360a:	de b7       	in	r29, 0x3e	; 62
    360c:	89 83       	std	Y+1, r24	; 0x01
	CLCD_WriteData(Char);
    360e:	89 81       	ldd	r24, Y+1	; 0x01
    3610:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <CLCD_WriteData>
}
    3614:	0f 90       	pop	r0
    3616:	cf 91       	pop	r28
    3618:	df 91       	pop	r29
    361a:	08 95       	ret

0000361c <CLCD_WriteString>:

void CLCD_WriteString(u8 * String){
    361c:	df 93       	push	r29
    361e:	cf 93       	push	r28
    3620:	00 d0       	rcall	.+0      	; 0x3622 <CLCD_WriteString+0x6>
    3622:	cd b7       	in	r28, 0x3d	; 61
    3624:	de b7       	in	r29, 0x3e	; 62
    3626:	9a 83       	std	Y+2, r25	; 0x02
    3628:	89 83       	std	Y+1, r24	; 0x01
    362a:	0a c0       	rjmp	.+20     	; 0x3640 <CLCD_WriteString+0x24>
	while (*String != '\0'){
		CLCD_WriteData(*String);
    362c:	e9 81       	ldd	r30, Y+1	; 0x01
    362e:	fa 81       	ldd	r31, Y+2	; 0x02
    3630:	80 81       	ld	r24, Z
    3632:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <CLCD_WriteData>
		String++;
    3636:	89 81       	ldd	r24, Y+1	; 0x01
    3638:	9a 81       	ldd	r25, Y+2	; 0x02
    363a:	01 96       	adiw	r24, 0x01	; 1
    363c:	9a 83       	std	Y+2, r25	; 0x02
    363e:	89 83       	std	Y+1, r24	; 0x01
void CLCD_WriteChar(u8 Char){
	CLCD_WriteData(Char);
}

void CLCD_WriteString(u8 * String){
	while (*String != '\0'){
    3640:	e9 81       	ldd	r30, Y+1	; 0x01
    3642:	fa 81       	ldd	r31, Y+2	; 0x02
    3644:	80 81       	ld	r24, Z
    3646:	88 23       	and	r24, r24
    3648:	89 f7       	brne	.-30     	; 0x362c <CLCD_WriteString+0x10>
		CLCD_WriteData(*String);
		String++;
	}
}
    364a:	0f 90       	pop	r0
    364c:	0f 90       	pop	r0
    364e:	cf 91       	pop	r28
    3650:	df 91       	pop	r29
    3652:	08 95       	ret

00003654 <CLCD_GoTo>:

void CLCD_GoTo(u8 Row, u8 Col){
    3654:	df 93       	push	r29
    3656:	cf 93       	push	r28
    3658:	00 d0       	rcall	.+0      	; 0x365a <CLCD_GoTo+0x6>
    365a:	00 d0       	rcall	.+0      	; 0x365c <CLCD_GoTo+0x8>
    365c:	cd b7       	in	r28, 0x3d	; 61
    365e:	de b7       	in	r29, 0x3e	; 62
    3660:	89 83       	std	Y+1, r24	; 0x01
    3662:	6a 83       	std	Y+2, r22	; 0x02
	Col--;
    3664:	8a 81       	ldd	r24, Y+2	; 0x02
    3666:	81 50       	subi	r24, 0x01	; 1
    3668:	8a 83       	std	Y+2, r24	; 0x02
	Row--;
    366a:	89 81       	ldd	r24, Y+1	; 0x01
    366c:	81 50       	subi	r24, 0x01	; 1
    366e:	89 83       	std	Y+1, r24	; 0x01

	switch(Row)
    3670:	89 81       	ldd	r24, Y+1	; 0x01
    3672:	28 2f       	mov	r18, r24
    3674:	30 e0       	ldi	r19, 0x00	; 0
    3676:	3c 83       	std	Y+4, r19	; 0x04
    3678:	2b 83       	std	Y+3, r18	; 0x03
    367a:	8b 81       	ldd	r24, Y+3	; 0x03
    367c:	9c 81       	ldd	r25, Y+4	; 0x04
    367e:	00 97       	sbiw	r24, 0x00	; 0
    3680:	31 f0       	breq	.+12     	; 0x368e <CLCD_GoTo+0x3a>
    3682:	2b 81       	ldd	r18, Y+3	; 0x03
    3684:	3c 81       	ldd	r19, Y+4	; 0x04
    3686:	21 30       	cpi	r18, 0x01	; 1
    3688:	31 05       	cpc	r19, r1
    368a:	31 f0       	breq	.+12     	; 0x3698 <CLCD_GoTo+0x44>
    368c:	09 c0       	rjmp	.+18     	; 0x36a0 <CLCD_GoTo+0x4c>
	{
		case 0: CLCD_WriteInes(0x80+Col); break;
    368e:	8a 81       	ldd	r24, Y+2	; 0x02
    3690:	80 58       	subi	r24, 0x80	; 128
    3692:	0e 94 e1 18 	call	0x31c2	; 0x31c2 <CLCD_WriteInes>
    3696:	04 c0       	rjmp	.+8      	; 0x36a0 <CLCD_GoTo+0x4c>
		case 1: CLCD_WriteInes(0xC0+Col); break;
    3698:	8a 81       	ldd	r24, Y+2	; 0x02
    369a:	80 54       	subi	r24, 0x40	; 64
    369c:	0e 94 e1 18 	call	0x31c2	; 0x31c2 <CLCD_WriteInes>
	}
}
    36a0:	0f 90       	pop	r0
    36a2:	0f 90       	pop	r0
    36a4:	0f 90       	pop	r0
    36a6:	0f 90       	pop	r0
    36a8:	cf 91       	pop	r28
    36aa:	df 91       	pop	r29
    36ac:	08 95       	ret

000036ae <CLCD_DisplayClear>:

void CLCD_DisplayClear(void){
    36ae:	df 93       	push	r29
    36b0:	cf 93       	push	r28
    36b2:	cd b7       	in	r28, 0x3d	; 61
    36b4:	de b7       	in	r29, 0x3e	; 62
	CLCD_WriteInes(0x01);
    36b6:	81 e0       	ldi	r24, 0x01	; 1
    36b8:	0e 94 e1 18 	call	0x31c2	; 0x31c2 <CLCD_WriteInes>
}
    36bc:	cf 91       	pop	r28
    36be:	df 91       	pop	r29
    36c0:	08 95       	ret

000036c2 <ConvertNumToASCII>:

u8 ConvertNumToASCII(u8 Input){
    36c2:	df 93       	push	r29
    36c4:	cf 93       	push	r28
    36c6:	0f 92       	push	r0
    36c8:	cd b7       	in	r28, 0x3d	; 61
    36ca:	de b7       	in	r29, 0x3e	; 62
    36cc:	89 83       	std	Y+1, r24	; 0x01
	return Input+0x30;
    36ce:	89 81       	ldd	r24, Y+1	; 0x01
    36d0:	80 5d       	subi	r24, 0xD0	; 208
}
    36d2:	0f 90       	pop	r0
    36d4:	cf 91       	pop	r28
    36d6:	df 91       	pop	r29
    36d8:	08 95       	ret

000036da <CLCD_ReverseNumber>:

s32 CLCD_ReverseNumber(s32 NUM){
    36da:	ef 92       	push	r14
    36dc:	ff 92       	push	r15
    36de:	0f 93       	push	r16
    36e0:	1f 93       	push	r17
    36e2:	df 93       	push	r29
    36e4:	cf 93       	push	r28
    36e6:	cd b7       	in	r28, 0x3d	; 61
    36e8:	de b7       	in	r29, 0x3e	; 62
    36ea:	28 97       	sbiw	r28, 0x08	; 8
    36ec:	0f b6       	in	r0, 0x3f	; 63
    36ee:	f8 94       	cli
    36f0:	de bf       	out	0x3e, r29	; 62
    36f2:	0f be       	out	0x3f, r0	; 63
    36f4:	cd bf       	out	0x3d, r28	; 61
    36f6:	6d 83       	std	Y+5, r22	; 0x05
    36f8:	7e 83       	std	Y+6, r23	; 0x06
    36fa:	8f 83       	std	Y+7, r24	; 0x07
    36fc:	98 87       	std	Y+8, r25	; 0x08
	u32 reverse=1;
    36fe:	81 e0       	ldi	r24, 0x01	; 1
    3700:	90 e0       	ldi	r25, 0x00	; 0
    3702:	a0 e0       	ldi	r26, 0x00	; 0
    3704:	b0 e0       	ldi	r27, 0x00	; 0
    3706:	89 83       	std	Y+1, r24	; 0x01
    3708:	9a 83       	std	Y+2, r25	; 0x02
    370a:	ab 83       	std	Y+3, r26	; 0x03
    370c:	bc 83       	std	Y+4, r27	; 0x04
    370e:	36 c0       	rjmp	.+108    	; 0x377c <CLCD_ReverseNumber+0xa2>
	while(NUM!=0)
	{
		reverse=(reverse*10)+(NUM%10);
    3710:	89 81       	ldd	r24, Y+1	; 0x01
    3712:	9a 81       	ldd	r25, Y+2	; 0x02
    3714:	ab 81       	ldd	r26, Y+3	; 0x03
    3716:	bc 81       	ldd	r27, Y+4	; 0x04
    3718:	2a e0       	ldi	r18, 0x0A	; 10
    371a:	30 e0       	ldi	r19, 0x00	; 0
    371c:	40 e0       	ldi	r20, 0x00	; 0
    371e:	50 e0       	ldi	r21, 0x00	; 0
    3720:	bc 01       	movw	r22, r24
    3722:	cd 01       	movw	r24, r26
    3724:	0e 94 f4 3a 	call	0x75e8	; 0x75e8 <__mulsi3>
    3728:	7b 01       	movw	r14, r22
    372a:	8c 01       	movw	r16, r24
    372c:	8d 81       	ldd	r24, Y+5	; 0x05
    372e:	9e 81       	ldd	r25, Y+6	; 0x06
    3730:	af 81       	ldd	r26, Y+7	; 0x07
    3732:	b8 85       	ldd	r27, Y+8	; 0x08
    3734:	2a e0       	ldi	r18, 0x0A	; 10
    3736:	30 e0       	ldi	r19, 0x00	; 0
    3738:	40 e0       	ldi	r20, 0x00	; 0
    373a:	50 e0       	ldi	r21, 0x00	; 0
    373c:	bc 01       	movw	r22, r24
    373e:	cd 01       	movw	r24, r26
    3740:	0e 94 1f 3b 	call	0x763e	; 0x763e <__divmodsi4>
    3744:	dc 01       	movw	r26, r24
    3746:	cb 01       	movw	r24, r22
    3748:	8e 0d       	add	r24, r14
    374a:	9f 1d       	adc	r25, r15
    374c:	a0 1f       	adc	r26, r16
    374e:	b1 1f       	adc	r27, r17
    3750:	89 83       	std	Y+1, r24	; 0x01
    3752:	9a 83       	std	Y+2, r25	; 0x02
    3754:	ab 83       	std	Y+3, r26	; 0x03
    3756:	bc 83       	std	Y+4, r27	; 0x04
		NUM/=10;
    3758:	8d 81       	ldd	r24, Y+5	; 0x05
    375a:	9e 81       	ldd	r25, Y+6	; 0x06
    375c:	af 81       	ldd	r26, Y+7	; 0x07
    375e:	b8 85       	ldd	r27, Y+8	; 0x08
    3760:	2a e0       	ldi	r18, 0x0A	; 10
    3762:	30 e0       	ldi	r19, 0x00	; 0
    3764:	40 e0       	ldi	r20, 0x00	; 0
    3766:	50 e0       	ldi	r21, 0x00	; 0
    3768:	bc 01       	movw	r22, r24
    376a:	cd 01       	movw	r24, r26
    376c:	0e 94 1f 3b 	call	0x763e	; 0x763e <__divmodsi4>
    3770:	da 01       	movw	r26, r20
    3772:	c9 01       	movw	r24, r18
    3774:	8d 83       	std	Y+5, r24	; 0x05
    3776:	9e 83       	std	Y+6, r25	; 0x06
    3778:	af 83       	std	Y+7, r26	; 0x07
    377a:	b8 87       	std	Y+8, r27	; 0x08
	return Input+0x30;
}

s32 CLCD_ReverseNumber(s32 NUM){
	u32 reverse=1;
	while(NUM!=0)
    377c:	8d 81       	ldd	r24, Y+5	; 0x05
    377e:	9e 81       	ldd	r25, Y+6	; 0x06
    3780:	af 81       	ldd	r26, Y+7	; 0x07
    3782:	b8 85       	ldd	r27, Y+8	; 0x08
    3784:	00 97       	sbiw	r24, 0x00	; 0
    3786:	a1 05       	cpc	r26, r1
    3788:	b1 05       	cpc	r27, r1
    378a:	11 f6       	brne	.-124    	; 0x3710 <CLCD_ReverseNumber+0x36>
	{
		reverse=(reverse*10)+(NUM%10);
		NUM/=10;
	}
	return reverse;
    378c:	89 81       	ldd	r24, Y+1	; 0x01
    378e:	9a 81       	ldd	r25, Y+2	; 0x02
    3790:	ab 81       	ldd	r26, Y+3	; 0x03
    3792:	bc 81       	ldd	r27, Y+4	; 0x04
}
    3794:	bc 01       	movw	r22, r24
    3796:	cd 01       	movw	r24, r26
    3798:	28 96       	adiw	r28, 0x08	; 8
    379a:	0f b6       	in	r0, 0x3f	; 63
    379c:	f8 94       	cli
    379e:	de bf       	out	0x3e, r29	; 62
    37a0:	0f be       	out	0x3f, r0	; 63
    37a2:	cd bf       	out	0x3d, r28	; 61
    37a4:	cf 91       	pop	r28
    37a6:	df 91       	pop	r29
    37a8:	1f 91       	pop	r17
    37aa:	0f 91       	pop	r16
    37ac:	ff 90       	pop	r15
    37ae:	ef 90       	pop	r14
    37b0:	08 95       	ret

000037b2 <CLCD_WriteNum>:

void CLCD_WriteNum(u64 NUM) {
    37b2:	af 92       	push	r10
    37b4:	bf 92       	push	r11
    37b6:	cf 92       	push	r12
    37b8:	df 92       	push	r13
    37ba:	ef 92       	push	r14
    37bc:	ff 92       	push	r15
    37be:	0f 93       	push	r16
    37c0:	1f 93       	push	r17
    37c2:	df 93       	push	r29
    37c4:	cf 93       	push	r28
    37c6:	cd b7       	in	r28, 0x3d	; 61
    37c8:	de b7       	in	r29, 0x3e	; 62
    37ca:	60 97       	sbiw	r28, 0x10	; 16
    37cc:	0f b6       	in	r0, 0x3f	; 63
    37ce:	f8 94       	cli
    37d0:	de bf       	out	0x3e, r29	; 62
    37d2:	0f be       	out	0x3f, r0	; 63
    37d4:	cd bf       	out	0x3d, r28	; 61
    37d6:	29 87       	std	Y+9, r18	; 0x09
    37d8:	3a 87       	std	Y+10, r19	; 0x0a
    37da:	4b 87       	std	Y+11, r20	; 0x0b
    37dc:	5c 87       	std	Y+12, r21	; 0x0c
    37de:	6d 87       	std	Y+13, r22	; 0x0d
    37e0:	7e 87       	std	Y+14, r23	; 0x0e
    37e2:	8f 87       	std	Y+15, r24	; 0x0f
    37e4:	98 8b       	std	Y+16, r25	; 0x10
	u64 reverse=1;
    37e6:	81 e0       	ldi	r24, 0x01	; 1
    37e8:	89 83       	std	Y+1, r24	; 0x01
    37ea:	1a 82       	std	Y+2, r1	; 0x02
    37ec:	1b 82       	std	Y+3, r1	; 0x03
    37ee:	1c 82       	std	Y+4, r1	; 0x04
    37f0:	1d 82       	std	Y+5, r1	; 0x05
    37f2:	1e 82       	std	Y+6, r1	; 0x06
    37f4:	1f 82       	std	Y+7, r1	; 0x07
    37f6:	18 86       	std	Y+8, r1	; 0x08
	reverse = CLCD_ReverseNumber(NUM);
    37f8:	89 85       	ldd	r24, Y+9	; 0x09
    37fa:	9a 85       	ldd	r25, Y+10	; 0x0a
    37fc:	ab 85       	ldd	r26, Y+11	; 0x0b
    37fe:	bc 85       	ldd	r27, Y+12	; 0x0c
    3800:	bc 01       	movw	r22, r24
    3802:	cd 01       	movw	r24, r26
    3804:	0e 94 6d 1b 	call	0x36da	; 0x36da <CLCD_ReverseNumber>
    3808:	dc 01       	movw	r26, r24
    380a:	cb 01       	movw	r24, r22
    380c:	89 83       	std	Y+1, r24	; 0x01
    380e:	9a 83       	std	Y+2, r25	; 0x02
    3810:	ab 83       	std	Y+3, r26	; 0x03
    3812:	bc 83       	std	Y+4, r27	; 0x04
    3814:	bb 0f       	add	r27, r27
    3816:	88 0b       	sbc	r24, r24
    3818:	98 2f       	mov	r25, r24
    381a:	dc 01       	movw	r26, r24
    381c:	8d 83       	std	Y+5, r24	; 0x05
    381e:	8e 83       	std	Y+6, r24	; 0x06
    3820:	8f 83       	std	Y+7, r24	; 0x07
    3822:	88 87       	std	Y+8, r24	; 0x08
    3824:	5e c0       	rjmp	.+188    	; 0x38e2 <CLCD_WriteNum+0x130>
	while(reverse!=1)
	{
		CLCD_WriteData((reverse%10)+48);
    3826:	a9 80       	ldd	r10, Y+1	; 0x01
    3828:	ba 80       	ldd	r11, Y+2	; 0x02
    382a:	cb 80       	ldd	r12, Y+3	; 0x03
    382c:	dc 80       	ldd	r13, Y+4	; 0x04
    382e:	ed 80       	ldd	r14, Y+5	; 0x05
    3830:	fe 80       	ldd	r15, Y+6	; 0x06
    3832:	0f 81       	ldd	r16, Y+7	; 0x07
    3834:	18 85       	ldd	r17, Y+8	; 0x08
    3836:	2a 2d       	mov	r18, r10
    3838:	3b 2d       	mov	r19, r11
    383a:	4c 2d       	mov	r20, r12
    383c:	5d 2d       	mov	r21, r13
    383e:	6e 2d       	mov	r22, r14
    3840:	7f 2d       	mov	r23, r15
    3842:	80 2f       	mov	r24, r16
    3844:	91 2f       	mov	r25, r17
    3846:	0f 2e       	mov	r0, r31
    3848:	fa e0       	ldi	r31, 0x0A	; 10
    384a:	af 2e       	mov	r10, r31
    384c:	f0 2d       	mov	r31, r0
    384e:	bb 24       	eor	r11, r11
    3850:	cc 24       	eor	r12, r12
    3852:	dd 24       	eor	r13, r13
    3854:	ee 24       	eor	r14, r14
    3856:	ff 24       	eor	r15, r15
    3858:	00 e0       	ldi	r16, 0x00	; 0
    385a:	10 e0       	ldi	r17, 0x00	; 0
    385c:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <__umoddi3>
    3860:	a2 2e       	mov	r10, r18
    3862:	b3 2e       	mov	r11, r19
    3864:	c4 2e       	mov	r12, r20
    3866:	d5 2e       	mov	r13, r21
    3868:	e6 2e       	mov	r14, r22
    386a:	f7 2e       	mov	r15, r23
    386c:	08 2f       	mov	r16, r24
    386e:	19 2f       	mov	r17, r25
    3870:	2a 2d       	mov	r18, r10
    3872:	3b 2d       	mov	r19, r11
    3874:	4c 2d       	mov	r20, r12
    3876:	5d 2d       	mov	r21, r13
    3878:	6e 2d       	mov	r22, r14
    387a:	7f 2d       	mov	r23, r15
    387c:	80 2f       	mov	r24, r16
    387e:	91 2f       	mov	r25, r17
    3880:	82 2f       	mov	r24, r18
    3882:	80 5d       	subi	r24, 0xD0	; 208
    3884:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <CLCD_WriteData>
		reverse/=10;
    3888:	a9 80       	ldd	r10, Y+1	; 0x01
    388a:	ba 80       	ldd	r11, Y+2	; 0x02
    388c:	cb 80       	ldd	r12, Y+3	; 0x03
    388e:	dc 80       	ldd	r13, Y+4	; 0x04
    3890:	ed 80       	ldd	r14, Y+5	; 0x05
    3892:	fe 80       	ldd	r15, Y+6	; 0x06
    3894:	0f 81       	ldd	r16, Y+7	; 0x07
    3896:	18 85       	ldd	r17, Y+8	; 0x08
    3898:	2a 2d       	mov	r18, r10
    389a:	3b 2d       	mov	r19, r11
    389c:	4c 2d       	mov	r20, r12
    389e:	5d 2d       	mov	r21, r13
    38a0:	6e 2d       	mov	r22, r14
    38a2:	7f 2d       	mov	r23, r15
    38a4:	80 2f       	mov	r24, r16
    38a6:	91 2f       	mov	r25, r17
    38a8:	0f 2e       	mov	r0, r31
    38aa:	fa e0       	ldi	r31, 0x0A	; 10
    38ac:	af 2e       	mov	r10, r31
    38ae:	f0 2d       	mov	r31, r0
    38b0:	bb 24       	eor	r11, r11
    38b2:	cc 24       	eor	r12, r12
    38b4:	dd 24       	eor	r13, r13
    38b6:	ee 24       	eor	r14, r14
    38b8:	ff 24       	eor	r15, r15
    38ba:	00 e0       	ldi	r16, 0x00	; 0
    38bc:	10 e0       	ldi	r17, 0x00	; 0
    38be:	0e 94 6d 00 	call	0xda	; 0xda <__udivdi3>
    38c2:	a2 2e       	mov	r10, r18
    38c4:	b3 2e       	mov	r11, r19
    38c6:	c4 2e       	mov	r12, r20
    38c8:	d5 2e       	mov	r13, r21
    38ca:	e6 2e       	mov	r14, r22
    38cc:	f7 2e       	mov	r15, r23
    38ce:	08 2f       	mov	r16, r24
    38d0:	19 2f       	mov	r17, r25
    38d2:	a9 82       	std	Y+1, r10	; 0x01
    38d4:	ba 82       	std	Y+2, r11	; 0x02
    38d6:	cb 82       	std	Y+3, r12	; 0x03
    38d8:	dc 82       	std	Y+4, r13	; 0x04
    38da:	ed 82       	std	Y+5, r14	; 0x05
    38dc:	fe 82       	std	Y+6, r15	; 0x06
    38de:	0f 83       	std	Y+7, r16	; 0x07
    38e0:	18 87       	std	Y+8, r17	; 0x08
}

void CLCD_WriteNum(u64 NUM) {
	u64 reverse=1;
	reverse = CLCD_ReverseNumber(NUM);
	while(reverse!=1)
    38e2:	89 81       	ldd	r24, Y+1	; 0x01
    38e4:	81 30       	cpi	r24, 0x01	; 1
    38e6:	09 f0       	breq	.+2      	; 0x38ea <CLCD_WriteNum+0x138>
    38e8:	9e cf       	rjmp	.-196    	; 0x3826 <CLCD_WriteNum+0x74>
    38ea:	8a 81       	ldd	r24, Y+2	; 0x02
    38ec:	88 23       	and	r24, r24
    38ee:	09 f0       	breq	.+2      	; 0x38f2 <CLCD_WriteNum+0x140>
    38f0:	9a cf       	rjmp	.-204    	; 0x3826 <CLCD_WriteNum+0x74>
    38f2:	8b 81       	ldd	r24, Y+3	; 0x03
    38f4:	88 23       	and	r24, r24
    38f6:	09 f0       	breq	.+2      	; 0x38fa <CLCD_WriteNum+0x148>
    38f8:	96 cf       	rjmp	.-212    	; 0x3826 <CLCD_WriteNum+0x74>
    38fa:	8c 81       	ldd	r24, Y+4	; 0x04
    38fc:	88 23       	and	r24, r24
    38fe:	09 f0       	breq	.+2      	; 0x3902 <CLCD_WriteNum+0x150>
    3900:	92 cf       	rjmp	.-220    	; 0x3826 <CLCD_WriteNum+0x74>
    3902:	8d 81       	ldd	r24, Y+5	; 0x05
    3904:	88 23       	and	r24, r24
    3906:	09 f0       	breq	.+2      	; 0x390a <CLCD_WriteNum+0x158>
    3908:	8e cf       	rjmp	.-228    	; 0x3826 <CLCD_WriteNum+0x74>
    390a:	8e 81       	ldd	r24, Y+6	; 0x06
    390c:	88 23       	and	r24, r24
    390e:	09 f0       	breq	.+2      	; 0x3912 <CLCD_WriteNum+0x160>
    3910:	8a cf       	rjmp	.-236    	; 0x3826 <CLCD_WriteNum+0x74>
    3912:	8f 81       	ldd	r24, Y+7	; 0x07
    3914:	88 23       	and	r24, r24
    3916:	09 f0       	breq	.+2      	; 0x391a <CLCD_WriteNum+0x168>
    3918:	86 cf       	rjmp	.-244    	; 0x3826 <CLCD_WriteNum+0x74>
    391a:	88 85       	ldd	r24, Y+8	; 0x08
    391c:	88 23       	and	r24, r24
    391e:	09 f0       	breq	.+2      	; 0x3922 <CLCD_WriteNum+0x170>
    3920:	82 cf       	rjmp	.-252    	; 0x3826 <CLCD_WriteNum+0x74>
	{
		CLCD_WriteData((reverse%10)+48);
		reverse/=10;
	}
}
    3922:	60 96       	adiw	r28, 0x10	; 16
    3924:	0f b6       	in	r0, 0x3f	; 63
    3926:	f8 94       	cli
    3928:	de bf       	out	0x3e, r29	; 62
    392a:	0f be       	out	0x3f, r0	; 63
    392c:	cd bf       	out	0x3d, r28	; 61
    392e:	cf 91       	pop	r28
    3930:	df 91       	pop	r29
    3932:	1f 91       	pop	r17
    3934:	0f 91       	pop	r16
    3936:	ff 90       	pop	r15
    3938:	ef 90       	pop	r14
    393a:	df 90       	pop	r13
    393c:	cf 90       	pop	r12
    393e:	bf 90       	pop	r11
    3940:	af 90       	pop	r10
    3942:	08 95       	ret

00003944 <CLCD_PrintBinary>:

void CLCD_PrintBinary(u8 num){
    3944:	df 93       	push	r29
    3946:	cf 93       	push	r28
    3948:	00 d0       	rcall	.+0      	; 0x394a <CLCD_PrintBinary+0x6>
    394a:	0f 92       	push	r0
    394c:	cd b7       	in	r28, 0x3d	; 61
    394e:	de b7       	in	r29, 0x3e	; 62
    3950:	8a 83       	std	Y+2, r24	; 0x02
	for(s8 i=7; i>=0; i--){
    3952:	87 e0       	ldi	r24, 0x07	; 7
    3954:	89 83       	std	Y+1, r24	; 0x01
    3956:	1d c0       	rjmp	.+58     	; 0x3992 <CLCD_PrintBinary+0x4e>
		CLCD_WriteData(GET_BIT(num,i)?'1':'0');
    3958:	8a 81       	ldd	r24, Y+2	; 0x02
    395a:	28 2f       	mov	r18, r24
    395c:	30 e0       	ldi	r19, 0x00	; 0
    395e:	89 81       	ldd	r24, Y+1	; 0x01
    3960:	99 27       	eor	r25, r25
    3962:	87 fd       	sbrc	r24, 7
    3964:	90 95       	com	r25
    3966:	a9 01       	movw	r20, r18
    3968:	02 c0       	rjmp	.+4      	; 0x396e <CLCD_PrintBinary+0x2a>
    396a:	55 95       	asr	r21
    396c:	47 95       	ror	r20
    396e:	8a 95       	dec	r24
    3970:	e2 f7       	brpl	.-8      	; 0x396a <CLCD_PrintBinary+0x26>
    3972:	ca 01       	movw	r24, r20
    3974:	81 70       	andi	r24, 0x01	; 1
    3976:	90 70       	andi	r25, 0x00	; 0
    3978:	88 23       	and	r24, r24
    397a:	19 f0       	breq	.+6      	; 0x3982 <CLCD_PrintBinary+0x3e>
    397c:	51 e3       	ldi	r21, 0x31	; 49
    397e:	5b 83       	std	Y+3, r21	; 0x03
    3980:	02 c0       	rjmp	.+4      	; 0x3986 <CLCD_PrintBinary+0x42>
    3982:	80 e3       	ldi	r24, 0x30	; 48
    3984:	8b 83       	std	Y+3, r24	; 0x03
    3986:	8b 81       	ldd	r24, Y+3	; 0x03
    3988:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <CLCD_WriteData>
		reverse/=10;
	}
}

void CLCD_PrintBinary(u8 num){
	for(s8 i=7; i>=0; i--){
    398c:	89 81       	ldd	r24, Y+1	; 0x01
    398e:	81 50       	subi	r24, 0x01	; 1
    3990:	89 83       	std	Y+1, r24	; 0x01
    3992:	89 81       	ldd	r24, Y+1	; 0x01
    3994:	88 23       	and	r24, r24
    3996:	04 f7       	brge	.-64     	; 0x3958 <CLCD_PrintBinary+0x14>
		CLCD_WriteData(GET_BIT(num,i)?'1':'0');
	}
}
    3998:	0f 90       	pop	r0
    399a:	0f 90       	pop	r0
    399c:	0f 90       	pop	r0
    399e:	cf 91       	pop	r28
    39a0:	df 91       	pop	r29
    39a2:	08 95       	ret

000039a4 <CLCD_Draw_Char>:
  0x10,
  0x10,
  0x10
};

void CLCD_Draw_Char(u8 Address_Data, u8* charArray) {
    39a4:	df 93       	push	r29
    39a6:	cf 93       	push	r28
    39a8:	00 d0       	rcall	.+0      	; 0x39aa <CLCD_Draw_Char+0x6>
    39aa:	00 d0       	rcall	.+0      	; 0x39ac <CLCD_Draw_Char+0x8>
    39ac:	cd b7       	in	r28, 0x3d	; 61
    39ae:	de b7       	in	r29, 0x3e	; 62
    39b0:	8a 83       	std	Y+2, r24	; 0x02
    39b2:	7c 83       	std	Y+4, r23	; 0x04
    39b4:	6b 83       	std	Y+3, r22	; 0x03
    CLCD_WriteInes(0x40 | (Address_Data * 8)); // Set CGRAM address
    39b6:	8a 81       	ldd	r24, Y+2	; 0x02
    39b8:	88 2f       	mov	r24, r24
    39ba:	90 e0       	ldi	r25, 0x00	; 0
    39bc:	88 0f       	add	r24, r24
    39be:	99 1f       	adc	r25, r25
    39c0:	88 0f       	add	r24, r24
    39c2:	99 1f       	adc	r25, r25
    39c4:	88 0f       	add	r24, r24
    39c6:	99 1f       	adc	r25, r25
    39c8:	80 64       	ori	r24, 0x40	; 64
    39ca:	0e 94 e1 18 	call	0x31c2	; 0x31c2 <CLCD_WriteInes>
    for (u8 j = 0; j < 8; j++) {
    39ce:	19 82       	std	Y+1, r1	; 0x01
    39d0:	0e c0       	rjmp	.+28     	; 0x39ee <CLCD_Draw_Char+0x4a>
        CLCD_WriteData(charArray[j]);
    39d2:	89 81       	ldd	r24, Y+1	; 0x01
    39d4:	28 2f       	mov	r18, r24
    39d6:	30 e0       	ldi	r19, 0x00	; 0
    39d8:	8b 81       	ldd	r24, Y+3	; 0x03
    39da:	9c 81       	ldd	r25, Y+4	; 0x04
    39dc:	fc 01       	movw	r30, r24
    39de:	e2 0f       	add	r30, r18
    39e0:	f3 1f       	adc	r31, r19
    39e2:	80 81       	ld	r24, Z
    39e4:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <CLCD_WriteData>
  0x10
};

void CLCD_Draw_Char(u8 Address_Data, u8* charArray) {
    CLCD_WriteInes(0x40 | (Address_Data * 8)); // Set CGRAM address
    for (u8 j = 0; j < 8; j++) {
    39e8:	89 81       	ldd	r24, Y+1	; 0x01
    39ea:	8f 5f       	subi	r24, 0xFF	; 255
    39ec:	89 83       	std	Y+1, r24	; 0x01
    39ee:	89 81       	ldd	r24, Y+1	; 0x01
    39f0:	88 30       	cpi	r24, 0x08	; 8
    39f2:	78 f3       	brcs	.-34     	; 0x39d2 <CLCD_Draw_Char+0x2e>
        CLCD_WriteData(charArray[j]);
    }
    CLCD_WriteInes(0x80); // Set DDRAM address to return to the display area
    39f4:	80 e8       	ldi	r24, 0x80	; 128
    39f6:	0e 94 e1 18 	call	0x31c2	; 0x31c2 <CLCD_WriteInes>
}
    39fa:	0f 90       	pop	r0
    39fc:	0f 90       	pop	r0
    39fe:	0f 90       	pop	r0
    3a00:	0f 90       	pop	r0
    3a02:	cf 91       	pop	r28
    3a04:	df 91       	pop	r29
    3a06:	08 95       	ret

00003a08 <CLCD_printHEXNum>:

void CLCD_printHEXNum(u8 num){
    3a08:	af 92       	push	r10
    3a0a:	bf 92       	push	r11
    3a0c:	cf 92       	push	r12
    3a0e:	df 92       	push	r13
    3a10:	ef 92       	push	r14
    3a12:	ff 92       	push	r15
    3a14:	0f 93       	push	r16
    3a16:	1f 93       	push	r17
    3a18:	df 93       	push	r29
    3a1a:	cf 93       	push	r28
    3a1c:	cd b7       	in	r28, 0x3d	; 61
    3a1e:	de b7       	in	r29, 0x3e	; 62
    3a20:	a5 97       	sbiw	r28, 0x25	; 37
    3a22:	0f b6       	in	r0, 0x3f	; 63
    3a24:	f8 94       	cli
    3a26:	de bf       	out	0x3e, r29	; 62
    3a28:	0f be       	out	0x3f, r0	; 63
    3a2a:	cd bf       	out	0x3d, r28	; 61
    3a2c:	8e 8b       	std	Y+22, r24	; 0x16
	u8 decimalS[] = "Decimal: ";
    3a2e:	ce 01       	movw	r24, r28
    3a30:	03 96       	adiw	r24, 0x03	; 3
    3a32:	98 8f       	std	Y+24, r25	; 0x18
    3a34:	8f 8b       	std	Y+23, r24	; 0x17
    3a36:	e0 e6       	ldi	r30, 0x60	; 96
    3a38:	f0 e0       	ldi	r31, 0x00	; 0
    3a3a:	fa 8f       	std	Y+26, r31	; 0x1a
    3a3c:	e9 8f       	std	Y+25, r30	; 0x19
    3a3e:	fa e0       	ldi	r31, 0x0A	; 10
    3a40:	fb 8f       	std	Y+27, r31	; 0x1b
    3a42:	e9 8d       	ldd	r30, Y+25	; 0x19
    3a44:	fa 8d       	ldd	r31, Y+26	; 0x1a
    3a46:	00 80       	ld	r0, Z
    3a48:	89 8d       	ldd	r24, Y+25	; 0x19
    3a4a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3a4c:	01 96       	adiw	r24, 0x01	; 1
    3a4e:	9a 8f       	std	Y+26, r25	; 0x1a
    3a50:	89 8f       	std	Y+25, r24	; 0x19
    3a52:	ef 89       	ldd	r30, Y+23	; 0x17
    3a54:	f8 8d       	ldd	r31, Y+24	; 0x18
    3a56:	00 82       	st	Z, r0
    3a58:	8f 89       	ldd	r24, Y+23	; 0x17
    3a5a:	98 8d       	ldd	r25, Y+24	; 0x18
    3a5c:	01 96       	adiw	r24, 0x01	; 1
    3a5e:	98 8f       	std	Y+24, r25	; 0x18
    3a60:	8f 8b       	std	Y+23, r24	; 0x17
    3a62:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3a64:	91 50       	subi	r25, 0x01	; 1
    3a66:	9b 8f       	std	Y+27, r25	; 0x1b
    3a68:	eb 8d       	ldd	r30, Y+27	; 0x1b
    3a6a:	ee 23       	and	r30, r30
    3a6c:	51 f7       	brne	.-44     	; 0x3a42 <CLCD_printHEXNum+0x3a>
	u8 hexS[] = 	"Hex: ";
    3a6e:	ce 01       	movw	r24, r28
    3a70:	0d 96       	adiw	r24, 0x0d	; 13
    3a72:	9d 8f       	std	Y+29, r25	; 0x1d
    3a74:	8c 8f       	std	Y+28, r24	; 0x1c
    3a76:	ea e6       	ldi	r30, 0x6A	; 106
    3a78:	f0 e0       	ldi	r31, 0x00	; 0
    3a7a:	ff 8f       	std	Y+31, r31	; 0x1f
    3a7c:	ee 8f       	std	Y+30, r30	; 0x1e
    3a7e:	f6 e0       	ldi	r31, 0x06	; 6
    3a80:	f8 a3       	std	Y+32, r31	; 0x20
    3a82:	ee 8d       	ldd	r30, Y+30	; 0x1e
    3a84:	ff 8d       	ldd	r31, Y+31	; 0x1f
    3a86:	00 80       	ld	r0, Z
    3a88:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3a8a:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3a8c:	01 96       	adiw	r24, 0x01	; 1
    3a8e:	9f 8f       	std	Y+31, r25	; 0x1f
    3a90:	8e 8f       	std	Y+30, r24	; 0x1e
    3a92:	ec 8d       	ldd	r30, Y+28	; 0x1c
    3a94:	fd 8d       	ldd	r31, Y+29	; 0x1d
    3a96:	00 82       	st	Z, r0
    3a98:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3a9a:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3a9c:	01 96       	adiw	r24, 0x01	; 1
    3a9e:	9d 8f       	std	Y+29, r25	; 0x1d
    3aa0:	8c 8f       	std	Y+28, r24	; 0x1c
    3aa2:	98 a1       	ldd	r25, Y+32	; 0x20
    3aa4:	91 50       	subi	r25, 0x01	; 1
    3aa6:	98 a3       	std	Y+32, r25	; 0x20
    3aa8:	e8 a1       	ldd	r30, Y+32	; 0x20
    3aaa:	ee 23       	and	r30, r30
    3aac:	51 f7       	brne	.-44     	; 0x3a82 <CLCD_printHEXNum+0x7a>
	u8 st[] = "0x";
    3aae:	ce 01       	movw	r24, r28
    3ab0:	43 96       	adiw	r24, 0x13	; 19
    3ab2:	9a a3       	std	Y+34, r25	; 0x22
    3ab4:	89 a3       	std	Y+33, r24	; 0x21
    3ab6:	e0 e7       	ldi	r30, 0x70	; 112
    3ab8:	f0 e0       	ldi	r31, 0x00	; 0
    3aba:	fc a3       	std	Y+36, r31	; 0x24
    3abc:	eb a3       	std	Y+35, r30	; 0x23
    3abe:	f3 e0       	ldi	r31, 0x03	; 3
    3ac0:	fd a3       	std	Y+37, r31	; 0x25
    3ac2:	eb a1       	ldd	r30, Y+35	; 0x23
    3ac4:	fc a1       	ldd	r31, Y+36	; 0x24
    3ac6:	00 80       	ld	r0, Z
    3ac8:	8b a1       	ldd	r24, Y+35	; 0x23
    3aca:	9c a1       	ldd	r25, Y+36	; 0x24
    3acc:	01 96       	adiw	r24, 0x01	; 1
    3ace:	9c a3       	std	Y+36, r25	; 0x24
    3ad0:	8b a3       	std	Y+35, r24	; 0x23
    3ad2:	e9 a1       	ldd	r30, Y+33	; 0x21
    3ad4:	fa a1       	ldd	r31, Y+34	; 0x22
    3ad6:	00 82       	st	Z, r0
    3ad8:	89 a1       	ldd	r24, Y+33	; 0x21
    3ada:	9a a1       	ldd	r25, Y+34	; 0x22
    3adc:	01 96       	adiw	r24, 0x01	; 1
    3ade:	9a a3       	std	Y+34, r25	; 0x22
    3ae0:	89 a3       	std	Y+33, r24	; 0x21
    3ae2:	9d a1       	ldd	r25, Y+37	; 0x25
    3ae4:	91 50       	subi	r25, 0x01	; 1
    3ae6:	9d a3       	std	Y+37, r25	; 0x25
    3ae8:	ed a1       	ldd	r30, Y+37	; 0x25
    3aea:	ee 23       	and	r30, r30
    3aec:	51 f7       	brne	.-44     	; 0x3ac2 <CLCD_printHEXNum+0xba>
	u8 Upper =0 , Lower = 0;
    3aee:	1a 82       	std	Y+2, r1	; 0x02
    3af0:	19 82       	std	Y+1, r1	; 0x01
	Upper = num >>4;
    3af2:	8e 89       	ldd	r24, Y+22	; 0x16
    3af4:	82 95       	swap	r24
    3af6:	8f 70       	andi	r24, 0x0F	; 15
    3af8:	8a 83       	std	Y+2, r24	; 0x02
	Lower = num &0x0f;
    3afa:	8e 89       	ldd	r24, Y+22	; 0x16
    3afc:	8f 70       	andi	r24, 0x0F	; 15
    3afe:	89 83       	std	Y+1, r24	; 0x01

	CLCD_WriteString(decimalS);
    3b00:	ce 01       	movw	r24, r28
    3b02:	03 96       	adiw	r24, 0x03	; 3
    3b04:	0e 94 0e 1b 	call	0x361c	; 0x361c <CLCD_WriteString>
	CLCD_WriteNum(num);
    3b08:	8e 89       	ldd	r24, Y+22	; 0x16
    3b0a:	a8 2e       	mov	r10, r24
    3b0c:	bb 24       	eor	r11, r11
    3b0e:	cc 24       	eor	r12, r12
    3b10:	dd 24       	eor	r13, r13
    3b12:	ee 24       	eor	r14, r14
    3b14:	ff 24       	eor	r15, r15
    3b16:	87 01       	movw	r16, r14
    3b18:	2a 2d       	mov	r18, r10
    3b1a:	3b 2d       	mov	r19, r11
    3b1c:	4c 2d       	mov	r20, r12
    3b1e:	5d 2d       	mov	r21, r13
    3b20:	6e 2d       	mov	r22, r14
    3b22:	7f 2d       	mov	r23, r15
    3b24:	80 2f       	mov	r24, r16
    3b26:	91 2f       	mov	r25, r17
    3b28:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <CLCD_WriteNum>
	CLCD_GoTo(2,1);
    3b2c:	82 e0       	ldi	r24, 0x02	; 2
    3b2e:	61 e0       	ldi	r22, 0x01	; 1
    3b30:	0e 94 2a 1b 	call	0x3654	; 0x3654 <CLCD_GoTo>
	CLCD_WriteString(hexS);
    3b34:	ce 01       	movw	r24, r28
    3b36:	0d 96       	adiw	r24, 0x0d	; 13
    3b38:	0e 94 0e 1b 	call	0x361c	; 0x361c <CLCD_WriteString>
	CLCD_WriteString(st);
    3b3c:	ce 01       	movw	r24, r28
    3b3e:	43 96       	adiw	r24, 0x13	; 19
    3b40:	0e 94 0e 1b 	call	0x361c	; 0x361c <CLCD_WriteString>

	if (Upper < 10){
    3b44:	8a 81       	ldd	r24, Y+2	; 0x02
    3b46:	8a 30       	cpi	r24, 0x0A	; 10
    3b48:	48 f4       	brcc	.+18     	; 0x3b5c <CLCD_printHEXNum+0x154>
		CLCD_GoTo(2,8);
    3b4a:	82 e0       	ldi	r24, 0x02	; 2
    3b4c:	68 e0       	ldi	r22, 0x08	; 8
    3b4e:	0e 94 2a 1b 	call	0x3654	; 0x3654 <CLCD_GoTo>
		CLCD_WriteData(Upper + '0');
    3b52:	8a 81       	ldd	r24, Y+2	; 0x02
    3b54:	80 5d       	subi	r24, 0xD0	; 208
    3b56:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <CLCD_WriteData>
    3b5a:	08 c0       	rjmp	.+16     	; 0x3b6c <CLCD_printHEXNum+0x164>
	}
	else {
		CLCD_GoTo(2,8);
    3b5c:	82 e0       	ldi	r24, 0x02	; 2
    3b5e:	68 e0       	ldi	r22, 0x08	; 8
    3b60:	0e 94 2a 1b 	call	0x3654	; 0x3654 <CLCD_GoTo>
		CLCD_WriteData(Upper + 'A'-10);
    3b64:	8a 81       	ldd	r24, Y+2	; 0x02
    3b66:	89 5c       	subi	r24, 0xC9	; 201
    3b68:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <CLCD_WriteData>
	}
	if (Lower < 10){
    3b6c:	89 81       	ldd	r24, Y+1	; 0x01
    3b6e:	8a 30       	cpi	r24, 0x0A	; 10
    3b70:	48 f4       	brcc	.+18     	; 0x3b84 <CLCD_printHEXNum+0x17c>
		CLCD_GoTo(2,9);
    3b72:	82 e0       	ldi	r24, 0x02	; 2
    3b74:	69 e0       	ldi	r22, 0x09	; 9
    3b76:	0e 94 2a 1b 	call	0x3654	; 0x3654 <CLCD_GoTo>
		CLCD_WriteData(Lower + '0');
    3b7a:	89 81       	ldd	r24, Y+1	; 0x01
    3b7c:	80 5d       	subi	r24, 0xD0	; 208
    3b7e:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <CLCD_WriteData>
    3b82:	08 c0       	rjmp	.+16     	; 0x3b94 <CLCD_printHEXNum+0x18c>
	}
	else {
		CLCD_GoTo(2,9);
    3b84:	82 e0       	ldi	r24, 0x02	; 2
    3b86:	69 e0       	ldi	r22, 0x09	; 9
    3b88:	0e 94 2a 1b 	call	0x3654	; 0x3654 <CLCD_GoTo>
		CLCD_WriteData(Lower + 'A'-10);
    3b8c:	89 81       	ldd	r24, Y+1	; 0x01
    3b8e:	89 5c       	subi	r24, 0xC9	; 201
    3b90:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <CLCD_WriteData>
	}
}
    3b94:	a5 96       	adiw	r28, 0x25	; 37
    3b96:	0f b6       	in	r0, 0x3f	; 63
    3b98:	f8 94       	cli
    3b9a:	de bf       	out	0x3e, r29	; 62
    3b9c:	0f be       	out	0x3f, r0	; 63
    3b9e:	cd bf       	out	0x3d, r28	; 61
    3ba0:	cf 91       	pop	r28
    3ba2:	df 91       	pop	r29
    3ba4:	1f 91       	pop	r17
    3ba6:	0f 91       	pop	r16
    3ba8:	ff 90       	pop	r15
    3baa:	ef 90       	pop	r14
    3bac:	df 90       	pop	r13
    3bae:	cf 90       	pop	r12
    3bb0:	bf 90       	pop	r11
    3bb2:	af 90       	pop	r10
    3bb4:	08 95       	ret

00003bb6 <CLCD_WriteData_Pos>:

void CLCD_WriteData_Pos(u8 Data, u8 Row, u8 Col){
    3bb6:	df 93       	push	r29
    3bb8:	cf 93       	push	r28
    3bba:	00 d0       	rcall	.+0      	; 0x3bbc <CLCD_WriteData_Pos+0x6>
    3bbc:	0f 92       	push	r0
    3bbe:	cd b7       	in	r28, 0x3d	; 61
    3bc0:	de b7       	in	r29, 0x3e	; 62
    3bc2:	89 83       	std	Y+1, r24	; 0x01
    3bc4:	6a 83       	std	Y+2, r22	; 0x02
    3bc6:	4b 83       	std	Y+3, r20	; 0x03
	CLCD_GoTo(Row,Col);
    3bc8:	8a 81       	ldd	r24, Y+2	; 0x02
    3bca:	6b 81       	ldd	r22, Y+3	; 0x03
    3bcc:	0e 94 2a 1b 	call	0x3654	; 0x3654 <CLCD_GoTo>
	CLCD_WriteData(Data);
    3bd0:	89 81       	ldd	r24, Y+1	; 0x01
    3bd2:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <CLCD_WriteData>
}
    3bd6:	0f 90       	pop	r0
    3bd8:	0f 90       	pop	r0
    3bda:	0f 90       	pop	r0
    3bdc:	cf 91       	pop	r28
    3bde:	df 91       	pop	r29
    3be0:	08 95       	ret

00003be2 <CLCD_WriteString_Pos>:

void CLCD_WriteString_Pos(u8 *String, u8 Row, u8 Col){
    3be2:	df 93       	push	r29
    3be4:	cf 93       	push	r28
    3be6:	00 d0       	rcall	.+0      	; 0x3be8 <CLCD_WriteString_Pos+0x6>
    3be8:	00 d0       	rcall	.+0      	; 0x3bea <CLCD_WriteString_Pos+0x8>
    3bea:	cd b7       	in	r28, 0x3d	; 61
    3bec:	de b7       	in	r29, 0x3e	; 62
    3bee:	9a 83       	std	Y+2, r25	; 0x02
    3bf0:	89 83       	std	Y+1, r24	; 0x01
    3bf2:	6b 83       	std	Y+3, r22	; 0x03
    3bf4:	4c 83       	std	Y+4, r20	; 0x04
	CLCD_GoTo(Row,Col);
    3bf6:	8b 81       	ldd	r24, Y+3	; 0x03
    3bf8:	6c 81       	ldd	r22, Y+4	; 0x04
    3bfa:	0e 94 2a 1b 	call	0x3654	; 0x3654 <CLCD_GoTo>
	CLCD_WriteString(String);
    3bfe:	89 81       	ldd	r24, Y+1	; 0x01
    3c00:	9a 81       	ldd	r25, Y+2	; 0x02
    3c02:	0e 94 0e 1b 	call	0x361c	; 0x361c <CLCD_WriteString>
}
    3c06:	0f 90       	pop	r0
    3c08:	0f 90       	pop	r0
    3c0a:	0f 90       	pop	r0
    3c0c:	0f 90       	pop	r0
    3c0e:	cf 91       	pop	r28
    3c10:	df 91       	pop	r29
    3c12:	08 95       	ret

00003c14 <CLCD_WriteNum_Pos>:

void CLCD_WriteNum_Pos(u64 Num, u8 Row, u8 Col){
    3c14:	af 92       	push	r10
    3c16:	bf 92       	push	r11
    3c18:	cf 92       	push	r12
    3c1a:	df 92       	push	r13
    3c1c:	ef 92       	push	r14
    3c1e:	ff 92       	push	r15
    3c20:	0f 93       	push	r16
    3c22:	1f 93       	push	r17
    3c24:	df 93       	push	r29
    3c26:	cf 93       	push	r28
    3c28:	cd b7       	in	r28, 0x3d	; 61
    3c2a:	de b7       	in	r29, 0x3e	; 62
    3c2c:	2a 97       	sbiw	r28, 0x0a	; 10
    3c2e:	0f b6       	in	r0, 0x3f	; 63
    3c30:	f8 94       	cli
    3c32:	de bf       	out	0x3e, r29	; 62
    3c34:	0f be       	out	0x3f, r0	; 63
    3c36:	cd bf       	out	0x3d, r28	; 61
    3c38:	29 83       	std	Y+1, r18	; 0x01
    3c3a:	3a 83       	std	Y+2, r19	; 0x02
    3c3c:	4b 83       	std	Y+3, r20	; 0x03
    3c3e:	5c 83       	std	Y+4, r21	; 0x04
    3c40:	6d 83       	std	Y+5, r22	; 0x05
    3c42:	7e 83       	std	Y+6, r23	; 0x06
    3c44:	8f 83       	std	Y+7, r24	; 0x07
    3c46:	98 87       	std	Y+8, r25	; 0x08
    3c48:	09 87       	std	Y+9, r16	; 0x09
    3c4a:	ea 86       	std	Y+10, r14	; 0x0a
	CLCD_GoTo(Row,Col);
    3c4c:	89 85       	ldd	r24, Y+9	; 0x09
    3c4e:	6a 85       	ldd	r22, Y+10	; 0x0a
    3c50:	0e 94 2a 1b 	call	0x3654	; 0x3654 <CLCD_GoTo>
	CLCD_WriteNum(Num);
    3c54:	a9 80       	ldd	r10, Y+1	; 0x01
    3c56:	ba 80       	ldd	r11, Y+2	; 0x02
    3c58:	cb 80       	ldd	r12, Y+3	; 0x03
    3c5a:	dc 80       	ldd	r13, Y+4	; 0x04
    3c5c:	ed 80       	ldd	r14, Y+5	; 0x05
    3c5e:	fe 80       	ldd	r15, Y+6	; 0x06
    3c60:	0f 81       	ldd	r16, Y+7	; 0x07
    3c62:	18 85       	ldd	r17, Y+8	; 0x08
    3c64:	2a 2d       	mov	r18, r10
    3c66:	3b 2d       	mov	r19, r11
    3c68:	4c 2d       	mov	r20, r12
    3c6a:	5d 2d       	mov	r21, r13
    3c6c:	6e 2d       	mov	r22, r14
    3c6e:	7f 2d       	mov	r23, r15
    3c70:	80 2f       	mov	r24, r16
    3c72:	91 2f       	mov	r25, r17
    3c74:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <CLCD_WriteNum>
}
    3c78:	2a 96       	adiw	r28, 0x0a	; 10
    3c7a:	0f b6       	in	r0, 0x3f	; 63
    3c7c:	f8 94       	cli
    3c7e:	de bf       	out	0x3e, r29	; 62
    3c80:	0f be       	out	0x3f, r0	; 63
    3c82:	cd bf       	out	0x3d, r28	; 61
    3c84:	cf 91       	pop	r28
    3c86:	df 91       	pop	r29
    3c88:	1f 91       	pop	r17
    3c8a:	0f 91       	pop	r16
    3c8c:	ff 90       	pop	r15
    3c8e:	ef 90       	pop	r14
    3c90:	df 90       	pop	r13
    3c92:	cf 90       	pop	r12
    3c94:	bf 90       	pop	r11
    3c96:	af 90       	pop	r10
    3c98:	08 95       	ret

00003c9a <BushButton_voidInit>:
 *      Author: hp
 */

#include "BushButton_Interface.h"

void BushButton_voidInit(Button *button){
    3c9a:	df 93       	push	r29
    3c9c:	cf 93       	push	r28
    3c9e:	00 d0       	rcall	.+0      	; 0x3ca0 <BushButton_voidInit+0x6>
    3ca0:	cd b7       	in	r28, 0x3d	; 61
    3ca2:	de b7       	in	r29, 0x3e	; 62
    3ca4:	9a 83       	std	Y+2, r25	; 0x02
    3ca6:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPinDirection(button->button_port, button->button_pin, DIO_u8INPUT);
    3ca8:	e9 81       	ldd	r30, Y+1	; 0x01
    3caa:	fa 81       	ldd	r31, Y+2	; 0x02
    3cac:	81 81       	ldd	r24, Z+1	; 0x01
    3cae:	e9 81       	ldd	r30, Y+1	; 0x01
    3cb0:	fa 81       	ldd	r31, Y+2	; 0x02
    3cb2:	90 81       	ld	r25, Z
    3cb4:	69 2f       	mov	r22, r25
    3cb6:	40 e0       	ldi	r20, 0x00	; 0
    3cb8:	0e 94 80 12 	call	0x2500	; 0x2500 <DIO_voidSetPinDirection>
	DIO_voidSetPinValue(button->button_port, button->button_pin, DIO_u8HIGH);
    3cbc:	e9 81       	ldd	r30, Y+1	; 0x01
    3cbe:	fa 81       	ldd	r31, Y+2	; 0x02
    3cc0:	81 81       	ldd	r24, Z+1	; 0x01
    3cc2:	e9 81       	ldd	r30, Y+1	; 0x01
    3cc4:	fa 81       	ldd	r31, Y+2	; 0x02
    3cc6:	90 81       	ld	r25, Z
    3cc8:	69 2f       	mov	r22, r25
    3cca:	41 e0       	ldi	r20, 0x01	; 1
    3ccc:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
}
    3cd0:	0f 90       	pop	r0
    3cd2:	0f 90       	pop	r0
    3cd4:	cf 91       	pop	r28
    3cd6:	df 91       	pop	r29
    3cd8:	08 95       	ret

00003cda <BushButton_voidRead>:

u8 BushButton_voidRead(Button *button){
    3cda:	df 93       	push	r29
    3cdc:	cf 93       	push	r28
    3cde:	00 d0       	rcall	.+0      	; 0x3ce0 <BushButton_voidRead+0x6>
    3ce0:	0f 92       	push	r0
    3ce2:	cd b7       	in	r28, 0x3d	; 61
    3ce4:	de b7       	in	r29, 0x3e	; 62
    3ce6:	9b 83       	std	Y+3, r25	; 0x03
    3ce8:	8a 83       	std	Y+2, r24	; 0x02
    u8 local_u8Read = DIO_u8GetPinValue(button->button_port, button->button_pin);
    3cea:	ea 81       	ldd	r30, Y+2	; 0x02
    3cec:	fb 81       	ldd	r31, Y+3	; 0x03
    3cee:	81 81       	ldd	r24, Z+1	; 0x01
    3cf0:	ea 81       	ldd	r30, Y+2	; 0x02
    3cf2:	fb 81       	ldd	r31, Y+3	; 0x03
    3cf4:	90 81       	ld	r25, Z
    3cf6:	69 2f       	mov	r22, r25
    3cf8:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <DIO_u8GetPinValue>
    3cfc:	89 83       	std	Y+1, r24	; 0x01
    static button_state lastButtonState = Button_RELEASED; // Static variable to remember the last state

    if (local_u8Read == 0 && lastButtonState == Button_RELEASED) {
    3cfe:	89 81       	ldd	r24, Y+1	; 0x01
    3d00:	88 23       	and	r24, r24
    3d02:	39 f4       	brne	.+14     	; 0x3d12 <BushButton_voidRead+0x38>
    3d04:	80 91 8a 02 	lds	r24, 0x028A
    3d08:	81 30       	cpi	r24, 0x01	; 1
    3d0a:	19 f4       	brne	.+6      	; 0x3d12 <BushButton_voidRead+0x38>
        // Button was just pressed
        lastButtonState = Button_PRESSESD;
    3d0c:	10 92 8a 02 	sts	0x028A, r1
    3d10:	0e c0       	rjmp	.+28     	; 0x3d2e <BushButton_voidRead+0x54>
    } else if (local_u8Read == 1 && lastButtonState == Button_PRESSESD) {
    3d12:	89 81       	ldd	r24, Y+1	; 0x01
    3d14:	81 30       	cpi	r24, 0x01	; 1
    3d16:	41 f4       	brne	.+16     	; 0x3d28 <BushButton_voidRead+0x4e>
    3d18:	80 91 8a 02 	lds	r24, 0x028A
    3d1c:	88 23       	and	r24, r24
    3d1e:	21 f4       	brne	.+8      	; 0x3d28 <BushButton_voidRead+0x4e>
        // Button was just released
        lastButtonState = Button_RELEASED;
    3d20:	81 e0       	ldi	r24, 0x01	; 1
    3d22:	80 93 8a 02 	sts	0x028A, r24
    3d26:	03 c0       	rjmp	.+6      	; 0x3d2e <BushButton_voidRead+0x54>
    }else {
    	lastButtonState = Button_RELEASED;
    3d28:	81 e0       	ldi	r24, 0x01	; 1
    3d2a:	80 93 8a 02 	sts	0x028A, r24
    }

    return lastButtonState;
    3d2e:	80 91 8a 02 	lds	r24, 0x028A
}
    3d32:	0f 90       	pop	r0
    3d34:	0f 90       	pop	r0
    3d36:	0f 90       	pop	r0
    3d38:	cf 91       	pop	r28
    3d3a:	df 91       	pop	r29
    3d3c:	08 95       	ret

00003d3e <SevenSegment_voidInit>:
#include "SEVEN_SEGMENT_Interface.h"
#include "util/delay.h"

u32 SSD_Arr[10] = {ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};

void SevenSegment_voidInit(){
    3d3e:	df 93       	push	r29
    3d40:	cf 93       	push	r28
    3d42:	cd b7       	in	r28, 0x3d	; 61
    3d44:	de b7       	in	r29, 0x3e	; 62
	DIO_voidSetPortDirection(SEVEN_SEGMENT_PORT, 0xff);
    3d46:	81 e0       	ldi	r24, 0x01	; 1
    3d48:	6f ef       	ldi	r22, 0xFF	; 255
    3d4a:	0e 94 84 14 	call	0x2908	; 0x2908 <DIO_voidSetPortDirection>
	DIO_voidSetPortDirection(SEVEN_SEGMENT_PORT2, 0xff);
    3d4e:	82 e0       	ldi	r24, 0x02	; 2
    3d50:	6f ef       	ldi	r22, 0xFF	; 255
    3d52:	0e 94 84 14 	call	0x2908	; 0x2908 <DIO_voidSetPortDirection>
}
    3d56:	cf 91       	pop	r28
    3d58:	df 91       	pop	r29
    3d5a:	08 95       	ret

00003d5c <SevenSegment_voidDispaly>:

void SevenSegment_voidDispaly(u8 Copy_u8Seconds){
    3d5c:	df 93       	push	r29
    3d5e:	cf 93       	push	r28
    3d60:	cd b7       	in	r28, 0x3d	; 61
    3d62:	de b7       	in	r29, 0x3e	; 62
    3d64:	a0 97       	sbiw	r28, 0x20	; 32
    3d66:	0f b6       	in	r0, 0x3f	; 63
    3d68:	f8 94       	cli
    3d6a:	de bf       	out	0x3e, r29	; 62
    3d6c:	0f be       	out	0x3f, r0	; 63
    3d6e:	cd bf       	out	0x3d, r28	; 61
    3d70:	88 a3       	std	Y+32, r24	; 0x20
	u8 i;
	if (Copy_u8Seconds < 10){
    3d72:	88 a1       	ldd	r24, Y+32	; 0x20
    3d74:	8a 30       	cpi	r24, 0x0A	; 10
    3d76:	08 f0       	brcs	.+2      	; 0x3d7a <SevenSegment_voidDispaly+0x1e>
    3d78:	90 c0       	rjmp	.+288    	; 0x3e9a <SevenSegment_voidDispaly+0x13e>
		for(i = Copy_u8Seconds; i > 0; i--)
    3d7a:	88 a1       	ldd	r24, Y+32	; 0x20
    3d7c:	8f 8f       	std	Y+31, r24	; 0x1f
    3d7e:	88 c0       	rjmp	.+272    	; 0x3e90 <SevenSegment_voidDispaly+0x134>
		{
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[i]);
    3d80:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3d82:	88 2f       	mov	r24, r24
    3d84:	90 e0       	ldi	r25, 0x00	; 0
    3d86:	88 0f       	add	r24, r24
    3d88:	99 1f       	adc	r25, r25
    3d8a:	88 0f       	add	r24, r24
    3d8c:	99 1f       	adc	r25, r25
    3d8e:	fc 01       	movw	r30, r24
    3d90:	e5 57       	subi	r30, 0x75	; 117
    3d92:	fd 4f       	sbci	r31, 0xFD	; 253
    3d94:	80 81       	ld	r24, Z
    3d96:	91 81       	ldd	r25, Z+1	; 0x01
    3d98:	a2 81       	ldd	r26, Z+2	; 0x02
    3d9a:	b3 81       	ldd	r27, Z+3	; 0x03
    3d9c:	98 2f       	mov	r25, r24
    3d9e:	81 e0       	ldi	r24, 0x01	; 1
    3da0:	69 2f       	mov	r22, r25
    3da2:	0e 94 c6 14 	call	0x298c	; 0x298c <DIO_voidSetPortValue>
    3da6:	80 e0       	ldi	r24, 0x00	; 0
    3da8:	90 e0       	ldi	r25, 0x00	; 0
    3daa:	aa ef       	ldi	r26, 0xFA	; 250
    3dac:	b3 e4       	ldi	r27, 0x43	; 67
    3dae:	89 8f       	std	Y+25, r24	; 0x19
    3db0:	9a 8f       	std	Y+26, r25	; 0x1a
    3db2:	ab 8f       	std	Y+27, r26	; 0x1b
    3db4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3db6:	69 8d       	ldd	r22, Y+25	; 0x19
    3db8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3dba:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3dbc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3dbe:	20 e0       	ldi	r18, 0x00	; 0
    3dc0:	30 e0       	ldi	r19, 0x00	; 0
    3dc2:	4a ef       	ldi	r20, 0xFA	; 250
    3dc4:	54 e4       	ldi	r21, 0x44	; 68
    3dc6:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    3dca:	dc 01       	movw	r26, r24
    3dcc:	cb 01       	movw	r24, r22
    3dce:	8d 8b       	std	Y+21, r24	; 0x15
    3dd0:	9e 8b       	std	Y+22, r25	; 0x16
    3dd2:	af 8b       	std	Y+23, r26	; 0x17
    3dd4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3dd6:	6d 89       	ldd	r22, Y+21	; 0x15
    3dd8:	7e 89       	ldd	r23, Y+22	; 0x16
    3dda:	8f 89       	ldd	r24, Y+23	; 0x17
    3ddc:	98 8d       	ldd	r25, Y+24	; 0x18
    3dde:	20 e0       	ldi	r18, 0x00	; 0
    3de0:	30 e0       	ldi	r19, 0x00	; 0
    3de2:	40 e8       	ldi	r20, 0x80	; 128
    3de4:	5f e3       	ldi	r21, 0x3F	; 63
    3de6:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    3dea:	88 23       	and	r24, r24
    3dec:	2c f4       	brge	.+10     	; 0x3df8 <SevenSegment_voidDispaly+0x9c>
		__ticks = 1;
    3dee:	81 e0       	ldi	r24, 0x01	; 1
    3df0:	90 e0       	ldi	r25, 0x00	; 0
    3df2:	9c 8b       	std	Y+20, r25	; 0x14
    3df4:	8b 8b       	std	Y+19, r24	; 0x13
    3df6:	3f c0       	rjmp	.+126    	; 0x3e76 <SevenSegment_voidDispaly+0x11a>
	else if (__tmp > 65535)
    3df8:	6d 89       	ldd	r22, Y+21	; 0x15
    3dfa:	7e 89       	ldd	r23, Y+22	; 0x16
    3dfc:	8f 89       	ldd	r24, Y+23	; 0x17
    3dfe:	98 8d       	ldd	r25, Y+24	; 0x18
    3e00:	20 e0       	ldi	r18, 0x00	; 0
    3e02:	3f ef       	ldi	r19, 0xFF	; 255
    3e04:	4f e7       	ldi	r20, 0x7F	; 127
    3e06:	57 e4       	ldi	r21, 0x47	; 71
    3e08:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    3e0c:	18 16       	cp	r1, r24
    3e0e:	4c f5       	brge	.+82     	; 0x3e62 <SevenSegment_voidDispaly+0x106>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e10:	69 8d       	ldd	r22, Y+25	; 0x19
    3e12:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3e14:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3e16:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3e18:	20 e0       	ldi	r18, 0x00	; 0
    3e1a:	30 e0       	ldi	r19, 0x00	; 0
    3e1c:	40 e2       	ldi	r20, 0x20	; 32
    3e1e:	51 e4       	ldi	r21, 0x41	; 65
    3e20:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    3e24:	dc 01       	movw	r26, r24
    3e26:	cb 01       	movw	r24, r22
    3e28:	bc 01       	movw	r22, r24
    3e2a:	cd 01       	movw	r24, r26
    3e2c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e30:	dc 01       	movw	r26, r24
    3e32:	cb 01       	movw	r24, r22
    3e34:	9c 8b       	std	Y+20, r25	; 0x14
    3e36:	8b 8b       	std	Y+19, r24	; 0x13
    3e38:	0f c0       	rjmp	.+30     	; 0x3e58 <SevenSegment_voidDispaly+0xfc>
    3e3a:	88 ec       	ldi	r24, 0xC8	; 200
    3e3c:	90 e0       	ldi	r25, 0x00	; 0
    3e3e:	9a 8b       	std	Y+18, r25	; 0x12
    3e40:	89 8b       	std	Y+17, r24	; 0x11
    3e42:	89 89       	ldd	r24, Y+17	; 0x11
    3e44:	9a 89       	ldd	r25, Y+18	; 0x12
    3e46:	01 97       	sbiw	r24, 0x01	; 1
    3e48:	f1 f7       	brne	.-4      	; 0x3e46 <SevenSegment_voidDispaly+0xea>
    3e4a:	9a 8b       	std	Y+18, r25	; 0x12
    3e4c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e4e:	8b 89       	ldd	r24, Y+19	; 0x13
    3e50:	9c 89       	ldd	r25, Y+20	; 0x14
    3e52:	01 97       	sbiw	r24, 0x01	; 1
    3e54:	9c 8b       	std	Y+20, r25	; 0x14
    3e56:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e58:	8b 89       	ldd	r24, Y+19	; 0x13
    3e5a:	9c 89       	ldd	r25, Y+20	; 0x14
    3e5c:	00 97       	sbiw	r24, 0x00	; 0
    3e5e:	69 f7       	brne	.-38     	; 0x3e3a <SevenSegment_voidDispaly+0xde>
    3e60:	14 c0       	rjmp	.+40     	; 0x3e8a <SevenSegment_voidDispaly+0x12e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e62:	6d 89       	ldd	r22, Y+21	; 0x15
    3e64:	7e 89       	ldd	r23, Y+22	; 0x16
    3e66:	8f 89       	ldd	r24, Y+23	; 0x17
    3e68:	98 8d       	ldd	r25, Y+24	; 0x18
    3e6a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e6e:	dc 01       	movw	r26, r24
    3e70:	cb 01       	movw	r24, r22
    3e72:	9c 8b       	std	Y+20, r25	; 0x14
    3e74:	8b 8b       	std	Y+19, r24	; 0x13
    3e76:	8b 89       	ldd	r24, Y+19	; 0x13
    3e78:	9c 89       	ldd	r25, Y+20	; 0x14
    3e7a:	98 8b       	std	Y+16, r25	; 0x10
    3e7c:	8f 87       	std	Y+15, r24	; 0x0f
    3e7e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3e80:	98 89       	ldd	r25, Y+16	; 0x10
    3e82:	01 97       	sbiw	r24, 0x01	; 1
    3e84:	f1 f7       	brne	.-4      	; 0x3e82 <SevenSegment_voidDispaly+0x126>
    3e86:	98 8b       	std	Y+16, r25	; 0x10
    3e88:	8f 87       	std	Y+15, r24	; 0x0f
}

void SevenSegment_voidDispaly(u8 Copy_u8Seconds){
	u8 i;
	if (Copy_u8Seconds < 10){
		for(i = Copy_u8Seconds; i > 0; i--)
    3e8a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3e8c:	81 50       	subi	r24, 0x01	; 1
    3e8e:	8f 8f       	std	Y+31, r24	; 0x1f
    3e90:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3e92:	88 23       	and	r24, r24
    3e94:	09 f0       	breq	.+2      	; 0x3e98 <SevenSegment_voidDispaly+0x13c>
    3e96:	74 cf       	rjmp	.-280    	; 0x3d80 <SevenSegment_voidDispaly+0x24>
    3e98:	b3 c0       	rjmp	.+358    	; 0x4000 <SevenSegment_voidDispaly+0x2a4>
		{
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[i]);
			_delay_ms(500);
		}
	} else if (Copy_u8Seconds < 99){
    3e9a:	88 a1       	ldd	r24, Y+32	; 0x20
    3e9c:	83 36       	cpi	r24, 0x63	; 99
    3e9e:	08 f0       	brcs	.+2      	; 0x3ea2 <SevenSegment_voidDispaly+0x146>
    3ea0:	af c0       	rjmp	.+350    	; 0x4000 <SevenSegment_voidDispaly+0x2a4>
		u8 fnum,snum;
		for(i = Copy_u8Seconds; i > 0; i--)
    3ea2:	88 a1       	ldd	r24, Y+32	; 0x20
    3ea4:	8f 8f       	std	Y+31, r24	; 0x1f
    3ea6:	a8 c0       	rjmp	.+336    	; 0x3ff8 <SevenSegment_voidDispaly+0x29c>
		{
			fnum = i/10;
    3ea8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3eaa:	9a e0       	ldi	r25, 0x0A	; 10
    3eac:	69 2f       	mov	r22, r25
    3eae:	0e 94 13 3b 	call	0x7626	; 0x7626 <__udivmodqi4>
    3eb2:	8e 8f       	std	Y+30, r24	; 0x1e
			snum = i%10;
    3eb4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3eb6:	9a e0       	ldi	r25, 0x0A	; 10
    3eb8:	69 2f       	mov	r22, r25
    3eba:	0e 94 13 3b 	call	0x7626	; 0x7626 <__udivmodqi4>
    3ebe:	89 2f       	mov	r24, r25
    3ec0:	8d 8f       	std	Y+29, r24	; 0x1d
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[fnum]);
    3ec2:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3ec4:	88 2f       	mov	r24, r24
    3ec6:	90 e0       	ldi	r25, 0x00	; 0
    3ec8:	88 0f       	add	r24, r24
    3eca:	99 1f       	adc	r25, r25
    3ecc:	88 0f       	add	r24, r24
    3ece:	99 1f       	adc	r25, r25
    3ed0:	fc 01       	movw	r30, r24
    3ed2:	e5 57       	subi	r30, 0x75	; 117
    3ed4:	fd 4f       	sbci	r31, 0xFD	; 253
    3ed6:	80 81       	ld	r24, Z
    3ed8:	91 81       	ldd	r25, Z+1	; 0x01
    3eda:	a2 81       	ldd	r26, Z+2	; 0x02
    3edc:	b3 81       	ldd	r27, Z+3	; 0x03
    3ede:	98 2f       	mov	r25, r24
    3ee0:	81 e0       	ldi	r24, 0x01	; 1
    3ee2:	69 2f       	mov	r22, r25
    3ee4:	0e 94 c6 14 	call	0x298c	; 0x298c <DIO_voidSetPortValue>
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT2, SSD_Arr[snum]);
    3ee8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3eea:	88 2f       	mov	r24, r24
    3eec:	90 e0       	ldi	r25, 0x00	; 0
    3eee:	88 0f       	add	r24, r24
    3ef0:	99 1f       	adc	r25, r25
    3ef2:	88 0f       	add	r24, r24
    3ef4:	99 1f       	adc	r25, r25
    3ef6:	fc 01       	movw	r30, r24
    3ef8:	e5 57       	subi	r30, 0x75	; 117
    3efa:	fd 4f       	sbci	r31, 0xFD	; 253
    3efc:	80 81       	ld	r24, Z
    3efe:	91 81       	ldd	r25, Z+1	; 0x01
    3f00:	a2 81       	ldd	r26, Z+2	; 0x02
    3f02:	b3 81       	ldd	r27, Z+3	; 0x03
    3f04:	98 2f       	mov	r25, r24
    3f06:	82 e0       	ldi	r24, 0x02	; 2
    3f08:	69 2f       	mov	r22, r25
    3f0a:	0e 94 c6 14 	call	0x298c	; 0x298c <DIO_voidSetPortValue>
    3f0e:	80 e0       	ldi	r24, 0x00	; 0
    3f10:	90 e0       	ldi	r25, 0x00	; 0
    3f12:	aa ef       	ldi	r26, 0xFA	; 250
    3f14:	b3 e4       	ldi	r27, 0x43	; 67
    3f16:	8b 87       	std	Y+11, r24	; 0x0b
    3f18:	9c 87       	std	Y+12, r25	; 0x0c
    3f1a:	ad 87       	std	Y+13, r26	; 0x0d
    3f1c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f1e:	6b 85       	ldd	r22, Y+11	; 0x0b
    3f20:	7c 85       	ldd	r23, Y+12	; 0x0c
    3f22:	8d 85       	ldd	r24, Y+13	; 0x0d
    3f24:	9e 85       	ldd	r25, Y+14	; 0x0e
    3f26:	20 e0       	ldi	r18, 0x00	; 0
    3f28:	30 e0       	ldi	r19, 0x00	; 0
    3f2a:	4a ef       	ldi	r20, 0xFA	; 250
    3f2c:	54 e4       	ldi	r21, 0x44	; 68
    3f2e:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    3f32:	dc 01       	movw	r26, r24
    3f34:	cb 01       	movw	r24, r22
    3f36:	8f 83       	std	Y+7, r24	; 0x07
    3f38:	98 87       	std	Y+8, r25	; 0x08
    3f3a:	a9 87       	std	Y+9, r26	; 0x09
    3f3c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3f3e:	6f 81       	ldd	r22, Y+7	; 0x07
    3f40:	78 85       	ldd	r23, Y+8	; 0x08
    3f42:	89 85       	ldd	r24, Y+9	; 0x09
    3f44:	9a 85       	ldd	r25, Y+10	; 0x0a
    3f46:	20 e0       	ldi	r18, 0x00	; 0
    3f48:	30 e0       	ldi	r19, 0x00	; 0
    3f4a:	40 e8       	ldi	r20, 0x80	; 128
    3f4c:	5f e3       	ldi	r21, 0x3F	; 63
    3f4e:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    3f52:	88 23       	and	r24, r24
    3f54:	2c f4       	brge	.+10     	; 0x3f60 <SevenSegment_voidDispaly+0x204>
		__ticks = 1;
    3f56:	81 e0       	ldi	r24, 0x01	; 1
    3f58:	90 e0       	ldi	r25, 0x00	; 0
    3f5a:	9e 83       	std	Y+6, r25	; 0x06
    3f5c:	8d 83       	std	Y+5, r24	; 0x05
    3f5e:	3f c0       	rjmp	.+126    	; 0x3fde <SevenSegment_voidDispaly+0x282>
	else if (__tmp > 65535)
    3f60:	6f 81       	ldd	r22, Y+7	; 0x07
    3f62:	78 85       	ldd	r23, Y+8	; 0x08
    3f64:	89 85       	ldd	r24, Y+9	; 0x09
    3f66:	9a 85       	ldd	r25, Y+10	; 0x0a
    3f68:	20 e0       	ldi	r18, 0x00	; 0
    3f6a:	3f ef       	ldi	r19, 0xFF	; 255
    3f6c:	4f e7       	ldi	r20, 0x7F	; 127
    3f6e:	57 e4       	ldi	r21, 0x47	; 71
    3f70:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    3f74:	18 16       	cp	r1, r24
    3f76:	4c f5       	brge	.+82     	; 0x3fca <SevenSegment_voidDispaly+0x26e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f78:	6b 85       	ldd	r22, Y+11	; 0x0b
    3f7a:	7c 85       	ldd	r23, Y+12	; 0x0c
    3f7c:	8d 85       	ldd	r24, Y+13	; 0x0d
    3f7e:	9e 85       	ldd	r25, Y+14	; 0x0e
    3f80:	20 e0       	ldi	r18, 0x00	; 0
    3f82:	30 e0       	ldi	r19, 0x00	; 0
    3f84:	40 e2       	ldi	r20, 0x20	; 32
    3f86:	51 e4       	ldi	r21, 0x41	; 65
    3f88:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    3f8c:	dc 01       	movw	r26, r24
    3f8e:	cb 01       	movw	r24, r22
    3f90:	bc 01       	movw	r22, r24
    3f92:	cd 01       	movw	r24, r26
    3f94:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3f98:	dc 01       	movw	r26, r24
    3f9a:	cb 01       	movw	r24, r22
    3f9c:	9e 83       	std	Y+6, r25	; 0x06
    3f9e:	8d 83       	std	Y+5, r24	; 0x05
    3fa0:	0f c0       	rjmp	.+30     	; 0x3fc0 <SevenSegment_voidDispaly+0x264>
    3fa2:	88 ec       	ldi	r24, 0xC8	; 200
    3fa4:	90 e0       	ldi	r25, 0x00	; 0
    3fa6:	9c 83       	std	Y+4, r25	; 0x04
    3fa8:	8b 83       	std	Y+3, r24	; 0x03
    3faa:	8b 81       	ldd	r24, Y+3	; 0x03
    3fac:	9c 81       	ldd	r25, Y+4	; 0x04
    3fae:	01 97       	sbiw	r24, 0x01	; 1
    3fb0:	f1 f7       	brne	.-4      	; 0x3fae <SevenSegment_voidDispaly+0x252>
    3fb2:	9c 83       	std	Y+4, r25	; 0x04
    3fb4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fb6:	8d 81       	ldd	r24, Y+5	; 0x05
    3fb8:	9e 81       	ldd	r25, Y+6	; 0x06
    3fba:	01 97       	sbiw	r24, 0x01	; 1
    3fbc:	9e 83       	std	Y+6, r25	; 0x06
    3fbe:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fc0:	8d 81       	ldd	r24, Y+5	; 0x05
    3fc2:	9e 81       	ldd	r25, Y+6	; 0x06
    3fc4:	00 97       	sbiw	r24, 0x00	; 0
    3fc6:	69 f7       	brne	.-38     	; 0x3fa2 <SevenSegment_voidDispaly+0x246>
    3fc8:	14 c0       	rjmp	.+40     	; 0x3ff2 <SevenSegment_voidDispaly+0x296>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3fca:	6f 81       	ldd	r22, Y+7	; 0x07
    3fcc:	78 85       	ldd	r23, Y+8	; 0x08
    3fce:	89 85       	ldd	r24, Y+9	; 0x09
    3fd0:	9a 85       	ldd	r25, Y+10	; 0x0a
    3fd2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3fd6:	dc 01       	movw	r26, r24
    3fd8:	cb 01       	movw	r24, r22
    3fda:	9e 83       	std	Y+6, r25	; 0x06
    3fdc:	8d 83       	std	Y+5, r24	; 0x05
    3fde:	8d 81       	ldd	r24, Y+5	; 0x05
    3fe0:	9e 81       	ldd	r25, Y+6	; 0x06
    3fe2:	9a 83       	std	Y+2, r25	; 0x02
    3fe4:	89 83       	std	Y+1, r24	; 0x01
    3fe6:	89 81       	ldd	r24, Y+1	; 0x01
    3fe8:	9a 81       	ldd	r25, Y+2	; 0x02
    3fea:	01 97       	sbiw	r24, 0x01	; 1
    3fec:	f1 f7       	brne	.-4      	; 0x3fea <SevenSegment_voidDispaly+0x28e>
    3fee:	9a 83       	std	Y+2, r25	; 0x02
    3ff0:	89 83       	std	Y+1, r24	; 0x01
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[i]);
			_delay_ms(500);
		}
	} else if (Copy_u8Seconds < 99){
		u8 fnum,snum;
		for(i = Copy_u8Seconds; i > 0; i--)
    3ff2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3ff4:	81 50       	subi	r24, 0x01	; 1
    3ff6:	8f 8f       	std	Y+31, r24	; 0x1f
    3ff8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3ffa:	88 23       	and	r24, r24
    3ffc:	09 f0       	breq	.+2      	; 0x4000 <SevenSegment_voidDispaly+0x2a4>
    3ffe:	54 cf       	rjmp	.-344    	; 0x3ea8 <SevenSegment_voidDispaly+0x14c>
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[fnum]);
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT2, SSD_Arr[snum]);
			_delay_ms(500);
		}
	}
}
    4000:	a0 96       	adiw	r28, 0x20	; 32
    4002:	0f b6       	in	r0, 0x3f	; 63
    4004:	f8 94       	cli
    4006:	de bf       	out	0x3e, r29	; 62
    4008:	0f be       	out	0x3f, r0	; 63
    400a:	cd bf       	out	0x3d, r28	; 61
    400c:	cf 91       	pop	r28
    400e:	df 91       	pop	r29
    4010:	08 95       	ret

00004012 <LED_voidInit>:

#include "../../01-LIB/STD_TYPES.h"
#include "../../04-MCAL/01-DIO/DIO_Interface.h"
#include "../01-LED/LED_Interface.h"

void LED_voidInit(u8 u8PinNum){
    4012:	df 93       	push	r29
    4014:	cf 93       	push	r28
    4016:	0f 92       	push	r0
    4018:	cd b7       	in	r28, 0x3d	; 61
    401a:	de b7       	in	r29, 0x3e	; 62
    401c:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPinDirection(LED_PORT, u8PinNum, DIO_u8OUTPUT);
    401e:	82 e0       	ldi	r24, 0x02	; 2
    4020:	69 81       	ldd	r22, Y+1	; 0x01
    4022:	41 e0       	ldi	r20, 0x01	; 1
    4024:	0e 94 80 12 	call	0x2500	; 0x2500 <DIO_voidSetPinDirection>
}
    4028:	0f 90       	pop	r0
    402a:	cf 91       	pop	r28
    402c:	df 91       	pop	r29
    402e:	08 95       	ret

00004030 <LEDs_voidInit>:

void LEDs_voidInit(u8 u8PinNum){
    4030:	df 93       	push	r29
    4032:	cf 93       	push	r28
    4034:	0f 92       	push	r0
    4036:	cd b7       	in	r28, 0x3d	; 61
    4038:	de b7       	in	r29, 0x3e	; 62
    403a:	89 83       	std	Y+1, r24	; 0x01
	//DDRC = 0b00000111; //output(C0,C1,C2)
	DIO_voidSetPortDirection(LED_PORT, u8PinNum);
    403c:	82 e0       	ldi	r24, 0x02	; 2
    403e:	69 81       	ldd	r22, Y+1	; 0x01
    4040:	0e 94 84 14 	call	0x2908	; 0x2908 <DIO_voidSetPortDirection>
}
    4044:	0f 90       	pop	r0
    4046:	cf 91       	pop	r28
    4048:	df 91       	pop	r29
    404a:	08 95       	ret

0000404c <LED_voidON>:

void LED_voidON(u8 u8PinNum){
    404c:	df 93       	push	r29
    404e:	cf 93       	push	r28
    4050:	0f 92       	push	r0
    4052:	cd b7       	in	r28, 0x3d	; 61
    4054:	de b7       	in	r29, 0x3e	; 62
    4056:	89 83       	std	Y+1, r24	; 0x01
	//PORTC = 0b00000001; //high(C0,C1,C2)
	DIO_voidSetPinValue(LED_PORT, u8PinNum, DIO_u8HIGH);
    4058:	82 e0       	ldi	r24, 0x02	; 2
    405a:	69 81       	ldd	r22, Y+1	; 0x01
    405c:	41 e0       	ldi	r20, 0x01	; 1
    405e:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
}
    4062:	0f 90       	pop	r0
    4064:	cf 91       	pop	r28
    4066:	df 91       	pop	r29
    4068:	08 95       	ret

0000406a <LEDs_voidON>:

void LEDs_voidON(u8 u8PinNum){
    406a:	df 93       	push	r29
    406c:	cf 93       	push	r28
    406e:	0f 92       	push	r0
    4070:	cd b7       	in	r28, 0x3d	; 61
    4072:	de b7       	in	r29, 0x3e	; 62
    4074:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPortValue(LED_PORT, u8PinNum);
    4076:	82 e0       	ldi	r24, 0x02	; 2
    4078:	69 81       	ldd	r22, Y+1	; 0x01
    407a:	0e 94 c6 14 	call	0x298c	; 0x298c <DIO_voidSetPortValue>
}
    407e:	0f 90       	pop	r0
    4080:	cf 91       	pop	r28
    4082:	df 91       	pop	r29
    4084:	08 95       	ret

00004086 <LED_voidOFF>:

void LED_voidOFF(u8 u8PinNum){
    4086:	df 93       	push	r29
    4088:	cf 93       	push	r28
    408a:	0f 92       	push	r0
    408c:	cd b7       	in	r28, 0x3d	; 61
    408e:	de b7       	in	r29, 0x3e	; 62
    4090:	89 83       	std	Y+1, r24	; 0x01
	//PORTC = 0b00000000; //low(C0,C1,C2)
	DIO_voidSetPinValue(LED_PORT, u8PinNum, DIO_u8LOW);
    4092:	82 e0       	ldi	r24, 0x02	; 2
    4094:	69 81       	ldd	r22, Y+1	; 0x01
    4096:	40 e0       	ldi	r20, 0x00	; 0
    4098:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
}
    409c:	0f 90       	pop	r0
    409e:	cf 91       	pop	r28
    40a0:	df 91       	pop	r29
    40a2:	08 95       	ret

000040a4 <LEDs_voidOFF>:

void LEDs_voidOFF(u8 u8PinNum){
    40a4:	df 93       	push	r29
    40a6:	cf 93       	push	r28
    40a8:	0f 92       	push	r0
    40aa:	cd b7       	in	r28, 0x3d	; 61
    40ac:	de b7       	in	r29, 0x3e	; 62
    40ae:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPortValue(LED_PORT, u8PinNum);
    40b0:	82 e0       	ldi	r24, 0x02	; 2
    40b2:	69 81       	ldd	r22, Y+1	; 0x01
    40b4:	0e 94 c6 14 	call	0x298c	; 0x298c <DIO_voidSetPortValue>
}
    40b8:	0f 90       	pop	r0
    40ba:	cf 91       	pop	r28
    40bc:	df 91       	pop	r29
    40be:	08 95       	ret

000040c0 <app_init>:
 *      Author: hp
 */

#include "app.h"

void app_init(void){
    40c0:	df 93       	push	r29
    40c2:	cf 93       	push	r28
    40c4:	00 d0       	rcall	.+0      	; 0x40c6 <app_init+0x6>
    40c6:	00 d0       	rcall	.+0      	; 0x40c8 <app_init+0x8>
    40c8:	0f 92       	push	r0
    40ca:	cd b7       	in	r28, 0x3d	; 61
    40cc:	de b7       	in	r29, 0x3e	; 62
	Motor motor;
	motor.motor_port = MOTOR_PORT;
    40ce:	82 e0       	ldi	r24, 0x02	; 2
    40d0:	89 83       	std	Y+1, r24	; 0x01
	motor.motor_pin1 = MOTOR_PIN1;
    40d2:	84 e0       	ldi	r24, 0x04	; 4
    40d4:	8a 83       	std	Y+2, r24	; 0x02
	motor.motor_pin2 = MOTOR_PIN2;
    40d6:	85 e0       	ldi	r24, 0x05	; 5
    40d8:	8b 83       	std	Y+3, r24	; 0x03
	motor.motor_pin3 = MOTOR_PIN3;
    40da:	86 e0       	ldi	r24, 0x06	; 6
    40dc:	8c 83       	std	Y+4, r24	; 0x04
	motor.motor_pin4 = MOTOR_PIN4;
    40de:	87 e0       	ldi	r24, 0x07	; 7
    40e0:	8d 83       	std	Y+5, r24	; 0x05

	//LED init
	LED_voidInit(LED_PIN);
    40e2:	83 e0       	ldi	r24, 0x03	; 3
    40e4:	0e 94 09 20 	call	0x4012	; 0x4012 <LED_voidInit>
	//LCD init
	CLCD_init();
    40e8:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <CLCD_init>
	//KPD init
	KPD_init();
    40ec:	0e 94 d1 16 	call	0x2da2	; 0x2da2 <KPD_init>
	//MOTOR init
	DCMotor_init(&motor);
    40f0:	ce 01       	movw	r24, r28
    40f2:	01 96       	adiw	r24, 0x01	; 1
    40f4:	0e 94 01 16 	call	0x2c02	; 0x2c02 <DCMotor_init>
}
    40f8:	0f 90       	pop	r0
    40fa:	0f 90       	pop	r0
    40fc:	0f 90       	pop	r0
    40fe:	0f 90       	pop	r0
    4100:	0f 90       	pop	r0
    4102:	cf 91       	pop	r28
    4104:	df 91       	pop	r29
    4106:	08 95       	ret

00004108 <Welcom_Page>:

void Welcom_Page(void){
    4108:	0f 93       	push	r16
    410a:	1f 93       	push	r17
    410c:	df 93       	push	r29
    410e:	cf 93       	push	r28
    4110:	cd b7       	in	r28, 0x3d	; 61
    4112:	de b7       	in	r29, 0x3e	; 62
    4114:	c4 58       	subi	r28, 0x84	; 132
    4116:	d0 40       	sbci	r29, 0x00	; 0
    4118:	0f b6       	in	r0, 0x3f	; 63
    411a:	f8 94       	cli
    411c:	de bf       	out	0x3e, r29	; 62
    411e:	0f be       	out	0x3f, r0	; 63
    4120:	cd bf       	out	0x3d, r28	; 61
	//strings in LCD
	u8 happyface[]    = {0x1F,0x11,0x1B,0x11,0x1F,0x11,0x1F,0x00};
    4122:	ce 01       	movw	r24, r28
    4124:	8d 59       	subi	r24, 0x9D	; 157
    4126:	9f 4f       	sbci	r25, 0xFF	; 255
    4128:	ed 96       	adiw	r28, 0x3d	; 61
    412a:	9f af       	std	Y+63, r25	; 0x3f
    412c:	8e af       	std	Y+62, r24	; 0x3e
    412e:	ed 97       	sbiw	r28, 0x3d	; 61
    4130:	83 eb       	ldi	r24, 0xB3	; 179
    4132:	92 e0       	ldi	r25, 0x02	; 2
    4134:	ef 96       	adiw	r28, 0x3f	; 63
    4136:	9f af       	std	Y+63, r25	; 0x3f
    4138:	8e af       	std	Y+62, r24	; 0x3e
    413a:	ef 97       	sbiw	r28, 0x3f	; 63
    413c:	98 e0       	ldi	r25, 0x08	; 8
    413e:	c1 58       	subi	r28, 0x81	; 129
    4140:	df 4f       	sbci	r29, 0xFF	; 255
    4142:	98 83       	st	Y, r25
    4144:	cf 57       	subi	r28, 0x7F	; 127
    4146:	d0 40       	sbci	r29, 0x00	; 0
    4148:	ef 96       	adiw	r28, 0x3f	; 63
    414a:	ae ad       	ldd	r26, Y+62	; 0x3e
    414c:	bf ad       	ldd	r27, Y+63	; 0x3f
    414e:	ef 97       	sbiw	r28, 0x3f	; 63
    4150:	0c 90       	ld	r0, X
    4152:	ef 96       	adiw	r28, 0x3f	; 63
    4154:	ee ad       	ldd	r30, Y+62	; 0x3e
    4156:	ff ad       	ldd	r31, Y+63	; 0x3f
    4158:	ef 97       	sbiw	r28, 0x3f	; 63
    415a:	31 96       	adiw	r30, 0x01	; 1
    415c:	ef 96       	adiw	r28, 0x3f	; 63
    415e:	ff af       	std	Y+63, r31	; 0x3f
    4160:	ee af       	std	Y+62, r30	; 0x3e
    4162:	ef 97       	sbiw	r28, 0x3f	; 63
    4164:	ed 96       	adiw	r28, 0x3d	; 61
    4166:	ae ad       	ldd	r26, Y+62	; 0x3e
    4168:	bf ad       	ldd	r27, Y+63	; 0x3f
    416a:	ed 97       	sbiw	r28, 0x3d	; 61
    416c:	0c 92       	st	X, r0
    416e:	ed 96       	adiw	r28, 0x3d	; 61
    4170:	ee ad       	ldd	r30, Y+62	; 0x3e
    4172:	ff ad       	ldd	r31, Y+63	; 0x3f
    4174:	ed 97       	sbiw	r28, 0x3d	; 61
    4176:	31 96       	adiw	r30, 0x01	; 1
    4178:	ed 96       	adiw	r28, 0x3d	; 61
    417a:	ff af       	std	Y+63, r31	; 0x3f
    417c:	ee af       	std	Y+62, r30	; 0x3e
    417e:	ed 97       	sbiw	r28, 0x3d	; 61
    4180:	c1 58       	subi	r28, 0x81	; 129
    4182:	df 4f       	sbci	r29, 0xFF	; 255
    4184:	f8 81       	ld	r31, Y
    4186:	cf 57       	subi	r28, 0x7F	; 127
    4188:	d0 40       	sbci	r29, 0x00	; 0
    418a:	f1 50       	subi	r31, 0x01	; 1
    418c:	c1 58       	subi	r28, 0x81	; 129
    418e:	df 4f       	sbci	r29, 0xFF	; 255
    4190:	f8 83       	st	Y, r31
    4192:	cf 57       	subi	r28, 0x7F	; 127
    4194:	d0 40       	sbci	r29, 0x00	; 0
    4196:	c1 58       	subi	r28, 0x81	; 129
    4198:	df 4f       	sbci	r29, 0xFF	; 255
    419a:	88 81       	ld	r24, Y
    419c:	cf 57       	subi	r28, 0x7F	; 127
    419e:	d0 40       	sbci	r29, 0x00	; 0
    41a0:	88 23       	and	r24, r24
    41a2:	91 f6       	brne	.-92     	; 0x4148 <Welcom_Page+0x40>
	u8 nullChar[]     = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
    41a4:	ce 01       	movw	r24, r28
    41a6:	85 59       	subi	r24, 0x95	; 149
    41a8:	9f 4f       	sbci	r25, 0xFF	; 255
    41aa:	28 e0       	ldi	r18, 0x08	; 8
    41ac:	fc 01       	movw	r30, r24
    41ae:	df 01       	movw	r26, r30
    41b0:	82 2f       	mov	r24, r18
    41b2:	1d 92       	st	X+, r1
    41b4:	8a 95       	dec	r24
    41b6:	e9 f7       	brne	.-6      	; 0x41b2 <Welcom_Page+0xaa>

	// Define character at different CGRAM addresses
	CLCD_Draw_Char(1,happyface);
    41b8:	9e 01       	movw	r18, r28
    41ba:	2d 59       	subi	r18, 0x9D	; 157
    41bc:	3f 4f       	sbci	r19, 0xFF	; 255
    41be:	81 e0       	ldi	r24, 0x01	; 1
    41c0:	b9 01       	movw	r22, r18
    41c2:	0e 94 d2 1c 	call	0x39a4	; 0x39a4 <CLCD_Draw_Char>
	CLCD_Draw_Char(0,nullChar);
    41c6:	9e 01       	movw	r18, r28
    41c8:	25 59       	subi	r18, 0x95	; 149
    41ca:	3f 4f       	sbci	r19, 0xFF	; 255
    41cc:	80 e0       	ldi	r24, 0x00	; 0
    41ce:	b9 01       	movw	r22, r18
    41d0:	0e 94 d2 1c 	call	0x39a4	; 0x39a4 <CLCD_Draw_Char>
	u8 wordWELCOME[]  = "WELCOME";
    41d4:	ce 01       	movw	r24, r28
    41d6:	8d 58       	subi	r24, 0x8D	; 141
    41d8:	9f 4f       	sbci	r25, 0xFF	; 255
    41da:	c0 58       	subi	r28, 0x80	; 128
    41dc:	df 4f       	sbci	r29, 0xFF	; 255
    41de:	99 83       	std	Y+1, r25	; 0x01
    41e0:	88 83       	st	Y, r24
    41e2:	c0 58       	subi	r28, 0x80	; 128
    41e4:	d0 40       	sbci	r29, 0x00	; 0
    41e6:	a3 e7       	ldi	r26, 0x73	; 115
    41e8:	b0 e0       	ldi	r27, 0x00	; 0
    41ea:	ce 57       	subi	r28, 0x7E	; 126
    41ec:	df 4f       	sbci	r29, 0xFF	; 255
    41ee:	b9 83       	std	Y+1, r27	; 0x01
    41f0:	a8 83       	st	Y, r26
    41f2:	c2 58       	subi	r28, 0x82	; 130
    41f4:	d0 40       	sbci	r29, 0x00	; 0
    41f6:	b8 e0       	ldi	r27, 0x08	; 8
    41f8:	cc 57       	subi	r28, 0x7C	; 124
    41fa:	df 4f       	sbci	r29, 0xFF	; 255
    41fc:	b8 83       	st	Y, r27
    41fe:	c4 58       	subi	r28, 0x84	; 132
    4200:	d0 40       	sbci	r29, 0x00	; 0
    4202:	ce 57       	subi	r28, 0x7E	; 126
    4204:	df 4f       	sbci	r29, 0xFF	; 255
    4206:	e8 81       	ld	r30, Y
    4208:	f9 81       	ldd	r31, Y+1	; 0x01
    420a:	c2 58       	subi	r28, 0x82	; 130
    420c:	d0 40       	sbci	r29, 0x00	; 0
    420e:	00 80       	ld	r0, Z
    4210:	ce 57       	subi	r28, 0x7E	; 126
    4212:	df 4f       	sbci	r29, 0xFF	; 255
    4214:	88 81       	ld	r24, Y
    4216:	99 81       	ldd	r25, Y+1	; 0x01
    4218:	c2 58       	subi	r28, 0x82	; 130
    421a:	d0 40       	sbci	r29, 0x00	; 0
    421c:	01 96       	adiw	r24, 0x01	; 1
    421e:	ce 57       	subi	r28, 0x7E	; 126
    4220:	df 4f       	sbci	r29, 0xFF	; 255
    4222:	99 83       	std	Y+1, r25	; 0x01
    4224:	88 83       	st	Y, r24
    4226:	c2 58       	subi	r28, 0x82	; 130
    4228:	d0 40       	sbci	r29, 0x00	; 0
    422a:	c0 58       	subi	r28, 0x80	; 128
    422c:	df 4f       	sbci	r29, 0xFF	; 255
    422e:	a8 81       	ld	r26, Y
    4230:	b9 81       	ldd	r27, Y+1	; 0x01
    4232:	c0 58       	subi	r28, 0x80	; 128
    4234:	d0 40       	sbci	r29, 0x00	; 0
    4236:	0c 92       	st	X, r0
    4238:	c0 58       	subi	r28, 0x80	; 128
    423a:	df 4f       	sbci	r29, 0xFF	; 255
    423c:	e8 81       	ld	r30, Y
    423e:	f9 81       	ldd	r31, Y+1	; 0x01
    4240:	c0 58       	subi	r28, 0x80	; 128
    4242:	d0 40       	sbci	r29, 0x00	; 0
    4244:	31 96       	adiw	r30, 0x01	; 1
    4246:	c0 58       	subi	r28, 0x80	; 128
    4248:	df 4f       	sbci	r29, 0xFF	; 255
    424a:	f9 83       	std	Y+1, r31	; 0x01
    424c:	e8 83       	st	Y, r30
    424e:	c0 58       	subi	r28, 0x80	; 128
    4250:	d0 40       	sbci	r29, 0x00	; 0
    4252:	cc 57       	subi	r28, 0x7C	; 124
    4254:	df 4f       	sbci	r29, 0xFF	; 255
    4256:	f8 81       	ld	r31, Y
    4258:	c4 58       	subi	r28, 0x84	; 132
    425a:	d0 40       	sbci	r29, 0x00	; 0
    425c:	f1 50       	subi	r31, 0x01	; 1
    425e:	cc 57       	subi	r28, 0x7C	; 124
    4260:	df 4f       	sbci	r29, 0xFF	; 255
    4262:	f8 83       	st	Y, r31
    4264:	c4 58       	subi	r28, 0x84	; 132
    4266:	d0 40       	sbci	r29, 0x00	; 0
    4268:	cc 57       	subi	r28, 0x7C	; 124
    426a:	df 4f       	sbci	r29, 0xFF	; 255
    426c:	88 81       	ld	r24, Y
    426e:	c4 58       	subi	r28, 0x84	; 132
    4270:	d0 40       	sbci	r29, 0x00	; 0
    4272:	88 23       	and	r24, r24
    4274:	31 f6       	brne	.-116    	; 0x4202 <Welcom_Page+0xfa>

	//Welcome Screen
	CLCD_GoTo(1,6);
    4276:	81 e0       	ldi	r24, 0x01	; 1
    4278:	66 e0       	ldi	r22, 0x06	; 6
    427a:	0e 94 2a 1b 	call	0x3654	; 0x3654 <CLCD_GoTo>
	CLCD_WriteString(wordWELCOME);
    427e:	ce 01       	movw	r24, r28
    4280:	8d 58       	subi	r24, 0x8D	; 141
    4282:	9f 4f       	sbci	r25, 0xFF	; 255
    4284:	0e 94 0e 1b 	call	0x361c	; 0x361c <CLCD_WriteString>

	CLCD_WriteData_Pos(1,2,1);
    4288:	81 e0       	ldi	r24, 0x01	; 1
    428a:	62 e0       	ldi	r22, 0x02	; 2
    428c:	41 e0       	ldi	r20, 0x01	; 1
    428e:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>
    4292:	fe 01       	movw	r30, r28
    4294:	e1 5a       	subi	r30, 0xA1	; 161
    4296:	ff 4f       	sbci	r31, 0xFF	; 255
    4298:	80 e0       	ldi	r24, 0x00	; 0
    429a:	90 e0       	ldi	r25, 0x00	; 0
    429c:	aa ef       	ldi	r26, 0xFA	; 250
    429e:	b3 e4       	ldi	r27, 0x43	; 67
    42a0:	80 83       	st	Z, r24
    42a2:	91 83       	std	Z+1, r25	; 0x01
    42a4:	a2 83       	std	Z+2, r26	; 0x02
    42a6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    42a8:	8e 01       	movw	r16, r28
    42aa:	05 5a       	subi	r16, 0xA5	; 165
    42ac:	1f 4f       	sbci	r17, 0xFF	; 255
    42ae:	fe 01       	movw	r30, r28
    42b0:	e1 5a       	subi	r30, 0xA1	; 161
    42b2:	ff 4f       	sbci	r31, 0xFF	; 255
    42b4:	60 81       	ld	r22, Z
    42b6:	71 81       	ldd	r23, Z+1	; 0x01
    42b8:	82 81       	ldd	r24, Z+2	; 0x02
    42ba:	93 81       	ldd	r25, Z+3	; 0x03
    42bc:	20 e0       	ldi	r18, 0x00	; 0
    42be:	30 e0       	ldi	r19, 0x00	; 0
    42c0:	4a ef       	ldi	r20, 0xFA	; 250
    42c2:	54 e4       	ldi	r21, 0x44	; 68
    42c4:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    42c8:	dc 01       	movw	r26, r24
    42ca:	cb 01       	movw	r24, r22
    42cc:	f8 01       	movw	r30, r16
    42ce:	80 83       	st	Z, r24
    42d0:	91 83       	std	Z+1, r25	; 0x01
    42d2:	a2 83       	std	Z+2, r26	; 0x02
    42d4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    42d6:	fe 01       	movw	r30, r28
    42d8:	e5 5a       	subi	r30, 0xA5	; 165
    42da:	ff 4f       	sbci	r31, 0xFF	; 255
    42dc:	60 81       	ld	r22, Z
    42de:	71 81       	ldd	r23, Z+1	; 0x01
    42e0:	82 81       	ldd	r24, Z+2	; 0x02
    42e2:	93 81       	ldd	r25, Z+3	; 0x03
    42e4:	20 e0       	ldi	r18, 0x00	; 0
    42e6:	30 e0       	ldi	r19, 0x00	; 0
    42e8:	40 e8       	ldi	r20, 0x80	; 128
    42ea:	5f e3       	ldi	r21, 0x3F	; 63
    42ec:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    42f0:	88 23       	and	r24, r24
    42f2:	44 f4       	brge	.+16     	; 0x4304 <Welcom_Page+0x1fc>
		__ticks = 1;
    42f4:	fe 01       	movw	r30, r28
    42f6:	e7 5a       	subi	r30, 0xA7	; 167
    42f8:	ff 4f       	sbci	r31, 0xFF	; 255
    42fa:	81 e0       	ldi	r24, 0x01	; 1
    42fc:	90 e0       	ldi	r25, 0x00	; 0
    42fe:	91 83       	std	Z+1, r25	; 0x01
    4300:	80 83       	st	Z, r24
    4302:	64 c0       	rjmp	.+200    	; 0x43cc <Welcom_Page+0x2c4>
	else if (__tmp > 65535)
    4304:	fe 01       	movw	r30, r28
    4306:	e5 5a       	subi	r30, 0xA5	; 165
    4308:	ff 4f       	sbci	r31, 0xFF	; 255
    430a:	60 81       	ld	r22, Z
    430c:	71 81       	ldd	r23, Z+1	; 0x01
    430e:	82 81       	ldd	r24, Z+2	; 0x02
    4310:	93 81       	ldd	r25, Z+3	; 0x03
    4312:	20 e0       	ldi	r18, 0x00	; 0
    4314:	3f ef       	ldi	r19, 0xFF	; 255
    4316:	4f e7       	ldi	r20, 0x7F	; 127
    4318:	57 e4       	ldi	r21, 0x47	; 71
    431a:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    431e:	18 16       	cp	r1, r24
    4320:	0c f0       	brlt	.+2      	; 0x4324 <Welcom_Page+0x21c>
    4322:	43 c0       	rjmp	.+134    	; 0x43aa <Welcom_Page+0x2a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4324:	fe 01       	movw	r30, r28
    4326:	e1 5a       	subi	r30, 0xA1	; 161
    4328:	ff 4f       	sbci	r31, 0xFF	; 255
    432a:	60 81       	ld	r22, Z
    432c:	71 81       	ldd	r23, Z+1	; 0x01
    432e:	82 81       	ldd	r24, Z+2	; 0x02
    4330:	93 81       	ldd	r25, Z+3	; 0x03
    4332:	20 e0       	ldi	r18, 0x00	; 0
    4334:	30 e0       	ldi	r19, 0x00	; 0
    4336:	40 e2       	ldi	r20, 0x20	; 32
    4338:	51 e4       	ldi	r21, 0x41	; 65
    433a:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    433e:	dc 01       	movw	r26, r24
    4340:	cb 01       	movw	r24, r22
    4342:	8e 01       	movw	r16, r28
    4344:	07 5a       	subi	r16, 0xA7	; 167
    4346:	1f 4f       	sbci	r17, 0xFF	; 255
    4348:	bc 01       	movw	r22, r24
    434a:	cd 01       	movw	r24, r26
    434c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4350:	dc 01       	movw	r26, r24
    4352:	cb 01       	movw	r24, r22
    4354:	f8 01       	movw	r30, r16
    4356:	91 83       	std	Z+1, r25	; 0x01
    4358:	80 83       	st	Z, r24
    435a:	1f c0       	rjmp	.+62     	; 0x439a <Welcom_Page+0x292>
    435c:	fe 01       	movw	r30, r28
    435e:	e9 5a       	subi	r30, 0xA9	; 169
    4360:	ff 4f       	sbci	r31, 0xFF	; 255
    4362:	88 ec       	ldi	r24, 0xC8	; 200
    4364:	90 e0       	ldi	r25, 0x00	; 0
    4366:	91 83       	std	Z+1, r25	; 0x01
    4368:	80 83       	st	Z, r24
    436a:	fe 01       	movw	r30, r28
    436c:	e9 5a       	subi	r30, 0xA9	; 169
    436e:	ff 4f       	sbci	r31, 0xFF	; 255
    4370:	80 81       	ld	r24, Z
    4372:	91 81       	ldd	r25, Z+1	; 0x01
    4374:	01 97       	sbiw	r24, 0x01	; 1
    4376:	f1 f7       	brne	.-4      	; 0x4374 <Welcom_Page+0x26c>
    4378:	fe 01       	movw	r30, r28
    437a:	e9 5a       	subi	r30, 0xA9	; 169
    437c:	ff 4f       	sbci	r31, 0xFF	; 255
    437e:	91 83       	std	Z+1, r25	; 0x01
    4380:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4382:	de 01       	movw	r26, r28
    4384:	a7 5a       	subi	r26, 0xA7	; 167
    4386:	bf 4f       	sbci	r27, 0xFF	; 255
    4388:	fe 01       	movw	r30, r28
    438a:	e7 5a       	subi	r30, 0xA7	; 167
    438c:	ff 4f       	sbci	r31, 0xFF	; 255
    438e:	80 81       	ld	r24, Z
    4390:	91 81       	ldd	r25, Z+1	; 0x01
    4392:	01 97       	sbiw	r24, 0x01	; 1
    4394:	11 96       	adiw	r26, 0x01	; 1
    4396:	9c 93       	st	X, r25
    4398:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    439a:	fe 01       	movw	r30, r28
    439c:	e7 5a       	subi	r30, 0xA7	; 167
    439e:	ff 4f       	sbci	r31, 0xFF	; 255
    43a0:	80 81       	ld	r24, Z
    43a2:	91 81       	ldd	r25, Z+1	; 0x01
    43a4:	00 97       	sbiw	r24, 0x00	; 0
    43a6:	d1 f6       	brne	.-76     	; 0x435c <Welcom_Page+0x254>
    43a8:	27 c0       	rjmp	.+78     	; 0x43f8 <Welcom_Page+0x2f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    43aa:	8e 01       	movw	r16, r28
    43ac:	07 5a       	subi	r16, 0xA7	; 167
    43ae:	1f 4f       	sbci	r17, 0xFF	; 255
    43b0:	fe 01       	movw	r30, r28
    43b2:	e5 5a       	subi	r30, 0xA5	; 165
    43b4:	ff 4f       	sbci	r31, 0xFF	; 255
    43b6:	60 81       	ld	r22, Z
    43b8:	71 81       	ldd	r23, Z+1	; 0x01
    43ba:	82 81       	ldd	r24, Z+2	; 0x02
    43bc:	93 81       	ldd	r25, Z+3	; 0x03
    43be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    43c2:	dc 01       	movw	r26, r24
    43c4:	cb 01       	movw	r24, r22
    43c6:	f8 01       	movw	r30, r16
    43c8:	91 83       	std	Z+1, r25	; 0x01
    43ca:	80 83       	st	Z, r24
    43cc:	de 01       	movw	r26, r28
    43ce:	ab 5a       	subi	r26, 0xAB	; 171
    43d0:	bf 4f       	sbci	r27, 0xFF	; 255
    43d2:	fe 01       	movw	r30, r28
    43d4:	e7 5a       	subi	r30, 0xA7	; 167
    43d6:	ff 4f       	sbci	r31, 0xFF	; 255
    43d8:	80 81       	ld	r24, Z
    43da:	91 81       	ldd	r25, Z+1	; 0x01
    43dc:	8d 93       	st	X+, r24
    43de:	9c 93       	st	X, r25
    43e0:	fe 01       	movw	r30, r28
    43e2:	eb 5a       	subi	r30, 0xAB	; 171
    43e4:	ff 4f       	sbci	r31, 0xFF	; 255
    43e6:	80 81       	ld	r24, Z
    43e8:	91 81       	ldd	r25, Z+1	; 0x01
    43ea:	01 97       	sbiw	r24, 0x01	; 1
    43ec:	f1 f7       	brne	.-4      	; 0x43ea <Welcom_Page+0x2e2>
    43ee:	fe 01       	movw	r30, r28
    43f0:	eb 5a       	subi	r30, 0xAB	; 171
    43f2:	ff 4f       	sbci	r31, 0xFF	; 255
    43f4:	91 83       	std	Z+1, r25	; 0x01
    43f6:	80 83       	st	Z, r24
	_delay_ms(500);
	CLCD_WriteData_Pos(0,2,1);
    43f8:	80 e0       	ldi	r24, 0x00	; 0
    43fa:	62 e0       	ldi	r22, 0x02	; 2
    43fc:	41 e0       	ldi	r20, 0x01	; 1
    43fe:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>
    4402:	fe 01       	movw	r30, r28
    4404:	ef 5a       	subi	r30, 0xAF	; 175
    4406:	ff 4f       	sbci	r31, 0xFF	; 255
    4408:	80 e0       	ldi	r24, 0x00	; 0
    440a:	90 e0       	ldi	r25, 0x00	; 0
    440c:	aa ef       	ldi	r26, 0xFA	; 250
    440e:	b3 e4       	ldi	r27, 0x43	; 67
    4410:	80 83       	st	Z, r24
    4412:	91 83       	std	Z+1, r25	; 0x01
    4414:	a2 83       	std	Z+2, r26	; 0x02
    4416:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4418:	8e 01       	movw	r16, r28
    441a:	03 5b       	subi	r16, 0xB3	; 179
    441c:	1f 4f       	sbci	r17, 0xFF	; 255
    441e:	fe 01       	movw	r30, r28
    4420:	ef 5a       	subi	r30, 0xAF	; 175
    4422:	ff 4f       	sbci	r31, 0xFF	; 255
    4424:	60 81       	ld	r22, Z
    4426:	71 81       	ldd	r23, Z+1	; 0x01
    4428:	82 81       	ldd	r24, Z+2	; 0x02
    442a:	93 81       	ldd	r25, Z+3	; 0x03
    442c:	20 e0       	ldi	r18, 0x00	; 0
    442e:	30 e0       	ldi	r19, 0x00	; 0
    4430:	4a ef       	ldi	r20, 0xFA	; 250
    4432:	54 e4       	ldi	r21, 0x44	; 68
    4434:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    4438:	dc 01       	movw	r26, r24
    443a:	cb 01       	movw	r24, r22
    443c:	f8 01       	movw	r30, r16
    443e:	80 83       	st	Z, r24
    4440:	91 83       	std	Z+1, r25	; 0x01
    4442:	a2 83       	std	Z+2, r26	; 0x02
    4444:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4446:	fe 01       	movw	r30, r28
    4448:	e3 5b       	subi	r30, 0xB3	; 179
    444a:	ff 4f       	sbci	r31, 0xFF	; 255
    444c:	60 81       	ld	r22, Z
    444e:	71 81       	ldd	r23, Z+1	; 0x01
    4450:	82 81       	ldd	r24, Z+2	; 0x02
    4452:	93 81       	ldd	r25, Z+3	; 0x03
    4454:	20 e0       	ldi	r18, 0x00	; 0
    4456:	30 e0       	ldi	r19, 0x00	; 0
    4458:	40 e8       	ldi	r20, 0x80	; 128
    445a:	5f e3       	ldi	r21, 0x3F	; 63
    445c:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    4460:	88 23       	and	r24, r24
    4462:	44 f4       	brge	.+16     	; 0x4474 <Welcom_Page+0x36c>
		__ticks = 1;
    4464:	fe 01       	movw	r30, r28
    4466:	e5 5b       	subi	r30, 0xB5	; 181
    4468:	ff 4f       	sbci	r31, 0xFF	; 255
    446a:	81 e0       	ldi	r24, 0x01	; 1
    446c:	90 e0       	ldi	r25, 0x00	; 0
    446e:	91 83       	std	Z+1, r25	; 0x01
    4470:	80 83       	st	Z, r24
    4472:	64 c0       	rjmp	.+200    	; 0x453c <Welcom_Page+0x434>
	else if (__tmp > 65535)
    4474:	fe 01       	movw	r30, r28
    4476:	e3 5b       	subi	r30, 0xB3	; 179
    4478:	ff 4f       	sbci	r31, 0xFF	; 255
    447a:	60 81       	ld	r22, Z
    447c:	71 81       	ldd	r23, Z+1	; 0x01
    447e:	82 81       	ldd	r24, Z+2	; 0x02
    4480:	93 81       	ldd	r25, Z+3	; 0x03
    4482:	20 e0       	ldi	r18, 0x00	; 0
    4484:	3f ef       	ldi	r19, 0xFF	; 255
    4486:	4f e7       	ldi	r20, 0x7F	; 127
    4488:	57 e4       	ldi	r21, 0x47	; 71
    448a:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    448e:	18 16       	cp	r1, r24
    4490:	0c f0       	brlt	.+2      	; 0x4494 <Welcom_Page+0x38c>
    4492:	43 c0       	rjmp	.+134    	; 0x451a <Welcom_Page+0x412>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4494:	fe 01       	movw	r30, r28
    4496:	ef 5a       	subi	r30, 0xAF	; 175
    4498:	ff 4f       	sbci	r31, 0xFF	; 255
    449a:	60 81       	ld	r22, Z
    449c:	71 81       	ldd	r23, Z+1	; 0x01
    449e:	82 81       	ldd	r24, Z+2	; 0x02
    44a0:	93 81       	ldd	r25, Z+3	; 0x03
    44a2:	20 e0       	ldi	r18, 0x00	; 0
    44a4:	30 e0       	ldi	r19, 0x00	; 0
    44a6:	40 e2       	ldi	r20, 0x20	; 32
    44a8:	51 e4       	ldi	r21, 0x41	; 65
    44aa:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    44ae:	dc 01       	movw	r26, r24
    44b0:	cb 01       	movw	r24, r22
    44b2:	8e 01       	movw	r16, r28
    44b4:	05 5b       	subi	r16, 0xB5	; 181
    44b6:	1f 4f       	sbci	r17, 0xFF	; 255
    44b8:	bc 01       	movw	r22, r24
    44ba:	cd 01       	movw	r24, r26
    44bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    44c0:	dc 01       	movw	r26, r24
    44c2:	cb 01       	movw	r24, r22
    44c4:	f8 01       	movw	r30, r16
    44c6:	91 83       	std	Z+1, r25	; 0x01
    44c8:	80 83       	st	Z, r24
    44ca:	1f c0       	rjmp	.+62     	; 0x450a <Welcom_Page+0x402>
    44cc:	fe 01       	movw	r30, r28
    44ce:	e7 5b       	subi	r30, 0xB7	; 183
    44d0:	ff 4f       	sbci	r31, 0xFF	; 255
    44d2:	88 ec       	ldi	r24, 0xC8	; 200
    44d4:	90 e0       	ldi	r25, 0x00	; 0
    44d6:	91 83       	std	Z+1, r25	; 0x01
    44d8:	80 83       	st	Z, r24
    44da:	fe 01       	movw	r30, r28
    44dc:	e7 5b       	subi	r30, 0xB7	; 183
    44de:	ff 4f       	sbci	r31, 0xFF	; 255
    44e0:	80 81       	ld	r24, Z
    44e2:	91 81       	ldd	r25, Z+1	; 0x01
    44e4:	01 97       	sbiw	r24, 0x01	; 1
    44e6:	f1 f7       	brne	.-4      	; 0x44e4 <Welcom_Page+0x3dc>
    44e8:	fe 01       	movw	r30, r28
    44ea:	e7 5b       	subi	r30, 0xB7	; 183
    44ec:	ff 4f       	sbci	r31, 0xFF	; 255
    44ee:	91 83       	std	Z+1, r25	; 0x01
    44f0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    44f2:	de 01       	movw	r26, r28
    44f4:	a5 5b       	subi	r26, 0xB5	; 181
    44f6:	bf 4f       	sbci	r27, 0xFF	; 255
    44f8:	fe 01       	movw	r30, r28
    44fa:	e5 5b       	subi	r30, 0xB5	; 181
    44fc:	ff 4f       	sbci	r31, 0xFF	; 255
    44fe:	80 81       	ld	r24, Z
    4500:	91 81       	ldd	r25, Z+1	; 0x01
    4502:	01 97       	sbiw	r24, 0x01	; 1
    4504:	11 96       	adiw	r26, 0x01	; 1
    4506:	9c 93       	st	X, r25
    4508:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    450a:	fe 01       	movw	r30, r28
    450c:	e5 5b       	subi	r30, 0xB5	; 181
    450e:	ff 4f       	sbci	r31, 0xFF	; 255
    4510:	80 81       	ld	r24, Z
    4512:	91 81       	ldd	r25, Z+1	; 0x01
    4514:	00 97       	sbiw	r24, 0x00	; 0
    4516:	d1 f6       	brne	.-76     	; 0x44cc <Welcom_Page+0x3c4>
    4518:	27 c0       	rjmp	.+78     	; 0x4568 <Welcom_Page+0x460>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    451a:	8e 01       	movw	r16, r28
    451c:	05 5b       	subi	r16, 0xB5	; 181
    451e:	1f 4f       	sbci	r17, 0xFF	; 255
    4520:	fe 01       	movw	r30, r28
    4522:	e3 5b       	subi	r30, 0xB3	; 179
    4524:	ff 4f       	sbci	r31, 0xFF	; 255
    4526:	60 81       	ld	r22, Z
    4528:	71 81       	ldd	r23, Z+1	; 0x01
    452a:	82 81       	ldd	r24, Z+2	; 0x02
    452c:	93 81       	ldd	r25, Z+3	; 0x03
    452e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4532:	dc 01       	movw	r26, r24
    4534:	cb 01       	movw	r24, r22
    4536:	f8 01       	movw	r30, r16
    4538:	91 83       	std	Z+1, r25	; 0x01
    453a:	80 83       	st	Z, r24
    453c:	de 01       	movw	r26, r28
    453e:	a9 5b       	subi	r26, 0xB9	; 185
    4540:	bf 4f       	sbci	r27, 0xFF	; 255
    4542:	fe 01       	movw	r30, r28
    4544:	e5 5b       	subi	r30, 0xB5	; 181
    4546:	ff 4f       	sbci	r31, 0xFF	; 255
    4548:	80 81       	ld	r24, Z
    454a:	91 81       	ldd	r25, Z+1	; 0x01
    454c:	8d 93       	st	X+, r24
    454e:	9c 93       	st	X, r25
    4550:	fe 01       	movw	r30, r28
    4552:	e9 5b       	subi	r30, 0xB9	; 185
    4554:	ff 4f       	sbci	r31, 0xFF	; 255
    4556:	80 81       	ld	r24, Z
    4558:	91 81       	ldd	r25, Z+1	; 0x01
    455a:	01 97       	sbiw	r24, 0x01	; 1
    455c:	f1 f7       	brne	.-4      	; 0x455a <Welcom_Page+0x452>
    455e:	fe 01       	movw	r30, r28
    4560:	e9 5b       	subi	r30, 0xB9	; 185
    4562:	ff 4f       	sbci	r31, 0xFF	; 255
    4564:	91 83       	std	Z+1, r25	; 0x01
    4566:	80 83       	st	Z, r24
	_delay_ms(500);

	CLCD_WriteData_Pos(1,2,3);
    4568:	81 e0       	ldi	r24, 0x01	; 1
    456a:	62 e0       	ldi	r22, 0x02	; 2
    456c:	43 e0       	ldi	r20, 0x03	; 3
    456e:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>
    4572:	fe 01       	movw	r30, r28
    4574:	ed 5b       	subi	r30, 0xBD	; 189
    4576:	ff 4f       	sbci	r31, 0xFF	; 255
    4578:	80 e0       	ldi	r24, 0x00	; 0
    457a:	90 e0       	ldi	r25, 0x00	; 0
    457c:	aa ef       	ldi	r26, 0xFA	; 250
    457e:	b3 e4       	ldi	r27, 0x43	; 67
    4580:	80 83       	st	Z, r24
    4582:	91 83       	std	Z+1, r25	; 0x01
    4584:	a2 83       	std	Z+2, r26	; 0x02
    4586:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4588:	8e 01       	movw	r16, r28
    458a:	01 5c       	subi	r16, 0xC1	; 193
    458c:	1f 4f       	sbci	r17, 0xFF	; 255
    458e:	fe 01       	movw	r30, r28
    4590:	ed 5b       	subi	r30, 0xBD	; 189
    4592:	ff 4f       	sbci	r31, 0xFF	; 255
    4594:	60 81       	ld	r22, Z
    4596:	71 81       	ldd	r23, Z+1	; 0x01
    4598:	82 81       	ldd	r24, Z+2	; 0x02
    459a:	93 81       	ldd	r25, Z+3	; 0x03
    459c:	20 e0       	ldi	r18, 0x00	; 0
    459e:	30 e0       	ldi	r19, 0x00	; 0
    45a0:	4a ef       	ldi	r20, 0xFA	; 250
    45a2:	54 e4       	ldi	r21, 0x44	; 68
    45a4:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    45a8:	dc 01       	movw	r26, r24
    45aa:	cb 01       	movw	r24, r22
    45ac:	f8 01       	movw	r30, r16
    45ae:	80 83       	st	Z, r24
    45b0:	91 83       	std	Z+1, r25	; 0x01
    45b2:	a2 83       	std	Z+2, r26	; 0x02
    45b4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    45b6:	fe 01       	movw	r30, r28
    45b8:	ff 96       	adiw	r30, 0x3f	; 63
    45ba:	60 81       	ld	r22, Z
    45bc:	71 81       	ldd	r23, Z+1	; 0x01
    45be:	82 81       	ldd	r24, Z+2	; 0x02
    45c0:	93 81       	ldd	r25, Z+3	; 0x03
    45c2:	20 e0       	ldi	r18, 0x00	; 0
    45c4:	30 e0       	ldi	r19, 0x00	; 0
    45c6:	40 e8       	ldi	r20, 0x80	; 128
    45c8:	5f e3       	ldi	r21, 0x3F	; 63
    45ca:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    45ce:	88 23       	and	r24, r24
    45d0:	2c f4       	brge	.+10     	; 0x45dc <Welcom_Page+0x4d4>
		__ticks = 1;
    45d2:	81 e0       	ldi	r24, 0x01	; 1
    45d4:	90 e0       	ldi	r25, 0x00	; 0
    45d6:	9e af       	std	Y+62, r25	; 0x3e
    45d8:	8d af       	std	Y+61, r24	; 0x3d
    45da:	46 c0       	rjmp	.+140    	; 0x4668 <Welcom_Page+0x560>
	else if (__tmp > 65535)
    45dc:	fe 01       	movw	r30, r28
    45de:	ff 96       	adiw	r30, 0x3f	; 63
    45e0:	60 81       	ld	r22, Z
    45e2:	71 81       	ldd	r23, Z+1	; 0x01
    45e4:	82 81       	ldd	r24, Z+2	; 0x02
    45e6:	93 81       	ldd	r25, Z+3	; 0x03
    45e8:	20 e0       	ldi	r18, 0x00	; 0
    45ea:	3f ef       	ldi	r19, 0xFF	; 255
    45ec:	4f e7       	ldi	r20, 0x7F	; 127
    45ee:	57 e4       	ldi	r21, 0x47	; 71
    45f0:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    45f4:	18 16       	cp	r1, r24
    45f6:	64 f5       	brge	.+88     	; 0x4650 <Welcom_Page+0x548>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    45f8:	fe 01       	movw	r30, r28
    45fa:	ed 5b       	subi	r30, 0xBD	; 189
    45fc:	ff 4f       	sbci	r31, 0xFF	; 255
    45fe:	60 81       	ld	r22, Z
    4600:	71 81       	ldd	r23, Z+1	; 0x01
    4602:	82 81       	ldd	r24, Z+2	; 0x02
    4604:	93 81       	ldd	r25, Z+3	; 0x03
    4606:	20 e0       	ldi	r18, 0x00	; 0
    4608:	30 e0       	ldi	r19, 0x00	; 0
    460a:	40 e2       	ldi	r20, 0x20	; 32
    460c:	51 e4       	ldi	r21, 0x41	; 65
    460e:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    4612:	dc 01       	movw	r26, r24
    4614:	cb 01       	movw	r24, r22
    4616:	bc 01       	movw	r22, r24
    4618:	cd 01       	movw	r24, r26
    461a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    461e:	dc 01       	movw	r26, r24
    4620:	cb 01       	movw	r24, r22
    4622:	9e af       	std	Y+62, r25	; 0x3e
    4624:	8d af       	std	Y+61, r24	; 0x3d
    4626:	0f c0       	rjmp	.+30     	; 0x4646 <Welcom_Page+0x53e>
    4628:	88 ec       	ldi	r24, 0xC8	; 200
    462a:	90 e0       	ldi	r25, 0x00	; 0
    462c:	9c af       	std	Y+60, r25	; 0x3c
    462e:	8b af       	std	Y+59, r24	; 0x3b
    4630:	8b ad       	ldd	r24, Y+59	; 0x3b
    4632:	9c ad       	ldd	r25, Y+60	; 0x3c
    4634:	01 97       	sbiw	r24, 0x01	; 1
    4636:	f1 f7       	brne	.-4      	; 0x4634 <Welcom_Page+0x52c>
    4638:	9c af       	std	Y+60, r25	; 0x3c
    463a:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    463c:	8d ad       	ldd	r24, Y+61	; 0x3d
    463e:	9e ad       	ldd	r25, Y+62	; 0x3e
    4640:	01 97       	sbiw	r24, 0x01	; 1
    4642:	9e af       	std	Y+62, r25	; 0x3e
    4644:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4646:	8d ad       	ldd	r24, Y+61	; 0x3d
    4648:	9e ad       	ldd	r25, Y+62	; 0x3e
    464a:	00 97       	sbiw	r24, 0x00	; 0
    464c:	69 f7       	brne	.-38     	; 0x4628 <Welcom_Page+0x520>
    464e:	16 c0       	rjmp	.+44     	; 0x467c <Welcom_Page+0x574>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4650:	fe 01       	movw	r30, r28
    4652:	ff 96       	adiw	r30, 0x3f	; 63
    4654:	60 81       	ld	r22, Z
    4656:	71 81       	ldd	r23, Z+1	; 0x01
    4658:	82 81       	ldd	r24, Z+2	; 0x02
    465a:	93 81       	ldd	r25, Z+3	; 0x03
    465c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4660:	dc 01       	movw	r26, r24
    4662:	cb 01       	movw	r24, r22
    4664:	9e af       	std	Y+62, r25	; 0x3e
    4666:	8d af       	std	Y+61, r24	; 0x3d
    4668:	8d ad       	ldd	r24, Y+61	; 0x3d
    466a:	9e ad       	ldd	r25, Y+62	; 0x3e
    466c:	9a af       	std	Y+58, r25	; 0x3a
    466e:	89 af       	std	Y+57, r24	; 0x39
    4670:	89 ad       	ldd	r24, Y+57	; 0x39
    4672:	9a ad       	ldd	r25, Y+58	; 0x3a
    4674:	01 97       	sbiw	r24, 0x01	; 1
    4676:	f1 f7       	brne	.-4      	; 0x4674 <Welcom_Page+0x56c>
    4678:	9a af       	std	Y+58, r25	; 0x3a
    467a:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(500);
	CLCD_WriteData_Pos(0,2,3);
    467c:	80 e0       	ldi	r24, 0x00	; 0
    467e:	62 e0       	ldi	r22, 0x02	; 2
    4680:	43 e0       	ldi	r20, 0x03	; 3
    4682:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>

	CLCD_WriteData_Pos(1,2,8);
    4686:	81 e0       	ldi	r24, 0x01	; 1
    4688:	62 e0       	ldi	r22, 0x02	; 2
    468a:	48 e0       	ldi	r20, 0x08	; 8
    468c:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>
    4690:	80 e0       	ldi	r24, 0x00	; 0
    4692:	90 e0       	ldi	r25, 0x00	; 0
    4694:	aa ef       	ldi	r26, 0xFA	; 250
    4696:	b3 e4       	ldi	r27, 0x43	; 67
    4698:	8d ab       	std	Y+53, r24	; 0x35
    469a:	9e ab       	std	Y+54, r25	; 0x36
    469c:	af ab       	std	Y+55, r26	; 0x37
    469e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    46a0:	6d a9       	ldd	r22, Y+53	; 0x35
    46a2:	7e a9       	ldd	r23, Y+54	; 0x36
    46a4:	8f a9       	ldd	r24, Y+55	; 0x37
    46a6:	98 ad       	ldd	r25, Y+56	; 0x38
    46a8:	20 e0       	ldi	r18, 0x00	; 0
    46aa:	30 e0       	ldi	r19, 0x00	; 0
    46ac:	4a ef       	ldi	r20, 0xFA	; 250
    46ae:	54 e4       	ldi	r21, 0x44	; 68
    46b0:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    46b4:	dc 01       	movw	r26, r24
    46b6:	cb 01       	movw	r24, r22
    46b8:	89 ab       	std	Y+49, r24	; 0x31
    46ba:	9a ab       	std	Y+50, r25	; 0x32
    46bc:	ab ab       	std	Y+51, r26	; 0x33
    46be:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    46c0:	69 a9       	ldd	r22, Y+49	; 0x31
    46c2:	7a a9       	ldd	r23, Y+50	; 0x32
    46c4:	8b a9       	ldd	r24, Y+51	; 0x33
    46c6:	9c a9       	ldd	r25, Y+52	; 0x34
    46c8:	20 e0       	ldi	r18, 0x00	; 0
    46ca:	30 e0       	ldi	r19, 0x00	; 0
    46cc:	40 e8       	ldi	r20, 0x80	; 128
    46ce:	5f e3       	ldi	r21, 0x3F	; 63
    46d0:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    46d4:	88 23       	and	r24, r24
    46d6:	2c f4       	brge	.+10     	; 0x46e2 <Welcom_Page+0x5da>
		__ticks = 1;
    46d8:	81 e0       	ldi	r24, 0x01	; 1
    46da:	90 e0       	ldi	r25, 0x00	; 0
    46dc:	98 ab       	std	Y+48, r25	; 0x30
    46de:	8f a7       	std	Y+47, r24	; 0x2f
    46e0:	3f c0       	rjmp	.+126    	; 0x4760 <Welcom_Page+0x658>
	else if (__tmp > 65535)
    46e2:	69 a9       	ldd	r22, Y+49	; 0x31
    46e4:	7a a9       	ldd	r23, Y+50	; 0x32
    46e6:	8b a9       	ldd	r24, Y+51	; 0x33
    46e8:	9c a9       	ldd	r25, Y+52	; 0x34
    46ea:	20 e0       	ldi	r18, 0x00	; 0
    46ec:	3f ef       	ldi	r19, 0xFF	; 255
    46ee:	4f e7       	ldi	r20, 0x7F	; 127
    46f0:	57 e4       	ldi	r21, 0x47	; 71
    46f2:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    46f6:	18 16       	cp	r1, r24
    46f8:	4c f5       	brge	.+82     	; 0x474c <Welcom_Page+0x644>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    46fa:	6d a9       	ldd	r22, Y+53	; 0x35
    46fc:	7e a9       	ldd	r23, Y+54	; 0x36
    46fe:	8f a9       	ldd	r24, Y+55	; 0x37
    4700:	98 ad       	ldd	r25, Y+56	; 0x38
    4702:	20 e0       	ldi	r18, 0x00	; 0
    4704:	30 e0       	ldi	r19, 0x00	; 0
    4706:	40 e2       	ldi	r20, 0x20	; 32
    4708:	51 e4       	ldi	r21, 0x41	; 65
    470a:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    470e:	dc 01       	movw	r26, r24
    4710:	cb 01       	movw	r24, r22
    4712:	bc 01       	movw	r22, r24
    4714:	cd 01       	movw	r24, r26
    4716:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    471a:	dc 01       	movw	r26, r24
    471c:	cb 01       	movw	r24, r22
    471e:	98 ab       	std	Y+48, r25	; 0x30
    4720:	8f a7       	std	Y+47, r24	; 0x2f
    4722:	0f c0       	rjmp	.+30     	; 0x4742 <Welcom_Page+0x63a>
    4724:	88 ec       	ldi	r24, 0xC8	; 200
    4726:	90 e0       	ldi	r25, 0x00	; 0
    4728:	9e a7       	std	Y+46, r25	; 0x2e
    472a:	8d a7       	std	Y+45, r24	; 0x2d
    472c:	8d a5       	ldd	r24, Y+45	; 0x2d
    472e:	9e a5       	ldd	r25, Y+46	; 0x2e
    4730:	01 97       	sbiw	r24, 0x01	; 1
    4732:	f1 f7       	brne	.-4      	; 0x4730 <Welcom_Page+0x628>
    4734:	9e a7       	std	Y+46, r25	; 0x2e
    4736:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4738:	8f a5       	ldd	r24, Y+47	; 0x2f
    473a:	98 a9       	ldd	r25, Y+48	; 0x30
    473c:	01 97       	sbiw	r24, 0x01	; 1
    473e:	98 ab       	std	Y+48, r25	; 0x30
    4740:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4742:	8f a5       	ldd	r24, Y+47	; 0x2f
    4744:	98 a9       	ldd	r25, Y+48	; 0x30
    4746:	00 97       	sbiw	r24, 0x00	; 0
    4748:	69 f7       	brne	.-38     	; 0x4724 <Welcom_Page+0x61c>
    474a:	14 c0       	rjmp	.+40     	; 0x4774 <Welcom_Page+0x66c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    474c:	69 a9       	ldd	r22, Y+49	; 0x31
    474e:	7a a9       	ldd	r23, Y+50	; 0x32
    4750:	8b a9       	ldd	r24, Y+51	; 0x33
    4752:	9c a9       	ldd	r25, Y+52	; 0x34
    4754:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4758:	dc 01       	movw	r26, r24
    475a:	cb 01       	movw	r24, r22
    475c:	98 ab       	std	Y+48, r25	; 0x30
    475e:	8f a7       	std	Y+47, r24	; 0x2f
    4760:	8f a5       	ldd	r24, Y+47	; 0x2f
    4762:	98 a9       	ldd	r25, Y+48	; 0x30
    4764:	9c a7       	std	Y+44, r25	; 0x2c
    4766:	8b a7       	std	Y+43, r24	; 0x2b
    4768:	8b a5       	ldd	r24, Y+43	; 0x2b
    476a:	9c a5       	ldd	r25, Y+44	; 0x2c
    476c:	01 97       	sbiw	r24, 0x01	; 1
    476e:	f1 f7       	brne	.-4      	; 0x476c <Welcom_Page+0x664>
    4770:	9c a7       	std	Y+44, r25	; 0x2c
    4772:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(500);
	CLCD_WriteData_Pos(0,2,8);
    4774:	80 e0       	ldi	r24, 0x00	; 0
    4776:	62 e0       	ldi	r22, 0x02	; 2
    4778:	48 e0       	ldi	r20, 0x08	; 8
    477a:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>

	CLCD_WriteData_Pos(1,2,11);
    477e:	81 e0       	ldi	r24, 0x01	; 1
    4780:	62 e0       	ldi	r22, 0x02	; 2
    4782:	4b e0       	ldi	r20, 0x0B	; 11
    4784:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>
    4788:	80 e0       	ldi	r24, 0x00	; 0
    478a:	90 e0       	ldi	r25, 0x00	; 0
    478c:	aa ef       	ldi	r26, 0xFA	; 250
    478e:	b3 e4       	ldi	r27, 0x43	; 67
    4790:	8f a3       	std	Y+39, r24	; 0x27
    4792:	98 a7       	std	Y+40, r25	; 0x28
    4794:	a9 a7       	std	Y+41, r26	; 0x29
    4796:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4798:	6f a1       	ldd	r22, Y+39	; 0x27
    479a:	78 a5       	ldd	r23, Y+40	; 0x28
    479c:	89 a5       	ldd	r24, Y+41	; 0x29
    479e:	9a a5       	ldd	r25, Y+42	; 0x2a
    47a0:	20 e0       	ldi	r18, 0x00	; 0
    47a2:	30 e0       	ldi	r19, 0x00	; 0
    47a4:	4a ef       	ldi	r20, 0xFA	; 250
    47a6:	54 e4       	ldi	r21, 0x44	; 68
    47a8:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    47ac:	dc 01       	movw	r26, r24
    47ae:	cb 01       	movw	r24, r22
    47b0:	8b a3       	std	Y+35, r24	; 0x23
    47b2:	9c a3       	std	Y+36, r25	; 0x24
    47b4:	ad a3       	std	Y+37, r26	; 0x25
    47b6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    47b8:	6b a1       	ldd	r22, Y+35	; 0x23
    47ba:	7c a1       	ldd	r23, Y+36	; 0x24
    47bc:	8d a1       	ldd	r24, Y+37	; 0x25
    47be:	9e a1       	ldd	r25, Y+38	; 0x26
    47c0:	20 e0       	ldi	r18, 0x00	; 0
    47c2:	30 e0       	ldi	r19, 0x00	; 0
    47c4:	40 e8       	ldi	r20, 0x80	; 128
    47c6:	5f e3       	ldi	r21, 0x3F	; 63
    47c8:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    47cc:	88 23       	and	r24, r24
    47ce:	2c f4       	brge	.+10     	; 0x47da <Welcom_Page+0x6d2>
		__ticks = 1;
    47d0:	81 e0       	ldi	r24, 0x01	; 1
    47d2:	90 e0       	ldi	r25, 0x00	; 0
    47d4:	9a a3       	std	Y+34, r25	; 0x22
    47d6:	89 a3       	std	Y+33, r24	; 0x21
    47d8:	3f c0       	rjmp	.+126    	; 0x4858 <Welcom_Page+0x750>
	else if (__tmp > 65535)
    47da:	6b a1       	ldd	r22, Y+35	; 0x23
    47dc:	7c a1       	ldd	r23, Y+36	; 0x24
    47de:	8d a1       	ldd	r24, Y+37	; 0x25
    47e0:	9e a1       	ldd	r25, Y+38	; 0x26
    47e2:	20 e0       	ldi	r18, 0x00	; 0
    47e4:	3f ef       	ldi	r19, 0xFF	; 255
    47e6:	4f e7       	ldi	r20, 0x7F	; 127
    47e8:	57 e4       	ldi	r21, 0x47	; 71
    47ea:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    47ee:	18 16       	cp	r1, r24
    47f0:	4c f5       	brge	.+82     	; 0x4844 <Welcom_Page+0x73c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    47f2:	6f a1       	ldd	r22, Y+39	; 0x27
    47f4:	78 a5       	ldd	r23, Y+40	; 0x28
    47f6:	89 a5       	ldd	r24, Y+41	; 0x29
    47f8:	9a a5       	ldd	r25, Y+42	; 0x2a
    47fa:	20 e0       	ldi	r18, 0x00	; 0
    47fc:	30 e0       	ldi	r19, 0x00	; 0
    47fe:	40 e2       	ldi	r20, 0x20	; 32
    4800:	51 e4       	ldi	r21, 0x41	; 65
    4802:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    4806:	dc 01       	movw	r26, r24
    4808:	cb 01       	movw	r24, r22
    480a:	bc 01       	movw	r22, r24
    480c:	cd 01       	movw	r24, r26
    480e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4812:	dc 01       	movw	r26, r24
    4814:	cb 01       	movw	r24, r22
    4816:	9a a3       	std	Y+34, r25	; 0x22
    4818:	89 a3       	std	Y+33, r24	; 0x21
    481a:	0f c0       	rjmp	.+30     	; 0x483a <Welcom_Page+0x732>
    481c:	88 ec       	ldi	r24, 0xC8	; 200
    481e:	90 e0       	ldi	r25, 0x00	; 0
    4820:	98 a3       	std	Y+32, r25	; 0x20
    4822:	8f 8f       	std	Y+31, r24	; 0x1f
    4824:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4826:	98 a1       	ldd	r25, Y+32	; 0x20
    4828:	01 97       	sbiw	r24, 0x01	; 1
    482a:	f1 f7       	brne	.-4      	; 0x4828 <Welcom_Page+0x720>
    482c:	98 a3       	std	Y+32, r25	; 0x20
    482e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4830:	89 a1       	ldd	r24, Y+33	; 0x21
    4832:	9a a1       	ldd	r25, Y+34	; 0x22
    4834:	01 97       	sbiw	r24, 0x01	; 1
    4836:	9a a3       	std	Y+34, r25	; 0x22
    4838:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    483a:	89 a1       	ldd	r24, Y+33	; 0x21
    483c:	9a a1       	ldd	r25, Y+34	; 0x22
    483e:	00 97       	sbiw	r24, 0x00	; 0
    4840:	69 f7       	brne	.-38     	; 0x481c <Welcom_Page+0x714>
    4842:	14 c0       	rjmp	.+40     	; 0x486c <Welcom_Page+0x764>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4844:	6b a1       	ldd	r22, Y+35	; 0x23
    4846:	7c a1       	ldd	r23, Y+36	; 0x24
    4848:	8d a1       	ldd	r24, Y+37	; 0x25
    484a:	9e a1       	ldd	r25, Y+38	; 0x26
    484c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4850:	dc 01       	movw	r26, r24
    4852:	cb 01       	movw	r24, r22
    4854:	9a a3       	std	Y+34, r25	; 0x22
    4856:	89 a3       	std	Y+33, r24	; 0x21
    4858:	89 a1       	ldd	r24, Y+33	; 0x21
    485a:	9a a1       	ldd	r25, Y+34	; 0x22
    485c:	9e 8f       	std	Y+30, r25	; 0x1e
    485e:	8d 8f       	std	Y+29, r24	; 0x1d
    4860:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4862:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4864:	01 97       	sbiw	r24, 0x01	; 1
    4866:	f1 f7       	brne	.-4      	; 0x4864 <Welcom_Page+0x75c>
    4868:	9e 8f       	std	Y+30, r25	; 0x1e
    486a:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(500);
	CLCD_WriteData_Pos(0,2,11);
    486c:	80 e0       	ldi	r24, 0x00	; 0
    486e:	62 e0       	ldi	r22, 0x02	; 2
    4870:	4b e0       	ldi	r20, 0x0B	; 11
    4872:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>

	CLCD_WriteData_Pos(1,2,16);
    4876:	81 e0       	ldi	r24, 0x01	; 1
    4878:	62 e0       	ldi	r22, 0x02	; 2
    487a:	40 e1       	ldi	r20, 0x10	; 16
    487c:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>
    4880:	80 e0       	ldi	r24, 0x00	; 0
    4882:	90 e0       	ldi	r25, 0x00	; 0
    4884:	aa ef       	ldi	r26, 0xFA	; 250
    4886:	b3 e4       	ldi	r27, 0x43	; 67
    4888:	89 8f       	std	Y+25, r24	; 0x19
    488a:	9a 8f       	std	Y+26, r25	; 0x1a
    488c:	ab 8f       	std	Y+27, r26	; 0x1b
    488e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4890:	69 8d       	ldd	r22, Y+25	; 0x19
    4892:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4894:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4896:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4898:	20 e0       	ldi	r18, 0x00	; 0
    489a:	30 e0       	ldi	r19, 0x00	; 0
    489c:	4a ef       	ldi	r20, 0xFA	; 250
    489e:	54 e4       	ldi	r21, 0x44	; 68
    48a0:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    48a4:	dc 01       	movw	r26, r24
    48a6:	cb 01       	movw	r24, r22
    48a8:	8d 8b       	std	Y+21, r24	; 0x15
    48aa:	9e 8b       	std	Y+22, r25	; 0x16
    48ac:	af 8b       	std	Y+23, r26	; 0x17
    48ae:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    48b0:	6d 89       	ldd	r22, Y+21	; 0x15
    48b2:	7e 89       	ldd	r23, Y+22	; 0x16
    48b4:	8f 89       	ldd	r24, Y+23	; 0x17
    48b6:	98 8d       	ldd	r25, Y+24	; 0x18
    48b8:	20 e0       	ldi	r18, 0x00	; 0
    48ba:	30 e0       	ldi	r19, 0x00	; 0
    48bc:	40 e8       	ldi	r20, 0x80	; 128
    48be:	5f e3       	ldi	r21, 0x3F	; 63
    48c0:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    48c4:	88 23       	and	r24, r24
    48c6:	2c f4       	brge	.+10     	; 0x48d2 <Welcom_Page+0x7ca>
		__ticks = 1;
    48c8:	81 e0       	ldi	r24, 0x01	; 1
    48ca:	90 e0       	ldi	r25, 0x00	; 0
    48cc:	9c 8b       	std	Y+20, r25	; 0x14
    48ce:	8b 8b       	std	Y+19, r24	; 0x13
    48d0:	3f c0       	rjmp	.+126    	; 0x4950 <Welcom_Page+0x848>
	else if (__tmp > 65535)
    48d2:	6d 89       	ldd	r22, Y+21	; 0x15
    48d4:	7e 89       	ldd	r23, Y+22	; 0x16
    48d6:	8f 89       	ldd	r24, Y+23	; 0x17
    48d8:	98 8d       	ldd	r25, Y+24	; 0x18
    48da:	20 e0       	ldi	r18, 0x00	; 0
    48dc:	3f ef       	ldi	r19, 0xFF	; 255
    48de:	4f e7       	ldi	r20, 0x7F	; 127
    48e0:	57 e4       	ldi	r21, 0x47	; 71
    48e2:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    48e6:	18 16       	cp	r1, r24
    48e8:	4c f5       	brge	.+82     	; 0x493c <Welcom_Page+0x834>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    48ea:	69 8d       	ldd	r22, Y+25	; 0x19
    48ec:	7a 8d       	ldd	r23, Y+26	; 0x1a
    48ee:	8b 8d       	ldd	r24, Y+27	; 0x1b
    48f0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    48f2:	20 e0       	ldi	r18, 0x00	; 0
    48f4:	30 e0       	ldi	r19, 0x00	; 0
    48f6:	40 e2       	ldi	r20, 0x20	; 32
    48f8:	51 e4       	ldi	r21, 0x41	; 65
    48fa:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    48fe:	dc 01       	movw	r26, r24
    4900:	cb 01       	movw	r24, r22
    4902:	bc 01       	movw	r22, r24
    4904:	cd 01       	movw	r24, r26
    4906:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    490a:	dc 01       	movw	r26, r24
    490c:	cb 01       	movw	r24, r22
    490e:	9c 8b       	std	Y+20, r25	; 0x14
    4910:	8b 8b       	std	Y+19, r24	; 0x13
    4912:	0f c0       	rjmp	.+30     	; 0x4932 <Welcom_Page+0x82a>
    4914:	88 ec       	ldi	r24, 0xC8	; 200
    4916:	90 e0       	ldi	r25, 0x00	; 0
    4918:	9a 8b       	std	Y+18, r25	; 0x12
    491a:	89 8b       	std	Y+17, r24	; 0x11
    491c:	89 89       	ldd	r24, Y+17	; 0x11
    491e:	9a 89       	ldd	r25, Y+18	; 0x12
    4920:	01 97       	sbiw	r24, 0x01	; 1
    4922:	f1 f7       	brne	.-4      	; 0x4920 <Welcom_Page+0x818>
    4924:	9a 8b       	std	Y+18, r25	; 0x12
    4926:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4928:	8b 89       	ldd	r24, Y+19	; 0x13
    492a:	9c 89       	ldd	r25, Y+20	; 0x14
    492c:	01 97       	sbiw	r24, 0x01	; 1
    492e:	9c 8b       	std	Y+20, r25	; 0x14
    4930:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4932:	8b 89       	ldd	r24, Y+19	; 0x13
    4934:	9c 89       	ldd	r25, Y+20	; 0x14
    4936:	00 97       	sbiw	r24, 0x00	; 0
    4938:	69 f7       	brne	.-38     	; 0x4914 <Welcom_Page+0x80c>
    493a:	14 c0       	rjmp	.+40     	; 0x4964 <Welcom_Page+0x85c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    493c:	6d 89       	ldd	r22, Y+21	; 0x15
    493e:	7e 89       	ldd	r23, Y+22	; 0x16
    4940:	8f 89       	ldd	r24, Y+23	; 0x17
    4942:	98 8d       	ldd	r25, Y+24	; 0x18
    4944:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4948:	dc 01       	movw	r26, r24
    494a:	cb 01       	movw	r24, r22
    494c:	9c 8b       	std	Y+20, r25	; 0x14
    494e:	8b 8b       	std	Y+19, r24	; 0x13
    4950:	8b 89       	ldd	r24, Y+19	; 0x13
    4952:	9c 89       	ldd	r25, Y+20	; 0x14
    4954:	98 8b       	std	Y+16, r25	; 0x10
    4956:	8f 87       	std	Y+15, r24	; 0x0f
    4958:	8f 85       	ldd	r24, Y+15	; 0x0f
    495a:	98 89       	ldd	r25, Y+16	; 0x10
    495c:	01 97       	sbiw	r24, 0x01	; 1
    495e:	f1 f7       	brne	.-4      	; 0x495c <Welcom_Page+0x854>
    4960:	98 8b       	std	Y+16, r25	; 0x10
    4962:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(500);
	CLCD_WriteData_Pos(0,2,16);
    4964:	80 e0       	ldi	r24, 0x00	; 0
    4966:	62 e0       	ldi	r22, 0x02	; 2
    4968:	40 e1       	ldi	r20, 0x10	; 16
    496a:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>
    496e:	80 e0       	ldi	r24, 0x00	; 0
    4970:	90 e0       	ldi	r25, 0x00	; 0
    4972:	aa ef       	ldi	r26, 0xFA	; 250
    4974:	b3 e4       	ldi	r27, 0x43	; 67
    4976:	8b 87       	std	Y+11, r24	; 0x0b
    4978:	9c 87       	std	Y+12, r25	; 0x0c
    497a:	ad 87       	std	Y+13, r26	; 0x0d
    497c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    497e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4980:	7c 85       	ldd	r23, Y+12	; 0x0c
    4982:	8d 85       	ldd	r24, Y+13	; 0x0d
    4984:	9e 85       	ldd	r25, Y+14	; 0x0e
    4986:	20 e0       	ldi	r18, 0x00	; 0
    4988:	30 e0       	ldi	r19, 0x00	; 0
    498a:	4a ef       	ldi	r20, 0xFA	; 250
    498c:	54 e4       	ldi	r21, 0x44	; 68
    498e:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    4992:	dc 01       	movw	r26, r24
    4994:	cb 01       	movw	r24, r22
    4996:	8f 83       	std	Y+7, r24	; 0x07
    4998:	98 87       	std	Y+8, r25	; 0x08
    499a:	a9 87       	std	Y+9, r26	; 0x09
    499c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    499e:	6f 81       	ldd	r22, Y+7	; 0x07
    49a0:	78 85       	ldd	r23, Y+8	; 0x08
    49a2:	89 85       	ldd	r24, Y+9	; 0x09
    49a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    49a6:	20 e0       	ldi	r18, 0x00	; 0
    49a8:	30 e0       	ldi	r19, 0x00	; 0
    49aa:	40 e8       	ldi	r20, 0x80	; 128
    49ac:	5f e3       	ldi	r21, 0x3F	; 63
    49ae:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    49b2:	88 23       	and	r24, r24
    49b4:	2c f4       	brge	.+10     	; 0x49c0 <Welcom_Page+0x8b8>
		__ticks = 1;
    49b6:	81 e0       	ldi	r24, 0x01	; 1
    49b8:	90 e0       	ldi	r25, 0x00	; 0
    49ba:	9e 83       	std	Y+6, r25	; 0x06
    49bc:	8d 83       	std	Y+5, r24	; 0x05
    49be:	3f c0       	rjmp	.+126    	; 0x4a3e <Welcom_Page+0x936>
	else if (__tmp > 65535)
    49c0:	6f 81       	ldd	r22, Y+7	; 0x07
    49c2:	78 85       	ldd	r23, Y+8	; 0x08
    49c4:	89 85       	ldd	r24, Y+9	; 0x09
    49c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    49c8:	20 e0       	ldi	r18, 0x00	; 0
    49ca:	3f ef       	ldi	r19, 0xFF	; 255
    49cc:	4f e7       	ldi	r20, 0x7F	; 127
    49ce:	57 e4       	ldi	r21, 0x47	; 71
    49d0:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    49d4:	18 16       	cp	r1, r24
    49d6:	4c f5       	brge	.+82     	; 0x4a2a <Welcom_Page+0x922>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    49d8:	6b 85       	ldd	r22, Y+11	; 0x0b
    49da:	7c 85       	ldd	r23, Y+12	; 0x0c
    49dc:	8d 85       	ldd	r24, Y+13	; 0x0d
    49de:	9e 85       	ldd	r25, Y+14	; 0x0e
    49e0:	20 e0       	ldi	r18, 0x00	; 0
    49e2:	30 e0       	ldi	r19, 0x00	; 0
    49e4:	40 e2       	ldi	r20, 0x20	; 32
    49e6:	51 e4       	ldi	r21, 0x41	; 65
    49e8:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    49ec:	dc 01       	movw	r26, r24
    49ee:	cb 01       	movw	r24, r22
    49f0:	bc 01       	movw	r22, r24
    49f2:	cd 01       	movw	r24, r26
    49f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    49f8:	dc 01       	movw	r26, r24
    49fa:	cb 01       	movw	r24, r22
    49fc:	9e 83       	std	Y+6, r25	; 0x06
    49fe:	8d 83       	std	Y+5, r24	; 0x05
    4a00:	0f c0       	rjmp	.+30     	; 0x4a20 <Welcom_Page+0x918>
    4a02:	88 ec       	ldi	r24, 0xC8	; 200
    4a04:	90 e0       	ldi	r25, 0x00	; 0
    4a06:	9c 83       	std	Y+4, r25	; 0x04
    4a08:	8b 83       	std	Y+3, r24	; 0x03
    4a0a:	8b 81       	ldd	r24, Y+3	; 0x03
    4a0c:	9c 81       	ldd	r25, Y+4	; 0x04
    4a0e:	01 97       	sbiw	r24, 0x01	; 1
    4a10:	f1 f7       	brne	.-4      	; 0x4a0e <Welcom_Page+0x906>
    4a12:	9c 83       	std	Y+4, r25	; 0x04
    4a14:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4a16:	8d 81       	ldd	r24, Y+5	; 0x05
    4a18:	9e 81       	ldd	r25, Y+6	; 0x06
    4a1a:	01 97       	sbiw	r24, 0x01	; 1
    4a1c:	9e 83       	std	Y+6, r25	; 0x06
    4a1e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4a20:	8d 81       	ldd	r24, Y+5	; 0x05
    4a22:	9e 81       	ldd	r25, Y+6	; 0x06
    4a24:	00 97       	sbiw	r24, 0x00	; 0
    4a26:	69 f7       	brne	.-38     	; 0x4a02 <Welcom_Page+0x8fa>
    4a28:	14 c0       	rjmp	.+40     	; 0x4a52 <Welcom_Page+0x94a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4a2a:	6f 81       	ldd	r22, Y+7	; 0x07
    4a2c:	78 85       	ldd	r23, Y+8	; 0x08
    4a2e:	89 85       	ldd	r24, Y+9	; 0x09
    4a30:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a32:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4a36:	dc 01       	movw	r26, r24
    4a38:	cb 01       	movw	r24, r22
    4a3a:	9e 83       	std	Y+6, r25	; 0x06
    4a3c:	8d 83       	std	Y+5, r24	; 0x05
    4a3e:	8d 81       	ldd	r24, Y+5	; 0x05
    4a40:	9e 81       	ldd	r25, Y+6	; 0x06
    4a42:	9a 83       	std	Y+2, r25	; 0x02
    4a44:	89 83       	std	Y+1, r24	; 0x01
    4a46:	89 81       	ldd	r24, Y+1	; 0x01
    4a48:	9a 81       	ldd	r25, Y+2	; 0x02
    4a4a:	01 97       	sbiw	r24, 0x01	; 1
    4a4c:	f1 f7       	brne	.-4      	; 0x4a4a <Welcom_Page+0x942>
    4a4e:	9a 83       	std	Y+2, r25	; 0x02
    4a50:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(500);
}
    4a52:	cc 57       	subi	r28, 0x7C	; 124
    4a54:	df 4f       	sbci	r29, 0xFF	; 255
    4a56:	0f b6       	in	r0, 0x3f	; 63
    4a58:	f8 94       	cli
    4a5a:	de bf       	out	0x3e, r29	; 62
    4a5c:	0f be       	out	0x3f, r0	; 63
    4a5e:	cd bf       	out	0x3d, r28	; 61
    4a60:	cf 91       	pop	r28
    4a62:	df 91       	pop	r29
    4a64:	1f 91       	pop	r17
    4a66:	0f 91       	pop	r16
    4a68:	08 95       	ret

00004a6a <Home_Page>:

void Home_Page(void){
    4a6a:	ef 92       	push	r14
    4a6c:	0f 93       	push	r16
    4a6e:	df 93       	push	r29
    4a70:	cf 93       	push	r28
    4a72:	cd b7       	in	r28, 0x3d	; 61
    4a74:	de b7       	in	r29, 0x3e	; 62
    4a76:	69 97       	sbiw	r28, 0x19	; 25
    4a78:	0f b6       	in	r0, 0x3f	; 63
    4a7a:	f8 94       	cli
    4a7c:	de bf       	out	0x3e, r29	; 62
    4a7e:	0f be       	out	0x3f, r0	; 63
    4a80:	cd bf       	out	0x3d, r28	; 61
	//Home page
	u8 wordCONTROL[]  = "CONTROL";
    4a82:	ce 01       	movw	r24, r28
    4a84:	01 96       	adiw	r24, 0x01	; 1
    4a86:	99 8b       	std	Y+17, r25	; 0x11
    4a88:	88 8b       	std	Y+16, r24	; 0x10
    4a8a:	eb e7       	ldi	r30, 0x7B	; 123
    4a8c:	f0 e0       	ldi	r31, 0x00	; 0
    4a8e:	fb 8b       	std	Y+19, r31	; 0x13
    4a90:	ea 8b       	std	Y+18, r30	; 0x12
    4a92:	f8 e0       	ldi	r31, 0x08	; 8
    4a94:	fc 8b       	std	Y+20, r31	; 0x14
    4a96:	ea 89       	ldd	r30, Y+18	; 0x12
    4a98:	fb 89       	ldd	r31, Y+19	; 0x13
    4a9a:	00 80       	ld	r0, Z
    4a9c:	8a 89       	ldd	r24, Y+18	; 0x12
    4a9e:	9b 89       	ldd	r25, Y+19	; 0x13
    4aa0:	01 96       	adiw	r24, 0x01	; 1
    4aa2:	9b 8b       	std	Y+19, r25	; 0x13
    4aa4:	8a 8b       	std	Y+18, r24	; 0x12
    4aa6:	e8 89       	ldd	r30, Y+16	; 0x10
    4aa8:	f9 89       	ldd	r31, Y+17	; 0x11
    4aaa:	00 82       	st	Z, r0
    4aac:	88 89       	ldd	r24, Y+16	; 0x10
    4aae:	99 89       	ldd	r25, Y+17	; 0x11
    4ab0:	01 96       	adiw	r24, 0x01	; 1
    4ab2:	99 8b       	std	Y+17, r25	; 0x11
    4ab4:	88 8b       	std	Y+16, r24	; 0x10
    4ab6:	9c 89       	ldd	r25, Y+20	; 0x14
    4ab8:	91 50       	subi	r25, 0x01	; 1
    4aba:	9c 8b       	std	Y+20, r25	; 0x14
    4abc:	ec 89       	ldd	r30, Y+20	; 0x14
    4abe:	ee 23       	and	r30, r30
    4ac0:	51 f7       	brne	.-44     	; 0x4a96 <Home_Page+0x2c>
	u8 wordSTATUS[]   = "STATUS";
    4ac2:	ce 01       	movw	r24, r28
    4ac4:	09 96       	adiw	r24, 0x09	; 9
    4ac6:	9e 8b       	std	Y+22, r25	; 0x16
    4ac8:	8d 8b       	std	Y+21, r24	; 0x15
    4aca:	e3 e8       	ldi	r30, 0x83	; 131
    4acc:	f0 e0       	ldi	r31, 0x00	; 0
    4ace:	f8 8f       	std	Y+24, r31	; 0x18
    4ad0:	ef 8b       	std	Y+23, r30	; 0x17
    4ad2:	f7 e0       	ldi	r31, 0x07	; 7
    4ad4:	f9 8f       	std	Y+25, r31	; 0x19
    4ad6:	ef 89       	ldd	r30, Y+23	; 0x17
    4ad8:	f8 8d       	ldd	r31, Y+24	; 0x18
    4ada:	00 80       	ld	r0, Z
    4adc:	8f 89       	ldd	r24, Y+23	; 0x17
    4ade:	98 8d       	ldd	r25, Y+24	; 0x18
    4ae0:	01 96       	adiw	r24, 0x01	; 1
    4ae2:	98 8f       	std	Y+24, r25	; 0x18
    4ae4:	8f 8b       	std	Y+23, r24	; 0x17
    4ae6:	ed 89       	ldd	r30, Y+21	; 0x15
    4ae8:	fe 89       	ldd	r31, Y+22	; 0x16
    4aea:	00 82       	st	Z, r0
    4aec:	8d 89       	ldd	r24, Y+21	; 0x15
    4aee:	9e 89       	ldd	r25, Y+22	; 0x16
    4af0:	01 96       	adiw	r24, 0x01	; 1
    4af2:	9e 8b       	std	Y+22, r25	; 0x16
    4af4:	8d 8b       	std	Y+21, r24	; 0x15
    4af6:	99 8d       	ldd	r25, Y+25	; 0x19
    4af8:	91 50       	subi	r25, 0x01	; 1
    4afa:	99 8f       	std	Y+25, r25	; 0x19
    4afc:	e9 8d       	ldd	r30, Y+25	; 0x19
    4afe:	ee 23       	and	r30, r30
    4b00:	51 f7       	brne	.-44     	; 0x4ad6 <Home_Page+0x6c>
	//1-CONTROL
	CLCD_WriteNum_Pos(1,1,1);
    4b02:	21 e0       	ldi	r18, 0x01	; 1
    4b04:	30 e0       	ldi	r19, 0x00	; 0
    4b06:	40 e0       	ldi	r20, 0x00	; 0
    4b08:	50 e0       	ldi	r21, 0x00	; 0
    4b0a:	60 e0       	ldi	r22, 0x00	; 0
    4b0c:	70 e0       	ldi	r23, 0x00	; 0
    4b0e:	80 e0       	ldi	r24, 0x00	; 0
    4b10:	90 e0       	ldi	r25, 0x00	; 0
    4b12:	01 e0       	ldi	r16, 0x01	; 1
    4b14:	ee 24       	eor	r14, r14
    4b16:	e3 94       	inc	r14
    4b18:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <CLCD_WriteNum_Pos>
	CLCD_WriteData_Pos('-',1,2);
    4b1c:	8d e2       	ldi	r24, 0x2D	; 45
    4b1e:	61 e0       	ldi	r22, 0x01	; 1
    4b20:	42 e0       	ldi	r20, 0x02	; 2
    4b22:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>
	CLCD_WriteString_Pos(wordCONTROL,1,3);
    4b26:	ce 01       	movw	r24, r28
    4b28:	01 96       	adiw	r24, 0x01	; 1
    4b2a:	61 e0       	ldi	r22, 0x01	; 1
    4b2c:	43 e0       	ldi	r20, 0x03	; 3
    4b2e:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>

	//2-STATUS
	CLCD_WriteNum_Pos(2,2,1);
    4b32:	22 e0       	ldi	r18, 0x02	; 2
    4b34:	30 e0       	ldi	r19, 0x00	; 0
    4b36:	40 e0       	ldi	r20, 0x00	; 0
    4b38:	50 e0       	ldi	r21, 0x00	; 0
    4b3a:	60 e0       	ldi	r22, 0x00	; 0
    4b3c:	70 e0       	ldi	r23, 0x00	; 0
    4b3e:	80 e0       	ldi	r24, 0x00	; 0
    4b40:	90 e0       	ldi	r25, 0x00	; 0
    4b42:	02 e0       	ldi	r16, 0x02	; 2
    4b44:	ee 24       	eor	r14, r14
    4b46:	e3 94       	inc	r14
    4b48:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <CLCD_WriteNum_Pos>
	CLCD_WriteData_Pos('-',2,2);
    4b4c:	8d e2       	ldi	r24, 0x2D	; 45
    4b4e:	62 e0       	ldi	r22, 0x02	; 2
    4b50:	42 e0       	ldi	r20, 0x02	; 2
    4b52:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>
	CLCD_WriteString_Pos(wordSTATUS,2,3);
    4b56:	ce 01       	movw	r24, r28
    4b58:	09 96       	adiw	r24, 0x09	; 9
    4b5a:	62 e0       	ldi	r22, 0x02	; 2
    4b5c:	43 e0       	ldi	r20, 0x03	; 3
    4b5e:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
}
    4b62:	69 96       	adiw	r28, 0x19	; 25
    4b64:	0f b6       	in	r0, 0x3f	; 63
    4b66:	f8 94       	cli
    4b68:	de bf       	out	0x3e, r29	; 62
    4b6a:	0f be       	out	0x3f, r0	; 63
    4b6c:	cd bf       	out	0x3d, r28	; 61
    4b6e:	cf 91       	pop	r28
    4b70:	df 91       	pop	r29
    4b72:	0f 91       	pop	r16
    4b74:	ef 90       	pop	r14
    4b76:	08 95       	ret

00004b78 <Control_Choice>:

void Control_Choice(void){
    4b78:	ef 92       	push	r14
    4b7a:	0f 93       	push	r16
    4b7c:	df 93       	push	r29
    4b7e:	cf 93       	push	r28
    4b80:	cd b7       	in	r28, 0x3d	; 61
    4b82:	de b7       	in	r29, 0x3e	; 62
    4b84:	62 97       	sbiw	r28, 0x12	; 18
    4b86:	0f b6       	in	r0, 0x3f	; 63
    4b88:	f8 94       	cli
    4b8a:	de bf       	out	0x3e, r29	; 62
    4b8c:	0f be       	out	0x3f, r0	; 63
    4b8e:	cd bf       	out	0x3d, r28	; 61
	//Control Choice Page
	u8 wordLED[]      = "LED";
    4b90:	80 91 8a 00 	lds	r24, 0x008A
    4b94:	90 91 8b 00 	lds	r25, 0x008B
    4b98:	a0 91 8c 00 	lds	r26, 0x008C
    4b9c:	b0 91 8d 00 	lds	r27, 0x008D
    4ba0:	89 83       	std	Y+1, r24	; 0x01
    4ba2:	9a 83       	std	Y+2, r25	; 0x02
    4ba4:	ab 83       	std	Y+3, r26	; 0x03
    4ba6:	bc 83       	std	Y+4, r27	; 0x04
	u8 wordDC_MOTOR[] = "DC-MOTOR";
    4ba8:	ce 01       	movw	r24, r28
    4baa:	05 96       	adiw	r24, 0x05	; 5
    4bac:	9f 87       	std	Y+15, r25	; 0x0f
    4bae:	8e 87       	std	Y+14, r24	; 0x0e
    4bb0:	ee e8       	ldi	r30, 0x8E	; 142
    4bb2:	f0 e0       	ldi	r31, 0x00	; 0
    4bb4:	f9 8b       	std	Y+17, r31	; 0x11
    4bb6:	e8 8b       	std	Y+16, r30	; 0x10
    4bb8:	f9 e0       	ldi	r31, 0x09	; 9
    4bba:	fa 8b       	std	Y+18, r31	; 0x12
    4bbc:	e8 89       	ldd	r30, Y+16	; 0x10
    4bbe:	f9 89       	ldd	r31, Y+17	; 0x11
    4bc0:	00 80       	ld	r0, Z
    4bc2:	88 89       	ldd	r24, Y+16	; 0x10
    4bc4:	99 89       	ldd	r25, Y+17	; 0x11
    4bc6:	01 96       	adiw	r24, 0x01	; 1
    4bc8:	99 8b       	std	Y+17, r25	; 0x11
    4bca:	88 8b       	std	Y+16, r24	; 0x10
    4bcc:	ee 85       	ldd	r30, Y+14	; 0x0e
    4bce:	ff 85       	ldd	r31, Y+15	; 0x0f
    4bd0:	00 82       	st	Z, r0
    4bd2:	8e 85       	ldd	r24, Y+14	; 0x0e
    4bd4:	9f 85       	ldd	r25, Y+15	; 0x0f
    4bd6:	01 96       	adiw	r24, 0x01	; 1
    4bd8:	9f 87       	std	Y+15, r25	; 0x0f
    4bda:	8e 87       	std	Y+14, r24	; 0x0e
    4bdc:	9a 89       	ldd	r25, Y+18	; 0x12
    4bde:	91 50       	subi	r25, 0x01	; 1
    4be0:	9a 8b       	std	Y+18, r25	; 0x12
    4be2:	ea 89       	ldd	r30, Y+18	; 0x12
    4be4:	ee 23       	and	r30, r30
    4be6:	51 f7       	brne	.-44     	; 0x4bbc <Control_Choice+0x44>
	CLCD_WriteNum_Pos(1,1,1);
    4be8:	21 e0       	ldi	r18, 0x01	; 1
    4bea:	30 e0       	ldi	r19, 0x00	; 0
    4bec:	40 e0       	ldi	r20, 0x00	; 0
    4bee:	50 e0       	ldi	r21, 0x00	; 0
    4bf0:	60 e0       	ldi	r22, 0x00	; 0
    4bf2:	70 e0       	ldi	r23, 0x00	; 0
    4bf4:	80 e0       	ldi	r24, 0x00	; 0
    4bf6:	90 e0       	ldi	r25, 0x00	; 0
    4bf8:	01 e0       	ldi	r16, 0x01	; 1
    4bfa:	ee 24       	eor	r14, r14
    4bfc:	e3 94       	inc	r14
    4bfe:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <CLCD_WriteNum_Pos>
	CLCD_WriteData_Pos('-',1,2);
    4c02:	8d e2       	ldi	r24, 0x2D	; 45
    4c04:	61 e0       	ldi	r22, 0x01	; 1
    4c06:	42 e0       	ldi	r20, 0x02	; 2
    4c08:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>
	CLCD_WriteString_Pos(wordLED,1,3);
    4c0c:	ce 01       	movw	r24, r28
    4c0e:	01 96       	adiw	r24, 0x01	; 1
    4c10:	61 e0       	ldi	r22, 0x01	; 1
    4c12:	43 e0       	ldi	r20, 0x03	; 3
    4c14:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
	CLCD_WriteNum_Pos(2,2,1);
    4c18:	22 e0       	ldi	r18, 0x02	; 2
    4c1a:	30 e0       	ldi	r19, 0x00	; 0
    4c1c:	40 e0       	ldi	r20, 0x00	; 0
    4c1e:	50 e0       	ldi	r21, 0x00	; 0
    4c20:	60 e0       	ldi	r22, 0x00	; 0
    4c22:	70 e0       	ldi	r23, 0x00	; 0
    4c24:	80 e0       	ldi	r24, 0x00	; 0
    4c26:	90 e0       	ldi	r25, 0x00	; 0
    4c28:	02 e0       	ldi	r16, 0x02	; 2
    4c2a:	ee 24       	eor	r14, r14
    4c2c:	e3 94       	inc	r14
    4c2e:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <CLCD_WriteNum_Pos>
	CLCD_WriteData_Pos('-',1,2);
    4c32:	8d e2       	ldi	r24, 0x2D	; 45
    4c34:	61 e0       	ldi	r22, 0x01	; 1
    4c36:	42 e0       	ldi	r20, 0x02	; 2
    4c38:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>
	CLCD_WriteString_Pos(wordDC_MOTOR,2,3);
    4c3c:	ce 01       	movw	r24, r28
    4c3e:	05 96       	adiw	r24, 0x05	; 5
    4c40:	62 e0       	ldi	r22, 0x02	; 2
    4c42:	43 e0       	ldi	r20, 0x03	; 3
    4c44:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
}
    4c48:	62 96       	adiw	r28, 0x12	; 18
    4c4a:	0f b6       	in	r0, 0x3f	; 63
    4c4c:	f8 94       	cli
    4c4e:	de bf       	out	0x3e, r29	; 62
    4c50:	0f be       	out	0x3f, r0	; 63
    4c52:	cd bf       	out	0x3d, r28	; 61
    4c54:	cf 91       	pop	r28
    4c56:	df 91       	pop	r29
    4c58:	0f 91       	pop	r16
    4c5a:	ef 90       	pop	r14
    4c5c:	08 95       	ret

00004c5e <Control_LED_Choice>:

void Control_LED_Choice(void){
    4c5e:	ef 92       	push	r14
    4c60:	0f 93       	push	r16
    4c62:	df 93       	push	r29
    4c64:	cf 93       	push	r28
    4c66:	cd b7       	in	r28, 0x3d	; 61
    4c68:	de b7       	in	r29, 0x3e	; 62
    4c6a:	69 97       	sbiw	r28, 0x19	; 25
    4c6c:	0f b6       	in	r0, 0x3f	; 63
    4c6e:	f8 94       	cli
    4c70:	de bf       	out	0x3e, r29	; 62
    4c72:	0f be       	out	0x3f, r0	; 63
    4c74:	cd bf       	out	0x3d, r28	; 61
	u8 wordLED_ON[]  = "LED_ON";
    4c76:	ce 01       	movw	r24, r28
    4c78:	01 96       	adiw	r24, 0x01	; 1
    4c7a:	99 8b       	std	Y+17, r25	; 0x11
    4c7c:	88 8b       	std	Y+16, r24	; 0x10
    4c7e:	e7 e9       	ldi	r30, 0x97	; 151
    4c80:	f0 e0       	ldi	r31, 0x00	; 0
    4c82:	fb 8b       	std	Y+19, r31	; 0x13
    4c84:	ea 8b       	std	Y+18, r30	; 0x12
    4c86:	f7 e0       	ldi	r31, 0x07	; 7
    4c88:	fc 8b       	std	Y+20, r31	; 0x14
    4c8a:	ea 89       	ldd	r30, Y+18	; 0x12
    4c8c:	fb 89       	ldd	r31, Y+19	; 0x13
    4c8e:	00 80       	ld	r0, Z
    4c90:	8a 89       	ldd	r24, Y+18	; 0x12
    4c92:	9b 89       	ldd	r25, Y+19	; 0x13
    4c94:	01 96       	adiw	r24, 0x01	; 1
    4c96:	9b 8b       	std	Y+19, r25	; 0x13
    4c98:	8a 8b       	std	Y+18, r24	; 0x12
    4c9a:	e8 89       	ldd	r30, Y+16	; 0x10
    4c9c:	f9 89       	ldd	r31, Y+17	; 0x11
    4c9e:	00 82       	st	Z, r0
    4ca0:	88 89       	ldd	r24, Y+16	; 0x10
    4ca2:	99 89       	ldd	r25, Y+17	; 0x11
    4ca4:	01 96       	adiw	r24, 0x01	; 1
    4ca6:	99 8b       	std	Y+17, r25	; 0x11
    4ca8:	88 8b       	std	Y+16, r24	; 0x10
    4caa:	9c 89       	ldd	r25, Y+20	; 0x14
    4cac:	91 50       	subi	r25, 0x01	; 1
    4cae:	9c 8b       	std	Y+20, r25	; 0x14
    4cb0:	ec 89       	ldd	r30, Y+20	; 0x14
    4cb2:	ee 23       	and	r30, r30
    4cb4:	51 f7       	brne	.-44     	; 0x4c8a <Control_LED_Choice+0x2c>
	u8 wordLED_OFF[] = "LED_OFF";
    4cb6:	ce 01       	movw	r24, r28
    4cb8:	08 96       	adiw	r24, 0x08	; 8
    4cba:	9e 8b       	std	Y+22, r25	; 0x16
    4cbc:	8d 8b       	std	Y+21, r24	; 0x15
    4cbe:	ee e9       	ldi	r30, 0x9E	; 158
    4cc0:	f0 e0       	ldi	r31, 0x00	; 0
    4cc2:	f8 8f       	std	Y+24, r31	; 0x18
    4cc4:	ef 8b       	std	Y+23, r30	; 0x17
    4cc6:	f8 e0       	ldi	r31, 0x08	; 8
    4cc8:	f9 8f       	std	Y+25, r31	; 0x19
    4cca:	ef 89       	ldd	r30, Y+23	; 0x17
    4ccc:	f8 8d       	ldd	r31, Y+24	; 0x18
    4cce:	00 80       	ld	r0, Z
    4cd0:	8f 89       	ldd	r24, Y+23	; 0x17
    4cd2:	98 8d       	ldd	r25, Y+24	; 0x18
    4cd4:	01 96       	adiw	r24, 0x01	; 1
    4cd6:	98 8f       	std	Y+24, r25	; 0x18
    4cd8:	8f 8b       	std	Y+23, r24	; 0x17
    4cda:	ed 89       	ldd	r30, Y+21	; 0x15
    4cdc:	fe 89       	ldd	r31, Y+22	; 0x16
    4cde:	00 82       	st	Z, r0
    4ce0:	8d 89       	ldd	r24, Y+21	; 0x15
    4ce2:	9e 89       	ldd	r25, Y+22	; 0x16
    4ce4:	01 96       	adiw	r24, 0x01	; 1
    4ce6:	9e 8b       	std	Y+22, r25	; 0x16
    4ce8:	8d 8b       	std	Y+21, r24	; 0x15
    4cea:	99 8d       	ldd	r25, Y+25	; 0x19
    4cec:	91 50       	subi	r25, 0x01	; 1
    4cee:	99 8f       	std	Y+25, r25	; 0x19
    4cf0:	e9 8d       	ldd	r30, Y+25	; 0x19
    4cf2:	ee 23       	and	r30, r30
    4cf4:	51 f7       	brne	.-44     	; 0x4cca <Control_LED_Choice+0x6c>
	CLCD_WriteNum_Pos(1,1,1);
    4cf6:	21 e0       	ldi	r18, 0x01	; 1
    4cf8:	30 e0       	ldi	r19, 0x00	; 0
    4cfa:	40 e0       	ldi	r20, 0x00	; 0
    4cfc:	50 e0       	ldi	r21, 0x00	; 0
    4cfe:	60 e0       	ldi	r22, 0x00	; 0
    4d00:	70 e0       	ldi	r23, 0x00	; 0
    4d02:	80 e0       	ldi	r24, 0x00	; 0
    4d04:	90 e0       	ldi	r25, 0x00	; 0
    4d06:	01 e0       	ldi	r16, 0x01	; 1
    4d08:	ee 24       	eor	r14, r14
    4d0a:	e3 94       	inc	r14
    4d0c:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <CLCD_WriteNum_Pos>
	CLCD_WriteData_Pos('-',1,2);
    4d10:	8d e2       	ldi	r24, 0x2D	; 45
    4d12:	61 e0       	ldi	r22, 0x01	; 1
    4d14:	42 e0       	ldi	r20, 0x02	; 2
    4d16:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>
	CLCD_WriteString_Pos(wordLED_ON,1,3);
    4d1a:	ce 01       	movw	r24, r28
    4d1c:	01 96       	adiw	r24, 0x01	; 1
    4d1e:	61 e0       	ldi	r22, 0x01	; 1
    4d20:	43 e0       	ldi	r20, 0x03	; 3
    4d22:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
	CLCD_WriteNum_Pos(2,2,1);
    4d26:	22 e0       	ldi	r18, 0x02	; 2
    4d28:	30 e0       	ldi	r19, 0x00	; 0
    4d2a:	40 e0       	ldi	r20, 0x00	; 0
    4d2c:	50 e0       	ldi	r21, 0x00	; 0
    4d2e:	60 e0       	ldi	r22, 0x00	; 0
    4d30:	70 e0       	ldi	r23, 0x00	; 0
    4d32:	80 e0       	ldi	r24, 0x00	; 0
    4d34:	90 e0       	ldi	r25, 0x00	; 0
    4d36:	02 e0       	ldi	r16, 0x02	; 2
    4d38:	ee 24       	eor	r14, r14
    4d3a:	e3 94       	inc	r14
    4d3c:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <CLCD_WriteNum_Pos>
	CLCD_WriteData_Pos('-',1,2);
    4d40:	8d e2       	ldi	r24, 0x2D	; 45
    4d42:	61 e0       	ldi	r22, 0x01	; 1
    4d44:	42 e0       	ldi	r20, 0x02	; 2
    4d46:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>
	CLCD_WriteString_Pos(wordLED_OFF,2,3);
    4d4a:	ce 01       	movw	r24, r28
    4d4c:	08 96       	adiw	r24, 0x08	; 8
    4d4e:	62 e0       	ldi	r22, 0x02	; 2
    4d50:	43 e0       	ldi	r20, 0x03	; 3
    4d52:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
}
    4d56:	69 96       	adiw	r28, 0x19	; 25
    4d58:	0f b6       	in	r0, 0x3f	; 63
    4d5a:	f8 94       	cli
    4d5c:	de bf       	out	0x3e, r29	; 62
    4d5e:	0f be       	out	0x3f, r0	; 63
    4d60:	cd bf       	out	0x3d, r28	; 61
    4d62:	cf 91       	pop	r28
    4d64:	df 91       	pop	r29
    4d66:	0f 91       	pop	r16
    4d68:	ef 90       	pop	r14
    4d6a:	08 95       	ret

00004d6c <Control_DC_MOTOR_Choice>:

void Control_DC_MOTOR_Choice(void){
    4d6c:	ef 92       	push	r14
    4d6e:	0f 93       	push	r16
    4d70:	df 93       	push	r29
    4d72:	cf 93       	push	r28
    4d74:	cd b7       	in	r28, 0x3d	; 61
    4d76:	de b7       	in	r29, 0x3e	; 62
    4d78:	a3 97       	sbiw	r28, 0x23	; 35
    4d7a:	0f b6       	in	r0, 0x3f	; 63
    4d7c:	f8 94       	cli
    4d7e:	de bf       	out	0x3e, r29	; 62
    4d80:	0f be       	out	0x3f, r0	; 63
    4d82:	cd bf       	out	0x3d, r28	; 61
	u8 wordDC_MOTOR_ON[]  = "DC_MOTOR_ON";
    4d84:	ce 01       	movw	r24, r28
    4d86:	01 96       	adiw	r24, 0x01	; 1
    4d88:	9b 8f       	std	Y+27, r25	; 0x1b
    4d8a:	8a 8f       	std	Y+26, r24	; 0x1a
    4d8c:	e6 ea       	ldi	r30, 0xA6	; 166
    4d8e:	f0 e0       	ldi	r31, 0x00	; 0
    4d90:	fd 8f       	std	Y+29, r31	; 0x1d
    4d92:	ec 8f       	std	Y+28, r30	; 0x1c
    4d94:	fc e0       	ldi	r31, 0x0C	; 12
    4d96:	fe 8f       	std	Y+30, r31	; 0x1e
    4d98:	ec 8d       	ldd	r30, Y+28	; 0x1c
    4d9a:	fd 8d       	ldd	r31, Y+29	; 0x1d
    4d9c:	00 80       	ld	r0, Z
    4d9e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    4da0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    4da2:	01 96       	adiw	r24, 0x01	; 1
    4da4:	9d 8f       	std	Y+29, r25	; 0x1d
    4da6:	8c 8f       	std	Y+28, r24	; 0x1c
    4da8:	ea 8d       	ldd	r30, Y+26	; 0x1a
    4daa:	fb 8d       	ldd	r31, Y+27	; 0x1b
    4dac:	00 82       	st	Z, r0
    4dae:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4db0:	9b 8d       	ldd	r25, Y+27	; 0x1b
    4db2:	01 96       	adiw	r24, 0x01	; 1
    4db4:	9b 8f       	std	Y+27, r25	; 0x1b
    4db6:	8a 8f       	std	Y+26, r24	; 0x1a
    4db8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4dba:	91 50       	subi	r25, 0x01	; 1
    4dbc:	9e 8f       	std	Y+30, r25	; 0x1e
    4dbe:	ee 8d       	ldd	r30, Y+30	; 0x1e
    4dc0:	ee 23       	and	r30, r30
    4dc2:	51 f7       	brne	.-44     	; 0x4d98 <Control_DC_MOTOR_Choice+0x2c>
	u8 wordDC_MOTOR_OFF[] = "DC_MOTOR_OFF";
    4dc4:	ce 01       	movw	r24, r28
    4dc6:	0d 96       	adiw	r24, 0x0d	; 13
    4dc8:	98 a3       	std	Y+32, r25	; 0x20
    4dca:	8f 8f       	std	Y+31, r24	; 0x1f
    4dcc:	e2 eb       	ldi	r30, 0xB2	; 178
    4dce:	f0 e0       	ldi	r31, 0x00	; 0
    4dd0:	fa a3       	std	Y+34, r31	; 0x22
    4dd2:	e9 a3       	std	Y+33, r30	; 0x21
    4dd4:	fd e0       	ldi	r31, 0x0D	; 13
    4dd6:	fb a3       	std	Y+35, r31	; 0x23
    4dd8:	e9 a1       	ldd	r30, Y+33	; 0x21
    4dda:	fa a1       	ldd	r31, Y+34	; 0x22
    4ddc:	00 80       	ld	r0, Z
    4dde:	89 a1       	ldd	r24, Y+33	; 0x21
    4de0:	9a a1       	ldd	r25, Y+34	; 0x22
    4de2:	01 96       	adiw	r24, 0x01	; 1
    4de4:	9a a3       	std	Y+34, r25	; 0x22
    4de6:	89 a3       	std	Y+33, r24	; 0x21
    4de8:	ef 8d       	ldd	r30, Y+31	; 0x1f
    4dea:	f8 a1       	ldd	r31, Y+32	; 0x20
    4dec:	00 82       	st	Z, r0
    4dee:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4df0:	98 a1       	ldd	r25, Y+32	; 0x20
    4df2:	01 96       	adiw	r24, 0x01	; 1
    4df4:	98 a3       	std	Y+32, r25	; 0x20
    4df6:	8f 8f       	std	Y+31, r24	; 0x1f
    4df8:	9b a1       	ldd	r25, Y+35	; 0x23
    4dfa:	91 50       	subi	r25, 0x01	; 1
    4dfc:	9b a3       	std	Y+35, r25	; 0x23
    4dfe:	eb a1       	ldd	r30, Y+35	; 0x23
    4e00:	ee 23       	and	r30, r30
    4e02:	51 f7       	brne	.-44     	; 0x4dd8 <Control_DC_MOTOR_Choice+0x6c>
	CLCD_WriteNum_Pos(1,1,1);
    4e04:	21 e0       	ldi	r18, 0x01	; 1
    4e06:	30 e0       	ldi	r19, 0x00	; 0
    4e08:	40 e0       	ldi	r20, 0x00	; 0
    4e0a:	50 e0       	ldi	r21, 0x00	; 0
    4e0c:	60 e0       	ldi	r22, 0x00	; 0
    4e0e:	70 e0       	ldi	r23, 0x00	; 0
    4e10:	80 e0       	ldi	r24, 0x00	; 0
    4e12:	90 e0       	ldi	r25, 0x00	; 0
    4e14:	01 e0       	ldi	r16, 0x01	; 1
    4e16:	ee 24       	eor	r14, r14
    4e18:	e3 94       	inc	r14
    4e1a:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <CLCD_WriteNum_Pos>
	CLCD_WriteData_Pos('-',1,2);
    4e1e:	8d e2       	ldi	r24, 0x2D	; 45
    4e20:	61 e0       	ldi	r22, 0x01	; 1
    4e22:	42 e0       	ldi	r20, 0x02	; 2
    4e24:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>
	CLCD_WriteString_Pos(wordDC_MOTOR_ON,1,3);
    4e28:	ce 01       	movw	r24, r28
    4e2a:	01 96       	adiw	r24, 0x01	; 1
    4e2c:	61 e0       	ldi	r22, 0x01	; 1
    4e2e:	43 e0       	ldi	r20, 0x03	; 3
    4e30:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
	CLCD_WriteNum_Pos(2,2,1);
    4e34:	22 e0       	ldi	r18, 0x02	; 2
    4e36:	30 e0       	ldi	r19, 0x00	; 0
    4e38:	40 e0       	ldi	r20, 0x00	; 0
    4e3a:	50 e0       	ldi	r21, 0x00	; 0
    4e3c:	60 e0       	ldi	r22, 0x00	; 0
    4e3e:	70 e0       	ldi	r23, 0x00	; 0
    4e40:	80 e0       	ldi	r24, 0x00	; 0
    4e42:	90 e0       	ldi	r25, 0x00	; 0
    4e44:	02 e0       	ldi	r16, 0x02	; 2
    4e46:	ee 24       	eor	r14, r14
    4e48:	e3 94       	inc	r14
    4e4a:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <CLCD_WriteNum_Pos>
	CLCD_WriteData_Pos('-',1,2);
    4e4e:	8d e2       	ldi	r24, 0x2D	; 45
    4e50:	61 e0       	ldi	r22, 0x01	; 1
    4e52:	42 e0       	ldi	r20, 0x02	; 2
    4e54:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>
	CLCD_WriteString_Pos(wordDC_MOTOR_OFF,2,3);
    4e58:	ce 01       	movw	r24, r28
    4e5a:	0d 96       	adiw	r24, 0x0d	; 13
    4e5c:	62 e0       	ldi	r22, 0x02	; 2
    4e5e:	43 e0       	ldi	r20, 0x03	; 3
    4e60:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
}
    4e64:	a3 96       	adiw	r28, 0x23	; 35
    4e66:	0f b6       	in	r0, 0x3f	; 63
    4e68:	f8 94       	cli
    4e6a:	de bf       	out	0x3e, r29	; 62
    4e6c:	0f be       	out	0x3f, r0	; 63
    4e6e:	cd bf       	out	0x3d, r28	; 61
    4e70:	cf 91       	pop	r28
    4e72:	df 91       	pop	r29
    4e74:	0f 91       	pop	r16
    4e76:	ef 90       	pop	r14
    4e78:	08 95       	ret

00004e7a <Control_DC_MOTOR_ON_Choice>:

void Control_DC_MOTOR_ON_Choice(void){
    4e7a:	ef 92       	push	r14
    4e7c:	0f 93       	push	r16
    4e7e:	df 93       	push	r29
    4e80:	cf 93       	push	r28
    4e82:	cd b7       	in	r28, 0x3d	; 61
    4e84:	de b7       	in	r29, 0x3e	; 62
    4e86:	a9 97       	sbiw	r28, 0x29	; 41
    4e88:	0f b6       	in	r0, 0x3f	; 63
    4e8a:	f8 94       	cli
    4e8c:	de bf       	out	0x3e, r29	; 62
    4e8e:	0f be       	out	0x3f, r0	; 63
    4e90:	cd bf       	out	0x3d, r28	; 61
	u8 wordDC_MOTOR_ON_CW[] = "DC_MOTOR_ON_CW";
    4e92:	ce 01       	movw	r24, r28
    4e94:	01 96       	adiw	r24, 0x01	; 1
    4e96:	99 a3       	std	Y+33, r25	; 0x21
    4e98:	88 a3       	std	Y+32, r24	; 0x20
    4e9a:	ef eb       	ldi	r30, 0xBF	; 191
    4e9c:	f0 e0       	ldi	r31, 0x00	; 0
    4e9e:	fb a3       	std	Y+35, r31	; 0x23
    4ea0:	ea a3       	std	Y+34, r30	; 0x22
    4ea2:	ff e0       	ldi	r31, 0x0F	; 15
    4ea4:	fc a3       	std	Y+36, r31	; 0x24
    4ea6:	ea a1       	ldd	r30, Y+34	; 0x22
    4ea8:	fb a1       	ldd	r31, Y+35	; 0x23
    4eaa:	00 80       	ld	r0, Z
    4eac:	8a a1       	ldd	r24, Y+34	; 0x22
    4eae:	9b a1       	ldd	r25, Y+35	; 0x23
    4eb0:	01 96       	adiw	r24, 0x01	; 1
    4eb2:	9b a3       	std	Y+35, r25	; 0x23
    4eb4:	8a a3       	std	Y+34, r24	; 0x22
    4eb6:	e8 a1       	ldd	r30, Y+32	; 0x20
    4eb8:	f9 a1       	ldd	r31, Y+33	; 0x21
    4eba:	00 82       	st	Z, r0
    4ebc:	88 a1       	ldd	r24, Y+32	; 0x20
    4ebe:	99 a1       	ldd	r25, Y+33	; 0x21
    4ec0:	01 96       	adiw	r24, 0x01	; 1
    4ec2:	99 a3       	std	Y+33, r25	; 0x21
    4ec4:	88 a3       	std	Y+32, r24	; 0x20
    4ec6:	9c a1       	ldd	r25, Y+36	; 0x24
    4ec8:	91 50       	subi	r25, 0x01	; 1
    4eca:	9c a3       	std	Y+36, r25	; 0x24
    4ecc:	ec a1       	ldd	r30, Y+36	; 0x24
    4ece:	ee 23       	and	r30, r30
    4ed0:	51 f7       	brne	.-44     	; 0x4ea6 <Control_DC_MOTOR_ON_Choice+0x2c>
	u8 wordDC_MOTOR_ON_CCW[] = "DC_MOTOR_ON_CCW";
    4ed2:	ce 01       	movw	r24, r28
    4ed4:	40 96       	adiw	r24, 0x10	; 16
    4ed6:	9e a3       	std	Y+38, r25	; 0x26
    4ed8:	8d a3       	std	Y+37, r24	; 0x25
    4eda:	ee ec       	ldi	r30, 0xCE	; 206
    4edc:	f0 e0       	ldi	r31, 0x00	; 0
    4ede:	f8 a7       	std	Y+40, r31	; 0x28
    4ee0:	ef a3       	std	Y+39, r30	; 0x27
    4ee2:	f0 e1       	ldi	r31, 0x10	; 16
    4ee4:	f9 a7       	std	Y+41, r31	; 0x29
    4ee6:	ef a1       	ldd	r30, Y+39	; 0x27
    4ee8:	f8 a5       	ldd	r31, Y+40	; 0x28
    4eea:	00 80       	ld	r0, Z
    4eec:	8f a1       	ldd	r24, Y+39	; 0x27
    4eee:	98 a5       	ldd	r25, Y+40	; 0x28
    4ef0:	01 96       	adiw	r24, 0x01	; 1
    4ef2:	98 a7       	std	Y+40, r25	; 0x28
    4ef4:	8f a3       	std	Y+39, r24	; 0x27
    4ef6:	ed a1       	ldd	r30, Y+37	; 0x25
    4ef8:	fe a1       	ldd	r31, Y+38	; 0x26
    4efa:	00 82       	st	Z, r0
    4efc:	8d a1       	ldd	r24, Y+37	; 0x25
    4efe:	9e a1       	ldd	r25, Y+38	; 0x26
    4f00:	01 96       	adiw	r24, 0x01	; 1
    4f02:	9e a3       	std	Y+38, r25	; 0x26
    4f04:	8d a3       	std	Y+37, r24	; 0x25
    4f06:	99 a5       	ldd	r25, Y+41	; 0x29
    4f08:	91 50       	subi	r25, 0x01	; 1
    4f0a:	99 a7       	std	Y+41, r25	; 0x29
    4f0c:	e9 a5       	ldd	r30, Y+41	; 0x29
    4f0e:	ee 23       	and	r30, r30
    4f10:	51 f7       	brne	.-44     	; 0x4ee6 <Control_DC_MOTOR_ON_Choice+0x6c>
	CLCD_WriteNum_Pos(1,1,1);
    4f12:	21 e0       	ldi	r18, 0x01	; 1
    4f14:	30 e0       	ldi	r19, 0x00	; 0
    4f16:	40 e0       	ldi	r20, 0x00	; 0
    4f18:	50 e0       	ldi	r21, 0x00	; 0
    4f1a:	60 e0       	ldi	r22, 0x00	; 0
    4f1c:	70 e0       	ldi	r23, 0x00	; 0
    4f1e:	80 e0       	ldi	r24, 0x00	; 0
    4f20:	90 e0       	ldi	r25, 0x00	; 0
    4f22:	01 e0       	ldi	r16, 0x01	; 1
    4f24:	ee 24       	eor	r14, r14
    4f26:	e3 94       	inc	r14
    4f28:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <CLCD_WriteNum_Pos>
	CLCD_WriteData_Pos('-',1,2);
    4f2c:	8d e2       	ldi	r24, 0x2D	; 45
    4f2e:	61 e0       	ldi	r22, 0x01	; 1
    4f30:	42 e0       	ldi	r20, 0x02	; 2
    4f32:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>
	CLCD_WriteString_Pos(wordDC_MOTOR_ON_CW,1,3);
    4f36:	ce 01       	movw	r24, r28
    4f38:	01 96       	adiw	r24, 0x01	; 1
    4f3a:	61 e0       	ldi	r22, 0x01	; 1
    4f3c:	43 e0       	ldi	r20, 0x03	; 3
    4f3e:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
	CLCD_WriteNum_Pos(2,2,1);
    4f42:	22 e0       	ldi	r18, 0x02	; 2
    4f44:	30 e0       	ldi	r19, 0x00	; 0
    4f46:	40 e0       	ldi	r20, 0x00	; 0
    4f48:	50 e0       	ldi	r21, 0x00	; 0
    4f4a:	60 e0       	ldi	r22, 0x00	; 0
    4f4c:	70 e0       	ldi	r23, 0x00	; 0
    4f4e:	80 e0       	ldi	r24, 0x00	; 0
    4f50:	90 e0       	ldi	r25, 0x00	; 0
    4f52:	02 e0       	ldi	r16, 0x02	; 2
    4f54:	ee 24       	eor	r14, r14
    4f56:	e3 94       	inc	r14
    4f58:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <CLCD_WriteNum_Pos>
	CLCD_WriteData_Pos('-',1,2);
    4f5c:	8d e2       	ldi	r24, 0x2D	; 45
    4f5e:	61 e0       	ldi	r22, 0x01	; 1
    4f60:	42 e0       	ldi	r20, 0x02	; 2
    4f62:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <CLCD_WriteData_Pos>
	CLCD_WriteString_Pos(wordDC_MOTOR_ON_CCW,2,3);
    4f66:	ce 01       	movw	r24, r28
    4f68:	40 96       	adiw	r24, 0x10	; 16
    4f6a:	62 e0       	ldi	r22, 0x02	; 2
    4f6c:	43 e0       	ldi	r20, 0x03	; 3
    4f6e:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
}
    4f72:	a9 96       	adiw	r28, 0x29	; 41
    4f74:	0f b6       	in	r0, 0x3f	; 63
    4f76:	f8 94       	cli
    4f78:	de bf       	out	0x3e, r29	; 62
    4f7a:	0f be       	out	0x3f, r0	; 63
    4f7c:	cd bf       	out	0x3d, r28	; 61
    4f7e:	cf 91       	pop	r28
    4f80:	df 91       	pop	r29
    4f82:	0f 91       	pop	r16
    4f84:	ef 90       	pop	r14
    4f86:	08 95       	ret

00004f88 <DC_MOTOR_CW_ON>:

void DC_MOTOR_CW_ON(void){
    4f88:	df 93       	push	r29
    4f8a:	cf 93       	push	r28
    4f8c:	00 d0       	rcall	.+0      	; 0x4f8e <DC_MOTOR_CW_ON+0x6>
    4f8e:	00 d0       	rcall	.+0      	; 0x4f90 <DC_MOTOR_CW_ON+0x8>
    4f90:	0f 92       	push	r0
    4f92:	cd b7       	in	r28, 0x3d	; 61
    4f94:	de b7       	in	r29, 0x3e	; 62
	Motor motor;
	motor.motor_port = MOTOR_PORT;
    4f96:	82 e0       	ldi	r24, 0x02	; 2
    4f98:	89 83       	std	Y+1, r24	; 0x01
	motor.motor_pin1 = MOTOR_PIN1;
    4f9a:	84 e0       	ldi	r24, 0x04	; 4
    4f9c:	8a 83       	std	Y+2, r24	; 0x02
	motor.motor_pin2 = MOTOR_PIN2;
    4f9e:	85 e0       	ldi	r24, 0x05	; 5
    4fa0:	8b 83       	std	Y+3, r24	; 0x03
	motor.motor_pin3 = MOTOR_PIN3;
    4fa2:	86 e0       	ldi	r24, 0x06	; 6
    4fa4:	8c 83       	std	Y+4, r24	; 0x04
	motor.motor_pin4 = MOTOR_PIN4;
    4fa6:	87 e0       	ldi	r24, 0x07	; 7
    4fa8:	8d 83       	std	Y+5, r24	; 0x05

	DCMotor_SetCW(&motor);
    4faa:	ce 01       	movw	r24, r28
    4fac:	01 96       	adiw	r24, 0x01	; 1
    4fae:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <DCMotor_SetCW>
}
    4fb2:	0f 90       	pop	r0
    4fb4:	0f 90       	pop	r0
    4fb6:	0f 90       	pop	r0
    4fb8:	0f 90       	pop	r0
    4fba:	0f 90       	pop	r0
    4fbc:	cf 91       	pop	r28
    4fbe:	df 91       	pop	r29
    4fc0:	08 95       	ret

00004fc2 <DC_MOTOR_CCW_ON>:

void DC_MOTOR_CCW_ON(void){
    4fc2:	df 93       	push	r29
    4fc4:	cf 93       	push	r28
    4fc6:	00 d0       	rcall	.+0      	; 0x4fc8 <DC_MOTOR_CCW_ON+0x6>
    4fc8:	00 d0       	rcall	.+0      	; 0x4fca <DC_MOTOR_CCW_ON+0x8>
    4fca:	0f 92       	push	r0
    4fcc:	cd b7       	in	r28, 0x3d	; 61
    4fce:	de b7       	in	r29, 0x3e	; 62
	Motor motor;
	motor.motor_port = MOTOR_PORT;
    4fd0:	82 e0       	ldi	r24, 0x02	; 2
    4fd2:	89 83       	std	Y+1, r24	; 0x01
	motor.motor_pin1 = MOTOR_PIN1;
    4fd4:	84 e0       	ldi	r24, 0x04	; 4
    4fd6:	8a 83       	std	Y+2, r24	; 0x02
	motor.motor_pin2 = MOTOR_PIN2;
    4fd8:	85 e0       	ldi	r24, 0x05	; 5
    4fda:	8b 83       	std	Y+3, r24	; 0x03
	motor.motor_pin3 = MOTOR_PIN3;
    4fdc:	86 e0       	ldi	r24, 0x06	; 6
    4fde:	8c 83       	std	Y+4, r24	; 0x04
	motor.motor_pin4 = MOTOR_PIN4;
    4fe0:	87 e0       	ldi	r24, 0x07	; 7
    4fe2:	8d 83       	std	Y+5, r24	; 0x05

	DCMotor_SetCCW(&motor);
    4fe4:	ce 01       	movw	r24, r28
    4fe6:	01 96       	adiw	r24, 0x01	; 1
    4fe8:	0e 94 9d 16 	call	0x2d3a	; 0x2d3a <DCMotor_SetCCW>
}
    4fec:	0f 90       	pop	r0
    4fee:	0f 90       	pop	r0
    4ff0:	0f 90       	pop	r0
    4ff2:	0f 90       	pop	r0
    4ff4:	0f 90       	pop	r0
    4ff6:	cf 91       	pop	r28
    4ff8:	df 91       	pop	r29
    4ffa:	08 95       	ret

00004ffc <DC_MOTOR_OFF>:

void DC_MOTOR_OFF(void){
    4ffc:	df 93       	push	r29
    4ffe:	cf 93       	push	r28
    5000:	00 d0       	rcall	.+0      	; 0x5002 <DC_MOTOR_OFF+0x6>
    5002:	00 d0       	rcall	.+0      	; 0x5004 <DC_MOTOR_OFF+0x8>
    5004:	0f 92       	push	r0
    5006:	cd b7       	in	r28, 0x3d	; 61
    5008:	de b7       	in	r29, 0x3e	; 62
	Motor motor;
	motor.motor_port = MOTOR_PORT;
    500a:	82 e0       	ldi	r24, 0x02	; 2
    500c:	89 83       	std	Y+1, r24	; 0x01
	motor.motor_pin1 = MOTOR_PIN1;
    500e:	84 e0       	ldi	r24, 0x04	; 4
    5010:	8a 83       	std	Y+2, r24	; 0x02
	motor.motor_pin2 = MOTOR_PIN2;
    5012:	85 e0       	ldi	r24, 0x05	; 5
    5014:	8b 83       	std	Y+3, r24	; 0x03
	motor.motor_pin3 = MOTOR_PIN3;
    5016:	86 e0       	ldi	r24, 0x06	; 6
    5018:	8c 83       	std	Y+4, r24	; 0x04
	motor.motor_pin4 = MOTOR_PIN4;
    501a:	87 e0       	ldi	r24, 0x07	; 7
    501c:	8d 83       	std	Y+5, r24	; 0x05

	DCMotor_OFF(&motor);
    501e:	ce 01       	movw	r24, r28
    5020:	01 96       	adiw	r24, 0x01	; 1
    5022:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <DCMotor_OFF>
}
    5026:	0f 90       	pop	r0
    5028:	0f 90       	pop	r0
    502a:	0f 90       	pop	r0
    502c:	0f 90       	pop	r0
    502e:	0f 90       	pop	r0
    5030:	cf 91       	pop	r28
    5032:	df 91       	pop	r29
    5034:	08 95       	ret

00005036 <Status_Choice>:

void Status_Choice(void){
    5036:	df 93       	push	r29
    5038:	cf 93       	push	r28
    503a:	cd b7       	in	r28, 0x3d	; 61
    503c:	de b7       	in	r29, 0x3e	; 62
    503e:	c9 55       	subi	r28, 0x59	; 89
    5040:	d0 40       	sbci	r29, 0x00	; 0
    5042:	0f b6       	in	r0, 0x3f	; 63
    5044:	f8 94       	cli
    5046:	de bf       	out	0x3e, r29	; 62
    5048:	0f be       	out	0x3f, r0	; 63
    504a:	cd bf       	out	0x3d, r28	; 61
	u8 wordLED_ON[]  = "LED_ON";
    504c:	ce 01       	movw	r24, r28
    504e:	06 96       	adiw	r24, 0x06	; 6
    5050:	23 96       	adiw	r28, 0x03	; 3
    5052:	9f af       	std	Y+63, r25	; 0x3f
    5054:	8e af       	std	Y+62, r24	; 0x3e
    5056:	23 97       	sbiw	r28, 0x03	; 3
    5058:	e7 e9       	ldi	r30, 0x97	; 151
    505a:	f0 e0       	ldi	r31, 0x00	; 0
    505c:	25 96       	adiw	r28, 0x05	; 5
    505e:	ff af       	std	Y+63, r31	; 0x3f
    5060:	ee af       	std	Y+62, r30	; 0x3e
    5062:	25 97       	sbiw	r28, 0x05	; 5
    5064:	f7 e0       	ldi	r31, 0x07	; 7
    5066:	26 96       	adiw	r28, 0x06	; 6
    5068:	ff af       	std	Y+63, r31	; 0x3f
    506a:	26 97       	sbiw	r28, 0x06	; 6
    506c:	25 96       	adiw	r28, 0x05	; 5
    506e:	ee ad       	ldd	r30, Y+62	; 0x3e
    5070:	ff ad       	ldd	r31, Y+63	; 0x3f
    5072:	25 97       	sbiw	r28, 0x05	; 5
    5074:	00 80       	ld	r0, Z
    5076:	25 96       	adiw	r28, 0x05	; 5
    5078:	8e ad       	ldd	r24, Y+62	; 0x3e
    507a:	9f ad       	ldd	r25, Y+63	; 0x3f
    507c:	25 97       	sbiw	r28, 0x05	; 5
    507e:	01 96       	adiw	r24, 0x01	; 1
    5080:	25 96       	adiw	r28, 0x05	; 5
    5082:	9f af       	std	Y+63, r25	; 0x3f
    5084:	8e af       	std	Y+62, r24	; 0x3e
    5086:	25 97       	sbiw	r28, 0x05	; 5
    5088:	23 96       	adiw	r28, 0x03	; 3
    508a:	ee ad       	ldd	r30, Y+62	; 0x3e
    508c:	ff ad       	ldd	r31, Y+63	; 0x3f
    508e:	23 97       	sbiw	r28, 0x03	; 3
    5090:	00 82       	st	Z, r0
    5092:	23 96       	adiw	r28, 0x03	; 3
    5094:	8e ad       	ldd	r24, Y+62	; 0x3e
    5096:	9f ad       	ldd	r25, Y+63	; 0x3f
    5098:	23 97       	sbiw	r28, 0x03	; 3
    509a:	01 96       	adiw	r24, 0x01	; 1
    509c:	23 96       	adiw	r28, 0x03	; 3
    509e:	9f af       	std	Y+63, r25	; 0x3f
    50a0:	8e af       	std	Y+62, r24	; 0x3e
    50a2:	23 97       	sbiw	r28, 0x03	; 3
    50a4:	26 96       	adiw	r28, 0x06	; 6
    50a6:	9f ad       	ldd	r25, Y+63	; 0x3f
    50a8:	26 97       	sbiw	r28, 0x06	; 6
    50aa:	91 50       	subi	r25, 0x01	; 1
    50ac:	26 96       	adiw	r28, 0x06	; 6
    50ae:	9f af       	std	Y+63, r25	; 0x3f
    50b0:	26 97       	sbiw	r28, 0x06	; 6
    50b2:	26 96       	adiw	r28, 0x06	; 6
    50b4:	ef ad       	ldd	r30, Y+63	; 0x3f
    50b6:	26 97       	sbiw	r28, 0x06	; 6
    50b8:	ee 23       	and	r30, r30
    50ba:	c1 f6       	brne	.-80     	; 0x506c <Status_Choice+0x36>
	u8 wordLED_OFF[] = "LED_OFF";
    50bc:	ce 01       	movw	r24, r28
    50be:	0d 96       	adiw	r24, 0x0d	; 13
    50c0:	28 96       	adiw	r28, 0x08	; 8
    50c2:	9f af       	std	Y+63, r25	; 0x3f
    50c4:	8e af       	std	Y+62, r24	; 0x3e
    50c6:	28 97       	sbiw	r28, 0x08	; 8
    50c8:	ee e9       	ldi	r30, 0x9E	; 158
    50ca:	f0 e0       	ldi	r31, 0x00	; 0
    50cc:	2a 96       	adiw	r28, 0x0a	; 10
    50ce:	ff af       	std	Y+63, r31	; 0x3f
    50d0:	ee af       	std	Y+62, r30	; 0x3e
    50d2:	2a 97       	sbiw	r28, 0x0a	; 10
    50d4:	f8 e0       	ldi	r31, 0x08	; 8
    50d6:	2b 96       	adiw	r28, 0x0b	; 11
    50d8:	ff af       	std	Y+63, r31	; 0x3f
    50da:	2b 97       	sbiw	r28, 0x0b	; 11
    50dc:	2a 96       	adiw	r28, 0x0a	; 10
    50de:	ee ad       	ldd	r30, Y+62	; 0x3e
    50e0:	ff ad       	ldd	r31, Y+63	; 0x3f
    50e2:	2a 97       	sbiw	r28, 0x0a	; 10
    50e4:	00 80       	ld	r0, Z
    50e6:	2a 96       	adiw	r28, 0x0a	; 10
    50e8:	8e ad       	ldd	r24, Y+62	; 0x3e
    50ea:	9f ad       	ldd	r25, Y+63	; 0x3f
    50ec:	2a 97       	sbiw	r28, 0x0a	; 10
    50ee:	01 96       	adiw	r24, 0x01	; 1
    50f0:	2a 96       	adiw	r28, 0x0a	; 10
    50f2:	9f af       	std	Y+63, r25	; 0x3f
    50f4:	8e af       	std	Y+62, r24	; 0x3e
    50f6:	2a 97       	sbiw	r28, 0x0a	; 10
    50f8:	28 96       	adiw	r28, 0x08	; 8
    50fa:	ee ad       	ldd	r30, Y+62	; 0x3e
    50fc:	ff ad       	ldd	r31, Y+63	; 0x3f
    50fe:	28 97       	sbiw	r28, 0x08	; 8
    5100:	00 82       	st	Z, r0
    5102:	28 96       	adiw	r28, 0x08	; 8
    5104:	8e ad       	ldd	r24, Y+62	; 0x3e
    5106:	9f ad       	ldd	r25, Y+63	; 0x3f
    5108:	28 97       	sbiw	r28, 0x08	; 8
    510a:	01 96       	adiw	r24, 0x01	; 1
    510c:	28 96       	adiw	r28, 0x08	; 8
    510e:	9f af       	std	Y+63, r25	; 0x3f
    5110:	8e af       	std	Y+62, r24	; 0x3e
    5112:	28 97       	sbiw	r28, 0x08	; 8
    5114:	2b 96       	adiw	r28, 0x0b	; 11
    5116:	9f ad       	ldd	r25, Y+63	; 0x3f
    5118:	2b 97       	sbiw	r28, 0x0b	; 11
    511a:	91 50       	subi	r25, 0x01	; 1
    511c:	2b 96       	adiw	r28, 0x0b	; 11
    511e:	9f af       	std	Y+63, r25	; 0x3f
    5120:	2b 97       	sbiw	r28, 0x0b	; 11
    5122:	2b 96       	adiw	r28, 0x0b	; 11
    5124:	ef ad       	ldd	r30, Y+63	; 0x3f
    5126:	2b 97       	sbiw	r28, 0x0b	; 11
    5128:	ee 23       	and	r30, r30
    512a:	c1 f6       	brne	.-80     	; 0x50dc <Status_Choice+0xa6>
	u8 wordDC_MOTOR_OFF[] = "DC_MOTOR_OFF";
    512c:	ce 01       	movw	r24, r28
    512e:	45 96       	adiw	r24, 0x15	; 21
    5130:	2d 96       	adiw	r28, 0x0d	; 13
    5132:	9f af       	std	Y+63, r25	; 0x3f
    5134:	8e af       	std	Y+62, r24	; 0x3e
    5136:	2d 97       	sbiw	r28, 0x0d	; 13
    5138:	e2 eb       	ldi	r30, 0xB2	; 178
    513a:	f0 e0       	ldi	r31, 0x00	; 0
    513c:	2f 96       	adiw	r28, 0x0f	; 15
    513e:	ff af       	std	Y+63, r31	; 0x3f
    5140:	ee af       	std	Y+62, r30	; 0x3e
    5142:	2f 97       	sbiw	r28, 0x0f	; 15
    5144:	fd e0       	ldi	r31, 0x0D	; 13
    5146:	60 96       	adiw	r28, 0x10	; 16
    5148:	ff af       	std	Y+63, r31	; 0x3f
    514a:	60 97       	sbiw	r28, 0x10	; 16
    514c:	2f 96       	adiw	r28, 0x0f	; 15
    514e:	ee ad       	ldd	r30, Y+62	; 0x3e
    5150:	ff ad       	ldd	r31, Y+63	; 0x3f
    5152:	2f 97       	sbiw	r28, 0x0f	; 15
    5154:	00 80       	ld	r0, Z
    5156:	2f 96       	adiw	r28, 0x0f	; 15
    5158:	8e ad       	ldd	r24, Y+62	; 0x3e
    515a:	9f ad       	ldd	r25, Y+63	; 0x3f
    515c:	2f 97       	sbiw	r28, 0x0f	; 15
    515e:	01 96       	adiw	r24, 0x01	; 1
    5160:	2f 96       	adiw	r28, 0x0f	; 15
    5162:	9f af       	std	Y+63, r25	; 0x3f
    5164:	8e af       	std	Y+62, r24	; 0x3e
    5166:	2f 97       	sbiw	r28, 0x0f	; 15
    5168:	2d 96       	adiw	r28, 0x0d	; 13
    516a:	ee ad       	ldd	r30, Y+62	; 0x3e
    516c:	ff ad       	ldd	r31, Y+63	; 0x3f
    516e:	2d 97       	sbiw	r28, 0x0d	; 13
    5170:	00 82       	st	Z, r0
    5172:	2d 96       	adiw	r28, 0x0d	; 13
    5174:	8e ad       	ldd	r24, Y+62	; 0x3e
    5176:	9f ad       	ldd	r25, Y+63	; 0x3f
    5178:	2d 97       	sbiw	r28, 0x0d	; 13
    517a:	01 96       	adiw	r24, 0x01	; 1
    517c:	2d 96       	adiw	r28, 0x0d	; 13
    517e:	9f af       	std	Y+63, r25	; 0x3f
    5180:	8e af       	std	Y+62, r24	; 0x3e
    5182:	2d 97       	sbiw	r28, 0x0d	; 13
    5184:	60 96       	adiw	r28, 0x10	; 16
    5186:	9f ad       	ldd	r25, Y+63	; 0x3f
    5188:	60 97       	sbiw	r28, 0x10	; 16
    518a:	91 50       	subi	r25, 0x01	; 1
    518c:	60 96       	adiw	r28, 0x10	; 16
    518e:	9f af       	std	Y+63, r25	; 0x3f
    5190:	60 97       	sbiw	r28, 0x10	; 16
    5192:	60 96       	adiw	r28, 0x10	; 16
    5194:	ef ad       	ldd	r30, Y+63	; 0x3f
    5196:	60 97       	sbiw	r28, 0x10	; 16
    5198:	ee 23       	and	r30, r30
    519a:	c1 f6       	brne	.-80     	; 0x514c <Status_Choice+0x116>
	u8 wordDC_MOTOR_ON_CW[] = "DC_MOTOR_ON_CW";
    519c:	ce 01       	movw	r24, r28
    519e:	82 96       	adiw	r24, 0x22	; 34
    51a0:	62 96       	adiw	r28, 0x12	; 18
    51a2:	9f af       	std	Y+63, r25	; 0x3f
    51a4:	8e af       	std	Y+62, r24	; 0x3e
    51a6:	62 97       	sbiw	r28, 0x12	; 18
    51a8:	ef eb       	ldi	r30, 0xBF	; 191
    51aa:	f0 e0       	ldi	r31, 0x00	; 0
    51ac:	64 96       	adiw	r28, 0x14	; 20
    51ae:	ff af       	std	Y+63, r31	; 0x3f
    51b0:	ee af       	std	Y+62, r30	; 0x3e
    51b2:	64 97       	sbiw	r28, 0x14	; 20
    51b4:	ff e0       	ldi	r31, 0x0F	; 15
    51b6:	65 96       	adiw	r28, 0x15	; 21
    51b8:	ff af       	std	Y+63, r31	; 0x3f
    51ba:	65 97       	sbiw	r28, 0x15	; 21
    51bc:	64 96       	adiw	r28, 0x14	; 20
    51be:	ee ad       	ldd	r30, Y+62	; 0x3e
    51c0:	ff ad       	ldd	r31, Y+63	; 0x3f
    51c2:	64 97       	sbiw	r28, 0x14	; 20
    51c4:	00 80       	ld	r0, Z
    51c6:	64 96       	adiw	r28, 0x14	; 20
    51c8:	8e ad       	ldd	r24, Y+62	; 0x3e
    51ca:	9f ad       	ldd	r25, Y+63	; 0x3f
    51cc:	64 97       	sbiw	r28, 0x14	; 20
    51ce:	01 96       	adiw	r24, 0x01	; 1
    51d0:	64 96       	adiw	r28, 0x14	; 20
    51d2:	9f af       	std	Y+63, r25	; 0x3f
    51d4:	8e af       	std	Y+62, r24	; 0x3e
    51d6:	64 97       	sbiw	r28, 0x14	; 20
    51d8:	62 96       	adiw	r28, 0x12	; 18
    51da:	ee ad       	ldd	r30, Y+62	; 0x3e
    51dc:	ff ad       	ldd	r31, Y+63	; 0x3f
    51de:	62 97       	sbiw	r28, 0x12	; 18
    51e0:	00 82       	st	Z, r0
    51e2:	62 96       	adiw	r28, 0x12	; 18
    51e4:	8e ad       	ldd	r24, Y+62	; 0x3e
    51e6:	9f ad       	ldd	r25, Y+63	; 0x3f
    51e8:	62 97       	sbiw	r28, 0x12	; 18
    51ea:	01 96       	adiw	r24, 0x01	; 1
    51ec:	62 96       	adiw	r28, 0x12	; 18
    51ee:	9f af       	std	Y+63, r25	; 0x3f
    51f0:	8e af       	std	Y+62, r24	; 0x3e
    51f2:	62 97       	sbiw	r28, 0x12	; 18
    51f4:	65 96       	adiw	r28, 0x15	; 21
    51f6:	9f ad       	ldd	r25, Y+63	; 0x3f
    51f8:	65 97       	sbiw	r28, 0x15	; 21
    51fa:	91 50       	subi	r25, 0x01	; 1
    51fc:	65 96       	adiw	r28, 0x15	; 21
    51fe:	9f af       	std	Y+63, r25	; 0x3f
    5200:	65 97       	sbiw	r28, 0x15	; 21
    5202:	65 96       	adiw	r28, 0x15	; 21
    5204:	ef ad       	ldd	r30, Y+63	; 0x3f
    5206:	65 97       	sbiw	r28, 0x15	; 21
    5208:	ee 23       	and	r30, r30
    520a:	c1 f6       	brne	.-80     	; 0x51bc <Status_Choice+0x186>
	u8 wordDC_MOTOR_ON_CCW[] = "DC_MOTOR_ON_CCW";
    520c:	ce 01       	movw	r24, r28
    520e:	c1 96       	adiw	r24, 0x31	; 49
    5210:	67 96       	adiw	r28, 0x17	; 23
    5212:	9f af       	std	Y+63, r25	; 0x3f
    5214:	8e af       	std	Y+62, r24	; 0x3e
    5216:	67 97       	sbiw	r28, 0x17	; 23
    5218:	ee ec       	ldi	r30, 0xCE	; 206
    521a:	f0 e0       	ldi	r31, 0x00	; 0
    521c:	69 96       	adiw	r28, 0x19	; 25
    521e:	ff af       	std	Y+63, r31	; 0x3f
    5220:	ee af       	std	Y+62, r30	; 0x3e
    5222:	69 97       	sbiw	r28, 0x19	; 25
    5224:	f0 e1       	ldi	r31, 0x10	; 16
    5226:	6a 96       	adiw	r28, 0x1a	; 26
    5228:	ff af       	std	Y+63, r31	; 0x3f
    522a:	6a 97       	sbiw	r28, 0x1a	; 26
    522c:	69 96       	adiw	r28, 0x19	; 25
    522e:	ee ad       	ldd	r30, Y+62	; 0x3e
    5230:	ff ad       	ldd	r31, Y+63	; 0x3f
    5232:	69 97       	sbiw	r28, 0x19	; 25
    5234:	00 80       	ld	r0, Z
    5236:	69 96       	adiw	r28, 0x19	; 25
    5238:	8e ad       	ldd	r24, Y+62	; 0x3e
    523a:	9f ad       	ldd	r25, Y+63	; 0x3f
    523c:	69 97       	sbiw	r28, 0x19	; 25
    523e:	01 96       	adiw	r24, 0x01	; 1
    5240:	69 96       	adiw	r28, 0x19	; 25
    5242:	9f af       	std	Y+63, r25	; 0x3f
    5244:	8e af       	std	Y+62, r24	; 0x3e
    5246:	69 97       	sbiw	r28, 0x19	; 25
    5248:	67 96       	adiw	r28, 0x17	; 23
    524a:	ee ad       	ldd	r30, Y+62	; 0x3e
    524c:	ff ad       	ldd	r31, Y+63	; 0x3f
    524e:	67 97       	sbiw	r28, 0x17	; 23
    5250:	00 82       	st	Z, r0
    5252:	67 96       	adiw	r28, 0x17	; 23
    5254:	8e ad       	ldd	r24, Y+62	; 0x3e
    5256:	9f ad       	ldd	r25, Y+63	; 0x3f
    5258:	67 97       	sbiw	r28, 0x17	; 23
    525a:	01 96       	adiw	r24, 0x01	; 1
    525c:	67 96       	adiw	r28, 0x17	; 23
    525e:	9f af       	std	Y+63, r25	; 0x3f
    5260:	8e af       	std	Y+62, r24	; 0x3e
    5262:	67 97       	sbiw	r28, 0x17	; 23
    5264:	6a 96       	adiw	r28, 0x1a	; 26
    5266:	9f ad       	ldd	r25, Y+63	; 0x3f
    5268:	6a 97       	sbiw	r28, 0x1a	; 26
    526a:	91 50       	subi	r25, 0x01	; 1
    526c:	6a 96       	adiw	r28, 0x1a	; 26
    526e:	9f af       	std	Y+63, r25	; 0x3f
    5270:	6a 97       	sbiw	r28, 0x1a	; 26
    5272:	6a 96       	adiw	r28, 0x1a	; 26
    5274:	ef ad       	ldd	r30, Y+63	; 0x3f
    5276:	6a 97       	sbiw	r28, 0x1a	; 26
    5278:	ee 23       	and	r30, r30
    527a:	c1 f6       	brne	.-80     	; 0x522c <Status_Choice+0x1f6>

	u8 ledpin = DIO_u8GetPinValue(LED_PORT,LED_PIN);
    527c:	82 e0       	ldi	r24, 0x02	; 2
    527e:	63 e0       	ldi	r22, 0x03	; 3
    5280:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <DIO_u8GetPinValue>
    5284:	8d 83       	std	Y+5, r24	; 0x05
	if(ledpin == DIO_u8HIGH){
    5286:	8d 81       	ldd	r24, Y+5	; 0x05
    5288:	81 30       	cpi	r24, 0x01	; 1
    528a:	39 f4       	brne	.+14     	; 0x529a <Status_Choice+0x264>
		CLCD_WriteString_Pos(wordLED_ON,1,1);
    528c:	ce 01       	movw	r24, r28
    528e:	06 96       	adiw	r24, 0x06	; 6
    5290:	61 e0       	ldi	r22, 0x01	; 1
    5292:	41 e0       	ldi	r20, 0x01	; 1
    5294:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
    5298:	06 c0       	rjmp	.+12     	; 0x52a6 <Status_Choice+0x270>
	}else{
		CLCD_WriteString_Pos(wordLED_OFF,1,1);
    529a:	ce 01       	movw	r24, r28
    529c:	0d 96       	adiw	r24, 0x0d	; 13
    529e:	61 e0       	ldi	r22, 0x01	; 1
    52a0:	41 e0       	ldi	r20, 0x01	; 1
    52a2:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
	}
	/*
	 * CW  -> pin 2,3
	 * CCW -> pin 1,4
	 * */
	u8 motorpin1 = DIO_u8GetPinValue(MOTOR_PORT,MOTOR_PIN1);
    52a6:	82 e0       	ldi	r24, 0x02	; 2
    52a8:	64 e0       	ldi	r22, 0x04	; 4
    52aa:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <DIO_u8GetPinValue>
    52ae:	8c 83       	std	Y+4, r24	; 0x04
	u8 motorpin2 = DIO_u8GetPinValue(MOTOR_PORT,MOTOR_PIN2);
    52b0:	82 e0       	ldi	r24, 0x02	; 2
    52b2:	65 e0       	ldi	r22, 0x05	; 5
    52b4:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <DIO_u8GetPinValue>
    52b8:	8b 83       	std	Y+3, r24	; 0x03
	u8 motorpin3 = DIO_u8GetPinValue(MOTOR_PORT,MOTOR_PIN3);
    52ba:	82 e0       	ldi	r24, 0x02	; 2
    52bc:	66 e0       	ldi	r22, 0x06	; 6
    52be:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <DIO_u8GetPinValue>
    52c2:	8a 83       	std	Y+2, r24	; 0x02
	u8 motorpin4 = DIO_u8GetPinValue(MOTOR_PORT,MOTOR_PIN4);
    52c4:	82 e0       	ldi	r24, 0x02	; 2
    52c6:	67 e0       	ldi	r22, 0x07	; 7
    52c8:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <DIO_u8GetPinValue>
    52cc:	89 83       	std	Y+1, r24	; 0x01

	if((motorpin1 == DIO_u8LOW) && (motorpin2 == DIO_u8HIGH) && (motorpin3 == DIO_u8HIGH) && (motorpin4 == DIO_u8LOW)){
    52ce:	8c 81       	ldd	r24, Y+4	; 0x04
    52d0:	88 23       	and	r24, r24
    52d2:	81 f4       	brne	.+32     	; 0x52f4 <Status_Choice+0x2be>
    52d4:	8b 81       	ldd	r24, Y+3	; 0x03
    52d6:	81 30       	cpi	r24, 0x01	; 1
    52d8:	69 f4       	brne	.+26     	; 0x52f4 <Status_Choice+0x2be>
    52da:	8a 81       	ldd	r24, Y+2	; 0x02
    52dc:	81 30       	cpi	r24, 0x01	; 1
    52de:	51 f4       	brne	.+20     	; 0x52f4 <Status_Choice+0x2be>
    52e0:	89 81       	ldd	r24, Y+1	; 0x01
    52e2:	88 23       	and	r24, r24
    52e4:	39 f4       	brne	.+14     	; 0x52f4 <Status_Choice+0x2be>
		CLCD_WriteString_Pos(wordDC_MOTOR_ON_CW,2,1);
    52e6:	ce 01       	movw	r24, r28
    52e8:	82 96       	adiw	r24, 0x22	; 34
    52ea:	62 e0       	ldi	r22, 0x02	; 2
    52ec:	41 e0       	ldi	r20, 0x01	; 1
    52ee:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
    52f2:	19 c0       	rjmp	.+50     	; 0x5326 <Status_Choice+0x2f0>
	}else if((motorpin1 == DIO_u8HIGH) && (motorpin2 == DIO_u8LOW) && (motorpin3 == DIO_u8LOW) && (motorpin4 == DIO_u8HIGH)){
    52f4:	8c 81       	ldd	r24, Y+4	; 0x04
    52f6:	81 30       	cpi	r24, 0x01	; 1
    52f8:	81 f4       	brne	.+32     	; 0x531a <Status_Choice+0x2e4>
    52fa:	8b 81       	ldd	r24, Y+3	; 0x03
    52fc:	88 23       	and	r24, r24
    52fe:	69 f4       	brne	.+26     	; 0x531a <Status_Choice+0x2e4>
    5300:	8a 81       	ldd	r24, Y+2	; 0x02
    5302:	88 23       	and	r24, r24
    5304:	51 f4       	brne	.+20     	; 0x531a <Status_Choice+0x2e4>
    5306:	89 81       	ldd	r24, Y+1	; 0x01
    5308:	81 30       	cpi	r24, 0x01	; 1
    530a:	39 f4       	brne	.+14     	; 0x531a <Status_Choice+0x2e4>
		CLCD_WriteString_Pos(wordDC_MOTOR_ON_CCW,2,1);
    530c:	ce 01       	movw	r24, r28
    530e:	c1 96       	adiw	r24, 0x31	; 49
    5310:	62 e0       	ldi	r22, 0x02	; 2
    5312:	41 e0       	ldi	r20, 0x01	; 1
    5314:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
    5318:	06 c0       	rjmp	.+12     	; 0x5326 <Status_Choice+0x2f0>
	}else{
		CLCD_WriteString_Pos(wordDC_MOTOR_OFF,2,1);
    531a:	ce 01       	movw	r24, r28
    531c:	45 96       	adiw	r24, 0x15	; 21
    531e:	62 e0       	ldi	r22, 0x02	; 2
    5320:	41 e0       	ldi	r20, 0x01	; 1
    5322:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
	}
}
    5326:	c7 5a       	subi	r28, 0xA7	; 167
    5328:	df 4f       	sbci	r29, 0xFF	; 255
    532a:	0f b6       	in	r0, 0x3f	; 63
    532c:	f8 94       	cli
    532e:	de bf       	out	0x3e, r29	; 62
    5330:	0f be       	out	0x3f, r0	; 63
    5332:	cd bf       	out	0x3d, r28	; 61
    5334:	cf 91       	pop	r28
    5336:	df 91       	pop	r29
    5338:	08 95       	ret

0000533a <main>:
 */

#include "util/delay.h"
#include "app.h"

int main(void){
    533a:	0f 93       	push	r16
    533c:	1f 93       	push	r17
    533e:	df 93       	push	r29
    5340:	cf 93       	push	r28
    5342:	cd b7       	in	r28, 0x3d	; 61
    5344:	de b7       	in	r29, 0x3e	; 62
    5346:	ca 5c       	subi	r28, 0xCA	; 202
    5348:	d1 40       	sbci	r29, 0x01	; 1
    534a:	0f b6       	in	r0, 0x3f	; 63
    534c:	f8 94       	cli
    534e:	de bf       	out	0x3e, r29	; 62
    5350:	0f be       	out	0x3f, r0	; 63
    5352:	cd bf       	out	0x3d, r28	; 61
	app_init();
    5354:	0e 94 60 20 	call	0x40c0	; 0x40c0 <app_init>

	//LCD Strings
	u8 wordCONTROL_PAGE[] = "CONTROL PAGE";
    5358:	ce 01       	movw	r24, r28
    535a:	82 50       	subi	r24, 0x02	; 2
    535c:	9f 4f       	sbci	r25, 0xFF	; 255
    535e:	cc 56       	subi	r28, 0x6C	; 108
    5360:	de 4f       	sbci	r29, 0xFE	; 254
    5362:	99 83       	std	Y+1, r25	; 0x01
    5364:	88 83       	st	Y, r24
    5366:	c4 59       	subi	r28, 0x94	; 148
    5368:	d1 40       	sbci	r29, 0x01	; 1
    536a:	2e ed       	ldi	r18, 0xDE	; 222
    536c:	30 e0       	ldi	r19, 0x00	; 0
    536e:	ca 56       	subi	r28, 0x6A	; 106
    5370:	de 4f       	sbci	r29, 0xFE	; 254
    5372:	39 83       	std	Y+1, r19	; 0x01
    5374:	28 83       	st	Y, r18
    5376:	c6 59       	subi	r28, 0x96	; 150
    5378:	d1 40       	sbci	r29, 0x01	; 1
    537a:	3d e0       	ldi	r19, 0x0D	; 13
    537c:	c8 56       	subi	r28, 0x68	; 104
    537e:	de 4f       	sbci	r29, 0xFE	; 254
    5380:	38 83       	st	Y, r19
    5382:	c8 59       	subi	r28, 0x98	; 152
    5384:	d1 40       	sbci	r29, 0x01	; 1
    5386:	ca 56       	subi	r28, 0x6A	; 106
    5388:	de 4f       	sbci	r29, 0xFE	; 254
    538a:	e8 81       	ld	r30, Y
    538c:	f9 81       	ldd	r31, Y+1	; 0x01
    538e:	c6 59       	subi	r28, 0x96	; 150
    5390:	d1 40       	sbci	r29, 0x01	; 1
    5392:	00 80       	ld	r0, Z
    5394:	ca 56       	subi	r28, 0x6A	; 106
    5396:	de 4f       	sbci	r29, 0xFE	; 254
    5398:	28 81       	ld	r18, Y
    539a:	39 81       	ldd	r19, Y+1	; 0x01
    539c:	c6 59       	subi	r28, 0x96	; 150
    539e:	d1 40       	sbci	r29, 0x01	; 1
    53a0:	2f 5f       	subi	r18, 0xFF	; 255
    53a2:	3f 4f       	sbci	r19, 0xFF	; 255
    53a4:	ca 56       	subi	r28, 0x6A	; 106
    53a6:	de 4f       	sbci	r29, 0xFE	; 254
    53a8:	39 83       	std	Y+1, r19	; 0x01
    53aa:	28 83       	st	Y, r18
    53ac:	c6 59       	subi	r28, 0x96	; 150
    53ae:	d1 40       	sbci	r29, 0x01	; 1
    53b0:	cc 56       	subi	r28, 0x6C	; 108
    53b2:	de 4f       	sbci	r29, 0xFE	; 254
    53b4:	e8 81       	ld	r30, Y
    53b6:	f9 81       	ldd	r31, Y+1	; 0x01
    53b8:	c4 59       	subi	r28, 0x94	; 148
    53ba:	d1 40       	sbci	r29, 0x01	; 1
    53bc:	00 82       	st	Z, r0
    53be:	cc 56       	subi	r28, 0x6C	; 108
    53c0:	de 4f       	sbci	r29, 0xFE	; 254
    53c2:	28 81       	ld	r18, Y
    53c4:	39 81       	ldd	r19, Y+1	; 0x01
    53c6:	c4 59       	subi	r28, 0x94	; 148
    53c8:	d1 40       	sbci	r29, 0x01	; 1
    53ca:	2f 5f       	subi	r18, 0xFF	; 255
    53cc:	3f 4f       	sbci	r19, 0xFF	; 255
    53ce:	cc 56       	subi	r28, 0x6C	; 108
    53d0:	de 4f       	sbci	r29, 0xFE	; 254
    53d2:	39 83       	std	Y+1, r19	; 0x01
    53d4:	28 83       	st	Y, r18
    53d6:	c4 59       	subi	r28, 0x94	; 148
    53d8:	d1 40       	sbci	r29, 0x01	; 1
    53da:	c8 56       	subi	r28, 0x68	; 104
    53dc:	de 4f       	sbci	r29, 0xFE	; 254
    53de:	38 81       	ld	r19, Y
    53e0:	c8 59       	subi	r28, 0x98	; 152
    53e2:	d1 40       	sbci	r29, 0x01	; 1
    53e4:	31 50       	subi	r19, 0x01	; 1
    53e6:	c8 56       	subi	r28, 0x68	; 104
    53e8:	de 4f       	sbci	r29, 0xFE	; 254
    53ea:	38 83       	st	Y, r19
    53ec:	c8 59       	subi	r28, 0x98	; 152
    53ee:	d1 40       	sbci	r29, 0x01	; 1
    53f0:	c8 56       	subi	r28, 0x68	; 104
    53f2:	de 4f       	sbci	r29, 0xFE	; 254
    53f4:	88 81       	ld	r24, Y
    53f6:	c8 59       	subi	r28, 0x98	; 152
    53f8:	d1 40       	sbci	r29, 0x01	; 1
    53fa:	88 23       	and	r24, r24
    53fc:	21 f6       	brne	.-120    	; 0x5386 <main+0x4c>
	u8 wordCONTROL_LED_PAGE[] = "CONTROL LED PAGE";
    53fe:	ce 01       	movw	r24, r28
    5400:	85 5f       	subi	r24, 0xF5	; 245
    5402:	9e 4f       	sbci	r25, 0xFE	; 254
    5404:	c7 56       	subi	r28, 0x67	; 103
    5406:	de 4f       	sbci	r29, 0xFE	; 254
    5408:	99 83       	std	Y+1, r25	; 0x01
    540a:	88 83       	st	Y, r24
    540c:	c9 59       	subi	r28, 0x99	; 153
    540e:	d1 40       	sbci	r29, 0x01	; 1
    5410:	eb ee       	ldi	r30, 0xEB	; 235
    5412:	f0 e0       	ldi	r31, 0x00	; 0
    5414:	c5 56       	subi	r28, 0x65	; 101
    5416:	de 4f       	sbci	r29, 0xFE	; 254
    5418:	f9 83       	std	Y+1, r31	; 0x01
    541a:	e8 83       	st	Y, r30
    541c:	cb 59       	subi	r28, 0x9B	; 155
    541e:	d1 40       	sbci	r29, 0x01	; 1
    5420:	f1 e1       	ldi	r31, 0x11	; 17
    5422:	c3 56       	subi	r28, 0x63	; 99
    5424:	de 4f       	sbci	r29, 0xFE	; 254
    5426:	f8 83       	st	Y, r31
    5428:	cd 59       	subi	r28, 0x9D	; 157
    542a:	d1 40       	sbci	r29, 0x01	; 1
    542c:	c5 56       	subi	r28, 0x65	; 101
    542e:	de 4f       	sbci	r29, 0xFE	; 254
    5430:	e8 81       	ld	r30, Y
    5432:	f9 81       	ldd	r31, Y+1	; 0x01
    5434:	cb 59       	subi	r28, 0x9B	; 155
    5436:	d1 40       	sbci	r29, 0x01	; 1
    5438:	00 80       	ld	r0, Z
    543a:	c5 56       	subi	r28, 0x65	; 101
    543c:	de 4f       	sbci	r29, 0xFE	; 254
    543e:	28 81       	ld	r18, Y
    5440:	39 81       	ldd	r19, Y+1	; 0x01
    5442:	cb 59       	subi	r28, 0x9B	; 155
    5444:	d1 40       	sbci	r29, 0x01	; 1
    5446:	2f 5f       	subi	r18, 0xFF	; 255
    5448:	3f 4f       	sbci	r19, 0xFF	; 255
    544a:	c5 56       	subi	r28, 0x65	; 101
    544c:	de 4f       	sbci	r29, 0xFE	; 254
    544e:	39 83       	std	Y+1, r19	; 0x01
    5450:	28 83       	st	Y, r18
    5452:	cb 59       	subi	r28, 0x9B	; 155
    5454:	d1 40       	sbci	r29, 0x01	; 1
    5456:	c7 56       	subi	r28, 0x67	; 103
    5458:	de 4f       	sbci	r29, 0xFE	; 254
    545a:	e8 81       	ld	r30, Y
    545c:	f9 81       	ldd	r31, Y+1	; 0x01
    545e:	c9 59       	subi	r28, 0x99	; 153
    5460:	d1 40       	sbci	r29, 0x01	; 1
    5462:	00 82       	st	Z, r0
    5464:	c7 56       	subi	r28, 0x67	; 103
    5466:	de 4f       	sbci	r29, 0xFE	; 254
    5468:	28 81       	ld	r18, Y
    546a:	39 81       	ldd	r19, Y+1	; 0x01
    546c:	c9 59       	subi	r28, 0x99	; 153
    546e:	d1 40       	sbci	r29, 0x01	; 1
    5470:	2f 5f       	subi	r18, 0xFF	; 255
    5472:	3f 4f       	sbci	r19, 0xFF	; 255
    5474:	c7 56       	subi	r28, 0x67	; 103
    5476:	de 4f       	sbci	r29, 0xFE	; 254
    5478:	39 83       	std	Y+1, r19	; 0x01
    547a:	28 83       	st	Y, r18
    547c:	c9 59       	subi	r28, 0x99	; 153
    547e:	d1 40       	sbci	r29, 0x01	; 1
    5480:	c3 56       	subi	r28, 0x63	; 99
    5482:	de 4f       	sbci	r29, 0xFE	; 254
    5484:	38 81       	ld	r19, Y
    5486:	cd 59       	subi	r28, 0x9D	; 157
    5488:	d1 40       	sbci	r29, 0x01	; 1
    548a:	31 50       	subi	r19, 0x01	; 1
    548c:	c3 56       	subi	r28, 0x63	; 99
    548e:	de 4f       	sbci	r29, 0xFE	; 254
    5490:	38 83       	st	Y, r19
    5492:	cd 59       	subi	r28, 0x9D	; 157
    5494:	d1 40       	sbci	r29, 0x01	; 1
    5496:	c3 56       	subi	r28, 0x63	; 99
    5498:	de 4f       	sbci	r29, 0xFE	; 254
    549a:	88 81       	ld	r24, Y
    549c:	cd 59       	subi	r28, 0x9D	; 157
    549e:	d1 40       	sbci	r29, 0x01	; 1
    54a0:	88 23       	and	r24, r24
    54a2:	21 f6       	brne	.-120    	; 0x542c <main+0xf2>
	u8 wordCONTROL_MOTOR_PAGE[] = "CONTROL MOTOR";
    54a4:	ce 01       	movw	r24, r28
    54a6:	84 5e       	subi	r24, 0xE4	; 228
    54a8:	9e 4f       	sbci	r25, 0xFE	; 254
    54aa:	c2 56       	subi	r28, 0x62	; 98
    54ac:	de 4f       	sbci	r29, 0xFE	; 254
    54ae:	99 83       	std	Y+1, r25	; 0x01
    54b0:	88 83       	st	Y, r24
    54b2:	ce 59       	subi	r28, 0x9E	; 158
    54b4:	d1 40       	sbci	r29, 0x01	; 1
    54b6:	ec ef       	ldi	r30, 0xFC	; 252
    54b8:	f0 e0       	ldi	r31, 0x00	; 0
    54ba:	c0 56       	subi	r28, 0x60	; 96
    54bc:	de 4f       	sbci	r29, 0xFE	; 254
    54be:	f9 83       	std	Y+1, r31	; 0x01
    54c0:	e8 83       	st	Y, r30
    54c2:	c0 5a       	subi	r28, 0xA0	; 160
    54c4:	d1 40       	sbci	r29, 0x01	; 1
    54c6:	fe e0       	ldi	r31, 0x0E	; 14
    54c8:	ce 55       	subi	r28, 0x5E	; 94
    54ca:	de 4f       	sbci	r29, 0xFE	; 254
    54cc:	f8 83       	st	Y, r31
    54ce:	c2 5a       	subi	r28, 0xA2	; 162
    54d0:	d1 40       	sbci	r29, 0x01	; 1
    54d2:	c0 56       	subi	r28, 0x60	; 96
    54d4:	de 4f       	sbci	r29, 0xFE	; 254
    54d6:	e8 81       	ld	r30, Y
    54d8:	f9 81       	ldd	r31, Y+1	; 0x01
    54da:	c0 5a       	subi	r28, 0xA0	; 160
    54dc:	d1 40       	sbci	r29, 0x01	; 1
    54de:	00 80       	ld	r0, Z
    54e0:	c0 56       	subi	r28, 0x60	; 96
    54e2:	de 4f       	sbci	r29, 0xFE	; 254
    54e4:	28 81       	ld	r18, Y
    54e6:	39 81       	ldd	r19, Y+1	; 0x01
    54e8:	c0 5a       	subi	r28, 0xA0	; 160
    54ea:	d1 40       	sbci	r29, 0x01	; 1
    54ec:	2f 5f       	subi	r18, 0xFF	; 255
    54ee:	3f 4f       	sbci	r19, 0xFF	; 255
    54f0:	c0 56       	subi	r28, 0x60	; 96
    54f2:	de 4f       	sbci	r29, 0xFE	; 254
    54f4:	39 83       	std	Y+1, r19	; 0x01
    54f6:	28 83       	st	Y, r18
    54f8:	c0 5a       	subi	r28, 0xA0	; 160
    54fa:	d1 40       	sbci	r29, 0x01	; 1
    54fc:	c2 56       	subi	r28, 0x62	; 98
    54fe:	de 4f       	sbci	r29, 0xFE	; 254
    5500:	e8 81       	ld	r30, Y
    5502:	f9 81       	ldd	r31, Y+1	; 0x01
    5504:	ce 59       	subi	r28, 0x9E	; 158
    5506:	d1 40       	sbci	r29, 0x01	; 1
    5508:	00 82       	st	Z, r0
    550a:	c2 56       	subi	r28, 0x62	; 98
    550c:	de 4f       	sbci	r29, 0xFE	; 254
    550e:	28 81       	ld	r18, Y
    5510:	39 81       	ldd	r19, Y+1	; 0x01
    5512:	ce 59       	subi	r28, 0x9E	; 158
    5514:	d1 40       	sbci	r29, 0x01	; 1
    5516:	2f 5f       	subi	r18, 0xFF	; 255
    5518:	3f 4f       	sbci	r19, 0xFF	; 255
    551a:	c2 56       	subi	r28, 0x62	; 98
    551c:	de 4f       	sbci	r29, 0xFE	; 254
    551e:	39 83       	std	Y+1, r19	; 0x01
    5520:	28 83       	st	Y, r18
    5522:	ce 59       	subi	r28, 0x9E	; 158
    5524:	d1 40       	sbci	r29, 0x01	; 1
    5526:	ce 55       	subi	r28, 0x5E	; 94
    5528:	de 4f       	sbci	r29, 0xFE	; 254
    552a:	38 81       	ld	r19, Y
    552c:	c2 5a       	subi	r28, 0xA2	; 162
    552e:	d1 40       	sbci	r29, 0x01	; 1
    5530:	31 50       	subi	r19, 0x01	; 1
    5532:	ce 55       	subi	r28, 0x5E	; 94
    5534:	de 4f       	sbci	r29, 0xFE	; 254
    5536:	38 83       	st	Y, r19
    5538:	c2 5a       	subi	r28, 0xA2	; 162
    553a:	d1 40       	sbci	r29, 0x01	; 1
    553c:	ce 55       	subi	r28, 0x5E	; 94
    553e:	de 4f       	sbci	r29, 0xFE	; 254
    5540:	88 81       	ld	r24, Y
    5542:	c2 5a       	subi	r28, 0xA2	; 162
    5544:	d1 40       	sbci	r29, 0x01	; 1
    5546:	88 23       	and	r24, r24
    5548:	21 f6       	brne	.-120    	; 0x54d2 <main+0x198>
	u8 wordCONTROL_MOTOR_ON_PAGE[] = "CONTROL MOTOR ON";
    554a:	ce 01       	movw	r24, r28
    554c:	86 5d       	subi	r24, 0xD6	; 214
    554e:	9e 4f       	sbci	r25, 0xFE	; 254
    5550:	cd 55       	subi	r28, 0x5D	; 93
    5552:	de 4f       	sbci	r29, 0xFE	; 254
    5554:	99 83       	std	Y+1, r25	; 0x01
    5556:	88 83       	st	Y, r24
    5558:	c3 5a       	subi	r28, 0xA3	; 163
    555a:	d1 40       	sbci	r29, 0x01	; 1
    555c:	ea e0       	ldi	r30, 0x0A	; 10
    555e:	f1 e0       	ldi	r31, 0x01	; 1
    5560:	cb 55       	subi	r28, 0x5B	; 91
    5562:	de 4f       	sbci	r29, 0xFE	; 254
    5564:	f9 83       	std	Y+1, r31	; 0x01
    5566:	e8 83       	st	Y, r30
    5568:	c5 5a       	subi	r28, 0xA5	; 165
    556a:	d1 40       	sbci	r29, 0x01	; 1
    556c:	f1 e1       	ldi	r31, 0x11	; 17
    556e:	c9 55       	subi	r28, 0x59	; 89
    5570:	de 4f       	sbci	r29, 0xFE	; 254
    5572:	f8 83       	st	Y, r31
    5574:	c7 5a       	subi	r28, 0xA7	; 167
    5576:	d1 40       	sbci	r29, 0x01	; 1
    5578:	cb 55       	subi	r28, 0x5B	; 91
    557a:	de 4f       	sbci	r29, 0xFE	; 254
    557c:	e8 81       	ld	r30, Y
    557e:	f9 81       	ldd	r31, Y+1	; 0x01
    5580:	c5 5a       	subi	r28, 0xA5	; 165
    5582:	d1 40       	sbci	r29, 0x01	; 1
    5584:	00 80       	ld	r0, Z
    5586:	cb 55       	subi	r28, 0x5B	; 91
    5588:	de 4f       	sbci	r29, 0xFE	; 254
    558a:	28 81       	ld	r18, Y
    558c:	39 81       	ldd	r19, Y+1	; 0x01
    558e:	c5 5a       	subi	r28, 0xA5	; 165
    5590:	d1 40       	sbci	r29, 0x01	; 1
    5592:	2f 5f       	subi	r18, 0xFF	; 255
    5594:	3f 4f       	sbci	r19, 0xFF	; 255
    5596:	cb 55       	subi	r28, 0x5B	; 91
    5598:	de 4f       	sbci	r29, 0xFE	; 254
    559a:	39 83       	std	Y+1, r19	; 0x01
    559c:	28 83       	st	Y, r18
    559e:	c5 5a       	subi	r28, 0xA5	; 165
    55a0:	d1 40       	sbci	r29, 0x01	; 1
    55a2:	cd 55       	subi	r28, 0x5D	; 93
    55a4:	de 4f       	sbci	r29, 0xFE	; 254
    55a6:	e8 81       	ld	r30, Y
    55a8:	f9 81       	ldd	r31, Y+1	; 0x01
    55aa:	c3 5a       	subi	r28, 0xA3	; 163
    55ac:	d1 40       	sbci	r29, 0x01	; 1
    55ae:	00 82       	st	Z, r0
    55b0:	cd 55       	subi	r28, 0x5D	; 93
    55b2:	de 4f       	sbci	r29, 0xFE	; 254
    55b4:	28 81       	ld	r18, Y
    55b6:	39 81       	ldd	r19, Y+1	; 0x01
    55b8:	c3 5a       	subi	r28, 0xA3	; 163
    55ba:	d1 40       	sbci	r29, 0x01	; 1
    55bc:	2f 5f       	subi	r18, 0xFF	; 255
    55be:	3f 4f       	sbci	r19, 0xFF	; 255
    55c0:	cd 55       	subi	r28, 0x5D	; 93
    55c2:	de 4f       	sbci	r29, 0xFE	; 254
    55c4:	39 83       	std	Y+1, r19	; 0x01
    55c6:	28 83       	st	Y, r18
    55c8:	c3 5a       	subi	r28, 0xA3	; 163
    55ca:	d1 40       	sbci	r29, 0x01	; 1
    55cc:	c9 55       	subi	r28, 0x59	; 89
    55ce:	de 4f       	sbci	r29, 0xFE	; 254
    55d0:	38 81       	ld	r19, Y
    55d2:	c7 5a       	subi	r28, 0xA7	; 167
    55d4:	d1 40       	sbci	r29, 0x01	; 1
    55d6:	31 50       	subi	r19, 0x01	; 1
    55d8:	c9 55       	subi	r28, 0x59	; 89
    55da:	de 4f       	sbci	r29, 0xFE	; 254
    55dc:	38 83       	st	Y, r19
    55de:	c7 5a       	subi	r28, 0xA7	; 167
    55e0:	d1 40       	sbci	r29, 0x01	; 1
    55e2:	c9 55       	subi	r28, 0x59	; 89
    55e4:	de 4f       	sbci	r29, 0xFE	; 254
    55e6:	88 81       	ld	r24, Y
    55e8:	c7 5a       	subi	r28, 0xA7	; 167
    55ea:	d1 40       	sbci	r29, 0x01	; 1
    55ec:	88 23       	and	r24, r24
    55ee:	21 f6       	brne	.-120    	; 0x5578 <main+0x23e>
	u8 wordSTATUS_PAGE[]  = "STATUS PAGE";
    55f0:	ce 01       	movw	r24, r28
    55f2:	85 5c       	subi	r24, 0xC5	; 197
    55f4:	9e 4f       	sbci	r25, 0xFE	; 254
    55f6:	c8 55       	subi	r28, 0x58	; 88
    55f8:	de 4f       	sbci	r29, 0xFE	; 254
    55fa:	99 83       	std	Y+1, r25	; 0x01
    55fc:	88 83       	st	Y, r24
    55fe:	c8 5a       	subi	r28, 0xA8	; 168
    5600:	d1 40       	sbci	r29, 0x01	; 1
    5602:	eb e1       	ldi	r30, 0x1B	; 27
    5604:	f1 e0       	ldi	r31, 0x01	; 1
    5606:	c6 55       	subi	r28, 0x56	; 86
    5608:	de 4f       	sbci	r29, 0xFE	; 254
    560a:	f9 83       	std	Y+1, r31	; 0x01
    560c:	e8 83       	st	Y, r30
    560e:	ca 5a       	subi	r28, 0xAA	; 170
    5610:	d1 40       	sbci	r29, 0x01	; 1
    5612:	fc e0       	ldi	r31, 0x0C	; 12
    5614:	c4 55       	subi	r28, 0x54	; 84
    5616:	de 4f       	sbci	r29, 0xFE	; 254
    5618:	f8 83       	st	Y, r31
    561a:	cc 5a       	subi	r28, 0xAC	; 172
    561c:	d1 40       	sbci	r29, 0x01	; 1
    561e:	c6 55       	subi	r28, 0x56	; 86
    5620:	de 4f       	sbci	r29, 0xFE	; 254
    5622:	e8 81       	ld	r30, Y
    5624:	f9 81       	ldd	r31, Y+1	; 0x01
    5626:	ca 5a       	subi	r28, 0xAA	; 170
    5628:	d1 40       	sbci	r29, 0x01	; 1
    562a:	00 80       	ld	r0, Z
    562c:	c6 55       	subi	r28, 0x56	; 86
    562e:	de 4f       	sbci	r29, 0xFE	; 254
    5630:	28 81       	ld	r18, Y
    5632:	39 81       	ldd	r19, Y+1	; 0x01
    5634:	ca 5a       	subi	r28, 0xAA	; 170
    5636:	d1 40       	sbci	r29, 0x01	; 1
    5638:	2f 5f       	subi	r18, 0xFF	; 255
    563a:	3f 4f       	sbci	r19, 0xFF	; 255
    563c:	c6 55       	subi	r28, 0x56	; 86
    563e:	de 4f       	sbci	r29, 0xFE	; 254
    5640:	39 83       	std	Y+1, r19	; 0x01
    5642:	28 83       	st	Y, r18
    5644:	ca 5a       	subi	r28, 0xAA	; 170
    5646:	d1 40       	sbci	r29, 0x01	; 1
    5648:	c8 55       	subi	r28, 0x58	; 88
    564a:	de 4f       	sbci	r29, 0xFE	; 254
    564c:	e8 81       	ld	r30, Y
    564e:	f9 81       	ldd	r31, Y+1	; 0x01
    5650:	c8 5a       	subi	r28, 0xA8	; 168
    5652:	d1 40       	sbci	r29, 0x01	; 1
    5654:	00 82       	st	Z, r0
    5656:	c8 55       	subi	r28, 0x58	; 88
    5658:	de 4f       	sbci	r29, 0xFE	; 254
    565a:	28 81       	ld	r18, Y
    565c:	39 81       	ldd	r19, Y+1	; 0x01
    565e:	c8 5a       	subi	r28, 0xA8	; 168
    5660:	d1 40       	sbci	r29, 0x01	; 1
    5662:	2f 5f       	subi	r18, 0xFF	; 255
    5664:	3f 4f       	sbci	r19, 0xFF	; 255
    5666:	c8 55       	subi	r28, 0x58	; 88
    5668:	de 4f       	sbci	r29, 0xFE	; 254
    566a:	39 83       	std	Y+1, r19	; 0x01
    566c:	28 83       	st	Y, r18
    566e:	c8 5a       	subi	r28, 0xA8	; 168
    5670:	d1 40       	sbci	r29, 0x01	; 1
    5672:	c4 55       	subi	r28, 0x54	; 84
    5674:	de 4f       	sbci	r29, 0xFE	; 254
    5676:	38 81       	ld	r19, Y
    5678:	cc 5a       	subi	r28, 0xAC	; 172
    567a:	d1 40       	sbci	r29, 0x01	; 1
    567c:	31 50       	subi	r19, 0x01	; 1
    567e:	c4 55       	subi	r28, 0x54	; 84
    5680:	de 4f       	sbci	r29, 0xFE	; 254
    5682:	38 83       	st	Y, r19
    5684:	cc 5a       	subi	r28, 0xAC	; 172
    5686:	d1 40       	sbci	r29, 0x01	; 1
    5688:	c4 55       	subi	r28, 0x54	; 84
    568a:	de 4f       	sbci	r29, 0xFE	; 254
    568c:	88 81       	ld	r24, Y
    568e:	cc 5a       	subi	r28, 0xAC	; 172
    5690:	d1 40       	sbci	r29, 0x01	; 1
    5692:	88 23       	and	r24, r24
    5694:	21 f6       	brne	.-120    	; 0x561e <main+0x2e4>
	u8 wordENTER[] = "ENTER: ";
    5696:	ce 01       	movw	r24, r28
    5698:	89 5b       	subi	r24, 0xB9	; 185
    569a:	9e 4f       	sbci	r25, 0xFE	; 254
    569c:	c3 55       	subi	r28, 0x53	; 83
    569e:	de 4f       	sbci	r29, 0xFE	; 254
    56a0:	99 83       	std	Y+1, r25	; 0x01
    56a2:	88 83       	st	Y, r24
    56a4:	cd 5a       	subi	r28, 0xAD	; 173
    56a6:	d1 40       	sbci	r29, 0x01	; 1
    56a8:	e7 e2       	ldi	r30, 0x27	; 39
    56aa:	f1 e0       	ldi	r31, 0x01	; 1
    56ac:	c1 55       	subi	r28, 0x51	; 81
    56ae:	de 4f       	sbci	r29, 0xFE	; 254
    56b0:	f9 83       	std	Y+1, r31	; 0x01
    56b2:	e8 83       	st	Y, r30
    56b4:	cf 5a       	subi	r28, 0xAF	; 175
    56b6:	d1 40       	sbci	r29, 0x01	; 1
    56b8:	f8 e0       	ldi	r31, 0x08	; 8
    56ba:	cf 54       	subi	r28, 0x4F	; 79
    56bc:	de 4f       	sbci	r29, 0xFE	; 254
    56be:	f8 83       	st	Y, r31
    56c0:	c1 5b       	subi	r28, 0xB1	; 177
    56c2:	d1 40       	sbci	r29, 0x01	; 1
    56c4:	c1 55       	subi	r28, 0x51	; 81
    56c6:	de 4f       	sbci	r29, 0xFE	; 254
    56c8:	e8 81       	ld	r30, Y
    56ca:	f9 81       	ldd	r31, Y+1	; 0x01
    56cc:	cf 5a       	subi	r28, 0xAF	; 175
    56ce:	d1 40       	sbci	r29, 0x01	; 1
    56d0:	00 80       	ld	r0, Z
    56d2:	c1 55       	subi	r28, 0x51	; 81
    56d4:	de 4f       	sbci	r29, 0xFE	; 254
    56d6:	28 81       	ld	r18, Y
    56d8:	39 81       	ldd	r19, Y+1	; 0x01
    56da:	cf 5a       	subi	r28, 0xAF	; 175
    56dc:	d1 40       	sbci	r29, 0x01	; 1
    56de:	2f 5f       	subi	r18, 0xFF	; 255
    56e0:	3f 4f       	sbci	r19, 0xFF	; 255
    56e2:	c1 55       	subi	r28, 0x51	; 81
    56e4:	de 4f       	sbci	r29, 0xFE	; 254
    56e6:	39 83       	std	Y+1, r19	; 0x01
    56e8:	28 83       	st	Y, r18
    56ea:	cf 5a       	subi	r28, 0xAF	; 175
    56ec:	d1 40       	sbci	r29, 0x01	; 1
    56ee:	c3 55       	subi	r28, 0x53	; 83
    56f0:	de 4f       	sbci	r29, 0xFE	; 254
    56f2:	e8 81       	ld	r30, Y
    56f4:	f9 81       	ldd	r31, Y+1	; 0x01
    56f6:	cd 5a       	subi	r28, 0xAD	; 173
    56f8:	d1 40       	sbci	r29, 0x01	; 1
    56fa:	00 82       	st	Z, r0
    56fc:	c3 55       	subi	r28, 0x53	; 83
    56fe:	de 4f       	sbci	r29, 0xFE	; 254
    5700:	28 81       	ld	r18, Y
    5702:	39 81       	ldd	r19, Y+1	; 0x01
    5704:	cd 5a       	subi	r28, 0xAD	; 173
    5706:	d1 40       	sbci	r29, 0x01	; 1
    5708:	2f 5f       	subi	r18, 0xFF	; 255
    570a:	3f 4f       	sbci	r19, 0xFF	; 255
    570c:	c3 55       	subi	r28, 0x53	; 83
    570e:	de 4f       	sbci	r29, 0xFE	; 254
    5710:	39 83       	std	Y+1, r19	; 0x01
    5712:	28 83       	st	Y, r18
    5714:	cd 5a       	subi	r28, 0xAD	; 173
    5716:	d1 40       	sbci	r29, 0x01	; 1
    5718:	cf 54       	subi	r28, 0x4F	; 79
    571a:	de 4f       	sbci	r29, 0xFE	; 254
    571c:	38 81       	ld	r19, Y
    571e:	c1 5b       	subi	r28, 0xB1	; 177
    5720:	d1 40       	sbci	r29, 0x01	; 1
    5722:	31 50       	subi	r19, 0x01	; 1
    5724:	cf 54       	subi	r28, 0x4F	; 79
    5726:	de 4f       	sbci	r29, 0xFE	; 254
    5728:	38 83       	st	Y, r19
    572a:	c1 5b       	subi	r28, 0xB1	; 177
    572c:	d1 40       	sbci	r29, 0x01	; 1
    572e:	cf 54       	subi	r28, 0x4F	; 79
    5730:	de 4f       	sbci	r29, 0xFE	; 254
    5732:	88 81       	ld	r24, Y
    5734:	c1 5b       	subi	r28, 0xB1	; 177
    5736:	d1 40       	sbci	r29, 0x01	; 1
    5738:	88 23       	and	r24, r24
    573a:	21 f6       	brne	.-120    	; 0x56c4 <main+0x38a>
	u8 wordLED_ON[]  = "LED_ON";
    573c:	ce 01       	movw	r24, r28
    573e:	81 5b       	subi	r24, 0xB1	; 177
    5740:	9e 4f       	sbci	r25, 0xFE	; 254
    5742:	ce 54       	subi	r28, 0x4E	; 78
    5744:	de 4f       	sbci	r29, 0xFE	; 254
    5746:	99 83       	std	Y+1, r25	; 0x01
    5748:	88 83       	st	Y, r24
    574a:	c2 5b       	subi	r28, 0xB2	; 178
    574c:	d1 40       	sbci	r29, 0x01	; 1
    574e:	ef e2       	ldi	r30, 0x2F	; 47
    5750:	f1 e0       	ldi	r31, 0x01	; 1
    5752:	cc 54       	subi	r28, 0x4C	; 76
    5754:	de 4f       	sbci	r29, 0xFE	; 254
    5756:	f9 83       	std	Y+1, r31	; 0x01
    5758:	e8 83       	st	Y, r30
    575a:	c4 5b       	subi	r28, 0xB4	; 180
    575c:	d1 40       	sbci	r29, 0x01	; 1
    575e:	f7 e0       	ldi	r31, 0x07	; 7
    5760:	ca 54       	subi	r28, 0x4A	; 74
    5762:	de 4f       	sbci	r29, 0xFE	; 254
    5764:	f8 83       	st	Y, r31
    5766:	c6 5b       	subi	r28, 0xB6	; 182
    5768:	d1 40       	sbci	r29, 0x01	; 1
    576a:	cc 54       	subi	r28, 0x4C	; 76
    576c:	de 4f       	sbci	r29, 0xFE	; 254
    576e:	e8 81       	ld	r30, Y
    5770:	f9 81       	ldd	r31, Y+1	; 0x01
    5772:	c4 5b       	subi	r28, 0xB4	; 180
    5774:	d1 40       	sbci	r29, 0x01	; 1
    5776:	00 80       	ld	r0, Z
    5778:	cc 54       	subi	r28, 0x4C	; 76
    577a:	de 4f       	sbci	r29, 0xFE	; 254
    577c:	28 81       	ld	r18, Y
    577e:	39 81       	ldd	r19, Y+1	; 0x01
    5780:	c4 5b       	subi	r28, 0xB4	; 180
    5782:	d1 40       	sbci	r29, 0x01	; 1
    5784:	2f 5f       	subi	r18, 0xFF	; 255
    5786:	3f 4f       	sbci	r19, 0xFF	; 255
    5788:	cc 54       	subi	r28, 0x4C	; 76
    578a:	de 4f       	sbci	r29, 0xFE	; 254
    578c:	39 83       	std	Y+1, r19	; 0x01
    578e:	28 83       	st	Y, r18
    5790:	c4 5b       	subi	r28, 0xB4	; 180
    5792:	d1 40       	sbci	r29, 0x01	; 1
    5794:	ce 54       	subi	r28, 0x4E	; 78
    5796:	de 4f       	sbci	r29, 0xFE	; 254
    5798:	e8 81       	ld	r30, Y
    579a:	f9 81       	ldd	r31, Y+1	; 0x01
    579c:	c2 5b       	subi	r28, 0xB2	; 178
    579e:	d1 40       	sbci	r29, 0x01	; 1
    57a0:	00 82       	st	Z, r0
    57a2:	ce 54       	subi	r28, 0x4E	; 78
    57a4:	de 4f       	sbci	r29, 0xFE	; 254
    57a6:	28 81       	ld	r18, Y
    57a8:	39 81       	ldd	r19, Y+1	; 0x01
    57aa:	c2 5b       	subi	r28, 0xB2	; 178
    57ac:	d1 40       	sbci	r29, 0x01	; 1
    57ae:	2f 5f       	subi	r18, 0xFF	; 255
    57b0:	3f 4f       	sbci	r19, 0xFF	; 255
    57b2:	ce 54       	subi	r28, 0x4E	; 78
    57b4:	de 4f       	sbci	r29, 0xFE	; 254
    57b6:	39 83       	std	Y+1, r19	; 0x01
    57b8:	28 83       	st	Y, r18
    57ba:	c2 5b       	subi	r28, 0xB2	; 178
    57bc:	d1 40       	sbci	r29, 0x01	; 1
    57be:	ca 54       	subi	r28, 0x4A	; 74
    57c0:	de 4f       	sbci	r29, 0xFE	; 254
    57c2:	38 81       	ld	r19, Y
    57c4:	c6 5b       	subi	r28, 0xB6	; 182
    57c6:	d1 40       	sbci	r29, 0x01	; 1
    57c8:	31 50       	subi	r19, 0x01	; 1
    57ca:	ca 54       	subi	r28, 0x4A	; 74
    57cc:	de 4f       	sbci	r29, 0xFE	; 254
    57ce:	38 83       	st	Y, r19
    57d0:	c6 5b       	subi	r28, 0xB6	; 182
    57d2:	d1 40       	sbci	r29, 0x01	; 1
    57d4:	ca 54       	subi	r28, 0x4A	; 74
    57d6:	de 4f       	sbci	r29, 0xFE	; 254
    57d8:	88 81       	ld	r24, Y
    57da:	c6 5b       	subi	r28, 0xB6	; 182
    57dc:	d1 40       	sbci	r29, 0x01	; 1
    57de:	88 23       	and	r24, r24
    57e0:	21 f6       	brne	.-120    	; 0x576a <main+0x430>
	u8 wordLED_OFF[] = "LED_OFF";
    57e2:	ce 01       	movw	r24, r28
    57e4:	8a 5a       	subi	r24, 0xAA	; 170
    57e6:	9e 4f       	sbci	r25, 0xFE	; 254
    57e8:	c9 54       	subi	r28, 0x49	; 73
    57ea:	de 4f       	sbci	r29, 0xFE	; 254
    57ec:	99 83       	std	Y+1, r25	; 0x01
    57ee:	88 83       	st	Y, r24
    57f0:	c7 5b       	subi	r28, 0xB7	; 183
    57f2:	d1 40       	sbci	r29, 0x01	; 1
    57f4:	e6 e3       	ldi	r30, 0x36	; 54
    57f6:	f1 e0       	ldi	r31, 0x01	; 1
    57f8:	c7 54       	subi	r28, 0x47	; 71
    57fa:	de 4f       	sbci	r29, 0xFE	; 254
    57fc:	f9 83       	std	Y+1, r31	; 0x01
    57fe:	e8 83       	st	Y, r30
    5800:	c9 5b       	subi	r28, 0xB9	; 185
    5802:	d1 40       	sbci	r29, 0x01	; 1
    5804:	f8 e0       	ldi	r31, 0x08	; 8
    5806:	c5 54       	subi	r28, 0x45	; 69
    5808:	de 4f       	sbci	r29, 0xFE	; 254
    580a:	f8 83       	st	Y, r31
    580c:	cb 5b       	subi	r28, 0xBB	; 187
    580e:	d1 40       	sbci	r29, 0x01	; 1
    5810:	c7 54       	subi	r28, 0x47	; 71
    5812:	de 4f       	sbci	r29, 0xFE	; 254
    5814:	e8 81       	ld	r30, Y
    5816:	f9 81       	ldd	r31, Y+1	; 0x01
    5818:	c9 5b       	subi	r28, 0xB9	; 185
    581a:	d1 40       	sbci	r29, 0x01	; 1
    581c:	00 80       	ld	r0, Z
    581e:	c7 54       	subi	r28, 0x47	; 71
    5820:	de 4f       	sbci	r29, 0xFE	; 254
    5822:	28 81       	ld	r18, Y
    5824:	39 81       	ldd	r19, Y+1	; 0x01
    5826:	c9 5b       	subi	r28, 0xB9	; 185
    5828:	d1 40       	sbci	r29, 0x01	; 1
    582a:	2f 5f       	subi	r18, 0xFF	; 255
    582c:	3f 4f       	sbci	r19, 0xFF	; 255
    582e:	c7 54       	subi	r28, 0x47	; 71
    5830:	de 4f       	sbci	r29, 0xFE	; 254
    5832:	39 83       	std	Y+1, r19	; 0x01
    5834:	28 83       	st	Y, r18
    5836:	c9 5b       	subi	r28, 0xB9	; 185
    5838:	d1 40       	sbci	r29, 0x01	; 1
    583a:	c9 54       	subi	r28, 0x49	; 73
    583c:	de 4f       	sbci	r29, 0xFE	; 254
    583e:	e8 81       	ld	r30, Y
    5840:	f9 81       	ldd	r31, Y+1	; 0x01
    5842:	c7 5b       	subi	r28, 0xB7	; 183
    5844:	d1 40       	sbci	r29, 0x01	; 1
    5846:	00 82       	st	Z, r0
    5848:	c9 54       	subi	r28, 0x49	; 73
    584a:	de 4f       	sbci	r29, 0xFE	; 254
    584c:	28 81       	ld	r18, Y
    584e:	39 81       	ldd	r19, Y+1	; 0x01
    5850:	c7 5b       	subi	r28, 0xB7	; 183
    5852:	d1 40       	sbci	r29, 0x01	; 1
    5854:	2f 5f       	subi	r18, 0xFF	; 255
    5856:	3f 4f       	sbci	r19, 0xFF	; 255
    5858:	c9 54       	subi	r28, 0x49	; 73
    585a:	de 4f       	sbci	r29, 0xFE	; 254
    585c:	39 83       	std	Y+1, r19	; 0x01
    585e:	28 83       	st	Y, r18
    5860:	c7 5b       	subi	r28, 0xB7	; 183
    5862:	d1 40       	sbci	r29, 0x01	; 1
    5864:	c5 54       	subi	r28, 0x45	; 69
    5866:	de 4f       	sbci	r29, 0xFE	; 254
    5868:	38 81       	ld	r19, Y
    586a:	cb 5b       	subi	r28, 0xBB	; 187
    586c:	d1 40       	sbci	r29, 0x01	; 1
    586e:	31 50       	subi	r19, 0x01	; 1
    5870:	c5 54       	subi	r28, 0x45	; 69
    5872:	de 4f       	sbci	r29, 0xFE	; 254
    5874:	38 83       	st	Y, r19
    5876:	cb 5b       	subi	r28, 0xBB	; 187
    5878:	d1 40       	sbci	r29, 0x01	; 1
    587a:	c5 54       	subi	r28, 0x45	; 69
    587c:	de 4f       	sbci	r29, 0xFE	; 254
    587e:	88 81       	ld	r24, Y
    5880:	cb 5b       	subi	r28, 0xBB	; 187
    5882:	d1 40       	sbci	r29, 0x01	; 1
    5884:	88 23       	and	r24, r24
    5886:	21 f6       	brne	.-120    	; 0x5810 <main+0x4d6>
	u8 wordDC_MOTOR_OFF[] = "DC_MOTOR_OFF";
    5888:	ce 01       	movw	r24, r28
    588a:	82 5a       	subi	r24, 0xA2	; 162
    588c:	9e 4f       	sbci	r25, 0xFE	; 254
    588e:	c4 54       	subi	r28, 0x44	; 68
    5890:	de 4f       	sbci	r29, 0xFE	; 254
    5892:	99 83       	std	Y+1, r25	; 0x01
    5894:	88 83       	st	Y, r24
    5896:	cc 5b       	subi	r28, 0xBC	; 188
    5898:	d1 40       	sbci	r29, 0x01	; 1
    589a:	ee e3       	ldi	r30, 0x3E	; 62
    589c:	f1 e0       	ldi	r31, 0x01	; 1
    589e:	c2 54       	subi	r28, 0x42	; 66
    58a0:	de 4f       	sbci	r29, 0xFE	; 254
    58a2:	f9 83       	std	Y+1, r31	; 0x01
    58a4:	e8 83       	st	Y, r30
    58a6:	ce 5b       	subi	r28, 0xBE	; 190
    58a8:	d1 40       	sbci	r29, 0x01	; 1
    58aa:	fd e0       	ldi	r31, 0x0D	; 13
    58ac:	c0 54       	subi	r28, 0x40	; 64
    58ae:	de 4f       	sbci	r29, 0xFE	; 254
    58b0:	f8 83       	st	Y, r31
    58b2:	c0 5c       	subi	r28, 0xC0	; 192
    58b4:	d1 40       	sbci	r29, 0x01	; 1
    58b6:	c2 54       	subi	r28, 0x42	; 66
    58b8:	de 4f       	sbci	r29, 0xFE	; 254
    58ba:	e8 81       	ld	r30, Y
    58bc:	f9 81       	ldd	r31, Y+1	; 0x01
    58be:	ce 5b       	subi	r28, 0xBE	; 190
    58c0:	d1 40       	sbci	r29, 0x01	; 1
    58c2:	00 80       	ld	r0, Z
    58c4:	c2 54       	subi	r28, 0x42	; 66
    58c6:	de 4f       	sbci	r29, 0xFE	; 254
    58c8:	28 81       	ld	r18, Y
    58ca:	39 81       	ldd	r19, Y+1	; 0x01
    58cc:	ce 5b       	subi	r28, 0xBE	; 190
    58ce:	d1 40       	sbci	r29, 0x01	; 1
    58d0:	2f 5f       	subi	r18, 0xFF	; 255
    58d2:	3f 4f       	sbci	r19, 0xFF	; 255
    58d4:	c2 54       	subi	r28, 0x42	; 66
    58d6:	de 4f       	sbci	r29, 0xFE	; 254
    58d8:	39 83       	std	Y+1, r19	; 0x01
    58da:	28 83       	st	Y, r18
    58dc:	ce 5b       	subi	r28, 0xBE	; 190
    58de:	d1 40       	sbci	r29, 0x01	; 1
    58e0:	c4 54       	subi	r28, 0x44	; 68
    58e2:	de 4f       	sbci	r29, 0xFE	; 254
    58e4:	e8 81       	ld	r30, Y
    58e6:	f9 81       	ldd	r31, Y+1	; 0x01
    58e8:	cc 5b       	subi	r28, 0xBC	; 188
    58ea:	d1 40       	sbci	r29, 0x01	; 1
    58ec:	00 82       	st	Z, r0
    58ee:	c4 54       	subi	r28, 0x44	; 68
    58f0:	de 4f       	sbci	r29, 0xFE	; 254
    58f2:	28 81       	ld	r18, Y
    58f4:	39 81       	ldd	r19, Y+1	; 0x01
    58f6:	cc 5b       	subi	r28, 0xBC	; 188
    58f8:	d1 40       	sbci	r29, 0x01	; 1
    58fa:	2f 5f       	subi	r18, 0xFF	; 255
    58fc:	3f 4f       	sbci	r19, 0xFF	; 255
    58fe:	c4 54       	subi	r28, 0x44	; 68
    5900:	de 4f       	sbci	r29, 0xFE	; 254
    5902:	39 83       	std	Y+1, r19	; 0x01
    5904:	28 83       	st	Y, r18
    5906:	cc 5b       	subi	r28, 0xBC	; 188
    5908:	d1 40       	sbci	r29, 0x01	; 1
    590a:	c0 54       	subi	r28, 0x40	; 64
    590c:	de 4f       	sbci	r29, 0xFE	; 254
    590e:	38 81       	ld	r19, Y
    5910:	c0 5c       	subi	r28, 0xC0	; 192
    5912:	d1 40       	sbci	r29, 0x01	; 1
    5914:	31 50       	subi	r19, 0x01	; 1
    5916:	c0 54       	subi	r28, 0x40	; 64
    5918:	de 4f       	sbci	r29, 0xFE	; 254
    591a:	38 83       	st	Y, r19
    591c:	c0 5c       	subi	r28, 0xC0	; 192
    591e:	d1 40       	sbci	r29, 0x01	; 1
    5920:	c0 54       	subi	r28, 0x40	; 64
    5922:	de 4f       	sbci	r29, 0xFE	; 254
    5924:	88 81       	ld	r24, Y
    5926:	c0 5c       	subi	r28, 0xC0	; 192
    5928:	d1 40       	sbci	r29, 0x01	; 1
    592a:	88 23       	and	r24, r24
    592c:	21 f6       	brne	.-120    	; 0x58b6 <main+0x57c>
	u8 wordDC_MOTOR_ON_CW[] = "DC_MOTOR_ON_CW";
    592e:	ce 01       	movw	r24, r28
    5930:	85 59       	subi	r24, 0x95	; 149
    5932:	9e 4f       	sbci	r25, 0xFE	; 254
    5934:	cf 53       	subi	r28, 0x3F	; 63
    5936:	de 4f       	sbci	r29, 0xFE	; 254
    5938:	99 83       	std	Y+1, r25	; 0x01
    593a:	88 83       	st	Y, r24
    593c:	c1 5c       	subi	r28, 0xC1	; 193
    593e:	d1 40       	sbci	r29, 0x01	; 1
    5940:	eb e4       	ldi	r30, 0x4B	; 75
    5942:	f1 e0       	ldi	r31, 0x01	; 1
    5944:	cd 53       	subi	r28, 0x3D	; 61
    5946:	de 4f       	sbci	r29, 0xFE	; 254
    5948:	f9 83       	std	Y+1, r31	; 0x01
    594a:	e8 83       	st	Y, r30
    594c:	c3 5c       	subi	r28, 0xC3	; 195
    594e:	d1 40       	sbci	r29, 0x01	; 1
    5950:	ff e0       	ldi	r31, 0x0F	; 15
    5952:	cb 53       	subi	r28, 0x3B	; 59
    5954:	de 4f       	sbci	r29, 0xFE	; 254
    5956:	f8 83       	st	Y, r31
    5958:	c5 5c       	subi	r28, 0xC5	; 197
    595a:	d1 40       	sbci	r29, 0x01	; 1
    595c:	cd 53       	subi	r28, 0x3D	; 61
    595e:	de 4f       	sbci	r29, 0xFE	; 254
    5960:	e8 81       	ld	r30, Y
    5962:	f9 81       	ldd	r31, Y+1	; 0x01
    5964:	c3 5c       	subi	r28, 0xC3	; 195
    5966:	d1 40       	sbci	r29, 0x01	; 1
    5968:	00 80       	ld	r0, Z
    596a:	cd 53       	subi	r28, 0x3D	; 61
    596c:	de 4f       	sbci	r29, 0xFE	; 254
    596e:	28 81       	ld	r18, Y
    5970:	39 81       	ldd	r19, Y+1	; 0x01
    5972:	c3 5c       	subi	r28, 0xC3	; 195
    5974:	d1 40       	sbci	r29, 0x01	; 1
    5976:	2f 5f       	subi	r18, 0xFF	; 255
    5978:	3f 4f       	sbci	r19, 0xFF	; 255
    597a:	cd 53       	subi	r28, 0x3D	; 61
    597c:	de 4f       	sbci	r29, 0xFE	; 254
    597e:	39 83       	std	Y+1, r19	; 0x01
    5980:	28 83       	st	Y, r18
    5982:	c3 5c       	subi	r28, 0xC3	; 195
    5984:	d1 40       	sbci	r29, 0x01	; 1
    5986:	cf 53       	subi	r28, 0x3F	; 63
    5988:	de 4f       	sbci	r29, 0xFE	; 254
    598a:	e8 81       	ld	r30, Y
    598c:	f9 81       	ldd	r31, Y+1	; 0x01
    598e:	c1 5c       	subi	r28, 0xC1	; 193
    5990:	d1 40       	sbci	r29, 0x01	; 1
    5992:	00 82       	st	Z, r0
    5994:	cf 53       	subi	r28, 0x3F	; 63
    5996:	de 4f       	sbci	r29, 0xFE	; 254
    5998:	28 81       	ld	r18, Y
    599a:	39 81       	ldd	r19, Y+1	; 0x01
    599c:	c1 5c       	subi	r28, 0xC1	; 193
    599e:	d1 40       	sbci	r29, 0x01	; 1
    59a0:	2f 5f       	subi	r18, 0xFF	; 255
    59a2:	3f 4f       	sbci	r19, 0xFF	; 255
    59a4:	cf 53       	subi	r28, 0x3F	; 63
    59a6:	de 4f       	sbci	r29, 0xFE	; 254
    59a8:	39 83       	std	Y+1, r19	; 0x01
    59aa:	28 83       	st	Y, r18
    59ac:	c1 5c       	subi	r28, 0xC1	; 193
    59ae:	d1 40       	sbci	r29, 0x01	; 1
    59b0:	cb 53       	subi	r28, 0x3B	; 59
    59b2:	de 4f       	sbci	r29, 0xFE	; 254
    59b4:	38 81       	ld	r19, Y
    59b6:	c5 5c       	subi	r28, 0xC5	; 197
    59b8:	d1 40       	sbci	r29, 0x01	; 1
    59ba:	31 50       	subi	r19, 0x01	; 1
    59bc:	cb 53       	subi	r28, 0x3B	; 59
    59be:	de 4f       	sbci	r29, 0xFE	; 254
    59c0:	38 83       	st	Y, r19
    59c2:	c5 5c       	subi	r28, 0xC5	; 197
    59c4:	d1 40       	sbci	r29, 0x01	; 1
    59c6:	cb 53       	subi	r28, 0x3B	; 59
    59c8:	de 4f       	sbci	r29, 0xFE	; 254
    59ca:	88 81       	ld	r24, Y
    59cc:	c5 5c       	subi	r28, 0xC5	; 197
    59ce:	d1 40       	sbci	r29, 0x01	; 1
    59d0:	88 23       	and	r24, r24
    59d2:	21 f6       	brne	.-120    	; 0x595c <main+0x622>
	u8 wordDC_MOTOR_ON_CCW[] = "DC_MOTOR_ON_CCW";
    59d4:	ce 01       	movw	r24, r28
    59d6:	86 58       	subi	r24, 0x86	; 134
    59d8:	9e 4f       	sbci	r25, 0xFE	; 254
    59da:	ca 53       	subi	r28, 0x3A	; 58
    59dc:	de 4f       	sbci	r29, 0xFE	; 254
    59de:	99 83       	std	Y+1, r25	; 0x01
    59e0:	88 83       	st	Y, r24
    59e2:	c6 5c       	subi	r28, 0xC6	; 198
    59e4:	d1 40       	sbci	r29, 0x01	; 1
    59e6:	ea e5       	ldi	r30, 0x5A	; 90
    59e8:	f1 e0       	ldi	r31, 0x01	; 1
    59ea:	c8 53       	subi	r28, 0x38	; 56
    59ec:	de 4f       	sbci	r29, 0xFE	; 254
    59ee:	f9 83       	std	Y+1, r31	; 0x01
    59f0:	e8 83       	st	Y, r30
    59f2:	c8 5c       	subi	r28, 0xC8	; 200
    59f4:	d1 40       	sbci	r29, 0x01	; 1
    59f6:	f0 e1       	ldi	r31, 0x10	; 16
    59f8:	c6 53       	subi	r28, 0x36	; 54
    59fa:	de 4f       	sbci	r29, 0xFE	; 254
    59fc:	f8 83       	st	Y, r31
    59fe:	ca 5c       	subi	r28, 0xCA	; 202
    5a00:	d1 40       	sbci	r29, 0x01	; 1
    5a02:	c8 53       	subi	r28, 0x38	; 56
    5a04:	de 4f       	sbci	r29, 0xFE	; 254
    5a06:	e8 81       	ld	r30, Y
    5a08:	f9 81       	ldd	r31, Y+1	; 0x01
    5a0a:	c8 5c       	subi	r28, 0xC8	; 200
    5a0c:	d1 40       	sbci	r29, 0x01	; 1
    5a0e:	00 80       	ld	r0, Z
    5a10:	c8 53       	subi	r28, 0x38	; 56
    5a12:	de 4f       	sbci	r29, 0xFE	; 254
    5a14:	28 81       	ld	r18, Y
    5a16:	39 81       	ldd	r19, Y+1	; 0x01
    5a18:	c8 5c       	subi	r28, 0xC8	; 200
    5a1a:	d1 40       	sbci	r29, 0x01	; 1
    5a1c:	2f 5f       	subi	r18, 0xFF	; 255
    5a1e:	3f 4f       	sbci	r19, 0xFF	; 255
    5a20:	c8 53       	subi	r28, 0x38	; 56
    5a22:	de 4f       	sbci	r29, 0xFE	; 254
    5a24:	39 83       	std	Y+1, r19	; 0x01
    5a26:	28 83       	st	Y, r18
    5a28:	c8 5c       	subi	r28, 0xC8	; 200
    5a2a:	d1 40       	sbci	r29, 0x01	; 1
    5a2c:	ca 53       	subi	r28, 0x3A	; 58
    5a2e:	de 4f       	sbci	r29, 0xFE	; 254
    5a30:	e8 81       	ld	r30, Y
    5a32:	f9 81       	ldd	r31, Y+1	; 0x01
    5a34:	c6 5c       	subi	r28, 0xC6	; 198
    5a36:	d1 40       	sbci	r29, 0x01	; 1
    5a38:	00 82       	st	Z, r0
    5a3a:	ca 53       	subi	r28, 0x3A	; 58
    5a3c:	de 4f       	sbci	r29, 0xFE	; 254
    5a3e:	28 81       	ld	r18, Y
    5a40:	39 81       	ldd	r19, Y+1	; 0x01
    5a42:	c6 5c       	subi	r28, 0xC6	; 198
    5a44:	d1 40       	sbci	r29, 0x01	; 1
    5a46:	2f 5f       	subi	r18, 0xFF	; 255
    5a48:	3f 4f       	sbci	r19, 0xFF	; 255
    5a4a:	ca 53       	subi	r28, 0x3A	; 58
    5a4c:	de 4f       	sbci	r29, 0xFE	; 254
    5a4e:	39 83       	std	Y+1, r19	; 0x01
    5a50:	28 83       	st	Y, r18
    5a52:	c6 5c       	subi	r28, 0xC6	; 198
    5a54:	d1 40       	sbci	r29, 0x01	; 1
    5a56:	c6 53       	subi	r28, 0x36	; 54
    5a58:	de 4f       	sbci	r29, 0xFE	; 254
    5a5a:	38 81       	ld	r19, Y
    5a5c:	ca 5c       	subi	r28, 0xCA	; 202
    5a5e:	d1 40       	sbci	r29, 0x01	; 1
    5a60:	31 50       	subi	r19, 0x01	; 1
    5a62:	c6 53       	subi	r28, 0x36	; 54
    5a64:	de 4f       	sbci	r29, 0xFE	; 254
    5a66:	38 83       	st	Y, r19
    5a68:	ca 5c       	subi	r28, 0xCA	; 202
    5a6a:	d1 40       	sbci	r29, 0x01	; 1
    5a6c:	c6 53       	subi	r28, 0x36	; 54
    5a6e:	de 4f       	sbci	r29, 0xFE	; 254
    5a70:	88 81       	ld	r24, Y
    5a72:	ca 5c       	subi	r28, 0xCA	; 202
    5a74:	d1 40       	sbci	r29, 0x01	; 1
    5a76:	88 23       	and	r24, r24
    5a78:	21 f6       	brne	.-120    	; 0x5a02 <main+0x6c8>

	Welcom_Page(); //Display welcome page
    5a7a:	0e 94 84 20 	call	0x4108	; 0x4108 <Welcom_Page>
	CLCD_DisplayClear();
    5a7e:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>

	while(1){
		Home_Page(); //Display Home page
    5a82:	0e 94 35 25 	call	0x4a6a	; 0x4a6a <Home_Page>
		u8 KeypadEntry = KPD_GetPressedKey();
    5a86:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <KPD_GetPressedKey>
    5a8a:	fe 01       	movw	r30, r28
    5a8c:	e3 50       	subi	r30, 0x03	; 3
    5a8e:	ff 4f       	sbci	r31, 0xFF	; 255
    5a90:	80 83       	st	Z, r24
		if(KeypadEntry != 0){
    5a92:	fe 01       	movw	r30, r28
    5a94:	e3 50       	subi	r30, 0x03	; 3
    5a96:	ff 4f       	sbci	r31, 0xFF	; 255
    5a98:	80 81       	ld	r24, Z
    5a9a:	88 23       	and	r24, r24
    5a9c:	91 f3       	breq	.-28     	; 0x5a82 <main+0x748>
			switch (KeypadEntry) {
    5a9e:	fe 01       	movw	r30, r28
    5aa0:	e3 50       	subi	r30, 0x03	; 3
    5aa2:	ff 4f       	sbci	r31, 0xFF	; 255
    5aa4:	80 81       	ld	r24, Z
    5aa6:	e8 2f       	mov	r30, r24
    5aa8:	f0 e0       	ldi	r31, 0x00	; 0
    5aaa:	ce 56       	subi	r28, 0x6E	; 110
    5aac:	de 4f       	sbci	r29, 0xFE	; 254
    5aae:	f9 83       	std	Y+1, r31	; 0x01
    5ab0:	e8 83       	st	Y, r30
    5ab2:	c2 59       	subi	r28, 0x92	; 146
    5ab4:	d1 40       	sbci	r29, 0x01	; 1
    5ab6:	ce 56       	subi	r28, 0x6E	; 110
    5ab8:	de 4f       	sbci	r29, 0xFE	; 254
    5aba:	28 81       	ld	r18, Y
    5abc:	39 81       	ldd	r19, Y+1	; 0x01
    5abe:	c2 59       	subi	r28, 0x92	; 146
    5ac0:	d1 40       	sbci	r29, 0x01	; 1
    5ac2:	21 33       	cpi	r18, 0x31	; 49
    5ac4:	31 05       	cpc	r19, r1
    5ac6:	61 f0       	breq	.+24     	; 0x5ae0 <main+0x7a6>
    5ac8:	ce 56       	subi	r28, 0x6E	; 110
    5aca:	de 4f       	sbci	r29, 0xFE	; 254
    5acc:	88 81       	ld	r24, Y
    5ace:	99 81       	ldd	r25, Y+1	; 0x01
    5ad0:	c2 59       	subi	r28, 0x92	; 146
    5ad2:	d1 40       	sbci	r29, 0x01	; 1
    5ad4:	82 33       	cpi	r24, 0x32	; 50
    5ad6:	91 05       	cpc	r25, r1
    5ad8:	11 f4       	brne	.+4      	; 0x5ade <main+0x7a4>
    5ada:	0c 94 5b 3a 	jmp	0x74b6	; 0x74b6 <main+0x217c>
    5ade:	d1 cf       	rjmp	.-94     	; 0x5a82 <main+0x748>
				case '1': //Display Control Page
					CLCD_DisplayClear();
    5ae0:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>

					CLCD_WriteString_Pos(wordCONTROL_PAGE,1,1);
    5ae4:	ce 01       	movw	r24, r28
    5ae6:	82 50       	subi	r24, 0x02	; 2
    5ae8:	9f 4f       	sbci	r25, 0xFF	; 255
    5aea:	61 e0       	ldi	r22, 0x01	; 1
    5aec:	41 e0       	ldi	r20, 0x01	; 1
    5aee:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
    5af2:	fe 01       	movw	r30, r28
    5af4:	e7 50       	subi	r30, 0x07	; 7
    5af6:	ff 4f       	sbci	r31, 0xFF	; 255
    5af8:	80 e0       	ldi	r24, 0x00	; 0
    5afa:	90 e0       	ldi	r25, 0x00	; 0
    5afc:	aa ef       	ldi	r26, 0xFA	; 250
    5afe:	b3 e4       	ldi	r27, 0x43	; 67
    5b00:	80 83       	st	Z, r24
    5b02:	91 83       	std	Z+1, r25	; 0x01
    5b04:	a2 83       	std	Z+2, r26	; 0x02
    5b06:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5b08:	8e 01       	movw	r16, r28
    5b0a:	0b 50       	subi	r16, 0x0B	; 11
    5b0c:	1f 4f       	sbci	r17, 0xFF	; 255
    5b0e:	fe 01       	movw	r30, r28
    5b10:	e7 50       	subi	r30, 0x07	; 7
    5b12:	ff 4f       	sbci	r31, 0xFF	; 255
    5b14:	60 81       	ld	r22, Z
    5b16:	71 81       	ldd	r23, Z+1	; 0x01
    5b18:	82 81       	ldd	r24, Z+2	; 0x02
    5b1a:	93 81       	ldd	r25, Z+3	; 0x03
    5b1c:	20 e0       	ldi	r18, 0x00	; 0
    5b1e:	30 e0       	ldi	r19, 0x00	; 0
    5b20:	4a ef       	ldi	r20, 0xFA	; 250
    5b22:	54 e4       	ldi	r21, 0x44	; 68
    5b24:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    5b28:	dc 01       	movw	r26, r24
    5b2a:	cb 01       	movw	r24, r22
    5b2c:	f8 01       	movw	r30, r16
    5b2e:	80 83       	st	Z, r24
    5b30:	91 83       	std	Z+1, r25	; 0x01
    5b32:	a2 83       	std	Z+2, r26	; 0x02
    5b34:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5b36:	fe 01       	movw	r30, r28
    5b38:	eb 50       	subi	r30, 0x0B	; 11
    5b3a:	ff 4f       	sbci	r31, 0xFF	; 255
    5b3c:	60 81       	ld	r22, Z
    5b3e:	71 81       	ldd	r23, Z+1	; 0x01
    5b40:	82 81       	ldd	r24, Z+2	; 0x02
    5b42:	93 81       	ldd	r25, Z+3	; 0x03
    5b44:	20 e0       	ldi	r18, 0x00	; 0
    5b46:	30 e0       	ldi	r19, 0x00	; 0
    5b48:	40 e8       	ldi	r20, 0x80	; 128
    5b4a:	5f e3       	ldi	r21, 0x3F	; 63
    5b4c:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    5b50:	88 23       	and	r24, r24
    5b52:	44 f4       	brge	.+16     	; 0x5b64 <main+0x82a>
		__ticks = 1;
    5b54:	fe 01       	movw	r30, r28
    5b56:	ed 50       	subi	r30, 0x0D	; 13
    5b58:	ff 4f       	sbci	r31, 0xFF	; 255
    5b5a:	81 e0       	ldi	r24, 0x01	; 1
    5b5c:	90 e0       	ldi	r25, 0x00	; 0
    5b5e:	91 83       	std	Z+1, r25	; 0x01
    5b60:	80 83       	st	Z, r24
    5b62:	64 c0       	rjmp	.+200    	; 0x5c2c <main+0x8f2>
	else if (__tmp > 65535)
    5b64:	fe 01       	movw	r30, r28
    5b66:	eb 50       	subi	r30, 0x0B	; 11
    5b68:	ff 4f       	sbci	r31, 0xFF	; 255
    5b6a:	60 81       	ld	r22, Z
    5b6c:	71 81       	ldd	r23, Z+1	; 0x01
    5b6e:	82 81       	ldd	r24, Z+2	; 0x02
    5b70:	93 81       	ldd	r25, Z+3	; 0x03
    5b72:	20 e0       	ldi	r18, 0x00	; 0
    5b74:	3f ef       	ldi	r19, 0xFF	; 255
    5b76:	4f e7       	ldi	r20, 0x7F	; 127
    5b78:	57 e4       	ldi	r21, 0x47	; 71
    5b7a:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    5b7e:	18 16       	cp	r1, r24
    5b80:	0c f0       	brlt	.+2      	; 0x5b84 <main+0x84a>
    5b82:	43 c0       	rjmp	.+134    	; 0x5c0a <main+0x8d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5b84:	fe 01       	movw	r30, r28
    5b86:	e7 50       	subi	r30, 0x07	; 7
    5b88:	ff 4f       	sbci	r31, 0xFF	; 255
    5b8a:	60 81       	ld	r22, Z
    5b8c:	71 81       	ldd	r23, Z+1	; 0x01
    5b8e:	82 81       	ldd	r24, Z+2	; 0x02
    5b90:	93 81       	ldd	r25, Z+3	; 0x03
    5b92:	20 e0       	ldi	r18, 0x00	; 0
    5b94:	30 e0       	ldi	r19, 0x00	; 0
    5b96:	40 e2       	ldi	r20, 0x20	; 32
    5b98:	51 e4       	ldi	r21, 0x41	; 65
    5b9a:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    5b9e:	dc 01       	movw	r26, r24
    5ba0:	cb 01       	movw	r24, r22
    5ba2:	8e 01       	movw	r16, r28
    5ba4:	0d 50       	subi	r16, 0x0D	; 13
    5ba6:	1f 4f       	sbci	r17, 0xFF	; 255
    5ba8:	bc 01       	movw	r22, r24
    5baa:	cd 01       	movw	r24, r26
    5bac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5bb0:	dc 01       	movw	r26, r24
    5bb2:	cb 01       	movw	r24, r22
    5bb4:	f8 01       	movw	r30, r16
    5bb6:	91 83       	std	Z+1, r25	; 0x01
    5bb8:	80 83       	st	Z, r24
    5bba:	1f c0       	rjmp	.+62     	; 0x5bfa <main+0x8c0>
    5bbc:	fe 01       	movw	r30, r28
    5bbe:	ef 50       	subi	r30, 0x0F	; 15
    5bc0:	ff 4f       	sbci	r31, 0xFF	; 255
    5bc2:	88 ec       	ldi	r24, 0xC8	; 200
    5bc4:	90 e0       	ldi	r25, 0x00	; 0
    5bc6:	91 83       	std	Z+1, r25	; 0x01
    5bc8:	80 83       	st	Z, r24
    5bca:	fe 01       	movw	r30, r28
    5bcc:	ef 50       	subi	r30, 0x0F	; 15
    5bce:	ff 4f       	sbci	r31, 0xFF	; 255
    5bd0:	80 81       	ld	r24, Z
    5bd2:	91 81       	ldd	r25, Z+1	; 0x01
    5bd4:	01 97       	sbiw	r24, 0x01	; 1
    5bd6:	f1 f7       	brne	.-4      	; 0x5bd4 <main+0x89a>
    5bd8:	fe 01       	movw	r30, r28
    5bda:	ef 50       	subi	r30, 0x0F	; 15
    5bdc:	ff 4f       	sbci	r31, 0xFF	; 255
    5bde:	91 83       	std	Z+1, r25	; 0x01
    5be0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5be2:	de 01       	movw	r26, r28
    5be4:	ad 50       	subi	r26, 0x0D	; 13
    5be6:	bf 4f       	sbci	r27, 0xFF	; 255
    5be8:	fe 01       	movw	r30, r28
    5bea:	ed 50       	subi	r30, 0x0D	; 13
    5bec:	ff 4f       	sbci	r31, 0xFF	; 255
    5bee:	80 81       	ld	r24, Z
    5bf0:	91 81       	ldd	r25, Z+1	; 0x01
    5bf2:	01 97       	sbiw	r24, 0x01	; 1
    5bf4:	11 96       	adiw	r26, 0x01	; 1
    5bf6:	9c 93       	st	X, r25
    5bf8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5bfa:	fe 01       	movw	r30, r28
    5bfc:	ed 50       	subi	r30, 0x0D	; 13
    5bfe:	ff 4f       	sbci	r31, 0xFF	; 255
    5c00:	80 81       	ld	r24, Z
    5c02:	91 81       	ldd	r25, Z+1	; 0x01
    5c04:	00 97       	sbiw	r24, 0x00	; 0
    5c06:	d1 f6       	brne	.-76     	; 0x5bbc <main+0x882>
    5c08:	27 c0       	rjmp	.+78     	; 0x5c58 <main+0x91e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5c0a:	8e 01       	movw	r16, r28
    5c0c:	0d 50       	subi	r16, 0x0D	; 13
    5c0e:	1f 4f       	sbci	r17, 0xFF	; 255
    5c10:	fe 01       	movw	r30, r28
    5c12:	eb 50       	subi	r30, 0x0B	; 11
    5c14:	ff 4f       	sbci	r31, 0xFF	; 255
    5c16:	60 81       	ld	r22, Z
    5c18:	71 81       	ldd	r23, Z+1	; 0x01
    5c1a:	82 81       	ldd	r24, Z+2	; 0x02
    5c1c:	93 81       	ldd	r25, Z+3	; 0x03
    5c1e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5c22:	dc 01       	movw	r26, r24
    5c24:	cb 01       	movw	r24, r22
    5c26:	f8 01       	movw	r30, r16
    5c28:	91 83       	std	Z+1, r25	; 0x01
    5c2a:	80 83       	st	Z, r24
    5c2c:	de 01       	movw	r26, r28
    5c2e:	a1 51       	subi	r26, 0x11	; 17
    5c30:	bf 4f       	sbci	r27, 0xFF	; 255
    5c32:	fe 01       	movw	r30, r28
    5c34:	ed 50       	subi	r30, 0x0D	; 13
    5c36:	ff 4f       	sbci	r31, 0xFF	; 255
    5c38:	80 81       	ld	r24, Z
    5c3a:	91 81       	ldd	r25, Z+1	; 0x01
    5c3c:	8d 93       	st	X+, r24
    5c3e:	9c 93       	st	X, r25
    5c40:	fe 01       	movw	r30, r28
    5c42:	e1 51       	subi	r30, 0x11	; 17
    5c44:	ff 4f       	sbci	r31, 0xFF	; 255
    5c46:	80 81       	ld	r24, Z
    5c48:	91 81       	ldd	r25, Z+1	; 0x01
    5c4a:	01 97       	sbiw	r24, 0x01	; 1
    5c4c:	f1 f7       	brne	.-4      	; 0x5c4a <main+0x910>
    5c4e:	fe 01       	movw	r30, r28
    5c50:	e1 51       	subi	r30, 0x11	; 17
    5c52:	ff 4f       	sbci	r31, 0xFF	; 255
    5c54:	91 83       	std	Z+1, r25	; 0x01
    5c56:	80 83       	st	Z, r24
					_delay_ms(500);
					CLCD_DisplayClear();
    5c58:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>

					Control_Choice(); //Control LED // Control Motor // Back to home page
    5c5c:	0e 94 bc 25 	call	0x4b78	; 0x4b78 <Control_Choice>
    5c60:	fe 01       	movw	r30, r28
    5c62:	e5 51       	subi	r30, 0x15	; 21
    5c64:	ff 4f       	sbci	r31, 0xFF	; 255
    5c66:	80 e0       	ldi	r24, 0x00	; 0
    5c68:	90 e0       	ldi	r25, 0x00	; 0
    5c6a:	aa e7       	ldi	r26, 0x7A	; 122
    5c6c:	b4 e4       	ldi	r27, 0x44	; 68
    5c6e:	80 83       	st	Z, r24
    5c70:	91 83       	std	Z+1, r25	; 0x01
    5c72:	a2 83       	std	Z+2, r26	; 0x02
    5c74:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5c76:	8e 01       	movw	r16, r28
    5c78:	09 51       	subi	r16, 0x19	; 25
    5c7a:	1f 4f       	sbci	r17, 0xFF	; 255
    5c7c:	fe 01       	movw	r30, r28
    5c7e:	e5 51       	subi	r30, 0x15	; 21
    5c80:	ff 4f       	sbci	r31, 0xFF	; 255
    5c82:	60 81       	ld	r22, Z
    5c84:	71 81       	ldd	r23, Z+1	; 0x01
    5c86:	82 81       	ldd	r24, Z+2	; 0x02
    5c88:	93 81       	ldd	r25, Z+3	; 0x03
    5c8a:	20 e0       	ldi	r18, 0x00	; 0
    5c8c:	30 e0       	ldi	r19, 0x00	; 0
    5c8e:	4a ef       	ldi	r20, 0xFA	; 250
    5c90:	54 e4       	ldi	r21, 0x44	; 68
    5c92:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    5c96:	dc 01       	movw	r26, r24
    5c98:	cb 01       	movw	r24, r22
    5c9a:	f8 01       	movw	r30, r16
    5c9c:	80 83       	st	Z, r24
    5c9e:	91 83       	std	Z+1, r25	; 0x01
    5ca0:	a2 83       	std	Z+2, r26	; 0x02
    5ca2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5ca4:	fe 01       	movw	r30, r28
    5ca6:	e9 51       	subi	r30, 0x19	; 25
    5ca8:	ff 4f       	sbci	r31, 0xFF	; 255
    5caa:	60 81       	ld	r22, Z
    5cac:	71 81       	ldd	r23, Z+1	; 0x01
    5cae:	82 81       	ldd	r24, Z+2	; 0x02
    5cb0:	93 81       	ldd	r25, Z+3	; 0x03
    5cb2:	20 e0       	ldi	r18, 0x00	; 0
    5cb4:	30 e0       	ldi	r19, 0x00	; 0
    5cb6:	40 e8       	ldi	r20, 0x80	; 128
    5cb8:	5f e3       	ldi	r21, 0x3F	; 63
    5cba:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    5cbe:	88 23       	and	r24, r24
    5cc0:	44 f4       	brge	.+16     	; 0x5cd2 <main+0x998>
		__ticks = 1;
    5cc2:	fe 01       	movw	r30, r28
    5cc4:	eb 51       	subi	r30, 0x1B	; 27
    5cc6:	ff 4f       	sbci	r31, 0xFF	; 255
    5cc8:	81 e0       	ldi	r24, 0x01	; 1
    5cca:	90 e0       	ldi	r25, 0x00	; 0
    5ccc:	91 83       	std	Z+1, r25	; 0x01
    5cce:	80 83       	st	Z, r24
    5cd0:	64 c0       	rjmp	.+200    	; 0x5d9a <main+0xa60>
	else if (__tmp > 65535)
    5cd2:	fe 01       	movw	r30, r28
    5cd4:	e9 51       	subi	r30, 0x19	; 25
    5cd6:	ff 4f       	sbci	r31, 0xFF	; 255
    5cd8:	60 81       	ld	r22, Z
    5cda:	71 81       	ldd	r23, Z+1	; 0x01
    5cdc:	82 81       	ldd	r24, Z+2	; 0x02
    5cde:	93 81       	ldd	r25, Z+3	; 0x03
    5ce0:	20 e0       	ldi	r18, 0x00	; 0
    5ce2:	3f ef       	ldi	r19, 0xFF	; 255
    5ce4:	4f e7       	ldi	r20, 0x7F	; 127
    5ce6:	57 e4       	ldi	r21, 0x47	; 71
    5ce8:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    5cec:	18 16       	cp	r1, r24
    5cee:	0c f0       	brlt	.+2      	; 0x5cf2 <main+0x9b8>
    5cf0:	43 c0       	rjmp	.+134    	; 0x5d78 <main+0xa3e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5cf2:	fe 01       	movw	r30, r28
    5cf4:	e5 51       	subi	r30, 0x15	; 21
    5cf6:	ff 4f       	sbci	r31, 0xFF	; 255
    5cf8:	60 81       	ld	r22, Z
    5cfa:	71 81       	ldd	r23, Z+1	; 0x01
    5cfc:	82 81       	ldd	r24, Z+2	; 0x02
    5cfe:	93 81       	ldd	r25, Z+3	; 0x03
    5d00:	20 e0       	ldi	r18, 0x00	; 0
    5d02:	30 e0       	ldi	r19, 0x00	; 0
    5d04:	40 e2       	ldi	r20, 0x20	; 32
    5d06:	51 e4       	ldi	r21, 0x41	; 65
    5d08:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    5d0c:	dc 01       	movw	r26, r24
    5d0e:	cb 01       	movw	r24, r22
    5d10:	8e 01       	movw	r16, r28
    5d12:	0b 51       	subi	r16, 0x1B	; 27
    5d14:	1f 4f       	sbci	r17, 0xFF	; 255
    5d16:	bc 01       	movw	r22, r24
    5d18:	cd 01       	movw	r24, r26
    5d1a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5d1e:	dc 01       	movw	r26, r24
    5d20:	cb 01       	movw	r24, r22
    5d22:	f8 01       	movw	r30, r16
    5d24:	91 83       	std	Z+1, r25	; 0x01
    5d26:	80 83       	st	Z, r24
    5d28:	1f c0       	rjmp	.+62     	; 0x5d68 <main+0xa2e>
    5d2a:	fe 01       	movw	r30, r28
    5d2c:	ed 51       	subi	r30, 0x1D	; 29
    5d2e:	ff 4f       	sbci	r31, 0xFF	; 255
    5d30:	88 ec       	ldi	r24, 0xC8	; 200
    5d32:	90 e0       	ldi	r25, 0x00	; 0
    5d34:	91 83       	std	Z+1, r25	; 0x01
    5d36:	80 83       	st	Z, r24
    5d38:	fe 01       	movw	r30, r28
    5d3a:	ed 51       	subi	r30, 0x1D	; 29
    5d3c:	ff 4f       	sbci	r31, 0xFF	; 255
    5d3e:	80 81       	ld	r24, Z
    5d40:	91 81       	ldd	r25, Z+1	; 0x01
    5d42:	01 97       	sbiw	r24, 0x01	; 1
    5d44:	f1 f7       	brne	.-4      	; 0x5d42 <main+0xa08>
    5d46:	fe 01       	movw	r30, r28
    5d48:	ed 51       	subi	r30, 0x1D	; 29
    5d4a:	ff 4f       	sbci	r31, 0xFF	; 255
    5d4c:	91 83       	std	Z+1, r25	; 0x01
    5d4e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5d50:	de 01       	movw	r26, r28
    5d52:	ab 51       	subi	r26, 0x1B	; 27
    5d54:	bf 4f       	sbci	r27, 0xFF	; 255
    5d56:	fe 01       	movw	r30, r28
    5d58:	eb 51       	subi	r30, 0x1B	; 27
    5d5a:	ff 4f       	sbci	r31, 0xFF	; 255
    5d5c:	80 81       	ld	r24, Z
    5d5e:	91 81       	ldd	r25, Z+1	; 0x01
    5d60:	01 97       	sbiw	r24, 0x01	; 1
    5d62:	11 96       	adiw	r26, 0x01	; 1
    5d64:	9c 93       	st	X, r25
    5d66:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5d68:	fe 01       	movw	r30, r28
    5d6a:	eb 51       	subi	r30, 0x1B	; 27
    5d6c:	ff 4f       	sbci	r31, 0xFF	; 255
    5d6e:	80 81       	ld	r24, Z
    5d70:	91 81       	ldd	r25, Z+1	; 0x01
    5d72:	00 97       	sbiw	r24, 0x00	; 0
    5d74:	d1 f6       	brne	.-76     	; 0x5d2a <main+0x9f0>
    5d76:	27 c0       	rjmp	.+78     	; 0x5dc6 <main+0xa8c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5d78:	8e 01       	movw	r16, r28
    5d7a:	0b 51       	subi	r16, 0x1B	; 27
    5d7c:	1f 4f       	sbci	r17, 0xFF	; 255
    5d7e:	fe 01       	movw	r30, r28
    5d80:	e9 51       	subi	r30, 0x19	; 25
    5d82:	ff 4f       	sbci	r31, 0xFF	; 255
    5d84:	60 81       	ld	r22, Z
    5d86:	71 81       	ldd	r23, Z+1	; 0x01
    5d88:	82 81       	ldd	r24, Z+2	; 0x02
    5d8a:	93 81       	ldd	r25, Z+3	; 0x03
    5d8c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5d90:	dc 01       	movw	r26, r24
    5d92:	cb 01       	movw	r24, r22
    5d94:	f8 01       	movw	r30, r16
    5d96:	91 83       	std	Z+1, r25	; 0x01
    5d98:	80 83       	st	Z, r24
    5d9a:	de 01       	movw	r26, r28
    5d9c:	af 51       	subi	r26, 0x1F	; 31
    5d9e:	bf 4f       	sbci	r27, 0xFF	; 255
    5da0:	fe 01       	movw	r30, r28
    5da2:	eb 51       	subi	r30, 0x1B	; 27
    5da4:	ff 4f       	sbci	r31, 0xFF	; 255
    5da6:	80 81       	ld	r24, Z
    5da8:	91 81       	ldd	r25, Z+1	; 0x01
    5daa:	8d 93       	st	X+, r24
    5dac:	9c 93       	st	X, r25
    5dae:	fe 01       	movw	r30, r28
    5db0:	ef 51       	subi	r30, 0x1F	; 31
    5db2:	ff 4f       	sbci	r31, 0xFF	; 255
    5db4:	80 81       	ld	r24, Z
    5db6:	91 81       	ldd	r25, Z+1	; 0x01
    5db8:	01 97       	sbiw	r24, 0x01	; 1
    5dba:	f1 f7       	brne	.-4      	; 0x5db8 <main+0xa7e>
    5dbc:	fe 01       	movw	r30, r28
    5dbe:	ef 51       	subi	r30, 0x1F	; 31
    5dc0:	ff 4f       	sbci	r31, 0xFF	; 255
    5dc2:	91 83       	std	Z+1, r25	; 0x01
    5dc4:	80 83       	st	Z, r24
					_delay_ms(1000);

					CLCD_DisplayClear();
    5dc6:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
    5dca:	0c 94 4f 3a 	jmp	0x749e	; 0x749e <main+0x2164>

					while(KeypadEntry != 'C'){
						CLCD_WriteString_Pos(wordCONTROL_PAGE,1,1);
    5dce:	ce 01       	movw	r24, r28
    5dd0:	82 50       	subi	r24, 0x02	; 2
    5dd2:	9f 4f       	sbci	r25, 0xFF	; 255
    5dd4:	61 e0       	ldi	r22, 0x01	; 1
    5dd6:	41 e0       	ldi	r20, 0x01	; 1
    5dd8:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
						CLCD_WriteString_Pos(wordENTER,2,1);
    5ddc:	ce 01       	movw	r24, r28
    5dde:	89 5b       	subi	r24, 0xB9	; 185
    5de0:	9e 4f       	sbci	r25, 0xFE	; 254
    5de2:	62 e0       	ldi	r22, 0x02	; 2
    5de4:	41 e0       	ldi	r20, 0x01	; 1
    5de6:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
						KeypadEntry = KPD_GetPressedKey();
    5dea:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <KPD_GetPressedKey>
    5dee:	fe 01       	movw	r30, r28
    5df0:	e3 50       	subi	r30, 0x03	; 3
    5df2:	ff 4f       	sbci	r31, 0xFF	; 255
    5df4:	80 83       	st	Z, r24
						switch (KeypadEntry) {
    5df6:	fe 01       	movw	r30, r28
    5df8:	e3 50       	subi	r30, 0x03	; 3
    5dfa:	ff 4f       	sbci	r31, 0xFF	; 255
    5dfc:	80 81       	ld	r24, Z
    5dfe:	28 2f       	mov	r18, r24
    5e00:	30 e0       	ldi	r19, 0x00	; 0
    5e02:	c0 57       	subi	r28, 0x70	; 112
    5e04:	de 4f       	sbci	r29, 0xFE	; 254
    5e06:	39 83       	std	Y+1, r19	; 0x01
    5e08:	28 83       	st	Y, r18
    5e0a:	c0 59       	subi	r28, 0x90	; 144
    5e0c:	d1 40       	sbci	r29, 0x01	; 1
    5e0e:	c0 57       	subi	r28, 0x70	; 112
    5e10:	de 4f       	sbci	r29, 0xFE	; 254
    5e12:	88 81       	ld	r24, Y
    5e14:	99 81       	ldd	r25, Y+1	; 0x01
    5e16:	c0 59       	subi	r28, 0x90	; 144
    5e18:	d1 40       	sbci	r29, 0x01	; 1
    5e1a:	82 33       	cpi	r24, 0x32	; 50
    5e1c:	91 05       	cpc	r25, r1
    5e1e:	09 f4       	brne	.+2      	; 0x5e22 <main+0xae8>
    5e20:	23 c4       	rjmp	.+2118   	; 0x6668 <main+0x132e>
    5e22:	c0 57       	subi	r28, 0x70	; 112
    5e24:	de 4f       	sbci	r29, 0xFE	; 254
    5e26:	e8 81       	ld	r30, Y
    5e28:	f9 81       	ldd	r31, Y+1	; 0x01
    5e2a:	c0 59       	subi	r28, 0x90	; 144
    5e2c:	d1 40       	sbci	r29, 0x01	; 1
    5e2e:	ed 33       	cpi	r30, 0x3D	; 61
    5e30:	f1 05       	cpc	r31, r1
    5e32:	11 f4       	brne	.+4      	; 0x5e38 <main+0xafe>
    5e34:	0c 94 d7 39 	jmp	0x73ae	; 0x73ae <main+0x2074>
    5e38:	c0 57       	subi	r28, 0x70	; 112
    5e3a:	de 4f       	sbci	r29, 0xFE	; 254
    5e3c:	28 81       	ld	r18, Y
    5e3e:	39 81       	ldd	r19, Y+1	; 0x01
    5e40:	c0 59       	subi	r28, 0x90	; 144
    5e42:	d1 40       	sbci	r29, 0x01	; 1
    5e44:	21 33       	cpi	r18, 0x31	; 49
    5e46:	31 05       	cpc	r19, r1
    5e48:	11 f0       	breq	.+4      	; 0x5e4e <main+0xb14>
    5e4a:	0c 94 4f 3a 	jmp	0x749e	; 0x749e <main+0x2164>
							case '1': //Display LED_Control Page
								CLCD_DisplayClear();
    5e4e:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>

								Control_LED_Choice();
    5e52:	0e 94 2f 26 	call	0x4c5e	; 0x4c5e <Control_LED_Choice>
    5e56:	fe 01       	movw	r30, r28
    5e58:	e3 52       	subi	r30, 0x23	; 35
    5e5a:	ff 4f       	sbci	r31, 0xFF	; 255
    5e5c:	80 e0       	ldi	r24, 0x00	; 0
    5e5e:	90 e0       	ldi	r25, 0x00	; 0
    5e60:	aa e7       	ldi	r26, 0x7A	; 122
    5e62:	b4 e4       	ldi	r27, 0x44	; 68
    5e64:	80 83       	st	Z, r24
    5e66:	91 83       	std	Z+1, r25	; 0x01
    5e68:	a2 83       	std	Z+2, r26	; 0x02
    5e6a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5e6c:	8e 01       	movw	r16, r28
    5e6e:	07 52       	subi	r16, 0x27	; 39
    5e70:	1f 4f       	sbci	r17, 0xFF	; 255
    5e72:	fe 01       	movw	r30, r28
    5e74:	e3 52       	subi	r30, 0x23	; 35
    5e76:	ff 4f       	sbci	r31, 0xFF	; 255
    5e78:	60 81       	ld	r22, Z
    5e7a:	71 81       	ldd	r23, Z+1	; 0x01
    5e7c:	82 81       	ldd	r24, Z+2	; 0x02
    5e7e:	93 81       	ldd	r25, Z+3	; 0x03
    5e80:	20 e0       	ldi	r18, 0x00	; 0
    5e82:	30 e0       	ldi	r19, 0x00	; 0
    5e84:	4a ef       	ldi	r20, 0xFA	; 250
    5e86:	54 e4       	ldi	r21, 0x44	; 68
    5e88:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    5e8c:	dc 01       	movw	r26, r24
    5e8e:	cb 01       	movw	r24, r22
    5e90:	f8 01       	movw	r30, r16
    5e92:	80 83       	st	Z, r24
    5e94:	91 83       	std	Z+1, r25	; 0x01
    5e96:	a2 83       	std	Z+2, r26	; 0x02
    5e98:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5e9a:	fe 01       	movw	r30, r28
    5e9c:	e7 52       	subi	r30, 0x27	; 39
    5e9e:	ff 4f       	sbci	r31, 0xFF	; 255
    5ea0:	60 81       	ld	r22, Z
    5ea2:	71 81       	ldd	r23, Z+1	; 0x01
    5ea4:	82 81       	ldd	r24, Z+2	; 0x02
    5ea6:	93 81       	ldd	r25, Z+3	; 0x03
    5ea8:	20 e0       	ldi	r18, 0x00	; 0
    5eaa:	30 e0       	ldi	r19, 0x00	; 0
    5eac:	40 e8       	ldi	r20, 0x80	; 128
    5eae:	5f e3       	ldi	r21, 0x3F	; 63
    5eb0:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    5eb4:	88 23       	and	r24, r24
    5eb6:	44 f4       	brge	.+16     	; 0x5ec8 <main+0xb8e>
		__ticks = 1;
    5eb8:	fe 01       	movw	r30, r28
    5eba:	e9 52       	subi	r30, 0x29	; 41
    5ebc:	ff 4f       	sbci	r31, 0xFF	; 255
    5ebe:	81 e0       	ldi	r24, 0x01	; 1
    5ec0:	90 e0       	ldi	r25, 0x00	; 0
    5ec2:	91 83       	std	Z+1, r25	; 0x01
    5ec4:	80 83       	st	Z, r24
    5ec6:	64 c0       	rjmp	.+200    	; 0x5f90 <main+0xc56>
	else if (__tmp > 65535)
    5ec8:	fe 01       	movw	r30, r28
    5eca:	e7 52       	subi	r30, 0x27	; 39
    5ecc:	ff 4f       	sbci	r31, 0xFF	; 255
    5ece:	60 81       	ld	r22, Z
    5ed0:	71 81       	ldd	r23, Z+1	; 0x01
    5ed2:	82 81       	ldd	r24, Z+2	; 0x02
    5ed4:	93 81       	ldd	r25, Z+3	; 0x03
    5ed6:	20 e0       	ldi	r18, 0x00	; 0
    5ed8:	3f ef       	ldi	r19, 0xFF	; 255
    5eda:	4f e7       	ldi	r20, 0x7F	; 127
    5edc:	57 e4       	ldi	r21, 0x47	; 71
    5ede:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    5ee2:	18 16       	cp	r1, r24
    5ee4:	0c f0       	brlt	.+2      	; 0x5ee8 <main+0xbae>
    5ee6:	43 c0       	rjmp	.+134    	; 0x5f6e <main+0xc34>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5ee8:	fe 01       	movw	r30, r28
    5eea:	e3 52       	subi	r30, 0x23	; 35
    5eec:	ff 4f       	sbci	r31, 0xFF	; 255
    5eee:	60 81       	ld	r22, Z
    5ef0:	71 81       	ldd	r23, Z+1	; 0x01
    5ef2:	82 81       	ldd	r24, Z+2	; 0x02
    5ef4:	93 81       	ldd	r25, Z+3	; 0x03
    5ef6:	20 e0       	ldi	r18, 0x00	; 0
    5ef8:	30 e0       	ldi	r19, 0x00	; 0
    5efa:	40 e2       	ldi	r20, 0x20	; 32
    5efc:	51 e4       	ldi	r21, 0x41	; 65
    5efe:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    5f02:	dc 01       	movw	r26, r24
    5f04:	cb 01       	movw	r24, r22
    5f06:	8e 01       	movw	r16, r28
    5f08:	09 52       	subi	r16, 0x29	; 41
    5f0a:	1f 4f       	sbci	r17, 0xFF	; 255
    5f0c:	bc 01       	movw	r22, r24
    5f0e:	cd 01       	movw	r24, r26
    5f10:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5f14:	dc 01       	movw	r26, r24
    5f16:	cb 01       	movw	r24, r22
    5f18:	f8 01       	movw	r30, r16
    5f1a:	91 83       	std	Z+1, r25	; 0x01
    5f1c:	80 83       	st	Z, r24
    5f1e:	1f c0       	rjmp	.+62     	; 0x5f5e <main+0xc24>
    5f20:	fe 01       	movw	r30, r28
    5f22:	eb 52       	subi	r30, 0x2B	; 43
    5f24:	ff 4f       	sbci	r31, 0xFF	; 255
    5f26:	88 ec       	ldi	r24, 0xC8	; 200
    5f28:	90 e0       	ldi	r25, 0x00	; 0
    5f2a:	91 83       	std	Z+1, r25	; 0x01
    5f2c:	80 83       	st	Z, r24
    5f2e:	fe 01       	movw	r30, r28
    5f30:	eb 52       	subi	r30, 0x2B	; 43
    5f32:	ff 4f       	sbci	r31, 0xFF	; 255
    5f34:	80 81       	ld	r24, Z
    5f36:	91 81       	ldd	r25, Z+1	; 0x01
    5f38:	01 97       	sbiw	r24, 0x01	; 1
    5f3a:	f1 f7       	brne	.-4      	; 0x5f38 <main+0xbfe>
    5f3c:	fe 01       	movw	r30, r28
    5f3e:	eb 52       	subi	r30, 0x2B	; 43
    5f40:	ff 4f       	sbci	r31, 0xFF	; 255
    5f42:	91 83       	std	Z+1, r25	; 0x01
    5f44:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5f46:	de 01       	movw	r26, r28
    5f48:	a9 52       	subi	r26, 0x29	; 41
    5f4a:	bf 4f       	sbci	r27, 0xFF	; 255
    5f4c:	fe 01       	movw	r30, r28
    5f4e:	e9 52       	subi	r30, 0x29	; 41
    5f50:	ff 4f       	sbci	r31, 0xFF	; 255
    5f52:	80 81       	ld	r24, Z
    5f54:	91 81       	ldd	r25, Z+1	; 0x01
    5f56:	01 97       	sbiw	r24, 0x01	; 1
    5f58:	11 96       	adiw	r26, 0x01	; 1
    5f5a:	9c 93       	st	X, r25
    5f5c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5f5e:	fe 01       	movw	r30, r28
    5f60:	e9 52       	subi	r30, 0x29	; 41
    5f62:	ff 4f       	sbci	r31, 0xFF	; 255
    5f64:	80 81       	ld	r24, Z
    5f66:	91 81       	ldd	r25, Z+1	; 0x01
    5f68:	00 97       	sbiw	r24, 0x00	; 0
    5f6a:	d1 f6       	brne	.-76     	; 0x5f20 <main+0xbe6>
    5f6c:	27 c0       	rjmp	.+78     	; 0x5fbc <main+0xc82>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5f6e:	8e 01       	movw	r16, r28
    5f70:	09 52       	subi	r16, 0x29	; 41
    5f72:	1f 4f       	sbci	r17, 0xFF	; 255
    5f74:	fe 01       	movw	r30, r28
    5f76:	e7 52       	subi	r30, 0x27	; 39
    5f78:	ff 4f       	sbci	r31, 0xFF	; 255
    5f7a:	60 81       	ld	r22, Z
    5f7c:	71 81       	ldd	r23, Z+1	; 0x01
    5f7e:	82 81       	ldd	r24, Z+2	; 0x02
    5f80:	93 81       	ldd	r25, Z+3	; 0x03
    5f82:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5f86:	dc 01       	movw	r26, r24
    5f88:	cb 01       	movw	r24, r22
    5f8a:	f8 01       	movw	r30, r16
    5f8c:	91 83       	std	Z+1, r25	; 0x01
    5f8e:	80 83       	st	Z, r24
    5f90:	de 01       	movw	r26, r28
    5f92:	ad 52       	subi	r26, 0x2D	; 45
    5f94:	bf 4f       	sbci	r27, 0xFF	; 255
    5f96:	fe 01       	movw	r30, r28
    5f98:	e9 52       	subi	r30, 0x29	; 41
    5f9a:	ff 4f       	sbci	r31, 0xFF	; 255
    5f9c:	80 81       	ld	r24, Z
    5f9e:	91 81       	ldd	r25, Z+1	; 0x01
    5fa0:	8d 93       	st	X+, r24
    5fa2:	9c 93       	st	X, r25
    5fa4:	fe 01       	movw	r30, r28
    5fa6:	ed 52       	subi	r30, 0x2D	; 45
    5fa8:	ff 4f       	sbci	r31, 0xFF	; 255
    5faa:	80 81       	ld	r24, Z
    5fac:	91 81       	ldd	r25, Z+1	; 0x01
    5fae:	01 97       	sbiw	r24, 0x01	; 1
    5fb0:	f1 f7       	brne	.-4      	; 0x5fae <main+0xc74>
    5fb2:	fe 01       	movw	r30, r28
    5fb4:	ed 52       	subi	r30, 0x2D	; 45
    5fb6:	ff 4f       	sbci	r31, 0xFF	; 255
    5fb8:	91 83       	std	Z+1, r25	; 0x01
    5fba:	80 83       	st	Z, r24
								_delay_ms(1000);

								CLCD_DisplayClear();
    5fbc:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
    5fc0:	49 c3       	rjmp	.+1682   	; 0x6654 <main+0x131a>

								while(KeypadEntry != '*'){
									CLCD_WriteString_Pos(wordCONTROL_LED_PAGE,1,1);
    5fc2:	ce 01       	movw	r24, r28
    5fc4:	85 5f       	subi	r24, 0xF5	; 245
    5fc6:	9e 4f       	sbci	r25, 0xFE	; 254
    5fc8:	61 e0       	ldi	r22, 0x01	; 1
    5fca:	41 e0       	ldi	r20, 0x01	; 1
    5fcc:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
									CLCD_WriteString_Pos(wordENTER,2,1);
    5fd0:	ce 01       	movw	r24, r28
    5fd2:	89 5b       	subi	r24, 0xB9	; 185
    5fd4:	9e 4f       	sbci	r25, 0xFE	; 254
    5fd6:	62 e0       	ldi	r22, 0x02	; 2
    5fd8:	41 e0       	ldi	r20, 0x01	; 1
    5fda:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
									KeypadEntry = KPD_GetPressedKey();
    5fde:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <KPD_GetPressedKey>
    5fe2:	fe 01       	movw	r30, r28
    5fe4:	e3 50       	subi	r30, 0x03	; 3
    5fe6:	ff 4f       	sbci	r31, 0xFF	; 255
    5fe8:	80 83       	st	Z, r24
									switch (KeypadEntry) {
    5fea:	fe 01       	movw	r30, r28
    5fec:	e3 50       	subi	r30, 0x03	; 3
    5fee:	ff 4f       	sbci	r31, 0xFF	; 255
    5ff0:	80 81       	ld	r24, Z
    5ff2:	28 2f       	mov	r18, r24
    5ff4:	30 e0       	ldi	r19, 0x00	; 0
    5ff6:	c2 57       	subi	r28, 0x72	; 114
    5ff8:	de 4f       	sbci	r29, 0xFE	; 254
    5ffa:	39 83       	std	Y+1, r19	; 0x01
    5ffc:	28 83       	st	Y, r18
    5ffe:	ce 58       	subi	r28, 0x8E	; 142
    6000:	d1 40       	sbci	r29, 0x01	; 1
    6002:	c2 57       	subi	r28, 0x72	; 114
    6004:	de 4f       	sbci	r29, 0xFE	; 254
    6006:	88 81       	ld	r24, Y
    6008:	99 81       	ldd	r25, Y+1	; 0x01
    600a:	ce 58       	subi	r28, 0x8E	; 142
    600c:	d1 40       	sbci	r29, 0x01	; 1
    600e:	81 33       	cpi	r24, 0x31	; 49
    6010:	91 05       	cpc	r25, r1
    6012:	49 f1       	breq	.+82     	; 0x6066 <main+0xd2c>
    6014:	c2 57       	subi	r28, 0x72	; 114
    6016:	de 4f       	sbci	r29, 0xFE	; 254
    6018:	e8 81       	ld	r30, Y
    601a:	f9 81       	ldd	r31, Y+1	; 0x01
    601c:	ce 58       	subi	r28, 0x8E	; 142
    601e:	d1 40       	sbci	r29, 0x01	; 1
    6020:	e2 33       	cpi	r30, 0x32	; 50
    6022:	f1 05       	cpc	r31, r1
    6024:	5c f4       	brge	.+22     	; 0x603c <main+0xd02>
    6026:	c2 57       	subi	r28, 0x72	; 114
    6028:	de 4f       	sbci	r29, 0xFE	; 254
    602a:	28 81       	ld	r18, Y
    602c:	39 81       	ldd	r19, Y+1	; 0x01
    602e:	ce 58       	subi	r28, 0x8E	; 142
    6030:	d1 40       	sbci	r29, 0x01	; 1
    6032:	2a 32       	cpi	r18, 0x2A	; 42
    6034:	31 05       	cpc	r19, r1
    6036:	09 f4       	brne	.+2      	; 0x603a <main+0xd00>
    6038:	9a c1       	rjmp	.+820    	; 0x636e <main+0x1034>
    603a:	0c c3       	rjmp	.+1560   	; 0x6654 <main+0x131a>
    603c:	c2 57       	subi	r28, 0x72	; 114
    603e:	de 4f       	sbci	r29, 0xFE	; 254
    6040:	88 81       	ld	r24, Y
    6042:	99 81       	ldd	r25, Y+1	; 0x01
    6044:	ce 58       	subi	r28, 0x8E	; 142
    6046:	d1 40       	sbci	r29, 0x01	; 1
    6048:	82 33       	cpi	r24, 0x32	; 50
    604a:	91 05       	cpc	r25, r1
    604c:	09 f4       	brne	.+2      	; 0x6050 <main+0xd16>
    604e:	cd c0       	rjmp	.+410    	; 0x61ea <main+0xeb0>
    6050:	c2 57       	subi	r28, 0x72	; 114
    6052:	de 4f       	sbci	r29, 0xFE	; 254
    6054:	e8 81       	ld	r30, Y
    6056:	f9 81       	ldd	r31, Y+1	; 0x01
    6058:	ce 58       	subi	r28, 0x8E	; 142
    605a:	d1 40       	sbci	r29, 0x01	; 1
    605c:	ed 33       	cpi	r30, 0x3D	; 61
    605e:	f1 05       	cpc	r31, r1
    6060:	09 f4       	brne	.+2      	; 0x6064 <main+0xd2a>
    6062:	3f c2       	rjmp	.+1150   	; 0x64e2 <main+0x11a8>
    6064:	f7 c2       	rjmp	.+1518   	; 0x6654 <main+0x131a>
										case '1': //LED_ON
											CLCD_DisplayClear();
    6066:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>

											LED_voidON(LED_PIN);
    606a:	83 e0       	ldi	r24, 0x03	; 3
    606c:	0e 94 26 20 	call	0x404c	; 0x404c <LED_voidON>

											CLCD_WriteString_Pos(wordLED_ON,1,1);
    6070:	ce 01       	movw	r24, r28
    6072:	81 5b       	subi	r24, 0xB1	; 177
    6074:	9e 4f       	sbci	r25, 0xFE	; 254
    6076:	61 e0       	ldi	r22, 0x01	; 1
    6078:	41 e0       	ldi	r20, 0x01	; 1
    607a:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
    607e:	fe 01       	movw	r30, r28
    6080:	e1 53       	subi	r30, 0x31	; 49
    6082:	ff 4f       	sbci	r31, 0xFF	; 255
    6084:	80 e0       	ldi	r24, 0x00	; 0
    6086:	90 e0       	ldi	r25, 0x00	; 0
    6088:	aa ef       	ldi	r26, 0xFA	; 250
    608a:	b3 e4       	ldi	r27, 0x43	; 67
    608c:	80 83       	st	Z, r24
    608e:	91 83       	std	Z+1, r25	; 0x01
    6090:	a2 83       	std	Z+2, r26	; 0x02
    6092:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6094:	8e 01       	movw	r16, r28
    6096:	05 53       	subi	r16, 0x35	; 53
    6098:	1f 4f       	sbci	r17, 0xFF	; 255
    609a:	fe 01       	movw	r30, r28
    609c:	e1 53       	subi	r30, 0x31	; 49
    609e:	ff 4f       	sbci	r31, 0xFF	; 255
    60a0:	60 81       	ld	r22, Z
    60a2:	71 81       	ldd	r23, Z+1	; 0x01
    60a4:	82 81       	ldd	r24, Z+2	; 0x02
    60a6:	93 81       	ldd	r25, Z+3	; 0x03
    60a8:	20 e0       	ldi	r18, 0x00	; 0
    60aa:	30 e0       	ldi	r19, 0x00	; 0
    60ac:	4a ef       	ldi	r20, 0xFA	; 250
    60ae:	54 e4       	ldi	r21, 0x44	; 68
    60b0:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    60b4:	dc 01       	movw	r26, r24
    60b6:	cb 01       	movw	r24, r22
    60b8:	f8 01       	movw	r30, r16
    60ba:	80 83       	st	Z, r24
    60bc:	91 83       	std	Z+1, r25	; 0x01
    60be:	a2 83       	std	Z+2, r26	; 0x02
    60c0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    60c2:	fe 01       	movw	r30, r28
    60c4:	e5 53       	subi	r30, 0x35	; 53
    60c6:	ff 4f       	sbci	r31, 0xFF	; 255
    60c8:	60 81       	ld	r22, Z
    60ca:	71 81       	ldd	r23, Z+1	; 0x01
    60cc:	82 81       	ldd	r24, Z+2	; 0x02
    60ce:	93 81       	ldd	r25, Z+3	; 0x03
    60d0:	20 e0       	ldi	r18, 0x00	; 0
    60d2:	30 e0       	ldi	r19, 0x00	; 0
    60d4:	40 e8       	ldi	r20, 0x80	; 128
    60d6:	5f e3       	ldi	r21, 0x3F	; 63
    60d8:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    60dc:	88 23       	and	r24, r24
    60de:	44 f4       	brge	.+16     	; 0x60f0 <main+0xdb6>
		__ticks = 1;
    60e0:	fe 01       	movw	r30, r28
    60e2:	e7 53       	subi	r30, 0x37	; 55
    60e4:	ff 4f       	sbci	r31, 0xFF	; 255
    60e6:	81 e0       	ldi	r24, 0x01	; 1
    60e8:	90 e0       	ldi	r25, 0x00	; 0
    60ea:	91 83       	std	Z+1, r25	; 0x01
    60ec:	80 83       	st	Z, r24
    60ee:	64 c0       	rjmp	.+200    	; 0x61b8 <main+0xe7e>
	else if (__tmp > 65535)
    60f0:	fe 01       	movw	r30, r28
    60f2:	e5 53       	subi	r30, 0x35	; 53
    60f4:	ff 4f       	sbci	r31, 0xFF	; 255
    60f6:	60 81       	ld	r22, Z
    60f8:	71 81       	ldd	r23, Z+1	; 0x01
    60fa:	82 81       	ldd	r24, Z+2	; 0x02
    60fc:	93 81       	ldd	r25, Z+3	; 0x03
    60fe:	20 e0       	ldi	r18, 0x00	; 0
    6100:	3f ef       	ldi	r19, 0xFF	; 255
    6102:	4f e7       	ldi	r20, 0x7F	; 127
    6104:	57 e4       	ldi	r21, 0x47	; 71
    6106:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    610a:	18 16       	cp	r1, r24
    610c:	0c f0       	brlt	.+2      	; 0x6110 <main+0xdd6>
    610e:	43 c0       	rjmp	.+134    	; 0x6196 <main+0xe5c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6110:	fe 01       	movw	r30, r28
    6112:	e1 53       	subi	r30, 0x31	; 49
    6114:	ff 4f       	sbci	r31, 0xFF	; 255
    6116:	60 81       	ld	r22, Z
    6118:	71 81       	ldd	r23, Z+1	; 0x01
    611a:	82 81       	ldd	r24, Z+2	; 0x02
    611c:	93 81       	ldd	r25, Z+3	; 0x03
    611e:	20 e0       	ldi	r18, 0x00	; 0
    6120:	30 e0       	ldi	r19, 0x00	; 0
    6122:	40 e2       	ldi	r20, 0x20	; 32
    6124:	51 e4       	ldi	r21, 0x41	; 65
    6126:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    612a:	dc 01       	movw	r26, r24
    612c:	cb 01       	movw	r24, r22
    612e:	8e 01       	movw	r16, r28
    6130:	07 53       	subi	r16, 0x37	; 55
    6132:	1f 4f       	sbci	r17, 0xFF	; 255
    6134:	bc 01       	movw	r22, r24
    6136:	cd 01       	movw	r24, r26
    6138:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    613c:	dc 01       	movw	r26, r24
    613e:	cb 01       	movw	r24, r22
    6140:	f8 01       	movw	r30, r16
    6142:	91 83       	std	Z+1, r25	; 0x01
    6144:	80 83       	st	Z, r24
    6146:	1f c0       	rjmp	.+62     	; 0x6186 <main+0xe4c>
    6148:	fe 01       	movw	r30, r28
    614a:	e9 53       	subi	r30, 0x39	; 57
    614c:	ff 4f       	sbci	r31, 0xFF	; 255
    614e:	88 ec       	ldi	r24, 0xC8	; 200
    6150:	90 e0       	ldi	r25, 0x00	; 0
    6152:	91 83       	std	Z+1, r25	; 0x01
    6154:	80 83       	st	Z, r24
    6156:	fe 01       	movw	r30, r28
    6158:	e9 53       	subi	r30, 0x39	; 57
    615a:	ff 4f       	sbci	r31, 0xFF	; 255
    615c:	80 81       	ld	r24, Z
    615e:	91 81       	ldd	r25, Z+1	; 0x01
    6160:	01 97       	sbiw	r24, 0x01	; 1
    6162:	f1 f7       	brne	.-4      	; 0x6160 <main+0xe26>
    6164:	fe 01       	movw	r30, r28
    6166:	e9 53       	subi	r30, 0x39	; 57
    6168:	ff 4f       	sbci	r31, 0xFF	; 255
    616a:	91 83       	std	Z+1, r25	; 0x01
    616c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    616e:	de 01       	movw	r26, r28
    6170:	a7 53       	subi	r26, 0x37	; 55
    6172:	bf 4f       	sbci	r27, 0xFF	; 255
    6174:	fe 01       	movw	r30, r28
    6176:	e7 53       	subi	r30, 0x37	; 55
    6178:	ff 4f       	sbci	r31, 0xFF	; 255
    617a:	80 81       	ld	r24, Z
    617c:	91 81       	ldd	r25, Z+1	; 0x01
    617e:	01 97       	sbiw	r24, 0x01	; 1
    6180:	11 96       	adiw	r26, 0x01	; 1
    6182:	9c 93       	st	X, r25
    6184:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6186:	fe 01       	movw	r30, r28
    6188:	e7 53       	subi	r30, 0x37	; 55
    618a:	ff 4f       	sbci	r31, 0xFF	; 255
    618c:	80 81       	ld	r24, Z
    618e:	91 81       	ldd	r25, Z+1	; 0x01
    6190:	00 97       	sbiw	r24, 0x00	; 0
    6192:	d1 f6       	brne	.-76     	; 0x6148 <main+0xe0e>
    6194:	27 c0       	rjmp	.+78     	; 0x61e4 <main+0xeaa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6196:	8e 01       	movw	r16, r28
    6198:	07 53       	subi	r16, 0x37	; 55
    619a:	1f 4f       	sbci	r17, 0xFF	; 255
    619c:	fe 01       	movw	r30, r28
    619e:	e5 53       	subi	r30, 0x35	; 53
    61a0:	ff 4f       	sbci	r31, 0xFF	; 255
    61a2:	60 81       	ld	r22, Z
    61a4:	71 81       	ldd	r23, Z+1	; 0x01
    61a6:	82 81       	ldd	r24, Z+2	; 0x02
    61a8:	93 81       	ldd	r25, Z+3	; 0x03
    61aa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    61ae:	dc 01       	movw	r26, r24
    61b0:	cb 01       	movw	r24, r22
    61b2:	f8 01       	movw	r30, r16
    61b4:	91 83       	std	Z+1, r25	; 0x01
    61b6:	80 83       	st	Z, r24
    61b8:	de 01       	movw	r26, r28
    61ba:	ab 53       	subi	r26, 0x3B	; 59
    61bc:	bf 4f       	sbci	r27, 0xFF	; 255
    61be:	fe 01       	movw	r30, r28
    61c0:	e7 53       	subi	r30, 0x37	; 55
    61c2:	ff 4f       	sbci	r31, 0xFF	; 255
    61c4:	80 81       	ld	r24, Z
    61c6:	91 81       	ldd	r25, Z+1	; 0x01
    61c8:	8d 93       	st	X+, r24
    61ca:	9c 93       	st	X, r25
    61cc:	fe 01       	movw	r30, r28
    61ce:	eb 53       	subi	r30, 0x3B	; 59
    61d0:	ff 4f       	sbci	r31, 0xFF	; 255
    61d2:	80 81       	ld	r24, Z
    61d4:	91 81       	ldd	r25, Z+1	; 0x01
    61d6:	01 97       	sbiw	r24, 0x01	; 1
    61d8:	f1 f7       	brne	.-4      	; 0x61d6 <main+0xe9c>
    61da:	fe 01       	movw	r30, r28
    61dc:	eb 53       	subi	r30, 0x3B	; 59
    61de:	ff 4f       	sbci	r31, 0xFF	; 255
    61e0:	91 83       	std	Z+1, r25	; 0x01
    61e2:	80 83       	st	Z, r24
											_delay_ms(500);
											CLCD_DisplayClear();
    61e4:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
    61e8:	35 c2       	rjmp	.+1130   	; 0x6654 <main+0x131a>

											break;
										case '2': //LED_OFF
											CLCD_DisplayClear();
    61ea:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>

											LED_voidOFF(LED_PIN);
    61ee:	83 e0       	ldi	r24, 0x03	; 3
    61f0:	0e 94 43 20 	call	0x4086	; 0x4086 <LED_voidOFF>

											CLCD_WriteString_Pos(wordLED_OFF,1,1);
    61f4:	ce 01       	movw	r24, r28
    61f6:	8a 5a       	subi	r24, 0xAA	; 170
    61f8:	9e 4f       	sbci	r25, 0xFE	; 254
    61fa:	61 e0       	ldi	r22, 0x01	; 1
    61fc:	41 e0       	ldi	r20, 0x01	; 1
    61fe:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
    6202:	fe 01       	movw	r30, r28
    6204:	ef 53       	subi	r30, 0x3F	; 63
    6206:	ff 4f       	sbci	r31, 0xFF	; 255
    6208:	80 e0       	ldi	r24, 0x00	; 0
    620a:	90 e0       	ldi	r25, 0x00	; 0
    620c:	aa ef       	ldi	r26, 0xFA	; 250
    620e:	b3 e4       	ldi	r27, 0x43	; 67
    6210:	80 83       	st	Z, r24
    6212:	91 83       	std	Z+1, r25	; 0x01
    6214:	a2 83       	std	Z+2, r26	; 0x02
    6216:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6218:	8e 01       	movw	r16, r28
    621a:	03 54       	subi	r16, 0x43	; 67
    621c:	1f 4f       	sbci	r17, 0xFF	; 255
    621e:	fe 01       	movw	r30, r28
    6220:	ef 53       	subi	r30, 0x3F	; 63
    6222:	ff 4f       	sbci	r31, 0xFF	; 255
    6224:	60 81       	ld	r22, Z
    6226:	71 81       	ldd	r23, Z+1	; 0x01
    6228:	82 81       	ldd	r24, Z+2	; 0x02
    622a:	93 81       	ldd	r25, Z+3	; 0x03
    622c:	20 e0       	ldi	r18, 0x00	; 0
    622e:	30 e0       	ldi	r19, 0x00	; 0
    6230:	4a ef       	ldi	r20, 0xFA	; 250
    6232:	54 e4       	ldi	r21, 0x44	; 68
    6234:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    6238:	dc 01       	movw	r26, r24
    623a:	cb 01       	movw	r24, r22
    623c:	f8 01       	movw	r30, r16
    623e:	80 83       	st	Z, r24
    6240:	91 83       	std	Z+1, r25	; 0x01
    6242:	a2 83       	std	Z+2, r26	; 0x02
    6244:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6246:	fe 01       	movw	r30, r28
    6248:	e3 54       	subi	r30, 0x43	; 67
    624a:	ff 4f       	sbci	r31, 0xFF	; 255
    624c:	60 81       	ld	r22, Z
    624e:	71 81       	ldd	r23, Z+1	; 0x01
    6250:	82 81       	ldd	r24, Z+2	; 0x02
    6252:	93 81       	ldd	r25, Z+3	; 0x03
    6254:	20 e0       	ldi	r18, 0x00	; 0
    6256:	30 e0       	ldi	r19, 0x00	; 0
    6258:	40 e8       	ldi	r20, 0x80	; 128
    625a:	5f e3       	ldi	r21, 0x3F	; 63
    625c:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    6260:	88 23       	and	r24, r24
    6262:	44 f4       	brge	.+16     	; 0x6274 <main+0xf3a>
		__ticks = 1;
    6264:	fe 01       	movw	r30, r28
    6266:	e5 54       	subi	r30, 0x45	; 69
    6268:	ff 4f       	sbci	r31, 0xFF	; 255
    626a:	81 e0       	ldi	r24, 0x01	; 1
    626c:	90 e0       	ldi	r25, 0x00	; 0
    626e:	91 83       	std	Z+1, r25	; 0x01
    6270:	80 83       	st	Z, r24
    6272:	64 c0       	rjmp	.+200    	; 0x633c <main+0x1002>
	else if (__tmp > 65535)
    6274:	fe 01       	movw	r30, r28
    6276:	e3 54       	subi	r30, 0x43	; 67
    6278:	ff 4f       	sbci	r31, 0xFF	; 255
    627a:	60 81       	ld	r22, Z
    627c:	71 81       	ldd	r23, Z+1	; 0x01
    627e:	82 81       	ldd	r24, Z+2	; 0x02
    6280:	93 81       	ldd	r25, Z+3	; 0x03
    6282:	20 e0       	ldi	r18, 0x00	; 0
    6284:	3f ef       	ldi	r19, 0xFF	; 255
    6286:	4f e7       	ldi	r20, 0x7F	; 127
    6288:	57 e4       	ldi	r21, 0x47	; 71
    628a:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    628e:	18 16       	cp	r1, r24
    6290:	0c f0       	brlt	.+2      	; 0x6294 <main+0xf5a>
    6292:	43 c0       	rjmp	.+134    	; 0x631a <main+0xfe0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6294:	fe 01       	movw	r30, r28
    6296:	ef 53       	subi	r30, 0x3F	; 63
    6298:	ff 4f       	sbci	r31, 0xFF	; 255
    629a:	60 81       	ld	r22, Z
    629c:	71 81       	ldd	r23, Z+1	; 0x01
    629e:	82 81       	ldd	r24, Z+2	; 0x02
    62a0:	93 81       	ldd	r25, Z+3	; 0x03
    62a2:	20 e0       	ldi	r18, 0x00	; 0
    62a4:	30 e0       	ldi	r19, 0x00	; 0
    62a6:	40 e2       	ldi	r20, 0x20	; 32
    62a8:	51 e4       	ldi	r21, 0x41	; 65
    62aa:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    62ae:	dc 01       	movw	r26, r24
    62b0:	cb 01       	movw	r24, r22
    62b2:	8e 01       	movw	r16, r28
    62b4:	05 54       	subi	r16, 0x45	; 69
    62b6:	1f 4f       	sbci	r17, 0xFF	; 255
    62b8:	bc 01       	movw	r22, r24
    62ba:	cd 01       	movw	r24, r26
    62bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    62c0:	dc 01       	movw	r26, r24
    62c2:	cb 01       	movw	r24, r22
    62c4:	f8 01       	movw	r30, r16
    62c6:	91 83       	std	Z+1, r25	; 0x01
    62c8:	80 83       	st	Z, r24
    62ca:	1f c0       	rjmp	.+62     	; 0x630a <main+0xfd0>
    62cc:	fe 01       	movw	r30, r28
    62ce:	e7 54       	subi	r30, 0x47	; 71
    62d0:	ff 4f       	sbci	r31, 0xFF	; 255
    62d2:	88 ec       	ldi	r24, 0xC8	; 200
    62d4:	90 e0       	ldi	r25, 0x00	; 0
    62d6:	91 83       	std	Z+1, r25	; 0x01
    62d8:	80 83       	st	Z, r24
    62da:	fe 01       	movw	r30, r28
    62dc:	e7 54       	subi	r30, 0x47	; 71
    62de:	ff 4f       	sbci	r31, 0xFF	; 255
    62e0:	80 81       	ld	r24, Z
    62e2:	91 81       	ldd	r25, Z+1	; 0x01
    62e4:	01 97       	sbiw	r24, 0x01	; 1
    62e6:	f1 f7       	brne	.-4      	; 0x62e4 <main+0xfaa>
    62e8:	fe 01       	movw	r30, r28
    62ea:	e7 54       	subi	r30, 0x47	; 71
    62ec:	ff 4f       	sbci	r31, 0xFF	; 255
    62ee:	91 83       	std	Z+1, r25	; 0x01
    62f0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    62f2:	de 01       	movw	r26, r28
    62f4:	a5 54       	subi	r26, 0x45	; 69
    62f6:	bf 4f       	sbci	r27, 0xFF	; 255
    62f8:	fe 01       	movw	r30, r28
    62fa:	e5 54       	subi	r30, 0x45	; 69
    62fc:	ff 4f       	sbci	r31, 0xFF	; 255
    62fe:	80 81       	ld	r24, Z
    6300:	91 81       	ldd	r25, Z+1	; 0x01
    6302:	01 97       	sbiw	r24, 0x01	; 1
    6304:	11 96       	adiw	r26, 0x01	; 1
    6306:	9c 93       	st	X, r25
    6308:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    630a:	fe 01       	movw	r30, r28
    630c:	e5 54       	subi	r30, 0x45	; 69
    630e:	ff 4f       	sbci	r31, 0xFF	; 255
    6310:	80 81       	ld	r24, Z
    6312:	91 81       	ldd	r25, Z+1	; 0x01
    6314:	00 97       	sbiw	r24, 0x00	; 0
    6316:	d1 f6       	brne	.-76     	; 0x62cc <main+0xf92>
    6318:	27 c0       	rjmp	.+78     	; 0x6368 <main+0x102e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    631a:	8e 01       	movw	r16, r28
    631c:	05 54       	subi	r16, 0x45	; 69
    631e:	1f 4f       	sbci	r17, 0xFF	; 255
    6320:	fe 01       	movw	r30, r28
    6322:	e3 54       	subi	r30, 0x43	; 67
    6324:	ff 4f       	sbci	r31, 0xFF	; 255
    6326:	60 81       	ld	r22, Z
    6328:	71 81       	ldd	r23, Z+1	; 0x01
    632a:	82 81       	ldd	r24, Z+2	; 0x02
    632c:	93 81       	ldd	r25, Z+3	; 0x03
    632e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    6332:	dc 01       	movw	r26, r24
    6334:	cb 01       	movw	r24, r22
    6336:	f8 01       	movw	r30, r16
    6338:	91 83       	std	Z+1, r25	; 0x01
    633a:	80 83       	st	Z, r24
    633c:	de 01       	movw	r26, r28
    633e:	a9 54       	subi	r26, 0x49	; 73
    6340:	bf 4f       	sbci	r27, 0xFF	; 255
    6342:	fe 01       	movw	r30, r28
    6344:	e5 54       	subi	r30, 0x45	; 69
    6346:	ff 4f       	sbci	r31, 0xFF	; 255
    6348:	80 81       	ld	r24, Z
    634a:	91 81       	ldd	r25, Z+1	; 0x01
    634c:	8d 93       	st	X+, r24
    634e:	9c 93       	st	X, r25
    6350:	fe 01       	movw	r30, r28
    6352:	e9 54       	subi	r30, 0x49	; 73
    6354:	ff 4f       	sbci	r31, 0xFF	; 255
    6356:	80 81       	ld	r24, Z
    6358:	91 81       	ldd	r25, Z+1	; 0x01
    635a:	01 97       	sbiw	r24, 0x01	; 1
    635c:	f1 f7       	brne	.-4      	; 0x635a <main+0x1020>
    635e:	fe 01       	movw	r30, r28
    6360:	e9 54       	subi	r30, 0x49	; 73
    6362:	ff 4f       	sbci	r31, 0xFF	; 255
    6364:	91 83       	std	Z+1, r25	; 0x01
    6366:	80 83       	st	Z, r24
											_delay_ms(500);
											CLCD_DisplayClear();
    6368:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
    636c:	73 c1       	rjmp	.+742    	; 0x6654 <main+0x131a>
											break;
										case '*': //return to control page
											CLCD_DisplayClear();
    636e:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
											Control_Choice();
    6372:	0e 94 bc 25 	call	0x4b78	; 0x4b78 <Control_Choice>
    6376:	fe 01       	movw	r30, r28
    6378:	ed 54       	subi	r30, 0x4D	; 77
    637a:	ff 4f       	sbci	r31, 0xFF	; 255
    637c:	80 e0       	ldi	r24, 0x00	; 0
    637e:	90 e0       	ldi	r25, 0x00	; 0
    6380:	aa e7       	ldi	r26, 0x7A	; 122
    6382:	b4 e4       	ldi	r27, 0x44	; 68
    6384:	80 83       	st	Z, r24
    6386:	91 83       	std	Z+1, r25	; 0x01
    6388:	a2 83       	std	Z+2, r26	; 0x02
    638a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    638c:	8e 01       	movw	r16, r28
    638e:	01 55       	subi	r16, 0x51	; 81
    6390:	1f 4f       	sbci	r17, 0xFF	; 255
    6392:	fe 01       	movw	r30, r28
    6394:	ed 54       	subi	r30, 0x4D	; 77
    6396:	ff 4f       	sbci	r31, 0xFF	; 255
    6398:	60 81       	ld	r22, Z
    639a:	71 81       	ldd	r23, Z+1	; 0x01
    639c:	82 81       	ldd	r24, Z+2	; 0x02
    639e:	93 81       	ldd	r25, Z+3	; 0x03
    63a0:	20 e0       	ldi	r18, 0x00	; 0
    63a2:	30 e0       	ldi	r19, 0x00	; 0
    63a4:	4a ef       	ldi	r20, 0xFA	; 250
    63a6:	54 e4       	ldi	r21, 0x44	; 68
    63a8:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    63ac:	dc 01       	movw	r26, r24
    63ae:	cb 01       	movw	r24, r22
    63b0:	f8 01       	movw	r30, r16
    63b2:	80 83       	st	Z, r24
    63b4:	91 83       	std	Z+1, r25	; 0x01
    63b6:	a2 83       	std	Z+2, r26	; 0x02
    63b8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    63ba:	fe 01       	movw	r30, r28
    63bc:	e1 55       	subi	r30, 0x51	; 81
    63be:	ff 4f       	sbci	r31, 0xFF	; 255
    63c0:	60 81       	ld	r22, Z
    63c2:	71 81       	ldd	r23, Z+1	; 0x01
    63c4:	82 81       	ldd	r24, Z+2	; 0x02
    63c6:	93 81       	ldd	r25, Z+3	; 0x03
    63c8:	20 e0       	ldi	r18, 0x00	; 0
    63ca:	30 e0       	ldi	r19, 0x00	; 0
    63cc:	40 e8       	ldi	r20, 0x80	; 128
    63ce:	5f e3       	ldi	r21, 0x3F	; 63
    63d0:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    63d4:	88 23       	and	r24, r24
    63d6:	44 f4       	brge	.+16     	; 0x63e8 <main+0x10ae>
		__ticks = 1;
    63d8:	fe 01       	movw	r30, r28
    63da:	e3 55       	subi	r30, 0x53	; 83
    63dc:	ff 4f       	sbci	r31, 0xFF	; 255
    63de:	81 e0       	ldi	r24, 0x01	; 1
    63e0:	90 e0       	ldi	r25, 0x00	; 0
    63e2:	91 83       	std	Z+1, r25	; 0x01
    63e4:	80 83       	st	Z, r24
    63e6:	64 c0       	rjmp	.+200    	; 0x64b0 <main+0x1176>
	else if (__tmp > 65535)
    63e8:	fe 01       	movw	r30, r28
    63ea:	e1 55       	subi	r30, 0x51	; 81
    63ec:	ff 4f       	sbci	r31, 0xFF	; 255
    63ee:	60 81       	ld	r22, Z
    63f0:	71 81       	ldd	r23, Z+1	; 0x01
    63f2:	82 81       	ldd	r24, Z+2	; 0x02
    63f4:	93 81       	ldd	r25, Z+3	; 0x03
    63f6:	20 e0       	ldi	r18, 0x00	; 0
    63f8:	3f ef       	ldi	r19, 0xFF	; 255
    63fa:	4f e7       	ldi	r20, 0x7F	; 127
    63fc:	57 e4       	ldi	r21, 0x47	; 71
    63fe:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    6402:	18 16       	cp	r1, r24
    6404:	0c f0       	brlt	.+2      	; 0x6408 <main+0x10ce>
    6406:	43 c0       	rjmp	.+134    	; 0x648e <main+0x1154>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6408:	fe 01       	movw	r30, r28
    640a:	ed 54       	subi	r30, 0x4D	; 77
    640c:	ff 4f       	sbci	r31, 0xFF	; 255
    640e:	60 81       	ld	r22, Z
    6410:	71 81       	ldd	r23, Z+1	; 0x01
    6412:	82 81       	ldd	r24, Z+2	; 0x02
    6414:	93 81       	ldd	r25, Z+3	; 0x03
    6416:	20 e0       	ldi	r18, 0x00	; 0
    6418:	30 e0       	ldi	r19, 0x00	; 0
    641a:	40 e2       	ldi	r20, 0x20	; 32
    641c:	51 e4       	ldi	r21, 0x41	; 65
    641e:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    6422:	dc 01       	movw	r26, r24
    6424:	cb 01       	movw	r24, r22
    6426:	8e 01       	movw	r16, r28
    6428:	03 55       	subi	r16, 0x53	; 83
    642a:	1f 4f       	sbci	r17, 0xFF	; 255
    642c:	bc 01       	movw	r22, r24
    642e:	cd 01       	movw	r24, r26
    6430:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    6434:	dc 01       	movw	r26, r24
    6436:	cb 01       	movw	r24, r22
    6438:	f8 01       	movw	r30, r16
    643a:	91 83       	std	Z+1, r25	; 0x01
    643c:	80 83       	st	Z, r24
    643e:	1f c0       	rjmp	.+62     	; 0x647e <main+0x1144>
    6440:	fe 01       	movw	r30, r28
    6442:	e5 55       	subi	r30, 0x55	; 85
    6444:	ff 4f       	sbci	r31, 0xFF	; 255
    6446:	88 ec       	ldi	r24, 0xC8	; 200
    6448:	90 e0       	ldi	r25, 0x00	; 0
    644a:	91 83       	std	Z+1, r25	; 0x01
    644c:	80 83       	st	Z, r24
    644e:	fe 01       	movw	r30, r28
    6450:	e5 55       	subi	r30, 0x55	; 85
    6452:	ff 4f       	sbci	r31, 0xFF	; 255
    6454:	80 81       	ld	r24, Z
    6456:	91 81       	ldd	r25, Z+1	; 0x01
    6458:	01 97       	sbiw	r24, 0x01	; 1
    645a:	f1 f7       	brne	.-4      	; 0x6458 <main+0x111e>
    645c:	fe 01       	movw	r30, r28
    645e:	e5 55       	subi	r30, 0x55	; 85
    6460:	ff 4f       	sbci	r31, 0xFF	; 255
    6462:	91 83       	std	Z+1, r25	; 0x01
    6464:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6466:	de 01       	movw	r26, r28
    6468:	a3 55       	subi	r26, 0x53	; 83
    646a:	bf 4f       	sbci	r27, 0xFF	; 255
    646c:	fe 01       	movw	r30, r28
    646e:	e3 55       	subi	r30, 0x53	; 83
    6470:	ff 4f       	sbci	r31, 0xFF	; 255
    6472:	80 81       	ld	r24, Z
    6474:	91 81       	ldd	r25, Z+1	; 0x01
    6476:	01 97       	sbiw	r24, 0x01	; 1
    6478:	11 96       	adiw	r26, 0x01	; 1
    647a:	9c 93       	st	X, r25
    647c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    647e:	fe 01       	movw	r30, r28
    6480:	e3 55       	subi	r30, 0x53	; 83
    6482:	ff 4f       	sbci	r31, 0xFF	; 255
    6484:	80 81       	ld	r24, Z
    6486:	91 81       	ldd	r25, Z+1	; 0x01
    6488:	00 97       	sbiw	r24, 0x00	; 0
    648a:	d1 f6       	brne	.-76     	; 0x6440 <main+0x1106>
    648c:	27 c0       	rjmp	.+78     	; 0x64dc <main+0x11a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    648e:	8e 01       	movw	r16, r28
    6490:	03 55       	subi	r16, 0x53	; 83
    6492:	1f 4f       	sbci	r17, 0xFF	; 255
    6494:	fe 01       	movw	r30, r28
    6496:	e1 55       	subi	r30, 0x51	; 81
    6498:	ff 4f       	sbci	r31, 0xFF	; 255
    649a:	60 81       	ld	r22, Z
    649c:	71 81       	ldd	r23, Z+1	; 0x01
    649e:	82 81       	ldd	r24, Z+2	; 0x02
    64a0:	93 81       	ldd	r25, Z+3	; 0x03
    64a2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    64a6:	dc 01       	movw	r26, r24
    64a8:	cb 01       	movw	r24, r22
    64aa:	f8 01       	movw	r30, r16
    64ac:	91 83       	std	Z+1, r25	; 0x01
    64ae:	80 83       	st	Z, r24
    64b0:	de 01       	movw	r26, r28
    64b2:	a7 55       	subi	r26, 0x57	; 87
    64b4:	bf 4f       	sbci	r27, 0xFF	; 255
    64b6:	fe 01       	movw	r30, r28
    64b8:	e3 55       	subi	r30, 0x53	; 83
    64ba:	ff 4f       	sbci	r31, 0xFF	; 255
    64bc:	80 81       	ld	r24, Z
    64be:	91 81       	ldd	r25, Z+1	; 0x01
    64c0:	8d 93       	st	X+, r24
    64c2:	9c 93       	st	X, r25
    64c4:	fe 01       	movw	r30, r28
    64c6:	e7 55       	subi	r30, 0x57	; 87
    64c8:	ff 4f       	sbci	r31, 0xFF	; 255
    64ca:	80 81       	ld	r24, Z
    64cc:	91 81       	ldd	r25, Z+1	; 0x01
    64ce:	01 97       	sbiw	r24, 0x01	; 1
    64d0:	f1 f7       	brne	.-4      	; 0x64ce <main+0x1194>
    64d2:	fe 01       	movw	r30, r28
    64d4:	e7 55       	subi	r30, 0x57	; 87
    64d6:	ff 4f       	sbci	r31, 0xFF	; 255
    64d8:	91 83       	std	Z+1, r25	; 0x01
    64da:	80 83       	st	Z, r24
											_delay_ms(1000);
											CLCD_DisplayClear();
    64dc:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
    64e0:	b9 c0       	rjmp	.+370    	; 0x6654 <main+0x131a>
											break;
										case '=': ; //return Led Control page
											CLCD_DisplayClear();
    64e2:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
											Control_LED_Choice();
    64e6:	0e 94 2f 26 	call	0x4c5e	; 0x4c5e <Control_LED_Choice>
    64ea:	fe 01       	movw	r30, r28
    64ec:	eb 55       	subi	r30, 0x5B	; 91
    64ee:	ff 4f       	sbci	r31, 0xFF	; 255
    64f0:	80 e0       	ldi	r24, 0x00	; 0
    64f2:	90 e0       	ldi	r25, 0x00	; 0
    64f4:	aa e7       	ldi	r26, 0x7A	; 122
    64f6:	b4 e4       	ldi	r27, 0x44	; 68
    64f8:	80 83       	st	Z, r24
    64fa:	91 83       	std	Z+1, r25	; 0x01
    64fc:	a2 83       	std	Z+2, r26	; 0x02
    64fe:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6500:	8e 01       	movw	r16, r28
    6502:	0f 55       	subi	r16, 0x5F	; 95
    6504:	1f 4f       	sbci	r17, 0xFF	; 255
    6506:	fe 01       	movw	r30, r28
    6508:	eb 55       	subi	r30, 0x5B	; 91
    650a:	ff 4f       	sbci	r31, 0xFF	; 255
    650c:	60 81       	ld	r22, Z
    650e:	71 81       	ldd	r23, Z+1	; 0x01
    6510:	82 81       	ldd	r24, Z+2	; 0x02
    6512:	93 81       	ldd	r25, Z+3	; 0x03
    6514:	20 e0       	ldi	r18, 0x00	; 0
    6516:	30 e0       	ldi	r19, 0x00	; 0
    6518:	4a ef       	ldi	r20, 0xFA	; 250
    651a:	54 e4       	ldi	r21, 0x44	; 68
    651c:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    6520:	dc 01       	movw	r26, r24
    6522:	cb 01       	movw	r24, r22
    6524:	f8 01       	movw	r30, r16
    6526:	80 83       	st	Z, r24
    6528:	91 83       	std	Z+1, r25	; 0x01
    652a:	a2 83       	std	Z+2, r26	; 0x02
    652c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    652e:	fe 01       	movw	r30, r28
    6530:	ef 55       	subi	r30, 0x5F	; 95
    6532:	ff 4f       	sbci	r31, 0xFF	; 255
    6534:	60 81       	ld	r22, Z
    6536:	71 81       	ldd	r23, Z+1	; 0x01
    6538:	82 81       	ldd	r24, Z+2	; 0x02
    653a:	93 81       	ldd	r25, Z+3	; 0x03
    653c:	20 e0       	ldi	r18, 0x00	; 0
    653e:	30 e0       	ldi	r19, 0x00	; 0
    6540:	40 e8       	ldi	r20, 0x80	; 128
    6542:	5f e3       	ldi	r21, 0x3F	; 63
    6544:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    6548:	88 23       	and	r24, r24
    654a:	44 f4       	brge	.+16     	; 0x655c <main+0x1222>
		__ticks = 1;
    654c:	fe 01       	movw	r30, r28
    654e:	e1 56       	subi	r30, 0x61	; 97
    6550:	ff 4f       	sbci	r31, 0xFF	; 255
    6552:	81 e0       	ldi	r24, 0x01	; 1
    6554:	90 e0       	ldi	r25, 0x00	; 0
    6556:	91 83       	std	Z+1, r25	; 0x01
    6558:	80 83       	st	Z, r24
    655a:	64 c0       	rjmp	.+200    	; 0x6624 <main+0x12ea>
	else if (__tmp > 65535)
    655c:	fe 01       	movw	r30, r28
    655e:	ef 55       	subi	r30, 0x5F	; 95
    6560:	ff 4f       	sbci	r31, 0xFF	; 255
    6562:	60 81       	ld	r22, Z
    6564:	71 81       	ldd	r23, Z+1	; 0x01
    6566:	82 81       	ldd	r24, Z+2	; 0x02
    6568:	93 81       	ldd	r25, Z+3	; 0x03
    656a:	20 e0       	ldi	r18, 0x00	; 0
    656c:	3f ef       	ldi	r19, 0xFF	; 255
    656e:	4f e7       	ldi	r20, 0x7F	; 127
    6570:	57 e4       	ldi	r21, 0x47	; 71
    6572:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    6576:	18 16       	cp	r1, r24
    6578:	0c f0       	brlt	.+2      	; 0x657c <main+0x1242>
    657a:	43 c0       	rjmp	.+134    	; 0x6602 <main+0x12c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    657c:	fe 01       	movw	r30, r28
    657e:	eb 55       	subi	r30, 0x5B	; 91
    6580:	ff 4f       	sbci	r31, 0xFF	; 255
    6582:	60 81       	ld	r22, Z
    6584:	71 81       	ldd	r23, Z+1	; 0x01
    6586:	82 81       	ldd	r24, Z+2	; 0x02
    6588:	93 81       	ldd	r25, Z+3	; 0x03
    658a:	20 e0       	ldi	r18, 0x00	; 0
    658c:	30 e0       	ldi	r19, 0x00	; 0
    658e:	40 e2       	ldi	r20, 0x20	; 32
    6590:	51 e4       	ldi	r21, 0x41	; 65
    6592:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    6596:	dc 01       	movw	r26, r24
    6598:	cb 01       	movw	r24, r22
    659a:	8e 01       	movw	r16, r28
    659c:	01 56       	subi	r16, 0x61	; 97
    659e:	1f 4f       	sbci	r17, 0xFF	; 255
    65a0:	bc 01       	movw	r22, r24
    65a2:	cd 01       	movw	r24, r26
    65a4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    65a8:	dc 01       	movw	r26, r24
    65aa:	cb 01       	movw	r24, r22
    65ac:	f8 01       	movw	r30, r16
    65ae:	91 83       	std	Z+1, r25	; 0x01
    65b0:	80 83       	st	Z, r24
    65b2:	1f c0       	rjmp	.+62     	; 0x65f2 <main+0x12b8>
    65b4:	fe 01       	movw	r30, r28
    65b6:	e3 56       	subi	r30, 0x63	; 99
    65b8:	ff 4f       	sbci	r31, 0xFF	; 255
    65ba:	88 ec       	ldi	r24, 0xC8	; 200
    65bc:	90 e0       	ldi	r25, 0x00	; 0
    65be:	91 83       	std	Z+1, r25	; 0x01
    65c0:	80 83       	st	Z, r24
    65c2:	fe 01       	movw	r30, r28
    65c4:	e3 56       	subi	r30, 0x63	; 99
    65c6:	ff 4f       	sbci	r31, 0xFF	; 255
    65c8:	80 81       	ld	r24, Z
    65ca:	91 81       	ldd	r25, Z+1	; 0x01
    65cc:	01 97       	sbiw	r24, 0x01	; 1
    65ce:	f1 f7       	brne	.-4      	; 0x65cc <main+0x1292>
    65d0:	fe 01       	movw	r30, r28
    65d2:	e3 56       	subi	r30, 0x63	; 99
    65d4:	ff 4f       	sbci	r31, 0xFF	; 255
    65d6:	91 83       	std	Z+1, r25	; 0x01
    65d8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    65da:	de 01       	movw	r26, r28
    65dc:	a1 56       	subi	r26, 0x61	; 97
    65de:	bf 4f       	sbci	r27, 0xFF	; 255
    65e0:	fe 01       	movw	r30, r28
    65e2:	e1 56       	subi	r30, 0x61	; 97
    65e4:	ff 4f       	sbci	r31, 0xFF	; 255
    65e6:	80 81       	ld	r24, Z
    65e8:	91 81       	ldd	r25, Z+1	; 0x01
    65ea:	01 97       	sbiw	r24, 0x01	; 1
    65ec:	11 96       	adiw	r26, 0x01	; 1
    65ee:	9c 93       	st	X, r25
    65f0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    65f2:	fe 01       	movw	r30, r28
    65f4:	e1 56       	subi	r30, 0x61	; 97
    65f6:	ff 4f       	sbci	r31, 0xFF	; 255
    65f8:	80 81       	ld	r24, Z
    65fa:	91 81       	ldd	r25, Z+1	; 0x01
    65fc:	00 97       	sbiw	r24, 0x00	; 0
    65fe:	d1 f6       	brne	.-76     	; 0x65b4 <main+0x127a>
    6600:	27 c0       	rjmp	.+78     	; 0x6650 <main+0x1316>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6602:	8e 01       	movw	r16, r28
    6604:	01 56       	subi	r16, 0x61	; 97
    6606:	1f 4f       	sbci	r17, 0xFF	; 255
    6608:	fe 01       	movw	r30, r28
    660a:	ef 55       	subi	r30, 0x5F	; 95
    660c:	ff 4f       	sbci	r31, 0xFF	; 255
    660e:	60 81       	ld	r22, Z
    6610:	71 81       	ldd	r23, Z+1	; 0x01
    6612:	82 81       	ldd	r24, Z+2	; 0x02
    6614:	93 81       	ldd	r25, Z+3	; 0x03
    6616:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    661a:	dc 01       	movw	r26, r24
    661c:	cb 01       	movw	r24, r22
    661e:	f8 01       	movw	r30, r16
    6620:	91 83       	std	Z+1, r25	; 0x01
    6622:	80 83       	st	Z, r24
    6624:	de 01       	movw	r26, r28
    6626:	a5 56       	subi	r26, 0x65	; 101
    6628:	bf 4f       	sbci	r27, 0xFF	; 255
    662a:	fe 01       	movw	r30, r28
    662c:	e1 56       	subi	r30, 0x61	; 97
    662e:	ff 4f       	sbci	r31, 0xFF	; 255
    6630:	80 81       	ld	r24, Z
    6632:	91 81       	ldd	r25, Z+1	; 0x01
    6634:	8d 93       	st	X+, r24
    6636:	9c 93       	st	X, r25
    6638:	fe 01       	movw	r30, r28
    663a:	e5 56       	subi	r30, 0x65	; 101
    663c:	ff 4f       	sbci	r31, 0xFF	; 255
    663e:	80 81       	ld	r24, Z
    6640:	91 81       	ldd	r25, Z+1	; 0x01
    6642:	01 97       	sbiw	r24, 0x01	; 1
    6644:	f1 f7       	brne	.-4      	; 0x6642 <main+0x1308>
    6646:	fe 01       	movw	r30, r28
    6648:	e5 56       	subi	r30, 0x65	; 101
    664a:	ff 4f       	sbci	r31, 0xFF	; 255
    664c:	91 83       	std	Z+1, r25	; 0x01
    664e:	80 83       	st	Z, r24
											_delay_ms(1000);
											CLCD_DisplayClear();
    6650:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
								Control_LED_Choice();
								_delay_ms(1000);

								CLCD_DisplayClear();

								while(KeypadEntry != '*'){
    6654:	fe 01       	movw	r30, r28
    6656:	e3 50       	subi	r30, 0x03	; 3
    6658:	ff 4f       	sbci	r31, 0xFF	; 255
    665a:	80 81       	ld	r24, Z
    665c:	8a 32       	cpi	r24, 0x2A	; 42
    665e:	09 f0       	breq	.+2      	; 0x6662 <main+0x1328>
    6660:	b0 cc       	rjmp	.-1696   	; 0x5fc2 <main+0xc88>
											break;
										default:
											break;
									}
								}
								CLCD_DisplayClear();
    6662:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
    6666:	1b c7       	rjmp	.+3638   	; 0x749e <main+0x2164>
								break;
							case '2': //Display Motor_Control Page
								CLCD_DisplayClear();
    6668:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>

								Control_DC_MOTOR_Choice();
    666c:	0e 94 b6 26 	call	0x4d6c	; 0x4d6c <Control_DC_MOTOR_Choice>
    6670:	fe 01       	movw	r30, r28
    6672:	e9 56       	subi	r30, 0x69	; 105
    6674:	ff 4f       	sbci	r31, 0xFF	; 255
    6676:	80 e0       	ldi	r24, 0x00	; 0
    6678:	90 e0       	ldi	r25, 0x00	; 0
    667a:	aa e7       	ldi	r26, 0x7A	; 122
    667c:	b4 e4       	ldi	r27, 0x44	; 68
    667e:	80 83       	st	Z, r24
    6680:	91 83       	std	Z+1, r25	; 0x01
    6682:	a2 83       	std	Z+2, r26	; 0x02
    6684:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6686:	8e 01       	movw	r16, r28
    6688:	0d 56       	subi	r16, 0x6D	; 109
    668a:	1f 4f       	sbci	r17, 0xFF	; 255
    668c:	fe 01       	movw	r30, r28
    668e:	e9 56       	subi	r30, 0x69	; 105
    6690:	ff 4f       	sbci	r31, 0xFF	; 255
    6692:	60 81       	ld	r22, Z
    6694:	71 81       	ldd	r23, Z+1	; 0x01
    6696:	82 81       	ldd	r24, Z+2	; 0x02
    6698:	93 81       	ldd	r25, Z+3	; 0x03
    669a:	20 e0       	ldi	r18, 0x00	; 0
    669c:	30 e0       	ldi	r19, 0x00	; 0
    669e:	4a ef       	ldi	r20, 0xFA	; 250
    66a0:	54 e4       	ldi	r21, 0x44	; 68
    66a2:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    66a6:	dc 01       	movw	r26, r24
    66a8:	cb 01       	movw	r24, r22
    66aa:	f8 01       	movw	r30, r16
    66ac:	80 83       	st	Z, r24
    66ae:	91 83       	std	Z+1, r25	; 0x01
    66b0:	a2 83       	std	Z+2, r26	; 0x02
    66b2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    66b4:	fe 01       	movw	r30, r28
    66b6:	ed 56       	subi	r30, 0x6D	; 109
    66b8:	ff 4f       	sbci	r31, 0xFF	; 255
    66ba:	60 81       	ld	r22, Z
    66bc:	71 81       	ldd	r23, Z+1	; 0x01
    66be:	82 81       	ldd	r24, Z+2	; 0x02
    66c0:	93 81       	ldd	r25, Z+3	; 0x03
    66c2:	20 e0       	ldi	r18, 0x00	; 0
    66c4:	30 e0       	ldi	r19, 0x00	; 0
    66c6:	40 e8       	ldi	r20, 0x80	; 128
    66c8:	5f e3       	ldi	r21, 0x3F	; 63
    66ca:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    66ce:	88 23       	and	r24, r24
    66d0:	44 f4       	brge	.+16     	; 0x66e2 <main+0x13a8>
		__ticks = 1;
    66d2:	fe 01       	movw	r30, r28
    66d4:	ef 56       	subi	r30, 0x6F	; 111
    66d6:	ff 4f       	sbci	r31, 0xFF	; 255
    66d8:	81 e0       	ldi	r24, 0x01	; 1
    66da:	90 e0       	ldi	r25, 0x00	; 0
    66dc:	91 83       	std	Z+1, r25	; 0x01
    66de:	80 83       	st	Z, r24
    66e0:	64 c0       	rjmp	.+200    	; 0x67aa <main+0x1470>
	else if (__tmp > 65535)
    66e2:	fe 01       	movw	r30, r28
    66e4:	ed 56       	subi	r30, 0x6D	; 109
    66e6:	ff 4f       	sbci	r31, 0xFF	; 255
    66e8:	60 81       	ld	r22, Z
    66ea:	71 81       	ldd	r23, Z+1	; 0x01
    66ec:	82 81       	ldd	r24, Z+2	; 0x02
    66ee:	93 81       	ldd	r25, Z+3	; 0x03
    66f0:	20 e0       	ldi	r18, 0x00	; 0
    66f2:	3f ef       	ldi	r19, 0xFF	; 255
    66f4:	4f e7       	ldi	r20, 0x7F	; 127
    66f6:	57 e4       	ldi	r21, 0x47	; 71
    66f8:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    66fc:	18 16       	cp	r1, r24
    66fe:	0c f0       	brlt	.+2      	; 0x6702 <main+0x13c8>
    6700:	43 c0       	rjmp	.+134    	; 0x6788 <main+0x144e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6702:	fe 01       	movw	r30, r28
    6704:	e9 56       	subi	r30, 0x69	; 105
    6706:	ff 4f       	sbci	r31, 0xFF	; 255
    6708:	60 81       	ld	r22, Z
    670a:	71 81       	ldd	r23, Z+1	; 0x01
    670c:	82 81       	ldd	r24, Z+2	; 0x02
    670e:	93 81       	ldd	r25, Z+3	; 0x03
    6710:	20 e0       	ldi	r18, 0x00	; 0
    6712:	30 e0       	ldi	r19, 0x00	; 0
    6714:	40 e2       	ldi	r20, 0x20	; 32
    6716:	51 e4       	ldi	r21, 0x41	; 65
    6718:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    671c:	dc 01       	movw	r26, r24
    671e:	cb 01       	movw	r24, r22
    6720:	8e 01       	movw	r16, r28
    6722:	0f 56       	subi	r16, 0x6F	; 111
    6724:	1f 4f       	sbci	r17, 0xFF	; 255
    6726:	bc 01       	movw	r22, r24
    6728:	cd 01       	movw	r24, r26
    672a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    672e:	dc 01       	movw	r26, r24
    6730:	cb 01       	movw	r24, r22
    6732:	f8 01       	movw	r30, r16
    6734:	91 83       	std	Z+1, r25	; 0x01
    6736:	80 83       	st	Z, r24
    6738:	1f c0       	rjmp	.+62     	; 0x6778 <main+0x143e>
    673a:	fe 01       	movw	r30, r28
    673c:	e1 57       	subi	r30, 0x71	; 113
    673e:	ff 4f       	sbci	r31, 0xFF	; 255
    6740:	88 ec       	ldi	r24, 0xC8	; 200
    6742:	90 e0       	ldi	r25, 0x00	; 0
    6744:	91 83       	std	Z+1, r25	; 0x01
    6746:	80 83       	st	Z, r24
    6748:	fe 01       	movw	r30, r28
    674a:	e1 57       	subi	r30, 0x71	; 113
    674c:	ff 4f       	sbci	r31, 0xFF	; 255
    674e:	80 81       	ld	r24, Z
    6750:	91 81       	ldd	r25, Z+1	; 0x01
    6752:	01 97       	sbiw	r24, 0x01	; 1
    6754:	f1 f7       	brne	.-4      	; 0x6752 <main+0x1418>
    6756:	fe 01       	movw	r30, r28
    6758:	e1 57       	subi	r30, 0x71	; 113
    675a:	ff 4f       	sbci	r31, 0xFF	; 255
    675c:	91 83       	std	Z+1, r25	; 0x01
    675e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6760:	de 01       	movw	r26, r28
    6762:	af 56       	subi	r26, 0x6F	; 111
    6764:	bf 4f       	sbci	r27, 0xFF	; 255
    6766:	fe 01       	movw	r30, r28
    6768:	ef 56       	subi	r30, 0x6F	; 111
    676a:	ff 4f       	sbci	r31, 0xFF	; 255
    676c:	80 81       	ld	r24, Z
    676e:	91 81       	ldd	r25, Z+1	; 0x01
    6770:	01 97       	sbiw	r24, 0x01	; 1
    6772:	11 96       	adiw	r26, 0x01	; 1
    6774:	9c 93       	st	X, r25
    6776:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6778:	fe 01       	movw	r30, r28
    677a:	ef 56       	subi	r30, 0x6F	; 111
    677c:	ff 4f       	sbci	r31, 0xFF	; 255
    677e:	80 81       	ld	r24, Z
    6780:	91 81       	ldd	r25, Z+1	; 0x01
    6782:	00 97       	sbiw	r24, 0x00	; 0
    6784:	d1 f6       	brne	.-76     	; 0x673a <main+0x1400>
    6786:	27 c0       	rjmp	.+78     	; 0x67d6 <main+0x149c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6788:	8e 01       	movw	r16, r28
    678a:	0f 56       	subi	r16, 0x6F	; 111
    678c:	1f 4f       	sbci	r17, 0xFF	; 255
    678e:	fe 01       	movw	r30, r28
    6790:	ed 56       	subi	r30, 0x6D	; 109
    6792:	ff 4f       	sbci	r31, 0xFF	; 255
    6794:	60 81       	ld	r22, Z
    6796:	71 81       	ldd	r23, Z+1	; 0x01
    6798:	82 81       	ldd	r24, Z+2	; 0x02
    679a:	93 81       	ldd	r25, Z+3	; 0x03
    679c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    67a0:	dc 01       	movw	r26, r24
    67a2:	cb 01       	movw	r24, r22
    67a4:	f8 01       	movw	r30, r16
    67a6:	91 83       	std	Z+1, r25	; 0x01
    67a8:	80 83       	st	Z, r24
    67aa:	de 01       	movw	r26, r28
    67ac:	a3 57       	subi	r26, 0x73	; 115
    67ae:	bf 4f       	sbci	r27, 0xFF	; 255
    67b0:	fe 01       	movw	r30, r28
    67b2:	ef 56       	subi	r30, 0x6F	; 111
    67b4:	ff 4f       	sbci	r31, 0xFF	; 255
    67b6:	80 81       	ld	r24, Z
    67b8:	91 81       	ldd	r25, Z+1	; 0x01
    67ba:	8d 93       	st	X+, r24
    67bc:	9c 93       	st	X, r25
    67be:	fe 01       	movw	r30, r28
    67c0:	e3 57       	subi	r30, 0x73	; 115
    67c2:	ff 4f       	sbci	r31, 0xFF	; 255
    67c4:	80 81       	ld	r24, Z
    67c6:	91 81       	ldd	r25, Z+1	; 0x01
    67c8:	01 97       	sbiw	r24, 0x01	; 1
    67ca:	f1 f7       	brne	.-4      	; 0x67c8 <main+0x148e>
    67cc:	fe 01       	movw	r30, r28
    67ce:	e3 57       	subi	r30, 0x73	; 115
    67d0:	ff 4f       	sbci	r31, 0xFF	; 255
    67d2:	91 83       	std	Z+1, r25	; 0x01
    67d4:	80 83       	st	Z, r24
								_delay_ms(1000);

								CLCD_DisplayClear();
    67d6:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
    67da:	df c5       	rjmp	.+3006   	; 0x739a <main+0x2060>

								while(KeypadEntry != '*'){
									CLCD_WriteString_Pos(wordCONTROL_MOTOR_PAGE,1,1);
    67dc:	ce 01       	movw	r24, r28
    67de:	84 5e       	subi	r24, 0xE4	; 228
    67e0:	9e 4f       	sbci	r25, 0xFE	; 254
    67e2:	61 e0       	ldi	r22, 0x01	; 1
    67e4:	41 e0       	ldi	r20, 0x01	; 1
    67e6:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
									CLCD_WriteString_Pos(wordENTER,2,1);
    67ea:	ce 01       	movw	r24, r28
    67ec:	89 5b       	subi	r24, 0xB9	; 185
    67ee:	9e 4f       	sbci	r25, 0xFE	; 254
    67f0:	62 e0       	ldi	r22, 0x02	; 2
    67f2:	41 e0       	ldi	r20, 0x01	; 1
    67f4:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
									KeypadEntry = KPD_GetPressedKey();
    67f8:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <KPD_GetPressedKey>
    67fc:	fe 01       	movw	r30, r28
    67fe:	e3 50       	subi	r30, 0x03	; 3
    6800:	ff 4f       	sbci	r31, 0xFF	; 255
    6802:	80 83       	st	Z, r24
									switch (KeypadEntry) {
    6804:	fe 01       	movw	r30, r28
    6806:	e3 50       	subi	r30, 0x03	; 3
    6808:	ff 4f       	sbci	r31, 0xFF	; 255
    680a:	80 81       	ld	r24, Z
    680c:	28 2f       	mov	r18, r24
    680e:	30 e0       	ldi	r19, 0x00	; 0
    6810:	c4 57       	subi	r28, 0x74	; 116
    6812:	de 4f       	sbci	r29, 0xFE	; 254
    6814:	39 83       	std	Y+1, r19	; 0x01
    6816:	28 83       	st	Y, r18
    6818:	cc 58       	subi	r28, 0x8C	; 140
    681a:	d1 40       	sbci	r29, 0x01	; 1
    681c:	c4 57       	subi	r28, 0x74	; 116
    681e:	de 4f       	sbci	r29, 0xFE	; 254
    6820:	88 81       	ld	r24, Y
    6822:	99 81       	ldd	r25, Y+1	; 0x01
    6824:	cc 58       	subi	r28, 0x8C	; 140
    6826:	d1 40       	sbci	r29, 0x01	; 1
    6828:	81 33       	cpi	r24, 0x31	; 49
    682a:	91 05       	cpc	r25, r1
    682c:	49 f1       	breq	.+82     	; 0x6880 <main+0x1546>
    682e:	c4 57       	subi	r28, 0x74	; 116
    6830:	de 4f       	sbci	r29, 0xFE	; 254
    6832:	e8 81       	ld	r30, Y
    6834:	f9 81       	ldd	r31, Y+1	; 0x01
    6836:	cc 58       	subi	r28, 0x8C	; 140
    6838:	d1 40       	sbci	r29, 0x01	; 1
    683a:	e2 33       	cpi	r30, 0x32	; 50
    683c:	f1 05       	cpc	r31, r1
    683e:	5c f4       	brge	.+22     	; 0x6856 <main+0x151c>
    6840:	c4 57       	subi	r28, 0x74	; 116
    6842:	de 4f       	sbci	r29, 0xFE	; 254
    6844:	28 81       	ld	r18, Y
    6846:	39 81       	ldd	r19, Y+1	; 0x01
    6848:	cc 58       	subi	r28, 0x8C	; 140
    684a:	d1 40       	sbci	r29, 0x01	; 1
    684c:	2a 32       	cpi	r18, 0x2A	; 42
    684e:	31 05       	cpc	r19, r1
    6850:	09 f4       	brne	.+2      	; 0x6854 <main+0x151a>
    6852:	b2 c4       	rjmp	.+2404   	; 0x71b8 <main+0x1e7e>
    6854:	a2 c5       	rjmp	.+2884   	; 0x739a <main+0x2060>
    6856:	c4 57       	subi	r28, 0x74	; 116
    6858:	de 4f       	sbci	r29, 0xFE	; 254
    685a:	88 81       	ld	r24, Y
    685c:	99 81       	ldd	r25, Y+1	; 0x01
    685e:	cc 58       	subi	r28, 0x8C	; 140
    6860:	d1 40       	sbci	r29, 0x01	; 1
    6862:	82 33       	cpi	r24, 0x32	; 50
    6864:	91 05       	cpc	r25, r1
    6866:	09 f4       	brne	.+2      	; 0x686a <main+0x1530>
    6868:	14 c4       	rjmp	.+2088   	; 0x7092 <main+0x1d58>
    686a:	c4 57       	subi	r28, 0x74	; 116
    686c:	de 4f       	sbci	r29, 0xFE	; 254
    686e:	e8 81       	ld	r30, Y
    6870:	f9 81       	ldd	r31, Y+1	; 0x01
    6872:	cc 58       	subi	r28, 0x8C	; 140
    6874:	d1 40       	sbci	r29, 0x01	; 1
    6876:	ed 33       	cpi	r30, 0x3D	; 61
    6878:	f1 05       	cpc	r31, r1
    687a:	09 f4       	brne	.+2      	; 0x687e <main+0x1544>
    687c:	16 c5       	rjmp	.+2604   	; 0x72aa <main+0x1f70>
    687e:	8d c5       	rjmp	.+2842   	; 0x739a <main+0x2060>
										case '1': //Display MOTOR_ON Page
											CLCD_DisplayClear();
    6880:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>

											Control_DC_MOTOR_ON_Choice();
    6884:	0e 94 3d 27 	call	0x4e7a	; 0x4e7a <Control_DC_MOTOR_ON_Choice>
    6888:	fe 01       	movw	r30, r28
    688a:	e7 57       	subi	r30, 0x77	; 119
    688c:	ff 4f       	sbci	r31, 0xFF	; 255
    688e:	80 e0       	ldi	r24, 0x00	; 0
    6890:	90 e0       	ldi	r25, 0x00	; 0
    6892:	aa e7       	ldi	r26, 0x7A	; 122
    6894:	b4 e4       	ldi	r27, 0x44	; 68
    6896:	80 83       	st	Z, r24
    6898:	91 83       	std	Z+1, r25	; 0x01
    689a:	a2 83       	std	Z+2, r26	; 0x02
    689c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    689e:	8e 01       	movw	r16, r28
    68a0:	0b 57       	subi	r16, 0x7B	; 123
    68a2:	1f 4f       	sbci	r17, 0xFF	; 255
    68a4:	fe 01       	movw	r30, r28
    68a6:	e7 57       	subi	r30, 0x77	; 119
    68a8:	ff 4f       	sbci	r31, 0xFF	; 255
    68aa:	60 81       	ld	r22, Z
    68ac:	71 81       	ldd	r23, Z+1	; 0x01
    68ae:	82 81       	ldd	r24, Z+2	; 0x02
    68b0:	93 81       	ldd	r25, Z+3	; 0x03
    68b2:	20 e0       	ldi	r18, 0x00	; 0
    68b4:	30 e0       	ldi	r19, 0x00	; 0
    68b6:	4a ef       	ldi	r20, 0xFA	; 250
    68b8:	54 e4       	ldi	r21, 0x44	; 68
    68ba:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    68be:	dc 01       	movw	r26, r24
    68c0:	cb 01       	movw	r24, r22
    68c2:	f8 01       	movw	r30, r16
    68c4:	80 83       	st	Z, r24
    68c6:	91 83       	std	Z+1, r25	; 0x01
    68c8:	a2 83       	std	Z+2, r26	; 0x02
    68ca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    68cc:	fe 01       	movw	r30, r28
    68ce:	eb 57       	subi	r30, 0x7B	; 123
    68d0:	ff 4f       	sbci	r31, 0xFF	; 255
    68d2:	60 81       	ld	r22, Z
    68d4:	71 81       	ldd	r23, Z+1	; 0x01
    68d6:	82 81       	ldd	r24, Z+2	; 0x02
    68d8:	93 81       	ldd	r25, Z+3	; 0x03
    68da:	20 e0       	ldi	r18, 0x00	; 0
    68dc:	30 e0       	ldi	r19, 0x00	; 0
    68de:	40 e8       	ldi	r20, 0x80	; 128
    68e0:	5f e3       	ldi	r21, 0x3F	; 63
    68e2:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    68e6:	88 23       	and	r24, r24
    68e8:	44 f4       	brge	.+16     	; 0x68fa <main+0x15c0>
		__ticks = 1;
    68ea:	fe 01       	movw	r30, r28
    68ec:	ed 57       	subi	r30, 0x7D	; 125
    68ee:	ff 4f       	sbci	r31, 0xFF	; 255
    68f0:	81 e0       	ldi	r24, 0x01	; 1
    68f2:	90 e0       	ldi	r25, 0x00	; 0
    68f4:	91 83       	std	Z+1, r25	; 0x01
    68f6:	80 83       	st	Z, r24
    68f8:	64 c0       	rjmp	.+200    	; 0x69c2 <main+0x1688>
	else if (__tmp > 65535)
    68fa:	fe 01       	movw	r30, r28
    68fc:	eb 57       	subi	r30, 0x7B	; 123
    68fe:	ff 4f       	sbci	r31, 0xFF	; 255
    6900:	60 81       	ld	r22, Z
    6902:	71 81       	ldd	r23, Z+1	; 0x01
    6904:	82 81       	ldd	r24, Z+2	; 0x02
    6906:	93 81       	ldd	r25, Z+3	; 0x03
    6908:	20 e0       	ldi	r18, 0x00	; 0
    690a:	3f ef       	ldi	r19, 0xFF	; 255
    690c:	4f e7       	ldi	r20, 0x7F	; 127
    690e:	57 e4       	ldi	r21, 0x47	; 71
    6910:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    6914:	18 16       	cp	r1, r24
    6916:	0c f0       	brlt	.+2      	; 0x691a <main+0x15e0>
    6918:	43 c0       	rjmp	.+134    	; 0x69a0 <main+0x1666>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    691a:	fe 01       	movw	r30, r28
    691c:	e7 57       	subi	r30, 0x77	; 119
    691e:	ff 4f       	sbci	r31, 0xFF	; 255
    6920:	60 81       	ld	r22, Z
    6922:	71 81       	ldd	r23, Z+1	; 0x01
    6924:	82 81       	ldd	r24, Z+2	; 0x02
    6926:	93 81       	ldd	r25, Z+3	; 0x03
    6928:	20 e0       	ldi	r18, 0x00	; 0
    692a:	30 e0       	ldi	r19, 0x00	; 0
    692c:	40 e2       	ldi	r20, 0x20	; 32
    692e:	51 e4       	ldi	r21, 0x41	; 65
    6930:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    6934:	dc 01       	movw	r26, r24
    6936:	cb 01       	movw	r24, r22
    6938:	8e 01       	movw	r16, r28
    693a:	0d 57       	subi	r16, 0x7D	; 125
    693c:	1f 4f       	sbci	r17, 0xFF	; 255
    693e:	bc 01       	movw	r22, r24
    6940:	cd 01       	movw	r24, r26
    6942:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    6946:	dc 01       	movw	r26, r24
    6948:	cb 01       	movw	r24, r22
    694a:	f8 01       	movw	r30, r16
    694c:	91 83       	std	Z+1, r25	; 0x01
    694e:	80 83       	st	Z, r24
    6950:	1f c0       	rjmp	.+62     	; 0x6990 <main+0x1656>
    6952:	fe 01       	movw	r30, r28
    6954:	ef 57       	subi	r30, 0x7F	; 127
    6956:	ff 4f       	sbci	r31, 0xFF	; 255
    6958:	88 ec       	ldi	r24, 0xC8	; 200
    695a:	90 e0       	ldi	r25, 0x00	; 0
    695c:	91 83       	std	Z+1, r25	; 0x01
    695e:	80 83       	st	Z, r24
    6960:	fe 01       	movw	r30, r28
    6962:	ef 57       	subi	r30, 0x7F	; 127
    6964:	ff 4f       	sbci	r31, 0xFF	; 255
    6966:	80 81       	ld	r24, Z
    6968:	91 81       	ldd	r25, Z+1	; 0x01
    696a:	01 97       	sbiw	r24, 0x01	; 1
    696c:	f1 f7       	brne	.-4      	; 0x696a <main+0x1630>
    696e:	fe 01       	movw	r30, r28
    6970:	ef 57       	subi	r30, 0x7F	; 127
    6972:	ff 4f       	sbci	r31, 0xFF	; 255
    6974:	91 83       	std	Z+1, r25	; 0x01
    6976:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6978:	de 01       	movw	r26, r28
    697a:	ad 57       	subi	r26, 0x7D	; 125
    697c:	bf 4f       	sbci	r27, 0xFF	; 255
    697e:	fe 01       	movw	r30, r28
    6980:	ed 57       	subi	r30, 0x7D	; 125
    6982:	ff 4f       	sbci	r31, 0xFF	; 255
    6984:	80 81       	ld	r24, Z
    6986:	91 81       	ldd	r25, Z+1	; 0x01
    6988:	01 97       	sbiw	r24, 0x01	; 1
    698a:	11 96       	adiw	r26, 0x01	; 1
    698c:	9c 93       	st	X, r25
    698e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6990:	fe 01       	movw	r30, r28
    6992:	ed 57       	subi	r30, 0x7D	; 125
    6994:	ff 4f       	sbci	r31, 0xFF	; 255
    6996:	80 81       	ld	r24, Z
    6998:	91 81       	ldd	r25, Z+1	; 0x01
    699a:	00 97       	sbiw	r24, 0x00	; 0
    699c:	d1 f6       	brne	.-76     	; 0x6952 <main+0x1618>
    699e:	27 c0       	rjmp	.+78     	; 0x69ee <main+0x16b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    69a0:	8e 01       	movw	r16, r28
    69a2:	0d 57       	subi	r16, 0x7D	; 125
    69a4:	1f 4f       	sbci	r17, 0xFF	; 255
    69a6:	fe 01       	movw	r30, r28
    69a8:	eb 57       	subi	r30, 0x7B	; 123
    69aa:	ff 4f       	sbci	r31, 0xFF	; 255
    69ac:	60 81       	ld	r22, Z
    69ae:	71 81       	ldd	r23, Z+1	; 0x01
    69b0:	82 81       	ldd	r24, Z+2	; 0x02
    69b2:	93 81       	ldd	r25, Z+3	; 0x03
    69b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    69b8:	dc 01       	movw	r26, r24
    69ba:	cb 01       	movw	r24, r22
    69bc:	f8 01       	movw	r30, r16
    69be:	91 83       	std	Z+1, r25	; 0x01
    69c0:	80 83       	st	Z, r24
    69c2:	de 01       	movw	r26, r28
    69c4:	a1 58       	subi	r26, 0x81	; 129
    69c6:	bf 4f       	sbci	r27, 0xFF	; 255
    69c8:	fe 01       	movw	r30, r28
    69ca:	ed 57       	subi	r30, 0x7D	; 125
    69cc:	ff 4f       	sbci	r31, 0xFF	; 255
    69ce:	80 81       	ld	r24, Z
    69d0:	91 81       	ldd	r25, Z+1	; 0x01
    69d2:	8d 93       	st	X+, r24
    69d4:	9c 93       	st	X, r25
    69d6:	fe 01       	movw	r30, r28
    69d8:	e1 58       	subi	r30, 0x81	; 129
    69da:	ff 4f       	sbci	r31, 0xFF	; 255
    69dc:	80 81       	ld	r24, Z
    69de:	91 81       	ldd	r25, Z+1	; 0x01
    69e0:	01 97       	sbiw	r24, 0x01	; 1
    69e2:	f1 f7       	brne	.-4      	; 0x69e0 <main+0x16a6>
    69e4:	fe 01       	movw	r30, r28
    69e6:	e1 58       	subi	r30, 0x81	; 129
    69e8:	ff 4f       	sbci	r31, 0xFF	; 255
    69ea:	91 83       	std	Z+1, r25	; 0x01
    69ec:	80 83       	st	Z, r24
											_delay_ms(1000);

											CLCD_DisplayClear();
    69ee:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
    69f2:	47 c3       	rjmp	.+1678   	; 0x7082 <main+0x1d48>

											while(KeypadEntry != '*'){
												CLCD_WriteString_Pos(wordCONTROL_MOTOR_ON_PAGE,1,1);
    69f4:	ce 01       	movw	r24, r28
    69f6:	86 5d       	subi	r24, 0xD6	; 214
    69f8:	9e 4f       	sbci	r25, 0xFE	; 254
    69fa:	61 e0       	ldi	r22, 0x01	; 1
    69fc:	41 e0       	ldi	r20, 0x01	; 1
    69fe:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
												CLCD_WriteString_Pos(wordENTER,2,1);
    6a02:	ce 01       	movw	r24, r28
    6a04:	89 5b       	subi	r24, 0xB9	; 185
    6a06:	9e 4f       	sbci	r25, 0xFE	; 254
    6a08:	62 e0       	ldi	r22, 0x02	; 2
    6a0a:	41 e0       	ldi	r20, 0x01	; 1
    6a0c:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
												KeypadEntry = KPD_GetPressedKey();
    6a10:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <KPD_GetPressedKey>
    6a14:	fe 01       	movw	r30, r28
    6a16:	e3 50       	subi	r30, 0x03	; 3
    6a18:	ff 4f       	sbci	r31, 0xFF	; 255
    6a1a:	80 83       	st	Z, r24
												switch (KeypadEntry) {
    6a1c:	fe 01       	movw	r30, r28
    6a1e:	e3 50       	subi	r30, 0x03	; 3
    6a20:	ff 4f       	sbci	r31, 0xFF	; 255
    6a22:	80 81       	ld	r24, Z
    6a24:	28 2f       	mov	r18, r24
    6a26:	30 e0       	ldi	r19, 0x00	; 0
    6a28:	c6 57       	subi	r28, 0x76	; 118
    6a2a:	de 4f       	sbci	r29, 0xFE	; 254
    6a2c:	39 83       	std	Y+1, r19	; 0x01
    6a2e:	28 83       	st	Y, r18
    6a30:	ca 58       	subi	r28, 0x8A	; 138
    6a32:	d1 40       	sbci	r29, 0x01	; 1
    6a34:	c6 57       	subi	r28, 0x76	; 118
    6a36:	de 4f       	sbci	r29, 0xFE	; 254
    6a38:	88 81       	ld	r24, Y
    6a3a:	99 81       	ldd	r25, Y+1	; 0x01
    6a3c:	ca 58       	subi	r28, 0x8A	; 138
    6a3e:	d1 40       	sbci	r29, 0x01	; 1
    6a40:	81 33       	cpi	r24, 0x31	; 49
    6a42:	91 05       	cpc	r25, r1
    6a44:	49 f1       	breq	.+82     	; 0x6a98 <main+0x175e>
    6a46:	c6 57       	subi	r28, 0x76	; 118
    6a48:	de 4f       	sbci	r29, 0xFE	; 254
    6a4a:	e8 81       	ld	r30, Y
    6a4c:	f9 81       	ldd	r31, Y+1	; 0x01
    6a4e:	ca 58       	subi	r28, 0x8A	; 138
    6a50:	d1 40       	sbci	r29, 0x01	; 1
    6a52:	e2 33       	cpi	r30, 0x32	; 50
    6a54:	f1 05       	cpc	r31, r1
    6a56:	5c f4       	brge	.+22     	; 0x6a6e <main+0x1734>
    6a58:	c6 57       	subi	r28, 0x76	; 118
    6a5a:	de 4f       	sbci	r29, 0xFE	; 254
    6a5c:	28 81       	ld	r18, Y
    6a5e:	39 81       	ldd	r19, Y+1	; 0x01
    6a60:	ca 58       	subi	r28, 0x8A	; 138
    6a62:	d1 40       	sbci	r29, 0x01	; 1
    6a64:	2a 32       	cpi	r18, 0x2A	; 42
    6a66:	31 05       	cpc	r19, r1
    6a68:	09 f4       	brne	.+2      	; 0x6a6c <main+0x1732>
    6a6a:	98 c1       	rjmp	.+816    	; 0x6d9c <main+0x1a62>
    6a6c:	0a c3       	rjmp	.+1556   	; 0x7082 <main+0x1d48>
    6a6e:	c6 57       	subi	r28, 0x76	; 118
    6a70:	de 4f       	sbci	r29, 0xFE	; 254
    6a72:	88 81       	ld	r24, Y
    6a74:	99 81       	ldd	r25, Y+1	; 0x01
    6a76:	ca 58       	subi	r28, 0x8A	; 138
    6a78:	d1 40       	sbci	r29, 0x01	; 1
    6a7a:	82 33       	cpi	r24, 0x32	; 50
    6a7c:	91 05       	cpc	r25, r1
    6a7e:	09 f4       	brne	.+2      	; 0x6a82 <main+0x1748>
    6a80:	cc c0       	rjmp	.+408    	; 0x6c1a <main+0x18e0>
    6a82:	c6 57       	subi	r28, 0x76	; 118
    6a84:	de 4f       	sbci	r29, 0xFE	; 254
    6a86:	e8 81       	ld	r30, Y
    6a88:	f9 81       	ldd	r31, Y+1	; 0x01
    6a8a:	ca 58       	subi	r28, 0x8A	; 138
    6a8c:	d1 40       	sbci	r29, 0x01	; 1
    6a8e:	ed 33       	cpi	r30, 0x3D	; 61
    6a90:	f1 05       	cpc	r31, r1
    6a92:	09 f4       	brne	.+2      	; 0x6a96 <main+0x175c>
    6a94:	3d c2       	rjmp	.+1146   	; 0x6f10 <main+0x1bd6>
    6a96:	f5 c2       	rjmp	.+1514   	; 0x7082 <main+0x1d48>
													case '1': //DC_MOTOR_CW_ON
														CLCD_DisplayClear();
    6a98:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>

														DC_MOTOR_CW_ON();
    6a9c:	0e 94 c4 27 	call	0x4f88	; 0x4f88 <DC_MOTOR_CW_ON>

														CLCD_WriteString_Pos(wordDC_MOTOR_ON_CW,1,1);
    6aa0:	ce 01       	movw	r24, r28
    6aa2:	85 59       	subi	r24, 0x95	; 149
    6aa4:	9e 4f       	sbci	r25, 0xFE	; 254
    6aa6:	61 e0       	ldi	r22, 0x01	; 1
    6aa8:	41 e0       	ldi	r20, 0x01	; 1
    6aaa:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
    6aae:	fe 01       	movw	r30, r28
    6ab0:	e5 58       	subi	r30, 0x85	; 133
    6ab2:	ff 4f       	sbci	r31, 0xFF	; 255
    6ab4:	80 e0       	ldi	r24, 0x00	; 0
    6ab6:	90 e0       	ldi	r25, 0x00	; 0
    6ab8:	aa ef       	ldi	r26, 0xFA	; 250
    6aba:	b3 e4       	ldi	r27, 0x43	; 67
    6abc:	80 83       	st	Z, r24
    6abe:	91 83       	std	Z+1, r25	; 0x01
    6ac0:	a2 83       	std	Z+2, r26	; 0x02
    6ac2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6ac4:	8e 01       	movw	r16, r28
    6ac6:	09 58       	subi	r16, 0x89	; 137
    6ac8:	1f 4f       	sbci	r17, 0xFF	; 255
    6aca:	fe 01       	movw	r30, r28
    6acc:	e5 58       	subi	r30, 0x85	; 133
    6ace:	ff 4f       	sbci	r31, 0xFF	; 255
    6ad0:	60 81       	ld	r22, Z
    6ad2:	71 81       	ldd	r23, Z+1	; 0x01
    6ad4:	82 81       	ldd	r24, Z+2	; 0x02
    6ad6:	93 81       	ldd	r25, Z+3	; 0x03
    6ad8:	20 e0       	ldi	r18, 0x00	; 0
    6ada:	30 e0       	ldi	r19, 0x00	; 0
    6adc:	4a ef       	ldi	r20, 0xFA	; 250
    6ade:	54 e4       	ldi	r21, 0x44	; 68
    6ae0:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    6ae4:	dc 01       	movw	r26, r24
    6ae6:	cb 01       	movw	r24, r22
    6ae8:	f8 01       	movw	r30, r16
    6aea:	80 83       	st	Z, r24
    6aec:	91 83       	std	Z+1, r25	; 0x01
    6aee:	a2 83       	std	Z+2, r26	; 0x02
    6af0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6af2:	fe 01       	movw	r30, r28
    6af4:	e9 58       	subi	r30, 0x89	; 137
    6af6:	ff 4f       	sbci	r31, 0xFF	; 255
    6af8:	60 81       	ld	r22, Z
    6afa:	71 81       	ldd	r23, Z+1	; 0x01
    6afc:	82 81       	ldd	r24, Z+2	; 0x02
    6afe:	93 81       	ldd	r25, Z+3	; 0x03
    6b00:	20 e0       	ldi	r18, 0x00	; 0
    6b02:	30 e0       	ldi	r19, 0x00	; 0
    6b04:	40 e8       	ldi	r20, 0x80	; 128
    6b06:	5f e3       	ldi	r21, 0x3F	; 63
    6b08:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    6b0c:	88 23       	and	r24, r24
    6b0e:	44 f4       	brge	.+16     	; 0x6b20 <main+0x17e6>
		__ticks = 1;
    6b10:	fe 01       	movw	r30, r28
    6b12:	eb 58       	subi	r30, 0x8B	; 139
    6b14:	ff 4f       	sbci	r31, 0xFF	; 255
    6b16:	81 e0       	ldi	r24, 0x01	; 1
    6b18:	90 e0       	ldi	r25, 0x00	; 0
    6b1a:	91 83       	std	Z+1, r25	; 0x01
    6b1c:	80 83       	st	Z, r24
    6b1e:	64 c0       	rjmp	.+200    	; 0x6be8 <main+0x18ae>
	else if (__tmp > 65535)
    6b20:	fe 01       	movw	r30, r28
    6b22:	e9 58       	subi	r30, 0x89	; 137
    6b24:	ff 4f       	sbci	r31, 0xFF	; 255
    6b26:	60 81       	ld	r22, Z
    6b28:	71 81       	ldd	r23, Z+1	; 0x01
    6b2a:	82 81       	ldd	r24, Z+2	; 0x02
    6b2c:	93 81       	ldd	r25, Z+3	; 0x03
    6b2e:	20 e0       	ldi	r18, 0x00	; 0
    6b30:	3f ef       	ldi	r19, 0xFF	; 255
    6b32:	4f e7       	ldi	r20, 0x7F	; 127
    6b34:	57 e4       	ldi	r21, 0x47	; 71
    6b36:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    6b3a:	18 16       	cp	r1, r24
    6b3c:	0c f0       	brlt	.+2      	; 0x6b40 <main+0x1806>
    6b3e:	43 c0       	rjmp	.+134    	; 0x6bc6 <main+0x188c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6b40:	fe 01       	movw	r30, r28
    6b42:	e5 58       	subi	r30, 0x85	; 133
    6b44:	ff 4f       	sbci	r31, 0xFF	; 255
    6b46:	60 81       	ld	r22, Z
    6b48:	71 81       	ldd	r23, Z+1	; 0x01
    6b4a:	82 81       	ldd	r24, Z+2	; 0x02
    6b4c:	93 81       	ldd	r25, Z+3	; 0x03
    6b4e:	20 e0       	ldi	r18, 0x00	; 0
    6b50:	30 e0       	ldi	r19, 0x00	; 0
    6b52:	40 e2       	ldi	r20, 0x20	; 32
    6b54:	51 e4       	ldi	r21, 0x41	; 65
    6b56:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    6b5a:	dc 01       	movw	r26, r24
    6b5c:	cb 01       	movw	r24, r22
    6b5e:	8e 01       	movw	r16, r28
    6b60:	0b 58       	subi	r16, 0x8B	; 139
    6b62:	1f 4f       	sbci	r17, 0xFF	; 255
    6b64:	bc 01       	movw	r22, r24
    6b66:	cd 01       	movw	r24, r26
    6b68:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    6b6c:	dc 01       	movw	r26, r24
    6b6e:	cb 01       	movw	r24, r22
    6b70:	f8 01       	movw	r30, r16
    6b72:	91 83       	std	Z+1, r25	; 0x01
    6b74:	80 83       	st	Z, r24
    6b76:	1f c0       	rjmp	.+62     	; 0x6bb6 <main+0x187c>
    6b78:	fe 01       	movw	r30, r28
    6b7a:	ed 58       	subi	r30, 0x8D	; 141
    6b7c:	ff 4f       	sbci	r31, 0xFF	; 255
    6b7e:	88 ec       	ldi	r24, 0xC8	; 200
    6b80:	90 e0       	ldi	r25, 0x00	; 0
    6b82:	91 83       	std	Z+1, r25	; 0x01
    6b84:	80 83       	st	Z, r24
    6b86:	fe 01       	movw	r30, r28
    6b88:	ed 58       	subi	r30, 0x8D	; 141
    6b8a:	ff 4f       	sbci	r31, 0xFF	; 255
    6b8c:	80 81       	ld	r24, Z
    6b8e:	91 81       	ldd	r25, Z+1	; 0x01
    6b90:	01 97       	sbiw	r24, 0x01	; 1
    6b92:	f1 f7       	brne	.-4      	; 0x6b90 <main+0x1856>
    6b94:	fe 01       	movw	r30, r28
    6b96:	ed 58       	subi	r30, 0x8D	; 141
    6b98:	ff 4f       	sbci	r31, 0xFF	; 255
    6b9a:	91 83       	std	Z+1, r25	; 0x01
    6b9c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6b9e:	de 01       	movw	r26, r28
    6ba0:	ab 58       	subi	r26, 0x8B	; 139
    6ba2:	bf 4f       	sbci	r27, 0xFF	; 255
    6ba4:	fe 01       	movw	r30, r28
    6ba6:	eb 58       	subi	r30, 0x8B	; 139
    6ba8:	ff 4f       	sbci	r31, 0xFF	; 255
    6baa:	80 81       	ld	r24, Z
    6bac:	91 81       	ldd	r25, Z+1	; 0x01
    6bae:	01 97       	sbiw	r24, 0x01	; 1
    6bb0:	11 96       	adiw	r26, 0x01	; 1
    6bb2:	9c 93       	st	X, r25
    6bb4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6bb6:	fe 01       	movw	r30, r28
    6bb8:	eb 58       	subi	r30, 0x8B	; 139
    6bba:	ff 4f       	sbci	r31, 0xFF	; 255
    6bbc:	80 81       	ld	r24, Z
    6bbe:	91 81       	ldd	r25, Z+1	; 0x01
    6bc0:	00 97       	sbiw	r24, 0x00	; 0
    6bc2:	d1 f6       	brne	.-76     	; 0x6b78 <main+0x183e>
    6bc4:	27 c0       	rjmp	.+78     	; 0x6c14 <main+0x18da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6bc6:	8e 01       	movw	r16, r28
    6bc8:	0b 58       	subi	r16, 0x8B	; 139
    6bca:	1f 4f       	sbci	r17, 0xFF	; 255
    6bcc:	fe 01       	movw	r30, r28
    6bce:	e9 58       	subi	r30, 0x89	; 137
    6bd0:	ff 4f       	sbci	r31, 0xFF	; 255
    6bd2:	60 81       	ld	r22, Z
    6bd4:	71 81       	ldd	r23, Z+1	; 0x01
    6bd6:	82 81       	ldd	r24, Z+2	; 0x02
    6bd8:	93 81       	ldd	r25, Z+3	; 0x03
    6bda:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    6bde:	dc 01       	movw	r26, r24
    6be0:	cb 01       	movw	r24, r22
    6be2:	f8 01       	movw	r30, r16
    6be4:	91 83       	std	Z+1, r25	; 0x01
    6be6:	80 83       	st	Z, r24
    6be8:	de 01       	movw	r26, r28
    6bea:	af 58       	subi	r26, 0x8F	; 143
    6bec:	bf 4f       	sbci	r27, 0xFF	; 255
    6bee:	fe 01       	movw	r30, r28
    6bf0:	eb 58       	subi	r30, 0x8B	; 139
    6bf2:	ff 4f       	sbci	r31, 0xFF	; 255
    6bf4:	80 81       	ld	r24, Z
    6bf6:	91 81       	ldd	r25, Z+1	; 0x01
    6bf8:	8d 93       	st	X+, r24
    6bfa:	9c 93       	st	X, r25
    6bfc:	fe 01       	movw	r30, r28
    6bfe:	ef 58       	subi	r30, 0x8F	; 143
    6c00:	ff 4f       	sbci	r31, 0xFF	; 255
    6c02:	80 81       	ld	r24, Z
    6c04:	91 81       	ldd	r25, Z+1	; 0x01
    6c06:	01 97       	sbiw	r24, 0x01	; 1
    6c08:	f1 f7       	brne	.-4      	; 0x6c06 <main+0x18cc>
    6c0a:	fe 01       	movw	r30, r28
    6c0c:	ef 58       	subi	r30, 0x8F	; 143
    6c0e:	ff 4f       	sbci	r31, 0xFF	; 255
    6c10:	91 83       	std	Z+1, r25	; 0x01
    6c12:	80 83       	st	Z, r24
														_delay_ms(500);
														CLCD_DisplayClear();
    6c14:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
    6c18:	34 c2       	rjmp	.+1128   	; 0x7082 <main+0x1d48>
														break;
													case '2': //DC_MOTOR_CCW_ON
														CLCD_DisplayClear();
    6c1a:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>

														DC_MOTOR_CCW_ON();
    6c1e:	0e 94 e1 27 	call	0x4fc2	; 0x4fc2 <DC_MOTOR_CCW_ON>

														CLCD_WriteString_Pos(wordDC_MOTOR_ON_CCW,1,1);
    6c22:	ce 01       	movw	r24, r28
    6c24:	86 58       	subi	r24, 0x86	; 134
    6c26:	9e 4f       	sbci	r25, 0xFE	; 254
    6c28:	61 e0       	ldi	r22, 0x01	; 1
    6c2a:	41 e0       	ldi	r20, 0x01	; 1
    6c2c:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
    6c30:	fe 01       	movw	r30, r28
    6c32:	e3 59       	subi	r30, 0x93	; 147
    6c34:	ff 4f       	sbci	r31, 0xFF	; 255
    6c36:	80 e0       	ldi	r24, 0x00	; 0
    6c38:	90 e0       	ldi	r25, 0x00	; 0
    6c3a:	aa ef       	ldi	r26, 0xFA	; 250
    6c3c:	b3 e4       	ldi	r27, 0x43	; 67
    6c3e:	80 83       	st	Z, r24
    6c40:	91 83       	std	Z+1, r25	; 0x01
    6c42:	a2 83       	std	Z+2, r26	; 0x02
    6c44:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6c46:	8e 01       	movw	r16, r28
    6c48:	07 59       	subi	r16, 0x97	; 151
    6c4a:	1f 4f       	sbci	r17, 0xFF	; 255
    6c4c:	fe 01       	movw	r30, r28
    6c4e:	e3 59       	subi	r30, 0x93	; 147
    6c50:	ff 4f       	sbci	r31, 0xFF	; 255
    6c52:	60 81       	ld	r22, Z
    6c54:	71 81       	ldd	r23, Z+1	; 0x01
    6c56:	82 81       	ldd	r24, Z+2	; 0x02
    6c58:	93 81       	ldd	r25, Z+3	; 0x03
    6c5a:	20 e0       	ldi	r18, 0x00	; 0
    6c5c:	30 e0       	ldi	r19, 0x00	; 0
    6c5e:	4a ef       	ldi	r20, 0xFA	; 250
    6c60:	54 e4       	ldi	r21, 0x44	; 68
    6c62:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    6c66:	dc 01       	movw	r26, r24
    6c68:	cb 01       	movw	r24, r22
    6c6a:	f8 01       	movw	r30, r16
    6c6c:	80 83       	st	Z, r24
    6c6e:	91 83       	std	Z+1, r25	; 0x01
    6c70:	a2 83       	std	Z+2, r26	; 0x02
    6c72:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6c74:	fe 01       	movw	r30, r28
    6c76:	e7 59       	subi	r30, 0x97	; 151
    6c78:	ff 4f       	sbci	r31, 0xFF	; 255
    6c7a:	60 81       	ld	r22, Z
    6c7c:	71 81       	ldd	r23, Z+1	; 0x01
    6c7e:	82 81       	ldd	r24, Z+2	; 0x02
    6c80:	93 81       	ldd	r25, Z+3	; 0x03
    6c82:	20 e0       	ldi	r18, 0x00	; 0
    6c84:	30 e0       	ldi	r19, 0x00	; 0
    6c86:	40 e8       	ldi	r20, 0x80	; 128
    6c88:	5f e3       	ldi	r21, 0x3F	; 63
    6c8a:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    6c8e:	88 23       	and	r24, r24
    6c90:	44 f4       	brge	.+16     	; 0x6ca2 <main+0x1968>
		__ticks = 1;
    6c92:	fe 01       	movw	r30, r28
    6c94:	e9 59       	subi	r30, 0x99	; 153
    6c96:	ff 4f       	sbci	r31, 0xFF	; 255
    6c98:	81 e0       	ldi	r24, 0x01	; 1
    6c9a:	90 e0       	ldi	r25, 0x00	; 0
    6c9c:	91 83       	std	Z+1, r25	; 0x01
    6c9e:	80 83       	st	Z, r24
    6ca0:	64 c0       	rjmp	.+200    	; 0x6d6a <main+0x1a30>
	else if (__tmp > 65535)
    6ca2:	fe 01       	movw	r30, r28
    6ca4:	e7 59       	subi	r30, 0x97	; 151
    6ca6:	ff 4f       	sbci	r31, 0xFF	; 255
    6ca8:	60 81       	ld	r22, Z
    6caa:	71 81       	ldd	r23, Z+1	; 0x01
    6cac:	82 81       	ldd	r24, Z+2	; 0x02
    6cae:	93 81       	ldd	r25, Z+3	; 0x03
    6cb0:	20 e0       	ldi	r18, 0x00	; 0
    6cb2:	3f ef       	ldi	r19, 0xFF	; 255
    6cb4:	4f e7       	ldi	r20, 0x7F	; 127
    6cb6:	57 e4       	ldi	r21, 0x47	; 71
    6cb8:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    6cbc:	18 16       	cp	r1, r24
    6cbe:	0c f0       	brlt	.+2      	; 0x6cc2 <main+0x1988>
    6cc0:	43 c0       	rjmp	.+134    	; 0x6d48 <main+0x1a0e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6cc2:	fe 01       	movw	r30, r28
    6cc4:	e3 59       	subi	r30, 0x93	; 147
    6cc6:	ff 4f       	sbci	r31, 0xFF	; 255
    6cc8:	60 81       	ld	r22, Z
    6cca:	71 81       	ldd	r23, Z+1	; 0x01
    6ccc:	82 81       	ldd	r24, Z+2	; 0x02
    6cce:	93 81       	ldd	r25, Z+3	; 0x03
    6cd0:	20 e0       	ldi	r18, 0x00	; 0
    6cd2:	30 e0       	ldi	r19, 0x00	; 0
    6cd4:	40 e2       	ldi	r20, 0x20	; 32
    6cd6:	51 e4       	ldi	r21, 0x41	; 65
    6cd8:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    6cdc:	dc 01       	movw	r26, r24
    6cde:	cb 01       	movw	r24, r22
    6ce0:	8e 01       	movw	r16, r28
    6ce2:	09 59       	subi	r16, 0x99	; 153
    6ce4:	1f 4f       	sbci	r17, 0xFF	; 255
    6ce6:	bc 01       	movw	r22, r24
    6ce8:	cd 01       	movw	r24, r26
    6cea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    6cee:	dc 01       	movw	r26, r24
    6cf0:	cb 01       	movw	r24, r22
    6cf2:	f8 01       	movw	r30, r16
    6cf4:	91 83       	std	Z+1, r25	; 0x01
    6cf6:	80 83       	st	Z, r24
    6cf8:	1f c0       	rjmp	.+62     	; 0x6d38 <main+0x19fe>
    6cfa:	fe 01       	movw	r30, r28
    6cfc:	eb 59       	subi	r30, 0x9B	; 155
    6cfe:	ff 4f       	sbci	r31, 0xFF	; 255
    6d00:	88 ec       	ldi	r24, 0xC8	; 200
    6d02:	90 e0       	ldi	r25, 0x00	; 0
    6d04:	91 83       	std	Z+1, r25	; 0x01
    6d06:	80 83       	st	Z, r24
    6d08:	fe 01       	movw	r30, r28
    6d0a:	eb 59       	subi	r30, 0x9B	; 155
    6d0c:	ff 4f       	sbci	r31, 0xFF	; 255
    6d0e:	80 81       	ld	r24, Z
    6d10:	91 81       	ldd	r25, Z+1	; 0x01
    6d12:	01 97       	sbiw	r24, 0x01	; 1
    6d14:	f1 f7       	brne	.-4      	; 0x6d12 <main+0x19d8>
    6d16:	fe 01       	movw	r30, r28
    6d18:	eb 59       	subi	r30, 0x9B	; 155
    6d1a:	ff 4f       	sbci	r31, 0xFF	; 255
    6d1c:	91 83       	std	Z+1, r25	; 0x01
    6d1e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6d20:	de 01       	movw	r26, r28
    6d22:	a9 59       	subi	r26, 0x99	; 153
    6d24:	bf 4f       	sbci	r27, 0xFF	; 255
    6d26:	fe 01       	movw	r30, r28
    6d28:	e9 59       	subi	r30, 0x99	; 153
    6d2a:	ff 4f       	sbci	r31, 0xFF	; 255
    6d2c:	80 81       	ld	r24, Z
    6d2e:	91 81       	ldd	r25, Z+1	; 0x01
    6d30:	01 97       	sbiw	r24, 0x01	; 1
    6d32:	11 96       	adiw	r26, 0x01	; 1
    6d34:	9c 93       	st	X, r25
    6d36:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6d38:	fe 01       	movw	r30, r28
    6d3a:	e9 59       	subi	r30, 0x99	; 153
    6d3c:	ff 4f       	sbci	r31, 0xFF	; 255
    6d3e:	80 81       	ld	r24, Z
    6d40:	91 81       	ldd	r25, Z+1	; 0x01
    6d42:	00 97       	sbiw	r24, 0x00	; 0
    6d44:	d1 f6       	brne	.-76     	; 0x6cfa <main+0x19c0>
    6d46:	27 c0       	rjmp	.+78     	; 0x6d96 <main+0x1a5c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6d48:	8e 01       	movw	r16, r28
    6d4a:	09 59       	subi	r16, 0x99	; 153
    6d4c:	1f 4f       	sbci	r17, 0xFF	; 255
    6d4e:	fe 01       	movw	r30, r28
    6d50:	e7 59       	subi	r30, 0x97	; 151
    6d52:	ff 4f       	sbci	r31, 0xFF	; 255
    6d54:	60 81       	ld	r22, Z
    6d56:	71 81       	ldd	r23, Z+1	; 0x01
    6d58:	82 81       	ldd	r24, Z+2	; 0x02
    6d5a:	93 81       	ldd	r25, Z+3	; 0x03
    6d5c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    6d60:	dc 01       	movw	r26, r24
    6d62:	cb 01       	movw	r24, r22
    6d64:	f8 01       	movw	r30, r16
    6d66:	91 83       	std	Z+1, r25	; 0x01
    6d68:	80 83       	st	Z, r24
    6d6a:	de 01       	movw	r26, r28
    6d6c:	ad 59       	subi	r26, 0x9D	; 157
    6d6e:	bf 4f       	sbci	r27, 0xFF	; 255
    6d70:	fe 01       	movw	r30, r28
    6d72:	e9 59       	subi	r30, 0x99	; 153
    6d74:	ff 4f       	sbci	r31, 0xFF	; 255
    6d76:	80 81       	ld	r24, Z
    6d78:	91 81       	ldd	r25, Z+1	; 0x01
    6d7a:	8d 93       	st	X+, r24
    6d7c:	9c 93       	st	X, r25
    6d7e:	fe 01       	movw	r30, r28
    6d80:	ed 59       	subi	r30, 0x9D	; 157
    6d82:	ff 4f       	sbci	r31, 0xFF	; 255
    6d84:	80 81       	ld	r24, Z
    6d86:	91 81       	ldd	r25, Z+1	; 0x01
    6d88:	01 97       	sbiw	r24, 0x01	; 1
    6d8a:	f1 f7       	brne	.-4      	; 0x6d88 <main+0x1a4e>
    6d8c:	fe 01       	movw	r30, r28
    6d8e:	ed 59       	subi	r30, 0x9D	; 157
    6d90:	ff 4f       	sbci	r31, 0xFF	; 255
    6d92:	91 83       	std	Z+1, r25	; 0x01
    6d94:	80 83       	st	Z, r24
														_delay_ms(500);
														CLCD_DisplayClear();
    6d96:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
    6d9a:	73 c1       	rjmp	.+742    	; 0x7082 <main+0x1d48>
														break;
													case '*': //return to Control Page
														CLCD_DisplayClear();
    6d9c:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
														Control_Choice();
    6da0:	0e 94 bc 25 	call	0x4b78	; 0x4b78 <Control_Choice>
    6da4:	fe 01       	movw	r30, r28
    6da6:	e1 5a       	subi	r30, 0xA1	; 161
    6da8:	ff 4f       	sbci	r31, 0xFF	; 255
    6daa:	80 e0       	ldi	r24, 0x00	; 0
    6dac:	90 e0       	ldi	r25, 0x00	; 0
    6dae:	aa e7       	ldi	r26, 0x7A	; 122
    6db0:	b4 e4       	ldi	r27, 0x44	; 68
    6db2:	80 83       	st	Z, r24
    6db4:	91 83       	std	Z+1, r25	; 0x01
    6db6:	a2 83       	std	Z+2, r26	; 0x02
    6db8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6dba:	8e 01       	movw	r16, r28
    6dbc:	05 5a       	subi	r16, 0xA5	; 165
    6dbe:	1f 4f       	sbci	r17, 0xFF	; 255
    6dc0:	fe 01       	movw	r30, r28
    6dc2:	e1 5a       	subi	r30, 0xA1	; 161
    6dc4:	ff 4f       	sbci	r31, 0xFF	; 255
    6dc6:	60 81       	ld	r22, Z
    6dc8:	71 81       	ldd	r23, Z+1	; 0x01
    6dca:	82 81       	ldd	r24, Z+2	; 0x02
    6dcc:	93 81       	ldd	r25, Z+3	; 0x03
    6dce:	20 e0       	ldi	r18, 0x00	; 0
    6dd0:	30 e0       	ldi	r19, 0x00	; 0
    6dd2:	4a ef       	ldi	r20, 0xFA	; 250
    6dd4:	54 e4       	ldi	r21, 0x44	; 68
    6dd6:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    6dda:	dc 01       	movw	r26, r24
    6ddc:	cb 01       	movw	r24, r22
    6dde:	f8 01       	movw	r30, r16
    6de0:	80 83       	st	Z, r24
    6de2:	91 83       	std	Z+1, r25	; 0x01
    6de4:	a2 83       	std	Z+2, r26	; 0x02
    6de6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6de8:	fe 01       	movw	r30, r28
    6dea:	e5 5a       	subi	r30, 0xA5	; 165
    6dec:	ff 4f       	sbci	r31, 0xFF	; 255
    6dee:	60 81       	ld	r22, Z
    6df0:	71 81       	ldd	r23, Z+1	; 0x01
    6df2:	82 81       	ldd	r24, Z+2	; 0x02
    6df4:	93 81       	ldd	r25, Z+3	; 0x03
    6df6:	20 e0       	ldi	r18, 0x00	; 0
    6df8:	30 e0       	ldi	r19, 0x00	; 0
    6dfa:	40 e8       	ldi	r20, 0x80	; 128
    6dfc:	5f e3       	ldi	r21, 0x3F	; 63
    6dfe:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    6e02:	88 23       	and	r24, r24
    6e04:	44 f4       	brge	.+16     	; 0x6e16 <main+0x1adc>
		__ticks = 1;
    6e06:	fe 01       	movw	r30, r28
    6e08:	e7 5a       	subi	r30, 0xA7	; 167
    6e0a:	ff 4f       	sbci	r31, 0xFF	; 255
    6e0c:	81 e0       	ldi	r24, 0x01	; 1
    6e0e:	90 e0       	ldi	r25, 0x00	; 0
    6e10:	91 83       	std	Z+1, r25	; 0x01
    6e12:	80 83       	st	Z, r24
    6e14:	64 c0       	rjmp	.+200    	; 0x6ede <main+0x1ba4>
	else if (__tmp > 65535)
    6e16:	fe 01       	movw	r30, r28
    6e18:	e5 5a       	subi	r30, 0xA5	; 165
    6e1a:	ff 4f       	sbci	r31, 0xFF	; 255
    6e1c:	60 81       	ld	r22, Z
    6e1e:	71 81       	ldd	r23, Z+1	; 0x01
    6e20:	82 81       	ldd	r24, Z+2	; 0x02
    6e22:	93 81       	ldd	r25, Z+3	; 0x03
    6e24:	20 e0       	ldi	r18, 0x00	; 0
    6e26:	3f ef       	ldi	r19, 0xFF	; 255
    6e28:	4f e7       	ldi	r20, 0x7F	; 127
    6e2a:	57 e4       	ldi	r21, 0x47	; 71
    6e2c:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    6e30:	18 16       	cp	r1, r24
    6e32:	0c f0       	brlt	.+2      	; 0x6e36 <main+0x1afc>
    6e34:	43 c0       	rjmp	.+134    	; 0x6ebc <main+0x1b82>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6e36:	fe 01       	movw	r30, r28
    6e38:	e1 5a       	subi	r30, 0xA1	; 161
    6e3a:	ff 4f       	sbci	r31, 0xFF	; 255
    6e3c:	60 81       	ld	r22, Z
    6e3e:	71 81       	ldd	r23, Z+1	; 0x01
    6e40:	82 81       	ldd	r24, Z+2	; 0x02
    6e42:	93 81       	ldd	r25, Z+3	; 0x03
    6e44:	20 e0       	ldi	r18, 0x00	; 0
    6e46:	30 e0       	ldi	r19, 0x00	; 0
    6e48:	40 e2       	ldi	r20, 0x20	; 32
    6e4a:	51 e4       	ldi	r21, 0x41	; 65
    6e4c:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    6e50:	dc 01       	movw	r26, r24
    6e52:	cb 01       	movw	r24, r22
    6e54:	8e 01       	movw	r16, r28
    6e56:	07 5a       	subi	r16, 0xA7	; 167
    6e58:	1f 4f       	sbci	r17, 0xFF	; 255
    6e5a:	bc 01       	movw	r22, r24
    6e5c:	cd 01       	movw	r24, r26
    6e5e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    6e62:	dc 01       	movw	r26, r24
    6e64:	cb 01       	movw	r24, r22
    6e66:	f8 01       	movw	r30, r16
    6e68:	91 83       	std	Z+1, r25	; 0x01
    6e6a:	80 83       	st	Z, r24
    6e6c:	1f c0       	rjmp	.+62     	; 0x6eac <main+0x1b72>
    6e6e:	fe 01       	movw	r30, r28
    6e70:	e9 5a       	subi	r30, 0xA9	; 169
    6e72:	ff 4f       	sbci	r31, 0xFF	; 255
    6e74:	88 ec       	ldi	r24, 0xC8	; 200
    6e76:	90 e0       	ldi	r25, 0x00	; 0
    6e78:	91 83       	std	Z+1, r25	; 0x01
    6e7a:	80 83       	st	Z, r24
    6e7c:	fe 01       	movw	r30, r28
    6e7e:	e9 5a       	subi	r30, 0xA9	; 169
    6e80:	ff 4f       	sbci	r31, 0xFF	; 255
    6e82:	80 81       	ld	r24, Z
    6e84:	91 81       	ldd	r25, Z+1	; 0x01
    6e86:	01 97       	sbiw	r24, 0x01	; 1
    6e88:	f1 f7       	brne	.-4      	; 0x6e86 <main+0x1b4c>
    6e8a:	fe 01       	movw	r30, r28
    6e8c:	e9 5a       	subi	r30, 0xA9	; 169
    6e8e:	ff 4f       	sbci	r31, 0xFF	; 255
    6e90:	91 83       	std	Z+1, r25	; 0x01
    6e92:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6e94:	de 01       	movw	r26, r28
    6e96:	a7 5a       	subi	r26, 0xA7	; 167
    6e98:	bf 4f       	sbci	r27, 0xFF	; 255
    6e9a:	fe 01       	movw	r30, r28
    6e9c:	e7 5a       	subi	r30, 0xA7	; 167
    6e9e:	ff 4f       	sbci	r31, 0xFF	; 255
    6ea0:	80 81       	ld	r24, Z
    6ea2:	91 81       	ldd	r25, Z+1	; 0x01
    6ea4:	01 97       	sbiw	r24, 0x01	; 1
    6ea6:	11 96       	adiw	r26, 0x01	; 1
    6ea8:	9c 93       	st	X, r25
    6eaa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6eac:	fe 01       	movw	r30, r28
    6eae:	e7 5a       	subi	r30, 0xA7	; 167
    6eb0:	ff 4f       	sbci	r31, 0xFF	; 255
    6eb2:	80 81       	ld	r24, Z
    6eb4:	91 81       	ldd	r25, Z+1	; 0x01
    6eb6:	00 97       	sbiw	r24, 0x00	; 0
    6eb8:	d1 f6       	brne	.-76     	; 0x6e6e <main+0x1b34>
    6eba:	27 c0       	rjmp	.+78     	; 0x6f0a <main+0x1bd0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6ebc:	8e 01       	movw	r16, r28
    6ebe:	07 5a       	subi	r16, 0xA7	; 167
    6ec0:	1f 4f       	sbci	r17, 0xFF	; 255
    6ec2:	fe 01       	movw	r30, r28
    6ec4:	e5 5a       	subi	r30, 0xA5	; 165
    6ec6:	ff 4f       	sbci	r31, 0xFF	; 255
    6ec8:	60 81       	ld	r22, Z
    6eca:	71 81       	ldd	r23, Z+1	; 0x01
    6ecc:	82 81       	ldd	r24, Z+2	; 0x02
    6ece:	93 81       	ldd	r25, Z+3	; 0x03
    6ed0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    6ed4:	dc 01       	movw	r26, r24
    6ed6:	cb 01       	movw	r24, r22
    6ed8:	f8 01       	movw	r30, r16
    6eda:	91 83       	std	Z+1, r25	; 0x01
    6edc:	80 83       	st	Z, r24
    6ede:	de 01       	movw	r26, r28
    6ee0:	ab 5a       	subi	r26, 0xAB	; 171
    6ee2:	bf 4f       	sbci	r27, 0xFF	; 255
    6ee4:	fe 01       	movw	r30, r28
    6ee6:	e7 5a       	subi	r30, 0xA7	; 167
    6ee8:	ff 4f       	sbci	r31, 0xFF	; 255
    6eea:	80 81       	ld	r24, Z
    6eec:	91 81       	ldd	r25, Z+1	; 0x01
    6eee:	8d 93       	st	X+, r24
    6ef0:	9c 93       	st	X, r25
    6ef2:	fe 01       	movw	r30, r28
    6ef4:	eb 5a       	subi	r30, 0xAB	; 171
    6ef6:	ff 4f       	sbci	r31, 0xFF	; 255
    6ef8:	80 81       	ld	r24, Z
    6efa:	91 81       	ldd	r25, Z+1	; 0x01
    6efc:	01 97       	sbiw	r24, 0x01	; 1
    6efe:	f1 f7       	brne	.-4      	; 0x6efc <main+0x1bc2>
    6f00:	fe 01       	movw	r30, r28
    6f02:	eb 5a       	subi	r30, 0xAB	; 171
    6f04:	ff 4f       	sbci	r31, 0xFF	; 255
    6f06:	91 83       	std	Z+1, r25	; 0x01
    6f08:	80 83       	st	Z, r24
														_delay_ms(1000);
														CLCD_DisplayClear();
    6f0a:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
    6f0e:	b9 c0       	rjmp	.+370    	; 0x7082 <main+0x1d48>
														break;
													case '=': //return to DC_Motor_ON Page
														CLCD_DisplayClear();
    6f10:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
														Control_DC_MOTOR_ON_Choice();
    6f14:	0e 94 3d 27 	call	0x4e7a	; 0x4e7a <Control_DC_MOTOR_ON_Choice>
    6f18:	fe 01       	movw	r30, r28
    6f1a:	ef 5a       	subi	r30, 0xAF	; 175
    6f1c:	ff 4f       	sbci	r31, 0xFF	; 255
    6f1e:	80 e0       	ldi	r24, 0x00	; 0
    6f20:	90 e0       	ldi	r25, 0x00	; 0
    6f22:	aa e7       	ldi	r26, 0x7A	; 122
    6f24:	b4 e4       	ldi	r27, 0x44	; 68
    6f26:	80 83       	st	Z, r24
    6f28:	91 83       	std	Z+1, r25	; 0x01
    6f2a:	a2 83       	std	Z+2, r26	; 0x02
    6f2c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6f2e:	8e 01       	movw	r16, r28
    6f30:	03 5b       	subi	r16, 0xB3	; 179
    6f32:	1f 4f       	sbci	r17, 0xFF	; 255
    6f34:	fe 01       	movw	r30, r28
    6f36:	ef 5a       	subi	r30, 0xAF	; 175
    6f38:	ff 4f       	sbci	r31, 0xFF	; 255
    6f3a:	60 81       	ld	r22, Z
    6f3c:	71 81       	ldd	r23, Z+1	; 0x01
    6f3e:	82 81       	ldd	r24, Z+2	; 0x02
    6f40:	93 81       	ldd	r25, Z+3	; 0x03
    6f42:	20 e0       	ldi	r18, 0x00	; 0
    6f44:	30 e0       	ldi	r19, 0x00	; 0
    6f46:	4a ef       	ldi	r20, 0xFA	; 250
    6f48:	54 e4       	ldi	r21, 0x44	; 68
    6f4a:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    6f4e:	dc 01       	movw	r26, r24
    6f50:	cb 01       	movw	r24, r22
    6f52:	f8 01       	movw	r30, r16
    6f54:	80 83       	st	Z, r24
    6f56:	91 83       	std	Z+1, r25	; 0x01
    6f58:	a2 83       	std	Z+2, r26	; 0x02
    6f5a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6f5c:	fe 01       	movw	r30, r28
    6f5e:	e3 5b       	subi	r30, 0xB3	; 179
    6f60:	ff 4f       	sbci	r31, 0xFF	; 255
    6f62:	60 81       	ld	r22, Z
    6f64:	71 81       	ldd	r23, Z+1	; 0x01
    6f66:	82 81       	ldd	r24, Z+2	; 0x02
    6f68:	93 81       	ldd	r25, Z+3	; 0x03
    6f6a:	20 e0       	ldi	r18, 0x00	; 0
    6f6c:	30 e0       	ldi	r19, 0x00	; 0
    6f6e:	40 e8       	ldi	r20, 0x80	; 128
    6f70:	5f e3       	ldi	r21, 0x3F	; 63
    6f72:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    6f76:	88 23       	and	r24, r24
    6f78:	44 f4       	brge	.+16     	; 0x6f8a <main+0x1c50>
		__ticks = 1;
    6f7a:	fe 01       	movw	r30, r28
    6f7c:	e5 5b       	subi	r30, 0xB5	; 181
    6f7e:	ff 4f       	sbci	r31, 0xFF	; 255
    6f80:	81 e0       	ldi	r24, 0x01	; 1
    6f82:	90 e0       	ldi	r25, 0x00	; 0
    6f84:	91 83       	std	Z+1, r25	; 0x01
    6f86:	80 83       	st	Z, r24
    6f88:	64 c0       	rjmp	.+200    	; 0x7052 <main+0x1d18>
	else if (__tmp > 65535)
    6f8a:	fe 01       	movw	r30, r28
    6f8c:	e3 5b       	subi	r30, 0xB3	; 179
    6f8e:	ff 4f       	sbci	r31, 0xFF	; 255
    6f90:	60 81       	ld	r22, Z
    6f92:	71 81       	ldd	r23, Z+1	; 0x01
    6f94:	82 81       	ldd	r24, Z+2	; 0x02
    6f96:	93 81       	ldd	r25, Z+3	; 0x03
    6f98:	20 e0       	ldi	r18, 0x00	; 0
    6f9a:	3f ef       	ldi	r19, 0xFF	; 255
    6f9c:	4f e7       	ldi	r20, 0x7F	; 127
    6f9e:	57 e4       	ldi	r21, 0x47	; 71
    6fa0:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    6fa4:	18 16       	cp	r1, r24
    6fa6:	0c f0       	brlt	.+2      	; 0x6faa <main+0x1c70>
    6fa8:	43 c0       	rjmp	.+134    	; 0x7030 <main+0x1cf6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6faa:	fe 01       	movw	r30, r28
    6fac:	ef 5a       	subi	r30, 0xAF	; 175
    6fae:	ff 4f       	sbci	r31, 0xFF	; 255
    6fb0:	60 81       	ld	r22, Z
    6fb2:	71 81       	ldd	r23, Z+1	; 0x01
    6fb4:	82 81       	ldd	r24, Z+2	; 0x02
    6fb6:	93 81       	ldd	r25, Z+3	; 0x03
    6fb8:	20 e0       	ldi	r18, 0x00	; 0
    6fba:	30 e0       	ldi	r19, 0x00	; 0
    6fbc:	40 e2       	ldi	r20, 0x20	; 32
    6fbe:	51 e4       	ldi	r21, 0x41	; 65
    6fc0:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    6fc4:	dc 01       	movw	r26, r24
    6fc6:	cb 01       	movw	r24, r22
    6fc8:	8e 01       	movw	r16, r28
    6fca:	05 5b       	subi	r16, 0xB5	; 181
    6fcc:	1f 4f       	sbci	r17, 0xFF	; 255
    6fce:	bc 01       	movw	r22, r24
    6fd0:	cd 01       	movw	r24, r26
    6fd2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    6fd6:	dc 01       	movw	r26, r24
    6fd8:	cb 01       	movw	r24, r22
    6fda:	f8 01       	movw	r30, r16
    6fdc:	91 83       	std	Z+1, r25	; 0x01
    6fde:	80 83       	st	Z, r24
    6fe0:	1f c0       	rjmp	.+62     	; 0x7020 <main+0x1ce6>
    6fe2:	fe 01       	movw	r30, r28
    6fe4:	e7 5b       	subi	r30, 0xB7	; 183
    6fe6:	ff 4f       	sbci	r31, 0xFF	; 255
    6fe8:	88 ec       	ldi	r24, 0xC8	; 200
    6fea:	90 e0       	ldi	r25, 0x00	; 0
    6fec:	91 83       	std	Z+1, r25	; 0x01
    6fee:	80 83       	st	Z, r24
    6ff0:	fe 01       	movw	r30, r28
    6ff2:	e7 5b       	subi	r30, 0xB7	; 183
    6ff4:	ff 4f       	sbci	r31, 0xFF	; 255
    6ff6:	80 81       	ld	r24, Z
    6ff8:	91 81       	ldd	r25, Z+1	; 0x01
    6ffa:	01 97       	sbiw	r24, 0x01	; 1
    6ffc:	f1 f7       	brne	.-4      	; 0x6ffa <main+0x1cc0>
    6ffe:	fe 01       	movw	r30, r28
    7000:	e7 5b       	subi	r30, 0xB7	; 183
    7002:	ff 4f       	sbci	r31, 0xFF	; 255
    7004:	91 83       	std	Z+1, r25	; 0x01
    7006:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7008:	de 01       	movw	r26, r28
    700a:	a5 5b       	subi	r26, 0xB5	; 181
    700c:	bf 4f       	sbci	r27, 0xFF	; 255
    700e:	fe 01       	movw	r30, r28
    7010:	e5 5b       	subi	r30, 0xB5	; 181
    7012:	ff 4f       	sbci	r31, 0xFF	; 255
    7014:	80 81       	ld	r24, Z
    7016:	91 81       	ldd	r25, Z+1	; 0x01
    7018:	01 97       	sbiw	r24, 0x01	; 1
    701a:	11 96       	adiw	r26, 0x01	; 1
    701c:	9c 93       	st	X, r25
    701e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7020:	fe 01       	movw	r30, r28
    7022:	e5 5b       	subi	r30, 0xB5	; 181
    7024:	ff 4f       	sbci	r31, 0xFF	; 255
    7026:	80 81       	ld	r24, Z
    7028:	91 81       	ldd	r25, Z+1	; 0x01
    702a:	00 97       	sbiw	r24, 0x00	; 0
    702c:	d1 f6       	brne	.-76     	; 0x6fe2 <main+0x1ca8>
    702e:	27 c0       	rjmp	.+78     	; 0x707e <main+0x1d44>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7030:	8e 01       	movw	r16, r28
    7032:	05 5b       	subi	r16, 0xB5	; 181
    7034:	1f 4f       	sbci	r17, 0xFF	; 255
    7036:	fe 01       	movw	r30, r28
    7038:	e3 5b       	subi	r30, 0xB3	; 179
    703a:	ff 4f       	sbci	r31, 0xFF	; 255
    703c:	60 81       	ld	r22, Z
    703e:	71 81       	ldd	r23, Z+1	; 0x01
    7040:	82 81       	ldd	r24, Z+2	; 0x02
    7042:	93 81       	ldd	r25, Z+3	; 0x03
    7044:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    7048:	dc 01       	movw	r26, r24
    704a:	cb 01       	movw	r24, r22
    704c:	f8 01       	movw	r30, r16
    704e:	91 83       	std	Z+1, r25	; 0x01
    7050:	80 83       	st	Z, r24
    7052:	de 01       	movw	r26, r28
    7054:	a9 5b       	subi	r26, 0xB9	; 185
    7056:	bf 4f       	sbci	r27, 0xFF	; 255
    7058:	fe 01       	movw	r30, r28
    705a:	e5 5b       	subi	r30, 0xB5	; 181
    705c:	ff 4f       	sbci	r31, 0xFF	; 255
    705e:	80 81       	ld	r24, Z
    7060:	91 81       	ldd	r25, Z+1	; 0x01
    7062:	8d 93       	st	X+, r24
    7064:	9c 93       	st	X, r25
    7066:	fe 01       	movw	r30, r28
    7068:	e9 5b       	subi	r30, 0xB9	; 185
    706a:	ff 4f       	sbci	r31, 0xFF	; 255
    706c:	80 81       	ld	r24, Z
    706e:	91 81       	ldd	r25, Z+1	; 0x01
    7070:	01 97       	sbiw	r24, 0x01	; 1
    7072:	f1 f7       	brne	.-4      	; 0x7070 <main+0x1d36>
    7074:	fe 01       	movw	r30, r28
    7076:	e9 5b       	subi	r30, 0xB9	; 185
    7078:	ff 4f       	sbci	r31, 0xFF	; 255
    707a:	91 83       	std	Z+1, r25	; 0x01
    707c:	80 83       	st	Z, r24
														_delay_ms(1000);
														CLCD_DisplayClear();
    707e:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
											Control_DC_MOTOR_ON_Choice();
											_delay_ms(1000);

											CLCD_DisplayClear();

											while(KeypadEntry != '*'){
    7082:	fe 01       	movw	r30, r28
    7084:	e3 50       	subi	r30, 0x03	; 3
    7086:	ff 4f       	sbci	r31, 0xFF	; 255
    7088:	80 81       	ld	r24, Z
    708a:	8a 32       	cpi	r24, 0x2A	; 42
    708c:	09 f0       	breq	.+2      	; 0x7090 <main+0x1d56>
    708e:	b2 cc       	rjmp	.-1692   	; 0x69f4 <main+0x16ba>
    7090:	84 c1       	rjmp	.+776    	; 0x739a <main+0x2060>
														break;
												}
											}
											break;
										case '2': //MOTOR_OFF
											CLCD_DisplayClear();
    7092:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>

											DC_MOTOR_OFF();
    7096:	0e 94 fe 27 	call	0x4ffc	; 0x4ffc <DC_MOTOR_OFF>

											CLCD_WriteString_Pos(wordDC_MOTOR_OFF,1,1);
    709a:	ce 01       	movw	r24, r28
    709c:	82 5a       	subi	r24, 0xA2	; 162
    709e:	9e 4f       	sbci	r25, 0xFE	; 254
    70a0:	61 e0       	ldi	r22, 0x01	; 1
    70a2:	41 e0       	ldi	r20, 0x01	; 1
    70a4:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
    70a8:	fe 01       	movw	r30, r28
    70aa:	ed 5b       	subi	r30, 0xBD	; 189
    70ac:	ff 4f       	sbci	r31, 0xFF	; 255
    70ae:	80 e0       	ldi	r24, 0x00	; 0
    70b0:	90 e0       	ldi	r25, 0x00	; 0
    70b2:	aa ef       	ldi	r26, 0xFA	; 250
    70b4:	b3 e4       	ldi	r27, 0x43	; 67
    70b6:	80 83       	st	Z, r24
    70b8:	91 83       	std	Z+1, r25	; 0x01
    70ba:	a2 83       	std	Z+2, r26	; 0x02
    70bc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    70be:	8e 01       	movw	r16, r28
    70c0:	01 5c       	subi	r16, 0xC1	; 193
    70c2:	1f 4f       	sbci	r17, 0xFF	; 255
    70c4:	fe 01       	movw	r30, r28
    70c6:	ed 5b       	subi	r30, 0xBD	; 189
    70c8:	ff 4f       	sbci	r31, 0xFF	; 255
    70ca:	60 81       	ld	r22, Z
    70cc:	71 81       	ldd	r23, Z+1	; 0x01
    70ce:	82 81       	ldd	r24, Z+2	; 0x02
    70d0:	93 81       	ldd	r25, Z+3	; 0x03
    70d2:	20 e0       	ldi	r18, 0x00	; 0
    70d4:	30 e0       	ldi	r19, 0x00	; 0
    70d6:	4a ef       	ldi	r20, 0xFA	; 250
    70d8:	54 e4       	ldi	r21, 0x44	; 68
    70da:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    70de:	dc 01       	movw	r26, r24
    70e0:	cb 01       	movw	r24, r22
    70e2:	f8 01       	movw	r30, r16
    70e4:	80 83       	st	Z, r24
    70e6:	91 83       	std	Z+1, r25	; 0x01
    70e8:	a2 83       	std	Z+2, r26	; 0x02
    70ea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    70ec:	fe 01       	movw	r30, r28
    70ee:	ff 96       	adiw	r30, 0x3f	; 63
    70f0:	60 81       	ld	r22, Z
    70f2:	71 81       	ldd	r23, Z+1	; 0x01
    70f4:	82 81       	ldd	r24, Z+2	; 0x02
    70f6:	93 81       	ldd	r25, Z+3	; 0x03
    70f8:	20 e0       	ldi	r18, 0x00	; 0
    70fa:	30 e0       	ldi	r19, 0x00	; 0
    70fc:	40 e8       	ldi	r20, 0x80	; 128
    70fe:	5f e3       	ldi	r21, 0x3F	; 63
    7100:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    7104:	88 23       	and	r24, r24
    7106:	2c f4       	brge	.+10     	; 0x7112 <main+0x1dd8>
		__ticks = 1;
    7108:	81 e0       	ldi	r24, 0x01	; 1
    710a:	90 e0       	ldi	r25, 0x00	; 0
    710c:	9e af       	std	Y+62, r25	; 0x3e
    710e:	8d af       	std	Y+61, r24	; 0x3d
    7110:	46 c0       	rjmp	.+140    	; 0x719e <main+0x1e64>
	else if (__tmp > 65535)
    7112:	fe 01       	movw	r30, r28
    7114:	ff 96       	adiw	r30, 0x3f	; 63
    7116:	60 81       	ld	r22, Z
    7118:	71 81       	ldd	r23, Z+1	; 0x01
    711a:	82 81       	ldd	r24, Z+2	; 0x02
    711c:	93 81       	ldd	r25, Z+3	; 0x03
    711e:	20 e0       	ldi	r18, 0x00	; 0
    7120:	3f ef       	ldi	r19, 0xFF	; 255
    7122:	4f e7       	ldi	r20, 0x7F	; 127
    7124:	57 e4       	ldi	r21, 0x47	; 71
    7126:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    712a:	18 16       	cp	r1, r24
    712c:	64 f5       	brge	.+88     	; 0x7186 <main+0x1e4c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    712e:	fe 01       	movw	r30, r28
    7130:	ed 5b       	subi	r30, 0xBD	; 189
    7132:	ff 4f       	sbci	r31, 0xFF	; 255
    7134:	60 81       	ld	r22, Z
    7136:	71 81       	ldd	r23, Z+1	; 0x01
    7138:	82 81       	ldd	r24, Z+2	; 0x02
    713a:	93 81       	ldd	r25, Z+3	; 0x03
    713c:	20 e0       	ldi	r18, 0x00	; 0
    713e:	30 e0       	ldi	r19, 0x00	; 0
    7140:	40 e2       	ldi	r20, 0x20	; 32
    7142:	51 e4       	ldi	r21, 0x41	; 65
    7144:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    7148:	dc 01       	movw	r26, r24
    714a:	cb 01       	movw	r24, r22
    714c:	bc 01       	movw	r22, r24
    714e:	cd 01       	movw	r24, r26
    7150:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    7154:	dc 01       	movw	r26, r24
    7156:	cb 01       	movw	r24, r22
    7158:	9e af       	std	Y+62, r25	; 0x3e
    715a:	8d af       	std	Y+61, r24	; 0x3d
    715c:	0f c0       	rjmp	.+30     	; 0x717c <main+0x1e42>
    715e:	88 ec       	ldi	r24, 0xC8	; 200
    7160:	90 e0       	ldi	r25, 0x00	; 0
    7162:	9c af       	std	Y+60, r25	; 0x3c
    7164:	8b af       	std	Y+59, r24	; 0x3b
    7166:	8b ad       	ldd	r24, Y+59	; 0x3b
    7168:	9c ad       	ldd	r25, Y+60	; 0x3c
    716a:	01 97       	sbiw	r24, 0x01	; 1
    716c:	f1 f7       	brne	.-4      	; 0x716a <main+0x1e30>
    716e:	9c af       	std	Y+60, r25	; 0x3c
    7170:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7172:	8d ad       	ldd	r24, Y+61	; 0x3d
    7174:	9e ad       	ldd	r25, Y+62	; 0x3e
    7176:	01 97       	sbiw	r24, 0x01	; 1
    7178:	9e af       	std	Y+62, r25	; 0x3e
    717a:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    717c:	8d ad       	ldd	r24, Y+61	; 0x3d
    717e:	9e ad       	ldd	r25, Y+62	; 0x3e
    7180:	00 97       	sbiw	r24, 0x00	; 0
    7182:	69 f7       	brne	.-38     	; 0x715e <main+0x1e24>
    7184:	16 c0       	rjmp	.+44     	; 0x71b2 <main+0x1e78>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7186:	fe 01       	movw	r30, r28
    7188:	ff 96       	adiw	r30, 0x3f	; 63
    718a:	60 81       	ld	r22, Z
    718c:	71 81       	ldd	r23, Z+1	; 0x01
    718e:	82 81       	ldd	r24, Z+2	; 0x02
    7190:	93 81       	ldd	r25, Z+3	; 0x03
    7192:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    7196:	dc 01       	movw	r26, r24
    7198:	cb 01       	movw	r24, r22
    719a:	9e af       	std	Y+62, r25	; 0x3e
    719c:	8d af       	std	Y+61, r24	; 0x3d
    719e:	8d ad       	ldd	r24, Y+61	; 0x3d
    71a0:	9e ad       	ldd	r25, Y+62	; 0x3e
    71a2:	9a af       	std	Y+58, r25	; 0x3a
    71a4:	89 af       	std	Y+57, r24	; 0x39
    71a6:	89 ad       	ldd	r24, Y+57	; 0x39
    71a8:	9a ad       	ldd	r25, Y+58	; 0x3a
    71aa:	01 97       	sbiw	r24, 0x01	; 1
    71ac:	f1 f7       	brne	.-4      	; 0x71aa <main+0x1e70>
    71ae:	9a af       	std	Y+58, r25	; 0x3a
    71b0:	89 af       	std	Y+57, r24	; 0x39
											_delay_ms(500);
											CLCD_DisplayClear();
    71b2:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
    71b6:	f1 c0       	rjmp	.+482    	; 0x739a <main+0x2060>
											break;
										case '*': //return to control page
											CLCD_DisplayClear();
    71b8:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
											Control_Choice();
    71bc:	0e 94 bc 25 	call	0x4b78	; 0x4b78 <Control_Choice>
    71c0:	80 e0       	ldi	r24, 0x00	; 0
    71c2:	90 e0       	ldi	r25, 0x00	; 0
    71c4:	aa e7       	ldi	r26, 0x7A	; 122
    71c6:	b4 e4       	ldi	r27, 0x44	; 68
    71c8:	8d ab       	std	Y+53, r24	; 0x35
    71ca:	9e ab       	std	Y+54, r25	; 0x36
    71cc:	af ab       	std	Y+55, r26	; 0x37
    71ce:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    71d0:	6d a9       	ldd	r22, Y+53	; 0x35
    71d2:	7e a9       	ldd	r23, Y+54	; 0x36
    71d4:	8f a9       	ldd	r24, Y+55	; 0x37
    71d6:	98 ad       	ldd	r25, Y+56	; 0x38
    71d8:	20 e0       	ldi	r18, 0x00	; 0
    71da:	30 e0       	ldi	r19, 0x00	; 0
    71dc:	4a ef       	ldi	r20, 0xFA	; 250
    71de:	54 e4       	ldi	r21, 0x44	; 68
    71e0:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    71e4:	dc 01       	movw	r26, r24
    71e6:	cb 01       	movw	r24, r22
    71e8:	89 ab       	std	Y+49, r24	; 0x31
    71ea:	9a ab       	std	Y+50, r25	; 0x32
    71ec:	ab ab       	std	Y+51, r26	; 0x33
    71ee:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    71f0:	69 a9       	ldd	r22, Y+49	; 0x31
    71f2:	7a a9       	ldd	r23, Y+50	; 0x32
    71f4:	8b a9       	ldd	r24, Y+51	; 0x33
    71f6:	9c a9       	ldd	r25, Y+52	; 0x34
    71f8:	20 e0       	ldi	r18, 0x00	; 0
    71fa:	30 e0       	ldi	r19, 0x00	; 0
    71fc:	40 e8       	ldi	r20, 0x80	; 128
    71fe:	5f e3       	ldi	r21, 0x3F	; 63
    7200:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    7204:	88 23       	and	r24, r24
    7206:	2c f4       	brge	.+10     	; 0x7212 <main+0x1ed8>
		__ticks = 1;
    7208:	81 e0       	ldi	r24, 0x01	; 1
    720a:	90 e0       	ldi	r25, 0x00	; 0
    720c:	98 ab       	std	Y+48, r25	; 0x30
    720e:	8f a7       	std	Y+47, r24	; 0x2f
    7210:	3f c0       	rjmp	.+126    	; 0x7290 <main+0x1f56>
	else if (__tmp > 65535)
    7212:	69 a9       	ldd	r22, Y+49	; 0x31
    7214:	7a a9       	ldd	r23, Y+50	; 0x32
    7216:	8b a9       	ldd	r24, Y+51	; 0x33
    7218:	9c a9       	ldd	r25, Y+52	; 0x34
    721a:	20 e0       	ldi	r18, 0x00	; 0
    721c:	3f ef       	ldi	r19, 0xFF	; 255
    721e:	4f e7       	ldi	r20, 0x7F	; 127
    7220:	57 e4       	ldi	r21, 0x47	; 71
    7222:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    7226:	18 16       	cp	r1, r24
    7228:	4c f5       	brge	.+82     	; 0x727c <main+0x1f42>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    722a:	6d a9       	ldd	r22, Y+53	; 0x35
    722c:	7e a9       	ldd	r23, Y+54	; 0x36
    722e:	8f a9       	ldd	r24, Y+55	; 0x37
    7230:	98 ad       	ldd	r25, Y+56	; 0x38
    7232:	20 e0       	ldi	r18, 0x00	; 0
    7234:	30 e0       	ldi	r19, 0x00	; 0
    7236:	40 e2       	ldi	r20, 0x20	; 32
    7238:	51 e4       	ldi	r21, 0x41	; 65
    723a:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    723e:	dc 01       	movw	r26, r24
    7240:	cb 01       	movw	r24, r22
    7242:	bc 01       	movw	r22, r24
    7244:	cd 01       	movw	r24, r26
    7246:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    724a:	dc 01       	movw	r26, r24
    724c:	cb 01       	movw	r24, r22
    724e:	98 ab       	std	Y+48, r25	; 0x30
    7250:	8f a7       	std	Y+47, r24	; 0x2f
    7252:	0f c0       	rjmp	.+30     	; 0x7272 <main+0x1f38>
    7254:	88 ec       	ldi	r24, 0xC8	; 200
    7256:	90 e0       	ldi	r25, 0x00	; 0
    7258:	9e a7       	std	Y+46, r25	; 0x2e
    725a:	8d a7       	std	Y+45, r24	; 0x2d
    725c:	8d a5       	ldd	r24, Y+45	; 0x2d
    725e:	9e a5       	ldd	r25, Y+46	; 0x2e
    7260:	01 97       	sbiw	r24, 0x01	; 1
    7262:	f1 f7       	brne	.-4      	; 0x7260 <main+0x1f26>
    7264:	9e a7       	std	Y+46, r25	; 0x2e
    7266:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7268:	8f a5       	ldd	r24, Y+47	; 0x2f
    726a:	98 a9       	ldd	r25, Y+48	; 0x30
    726c:	01 97       	sbiw	r24, 0x01	; 1
    726e:	98 ab       	std	Y+48, r25	; 0x30
    7270:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7272:	8f a5       	ldd	r24, Y+47	; 0x2f
    7274:	98 a9       	ldd	r25, Y+48	; 0x30
    7276:	00 97       	sbiw	r24, 0x00	; 0
    7278:	69 f7       	brne	.-38     	; 0x7254 <main+0x1f1a>
    727a:	14 c0       	rjmp	.+40     	; 0x72a4 <main+0x1f6a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    727c:	69 a9       	ldd	r22, Y+49	; 0x31
    727e:	7a a9       	ldd	r23, Y+50	; 0x32
    7280:	8b a9       	ldd	r24, Y+51	; 0x33
    7282:	9c a9       	ldd	r25, Y+52	; 0x34
    7284:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    7288:	dc 01       	movw	r26, r24
    728a:	cb 01       	movw	r24, r22
    728c:	98 ab       	std	Y+48, r25	; 0x30
    728e:	8f a7       	std	Y+47, r24	; 0x2f
    7290:	8f a5       	ldd	r24, Y+47	; 0x2f
    7292:	98 a9       	ldd	r25, Y+48	; 0x30
    7294:	9c a7       	std	Y+44, r25	; 0x2c
    7296:	8b a7       	std	Y+43, r24	; 0x2b
    7298:	8b a5       	ldd	r24, Y+43	; 0x2b
    729a:	9c a5       	ldd	r25, Y+44	; 0x2c
    729c:	01 97       	sbiw	r24, 0x01	; 1
    729e:	f1 f7       	brne	.-4      	; 0x729c <main+0x1f62>
    72a0:	9c a7       	std	Y+44, r25	; 0x2c
    72a2:	8b a7       	std	Y+43, r24	; 0x2b
											_delay_ms(1000);
											CLCD_DisplayClear();
    72a4:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
    72a8:	78 c0       	rjmp	.+240    	; 0x739a <main+0x2060>
											break;
										case '=': ; //return DC-Motor Control page
											CLCD_DisplayClear();
    72aa:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
											Control_DC_MOTOR_Choice();
    72ae:	0e 94 b6 26 	call	0x4d6c	; 0x4d6c <Control_DC_MOTOR_Choice>
    72b2:	80 e0       	ldi	r24, 0x00	; 0
    72b4:	90 e0       	ldi	r25, 0x00	; 0
    72b6:	aa e7       	ldi	r26, 0x7A	; 122
    72b8:	b4 e4       	ldi	r27, 0x44	; 68
    72ba:	8f a3       	std	Y+39, r24	; 0x27
    72bc:	98 a7       	std	Y+40, r25	; 0x28
    72be:	a9 a7       	std	Y+41, r26	; 0x29
    72c0:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    72c2:	6f a1       	ldd	r22, Y+39	; 0x27
    72c4:	78 a5       	ldd	r23, Y+40	; 0x28
    72c6:	89 a5       	ldd	r24, Y+41	; 0x29
    72c8:	9a a5       	ldd	r25, Y+42	; 0x2a
    72ca:	20 e0       	ldi	r18, 0x00	; 0
    72cc:	30 e0       	ldi	r19, 0x00	; 0
    72ce:	4a ef       	ldi	r20, 0xFA	; 250
    72d0:	54 e4       	ldi	r21, 0x44	; 68
    72d2:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    72d6:	dc 01       	movw	r26, r24
    72d8:	cb 01       	movw	r24, r22
    72da:	8b a3       	std	Y+35, r24	; 0x23
    72dc:	9c a3       	std	Y+36, r25	; 0x24
    72de:	ad a3       	std	Y+37, r26	; 0x25
    72e0:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    72e2:	6b a1       	ldd	r22, Y+35	; 0x23
    72e4:	7c a1       	ldd	r23, Y+36	; 0x24
    72e6:	8d a1       	ldd	r24, Y+37	; 0x25
    72e8:	9e a1       	ldd	r25, Y+38	; 0x26
    72ea:	20 e0       	ldi	r18, 0x00	; 0
    72ec:	30 e0       	ldi	r19, 0x00	; 0
    72ee:	40 e8       	ldi	r20, 0x80	; 128
    72f0:	5f e3       	ldi	r21, 0x3F	; 63
    72f2:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    72f6:	88 23       	and	r24, r24
    72f8:	2c f4       	brge	.+10     	; 0x7304 <main+0x1fca>
		__ticks = 1;
    72fa:	81 e0       	ldi	r24, 0x01	; 1
    72fc:	90 e0       	ldi	r25, 0x00	; 0
    72fe:	9a a3       	std	Y+34, r25	; 0x22
    7300:	89 a3       	std	Y+33, r24	; 0x21
    7302:	3f c0       	rjmp	.+126    	; 0x7382 <main+0x2048>
	else if (__tmp > 65535)
    7304:	6b a1       	ldd	r22, Y+35	; 0x23
    7306:	7c a1       	ldd	r23, Y+36	; 0x24
    7308:	8d a1       	ldd	r24, Y+37	; 0x25
    730a:	9e a1       	ldd	r25, Y+38	; 0x26
    730c:	20 e0       	ldi	r18, 0x00	; 0
    730e:	3f ef       	ldi	r19, 0xFF	; 255
    7310:	4f e7       	ldi	r20, 0x7F	; 127
    7312:	57 e4       	ldi	r21, 0x47	; 71
    7314:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    7318:	18 16       	cp	r1, r24
    731a:	4c f5       	brge	.+82     	; 0x736e <main+0x2034>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    731c:	6f a1       	ldd	r22, Y+39	; 0x27
    731e:	78 a5       	ldd	r23, Y+40	; 0x28
    7320:	89 a5       	ldd	r24, Y+41	; 0x29
    7322:	9a a5       	ldd	r25, Y+42	; 0x2a
    7324:	20 e0       	ldi	r18, 0x00	; 0
    7326:	30 e0       	ldi	r19, 0x00	; 0
    7328:	40 e2       	ldi	r20, 0x20	; 32
    732a:	51 e4       	ldi	r21, 0x41	; 65
    732c:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    7330:	dc 01       	movw	r26, r24
    7332:	cb 01       	movw	r24, r22
    7334:	bc 01       	movw	r22, r24
    7336:	cd 01       	movw	r24, r26
    7338:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    733c:	dc 01       	movw	r26, r24
    733e:	cb 01       	movw	r24, r22
    7340:	9a a3       	std	Y+34, r25	; 0x22
    7342:	89 a3       	std	Y+33, r24	; 0x21
    7344:	0f c0       	rjmp	.+30     	; 0x7364 <main+0x202a>
    7346:	88 ec       	ldi	r24, 0xC8	; 200
    7348:	90 e0       	ldi	r25, 0x00	; 0
    734a:	98 a3       	std	Y+32, r25	; 0x20
    734c:	8f 8f       	std	Y+31, r24	; 0x1f
    734e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    7350:	98 a1       	ldd	r25, Y+32	; 0x20
    7352:	01 97       	sbiw	r24, 0x01	; 1
    7354:	f1 f7       	brne	.-4      	; 0x7352 <main+0x2018>
    7356:	98 a3       	std	Y+32, r25	; 0x20
    7358:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    735a:	89 a1       	ldd	r24, Y+33	; 0x21
    735c:	9a a1       	ldd	r25, Y+34	; 0x22
    735e:	01 97       	sbiw	r24, 0x01	; 1
    7360:	9a a3       	std	Y+34, r25	; 0x22
    7362:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7364:	89 a1       	ldd	r24, Y+33	; 0x21
    7366:	9a a1       	ldd	r25, Y+34	; 0x22
    7368:	00 97       	sbiw	r24, 0x00	; 0
    736a:	69 f7       	brne	.-38     	; 0x7346 <main+0x200c>
    736c:	14 c0       	rjmp	.+40     	; 0x7396 <main+0x205c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    736e:	6b a1       	ldd	r22, Y+35	; 0x23
    7370:	7c a1       	ldd	r23, Y+36	; 0x24
    7372:	8d a1       	ldd	r24, Y+37	; 0x25
    7374:	9e a1       	ldd	r25, Y+38	; 0x26
    7376:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    737a:	dc 01       	movw	r26, r24
    737c:	cb 01       	movw	r24, r22
    737e:	9a a3       	std	Y+34, r25	; 0x22
    7380:	89 a3       	std	Y+33, r24	; 0x21
    7382:	89 a1       	ldd	r24, Y+33	; 0x21
    7384:	9a a1       	ldd	r25, Y+34	; 0x22
    7386:	9e 8f       	std	Y+30, r25	; 0x1e
    7388:	8d 8f       	std	Y+29, r24	; 0x1d
    738a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    738c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    738e:	01 97       	sbiw	r24, 0x01	; 1
    7390:	f1 f7       	brne	.-4      	; 0x738e <main+0x2054>
    7392:	9e 8f       	std	Y+30, r25	; 0x1e
    7394:	8d 8f       	std	Y+29, r24	; 0x1d
											_delay_ms(1000);
											CLCD_DisplayClear();
    7396:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
								Control_DC_MOTOR_Choice();
								_delay_ms(1000);

								CLCD_DisplayClear();

								while(KeypadEntry != '*'){
    739a:	fe 01       	movw	r30, r28
    739c:	e3 50       	subi	r30, 0x03	; 3
    739e:	ff 4f       	sbci	r31, 0xFF	; 255
    73a0:	80 81       	ld	r24, Z
    73a2:	8a 32       	cpi	r24, 0x2A	; 42
    73a4:	09 f0       	breq	.+2      	; 0x73a8 <main+0x206e>
    73a6:	1a ca       	rjmp	.-3020   	; 0x67dc <main+0x14a2>
											break;
										default:
											break;
									}
								}
								CLCD_DisplayClear();
    73a8:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
    73ac:	78 c0       	rjmp	.+240    	; 0x749e <main+0x2164>
								break;
							case '=': //return Control page
								CLCD_DisplayClear();
    73ae:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
								Control_Choice();
    73b2:	0e 94 bc 25 	call	0x4b78	; 0x4b78 <Control_Choice>
    73b6:	80 e0       	ldi	r24, 0x00	; 0
    73b8:	90 e0       	ldi	r25, 0x00	; 0
    73ba:	aa e7       	ldi	r26, 0x7A	; 122
    73bc:	b4 e4       	ldi	r27, 0x44	; 68
    73be:	89 8f       	std	Y+25, r24	; 0x19
    73c0:	9a 8f       	std	Y+26, r25	; 0x1a
    73c2:	ab 8f       	std	Y+27, r26	; 0x1b
    73c4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    73c6:	69 8d       	ldd	r22, Y+25	; 0x19
    73c8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    73ca:	8b 8d       	ldd	r24, Y+27	; 0x1b
    73cc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    73ce:	20 e0       	ldi	r18, 0x00	; 0
    73d0:	30 e0       	ldi	r19, 0x00	; 0
    73d2:	4a ef       	ldi	r20, 0xFA	; 250
    73d4:	54 e4       	ldi	r21, 0x44	; 68
    73d6:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    73da:	dc 01       	movw	r26, r24
    73dc:	cb 01       	movw	r24, r22
    73de:	8d 8b       	std	Y+21, r24	; 0x15
    73e0:	9e 8b       	std	Y+22, r25	; 0x16
    73e2:	af 8b       	std	Y+23, r26	; 0x17
    73e4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    73e6:	6d 89       	ldd	r22, Y+21	; 0x15
    73e8:	7e 89       	ldd	r23, Y+22	; 0x16
    73ea:	8f 89       	ldd	r24, Y+23	; 0x17
    73ec:	98 8d       	ldd	r25, Y+24	; 0x18
    73ee:	20 e0       	ldi	r18, 0x00	; 0
    73f0:	30 e0       	ldi	r19, 0x00	; 0
    73f2:	40 e8       	ldi	r20, 0x80	; 128
    73f4:	5f e3       	ldi	r21, 0x3F	; 63
    73f6:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    73fa:	88 23       	and	r24, r24
    73fc:	2c f4       	brge	.+10     	; 0x7408 <main+0x20ce>
		__ticks = 1;
    73fe:	81 e0       	ldi	r24, 0x01	; 1
    7400:	90 e0       	ldi	r25, 0x00	; 0
    7402:	9c 8b       	std	Y+20, r25	; 0x14
    7404:	8b 8b       	std	Y+19, r24	; 0x13
    7406:	3f c0       	rjmp	.+126    	; 0x7486 <main+0x214c>
	else if (__tmp > 65535)
    7408:	6d 89       	ldd	r22, Y+21	; 0x15
    740a:	7e 89       	ldd	r23, Y+22	; 0x16
    740c:	8f 89       	ldd	r24, Y+23	; 0x17
    740e:	98 8d       	ldd	r25, Y+24	; 0x18
    7410:	20 e0       	ldi	r18, 0x00	; 0
    7412:	3f ef       	ldi	r19, 0xFF	; 255
    7414:	4f e7       	ldi	r20, 0x7F	; 127
    7416:	57 e4       	ldi	r21, 0x47	; 71
    7418:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    741c:	18 16       	cp	r1, r24
    741e:	4c f5       	brge	.+82     	; 0x7472 <main+0x2138>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7420:	69 8d       	ldd	r22, Y+25	; 0x19
    7422:	7a 8d       	ldd	r23, Y+26	; 0x1a
    7424:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7426:	9c 8d       	ldd	r25, Y+28	; 0x1c
    7428:	20 e0       	ldi	r18, 0x00	; 0
    742a:	30 e0       	ldi	r19, 0x00	; 0
    742c:	40 e2       	ldi	r20, 0x20	; 32
    742e:	51 e4       	ldi	r21, 0x41	; 65
    7430:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    7434:	dc 01       	movw	r26, r24
    7436:	cb 01       	movw	r24, r22
    7438:	bc 01       	movw	r22, r24
    743a:	cd 01       	movw	r24, r26
    743c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    7440:	dc 01       	movw	r26, r24
    7442:	cb 01       	movw	r24, r22
    7444:	9c 8b       	std	Y+20, r25	; 0x14
    7446:	8b 8b       	std	Y+19, r24	; 0x13
    7448:	0f c0       	rjmp	.+30     	; 0x7468 <main+0x212e>
    744a:	88 ec       	ldi	r24, 0xC8	; 200
    744c:	90 e0       	ldi	r25, 0x00	; 0
    744e:	9a 8b       	std	Y+18, r25	; 0x12
    7450:	89 8b       	std	Y+17, r24	; 0x11
    7452:	89 89       	ldd	r24, Y+17	; 0x11
    7454:	9a 89       	ldd	r25, Y+18	; 0x12
    7456:	01 97       	sbiw	r24, 0x01	; 1
    7458:	f1 f7       	brne	.-4      	; 0x7456 <main+0x211c>
    745a:	9a 8b       	std	Y+18, r25	; 0x12
    745c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    745e:	8b 89       	ldd	r24, Y+19	; 0x13
    7460:	9c 89       	ldd	r25, Y+20	; 0x14
    7462:	01 97       	sbiw	r24, 0x01	; 1
    7464:	9c 8b       	std	Y+20, r25	; 0x14
    7466:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7468:	8b 89       	ldd	r24, Y+19	; 0x13
    746a:	9c 89       	ldd	r25, Y+20	; 0x14
    746c:	00 97       	sbiw	r24, 0x00	; 0
    746e:	69 f7       	brne	.-38     	; 0x744a <main+0x2110>
    7470:	14 c0       	rjmp	.+40     	; 0x749a <main+0x2160>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7472:	6d 89       	ldd	r22, Y+21	; 0x15
    7474:	7e 89       	ldd	r23, Y+22	; 0x16
    7476:	8f 89       	ldd	r24, Y+23	; 0x17
    7478:	98 8d       	ldd	r25, Y+24	; 0x18
    747a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    747e:	dc 01       	movw	r26, r24
    7480:	cb 01       	movw	r24, r22
    7482:	9c 8b       	std	Y+20, r25	; 0x14
    7484:	8b 8b       	std	Y+19, r24	; 0x13
    7486:	8b 89       	ldd	r24, Y+19	; 0x13
    7488:	9c 89       	ldd	r25, Y+20	; 0x14
    748a:	98 8b       	std	Y+16, r25	; 0x10
    748c:	8f 87       	std	Y+15, r24	; 0x0f
    748e:	8f 85       	ldd	r24, Y+15	; 0x0f
    7490:	98 89       	ldd	r25, Y+16	; 0x10
    7492:	01 97       	sbiw	r24, 0x01	; 1
    7494:	f1 f7       	brne	.-4      	; 0x7492 <main+0x2158>
    7496:	98 8b       	std	Y+16, r25	; 0x10
    7498:	8f 87       	std	Y+15, r24	; 0x0f
								_delay_ms(1000);
								CLCD_DisplayClear();
    749a:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
					Control_Choice(); //Control LED // Control Motor // Back to home page
					_delay_ms(1000);

					CLCD_DisplayClear();

					while(KeypadEntry != 'C'){
    749e:	fe 01       	movw	r30, r28
    74a0:	e3 50       	subi	r30, 0x03	; 3
    74a2:	ff 4f       	sbci	r31, 0xFF	; 255
    74a4:	80 81       	ld	r24, Z
    74a6:	83 34       	cpi	r24, 0x43	; 67
    74a8:	11 f0       	breq	.+4      	; 0x74ae <main+0x2174>
    74aa:	0c 94 e7 2e 	jmp	0x5dce	; 0x5dce <main+0xa94>
								break;
							default:
								break;
						}
					}
					CLCD_DisplayClear();
    74ae:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
    74b2:	0c 94 41 2d 	jmp	0x5a82	; 0x5a82 <main+0x748>
					break;
				case '2': //Display Status Page
					CLCD_DisplayClear();
    74b6:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>

					CLCD_WriteString_Pos(wordSTATUS_PAGE,1,1);
    74ba:	ce 01       	movw	r24, r28
    74bc:	85 5c       	subi	r24, 0xC5	; 197
    74be:	9e 4f       	sbci	r25, 0xFE	; 254
    74c0:	61 e0       	ldi	r22, 0x01	; 1
    74c2:	41 e0       	ldi	r20, 0x01	; 1
    74c4:	0e 94 f1 1d 	call	0x3be2	; 0x3be2 <CLCD_WriteString_Pos>
    74c8:	80 e0       	ldi	r24, 0x00	; 0
    74ca:	90 e0       	ldi	r25, 0x00	; 0
    74cc:	aa e7       	ldi	r26, 0x7A	; 122
    74ce:	b4 e4       	ldi	r27, 0x44	; 68
    74d0:	8b 87       	std	Y+11, r24	; 0x0b
    74d2:	9c 87       	std	Y+12, r25	; 0x0c
    74d4:	ad 87       	std	Y+13, r26	; 0x0d
    74d6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    74d8:	6b 85       	ldd	r22, Y+11	; 0x0b
    74da:	7c 85       	ldd	r23, Y+12	; 0x0c
    74dc:	8d 85       	ldd	r24, Y+13	; 0x0d
    74de:	9e 85       	ldd	r25, Y+14	; 0x0e
    74e0:	20 e0       	ldi	r18, 0x00	; 0
    74e2:	30 e0       	ldi	r19, 0x00	; 0
    74e4:	4a ef       	ldi	r20, 0xFA	; 250
    74e6:	54 e4       	ldi	r21, 0x44	; 68
    74e8:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    74ec:	dc 01       	movw	r26, r24
    74ee:	cb 01       	movw	r24, r22
    74f0:	8f 83       	std	Y+7, r24	; 0x07
    74f2:	98 87       	std	Y+8, r25	; 0x08
    74f4:	a9 87       	std	Y+9, r26	; 0x09
    74f6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    74f8:	6f 81       	ldd	r22, Y+7	; 0x07
    74fa:	78 85       	ldd	r23, Y+8	; 0x08
    74fc:	89 85       	ldd	r24, Y+9	; 0x09
    74fe:	9a 85       	ldd	r25, Y+10	; 0x0a
    7500:	20 e0       	ldi	r18, 0x00	; 0
    7502:	30 e0       	ldi	r19, 0x00	; 0
    7504:	40 e8       	ldi	r20, 0x80	; 128
    7506:	5f e3       	ldi	r21, 0x3F	; 63
    7508:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    750c:	88 23       	and	r24, r24
    750e:	2c f4       	brge	.+10     	; 0x751a <main+0x21e0>
		__ticks = 1;
    7510:	81 e0       	ldi	r24, 0x01	; 1
    7512:	90 e0       	ldi	r25, 0x00	; 0
    7514:	9e 83       	std	Y+6, r25	; 0x06
    7516:	8d 83       	std	Y+5, r24	; 0x05
    7518:	3f c0       	rjmp	.+126    	; 0x7598 <main+0x225e>
	else if (__tmp > 65535)
    751a:	6f 81       	ldd	r22, Y+7	; 0x07
    751c:	78 85       	ldd	r23, Y+8	; 0x08
    751e:	89 85       	ldd	r24, Y+9	; 0x09
    7520:	9a 85       	ldd	r25, Y+10	; 0x0a
    7522:	20 e0       	ldi	r18, 0x00	; 0
    7524:	3f ef       	ldi	r19, 0xFF	; 255
    7526:	4f e7       	ldi	r20, 0x7F	; 127
    7528:	57 e4       	ldi	r21, 0x47	; 71
    752a:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    752e:	18 16       	cp	r1, r24
    7530:	4c f5       	brge	.+82     	; 0x7584 <main+0x224a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7532:	6b 85       	ldd	r22, Y+11	; 0x0b
    7534:	7c 85       	ldd	r23, Y+12	; 0x0c
    7536:	8d 85       	ldd	r24, Y+13	; 0x0d
    7538:	9e 85       	ldd	r25, Y+14	; 0x0e
    753a:	20 e0       	ldi	r18, 0x00	; 0
    753c:	30 e0       	ldi	r19, 0x00	; 0
    753e:	40 e2       	ldi	r20, 0x20	; 32
    7540:	51 e4       	ldi	r21, 0x41	; 65
    7542:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    7546:	dc 01       	movw	r26, r24
    7548:	cb 01       	movw	r24, r22
    754a:	bc 01       	movw	r22, r24
    754c:	cd 01       	movw	r24, r26
    754e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    7552:	dc 01       	movw	r26, r24
    7554:	cb 01       	movw	r24, r22
    7556:	9e 83       	std	Y+6, r25	; 0x06
    7558:	8d 83       	std	Y+5, r24	; 0x05
    755a:	0f c0       	rjmp	.+30     	; 0x757a <main+0x2240>
    755c:	88 ec       	ldi	r24, 0xC8	; 200
    755e:	90 e0       	ldi	r25, 0x00	; 0
    7560:	9c 83       	std	Y+4, r25	; 0x04
    7562:	8b 83       	std	Y+3, r24	; 0x03
    7564:	8b 81       	ldd	r24, Y+3	; 0x03
    7566:	9c 81       	ldd	r25, Y+4	; 0x04
    7568:	01 97       	sbiw	r24, 0x01	; 1
    756a:	f1 f7       	brne	.-4      	; 0x7568 <main+0x222e>
    756c:	9c 83       	std	Y+4, r25	; 0x04
    756e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7570:	8d 81       	ldd	r24, Y+5	; 0x05
    7572:	9e 81       	ldd	r25, Y+6	; 0x06
    7574:	01 97       	sbiw	r24, 0x01	; 1
    7576:	9e 83       	std	Y+6, r25	; 0x06
    7578:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    757a:	8d 81       	ldd	r24, Y+5	; 0x05
    757c:	9e 81       	ldd	r25, Y+6	; 0x06
    757e:	00 97       	sbiw	r24, 0x00	; 0
    7580:	69 f7       	brne	.-38     	; 0x755c <main+0x2222>
    7582:	14 c0       	rjmp	.+40     	; 0x75ac <main+0x2272>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7584:	6f 81       	ldd	r22, Y+7	; 0x07
    7586:	78 85       	ldd	r23, Y+8	; 0x08
    7588:	89 85       	ldd	r24, Y+9	; 0x09
    758a:	9a 85       	ldd	r25, Y+10	; 0x0a
    758c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    7590:	dc 01       	movw	r26, r24
    7592:	cb 01       	movw	r24, r22
    7594:	9e 83       	std	Y+6, r25	; 0x06
    7596:	8d 83       	std	Y+5, r24	; 0x05
    7598:	8d 81       	ldd	r24, Y+5	; 0x05
    759a:	9e 81       	ldd	r25, Y+6	; 0x06
    759c:	9a 83       	std	Y+2, r25	; 0x02
    759e:	89 83       	std	Y+1, r24	; 0x01
    75a0:	89 81       	ldd	r24, Y+1	; 0x01
    75a2:	9a 81       	ldd	r25, Y+2	; 0x02
    75a4:	01 97       	sbiw	r24, 0x01	; 1
    75a6:	f1 f7       	brne	.-4      	; 0x75a4 <main+0x226a>
    75a8:	9a 83       	std	Y+2, r25	; 0x02
    75aa:	89 83       	std	Y+1, r24	; 0x01
					_delay_ms(1000);
					CLCD_DisplayClear();
    75ac:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
    75b0:	11 c0       	rjmp	.+34     	; 0x75d4 <main+0x229a>
					while(KeypadEntry != '*'){
						KeypadEntry = KPD_GetPressedKey();
    75b2:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <KPD_GetPressedKey>
    75b6:	fe 01       	movw	r30, r28
    75b8:	e3 50       	subi	r30, 0x03	; 3
    75ba:	ff 4f       	sbci	r31, 0xFF	; 255
    75bc:	80 83       	st	Z, r24
						switch (KeypadEntry) {
    75be:	fe 01       	movw	r30, r28
    75c0:	e3 50       	subi	r30, 0x03	; 3
    75c2:	ff 4f       	sbci	r31, 0xFF	; 255
    75c4:	80 81       	ld	r24, Z
    75c6:	88 2f       	mov	r24, r24
    75c8:	90 e0       	ldi	r25, 0x00	; 0
    75ca:	8a 32       	cpi	r24, 0x2A	; 42
    75cc:	91 05       	cpc	r25, r1
    75ce:	11 f0       	breq	.+4      	; 0x75d4 <main+0x229a>
							case '*':
								//return to Home Page
								break;
							default:
								Status_Choice();
    75d0:	0e 94 1b 28 	call	0x5036	; 0x5036 <Status_Choice>
					CLCD_DisplayClear();

					CLCD_WriteString_Pos(wordSTATUS_PAGE,1,1);
					_delay_ms(1000);
					CLCD_DisplayClear();
					while(KeypadEntry != '*'){
    75d4:	fe 01       	movw	r30, r28
    75d6:	e3 50       	subi	r30, 0x03	; 3
    75d8:	ff 4f       	sbci	r31, 0xFF	; 255
    75da:	80 81       	ld	r24, Z
    75dc:	8a 32       	cpi	r24, 0x2A	; 42
    75de:	49 f7       	brne	.-46     	; 0x75b2 <main+0x2278>
							default:
								Status_Choice();
								break;
						}
					}
					CLCD_DisplayClear();
    75e0:	0e 94 57 1b 	call	0x36ae	; 0x36ae <CLCD_DisplayClear>
    75e4:	0c 94 41 2d 	jmp	0x5a82	; 0x5a82 <main+0x748>

000075e8 <__mulsi3>:
    75e8:	62 9f       	mul	r22, r18
    75ea:	d0 01       	movw	r26, r0
    75ec:	73 9f       	mul	r23, r19
    75ee:	f0 01       	movw	r30, r0
    75f0:	82 9f       	mul	r24, r18
    75f2:	e0 0d       	add	r30, r0
    75f4:	f1 1d       	adc	r31, r1
    75f6:	64 9f       	mul	r22, r20
    75f8:	e0 0d       	add	r30, r0
    75fa:	f1 1d       	adc	r31, r1
    75fc:	92 9f       	mul	r25, r18
    75fe:	f0 0d       	add	r31, r0
    7600:	83 9f       	mul	r24, r19
    7602:	f0 0d       	add	r31, r0
    7604:	74 9f       	mul	r23, r20
    7606:	f0 0d       	add	r31, r0
    7608:	65 9f       	mul	r22, r21
    760a:	f0 0d       	add	r31, r0
    760c:	99 27       	eor	r25, r25
    760e:	72 9f       	mul	r23, r18
    7610:	b0 0d       	add	r27, r0
    7612:	e1 1d       	adc	r30, r1
    7614:	f9 1f       	adc	r31, r25
    7616:	63 9f       	mul	r22, r19
    7618:	b0 0d       	add	r27, r0
    761a:	e1 1d       	adc	r30, r1
    761c:	f9 1f       	adc	r31, r25
    761e:	bd 01       	movw	r22, r26
    7620:	cf 01       	movw	r24, r30
    7622:	11 24       	eor	r1, r1
    7624:	08 95       	ret

00007626 <__udivmodqi4>:
    7626:	99 1b       	sub	r25, r25
    7628:	79 e0       	ldi	r23, 0x09	; 9
    762a:	04 c0       	rjmp	.+8      	; 0x7634 <__udivmodqi4_ep>

0000762c <__udivmodqi4_loop>:
    762c:	99 1f       	adc	r25, r25
    762e:	96 17       	cp	r25, r22
    7630:	08 f0       	brcs	.+2      	; 0x7634 <__udivmodqi4_ep>
    7632:	96 1b       	sub	r25, r22

00007634 <__udivmodqi4_ep>:
    7634:	88 1f       	adc	r24, r24
    7636:	7a 95       	dec	r23
    7638:	c9 f7       	brne	.-14     	; 0x762c <__udivmodqi4_loop>
    763a:	80 95       	com	r24
    763c:	08 95       	ret

0000763e <__divmodsi4>:
    763e:	97 fb       	bst	r25, 7
    7640:	09 2e       	mov	r0, r25
    7642:	05 26       	eor	r0, r21
    7644:	0e d0       	rcall	.+28     	; 0x7662 <__divmodsi4_neg1>
    7646:	57 fd       	sbrc	r21, 7
    7648:	04 d0       	rcall	.+8      	; 0x7652 <__divmodsi4_neg2>
    764a:	14 d0       	rcall	.+40     	; 0x7674 <__udivmodsi4>
    764c:	0a d0       	rcall	.+20     	; 0x7662 <__divmodsi4_neg1>
    764e:	00 1c       	adc	r0, r0
    7650:	38 f4       	brcc	.+14     	; 0x7660 <__divmodsi4_exit>

00007652 <__divmodsi4_neg2>:
    7652:	50 95       	com	r21
    7654:	40 95       	com	r20
    7656:	30 95       	com	r19
    7658:	21 95       	neg	r18
    765a:	3f 4f       	sbci	r19, 0xFF	; 255
    765c:	4f 4f       	sbci	r20, 0xFF	; 255
    765e:	5f 4f       	sbci	r21, 0xFF	; 255

00007660 <__divmodsi4_exit>:
    7660:	08 95       	ret

00007662 <__divmodsi4_neg1>:
    7662:	f6 f7       	brtc	.-4      	; 0x7660 <__divmodsi4_exit>
    7664:	90 95       	com	r25
    7666:	80 95       	com	r24
    7668:	70 95       	com	r23
    766a:	61 95       	neg	r22
    766c:	7f 4f       	sbci	r23, 0xFF	; 255
    766e:	8f 4f       	sbci	r24, 0xFF	; 255
    7670:	9f 4f       	sbci	r25, 0xFF	; 255
    7672:	08 95       	ret

00007674 <__udivmodsi4>:
    7674:	a1 e2       	ldi	r26, 0x21	; 33
    7676:	1a 2e       	mov	r1, r26
    7678:	aa 1b       	sub	r26, r26
    767a:	bb 1b       	sub	r27, r27
    767c:	fd 01       	movw	r30, r26
    767e:	0d c0       	rjmp	.+26     	; 0x769a <__udivmodsi4_ep>

00007680 <__udivmodsi4_loop>:
    7680:	aa 1f       	adc	r26, r26
    7682:	bb 1f       	adc	r27, r27
    7684:	ee 1f       	adc	r30, r30
    7686:	ff 1f       	adc	r31, r31
    7688:	a2 17       	cp	r26, r18
    768a:	b3 07       	cpc	r27, r19
    768c:	e4 07       	cpc	r30, r20
    768e:	f5 07       	cpc	r31, r21
    7690:	20 f0       	brcs	.+8      	; 0x769a <__udivmodsi4_ep>
    7692:	a2 1b       	sub	r26, r18
    7694:	b3 0b       	sbc	r27, r19
    7696:	e4 0b       	sbc	r30, r20
    7698:	f5 0b       	sbc	r31, r21

0000769a <__udivmodsi4_ep>:
    769a:	66 1f       	adc	r22, r22
    769c:	77 1f       	adc	r23, r23
    769e:	88 1f       	adc	r24, r24
    76a0:	99 1f       	adc	r25, r25
    76a2:	1a 94       	dec	r1
    76a4:	69 f7       	brne	.-38     	; 0x7680 <__udivmodsi4_loop>
    76a6:	60 95       	com	r22
    76a8:	70 95       	com	r23
    76aa:	80 95       	com	r24
    76ac:	90 95       	com	r25
    76ae:	9b 01       	movw	r18, r22
    76b0:	ac 01       	movw	r20, r24
    76b2:	bd 01       	movw	r22, r26
    76b4:	cf 01       	movw	r24, r30
    76b6:	08 95       	ret

000076b8 <__prologue_saves__>:
    76b8:	2f 92       	push	r2
    76ba:	3f 92       	push	r3
    76bc:	4f 92       	push	r4
    76be:	5f 92       	push	r5
    76c0:	6f 92       	push	r6
    76c2:	7f 92       	push	r7
    76c4:	8f 92       	push	r8
    76c6:	9f 92       	push	r9
    76c8:	af 92       	push	r10
    76ca:	bf 92       	push	r11
    76cc:	cf 92       	push	r12
    76ce:	df 92       	push	r13
    76d0:	ef 92       	push	r14
    76d2:	ff 92       	push	r15
    76d4:	0f 93       	push	r16
    76d6:	1f 93       	push	r17
    76d8:	cf 93       	push	r28
    76da:	df 93       	push	r29
    76dc:	cd b7       	in	r28, 0x3d	; 61
    76de:	de b7       	in	r29, 0x3e	; 62
    76e0:	ca 1b       	sub	r28, r26
    76e2:	db 0b       	sbc	r29, r27
    76e4:	0f b6       	in	r0, 0x3f	; 63
    76e6:	f8 94       	cli
    76e8:	de bf       	out	0x3e, r29	; 62
    76ea:	0f be       	out	0x3f, r0	; 63
    76ec:	cd bf       	out	0x3d, r28	; 61
    76ee:	09 94       	ijmp

000076f0 <__epilogue_restores__>:
    76f0:	2a 88       	ldd	r2, Y+18	; 0x12
    76f2:	39 88       	ldd	r3, Y+17	; 0x11
    76f4:	48 88       	ldd	r4, Y+16	; 0x10
    76f6:	5f 84       	ldd	r5, Y+15	; 0x0f
    76f8:	6e 84       	ldd	r6, Y+14	; 0x0e
    76fa:	7d 84       	ldd	r7, Y+13	; 0x0d
    76fc:	8c 84       	ldd	r8, Y+12	; 0x0c
    76fe:	9b 84       	ldd	r9, Y+11	; 0x0b
    7700:	aa 84       	ldd	r10, Y+10	; 0x0a
    7702:	b9 84       	ldd	r11, Y+9	; 0x09
    7704:	c8 84       	ldd	r12, Y+8	; 0x08
    7706:	df 80       	ldd	r13, Y+7	; 0x07
    7708:	ee 80       	ldd	r14, Y+6	; 0x06
    770a:	fd 80       	ldd	r15, Y+5	; 0x05
    770c:	0c 81       	ldd	r16, Y+4	; 0x04
    770e:	1b 81       	ldd	r17, Y+3	; 0x03
    7710:	aa 81       	ldd	r26, Y+2	; 0x02
    7712:	b9 81       	ldd	r27, Y+1	; 0x01
    7714:	ce 0f       	add	r28, r30
    7716:	d1 1d       	adc	r29, r1
    7718:	0f b6       	in	r0, 0x3f	; 63
    771a:	f8 94       	cli
    771c:	de bf       	out	0x3e, r29	; 62
    771e:	0f be       	out	0x3f, r0	; 63
    7720:	cd bf       	out	0x3d, r28	; 61
    7722:	ed 01       	movw	r28, r26
    7724:	08 95       	ret

00007726 <_exit>:
    7726:	f8 94       	cli

00007728 <__stop_program>:
    7728:	ff cf       	rjmp	.-2      	; 0x7728 <__stop_program>
