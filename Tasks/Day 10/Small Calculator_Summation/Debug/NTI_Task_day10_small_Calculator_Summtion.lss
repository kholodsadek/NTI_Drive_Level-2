
NTI_Task_day10_small_Calculator_Summtion.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000040d8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000164  00800060  000040d8  0000414c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002508  00000000  00000000  000042b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000011ff  00000000  00000000  000067b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000180  00000000  00000000  000079b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001d0  00000000  00000000  00007b37  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b67  00000000  00000000  00007d07  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001266  00000000  00000000  0000a86e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001231  00000000  00000000  0000bad4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  0000cd08  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000031d  00000000  00000000  0000cea8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000020f4  00000000  00000000  0000d1c5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  0000f2b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 ed       	ldi	r30, 0xD8	; 216
      68:	f0 e4       	ldi	r31, 0x40	; 64
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a4 3c       	cpi	r26, 0xC4	; 196
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 0e 1f 	call	0x3e1c	; 0x3e1c <main>
      7a:	0c 94 6a 20 	jmp	0x40d4	; 0x40d4 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 26 10 	call	0x204c	; 0x204c <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 9e 0e 	call	0x1d3c	; 0x1d3c <__subsf3>
      ae:	0e 94 86 10 	call	0x210c	; 0x210c <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 86 10 	call	0x210c	; 0x210c <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <__udivdi3>:
      da:	ae e5       	ldi	r26, 0x5E	; 94
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 33 20 	jmp	0x4066	; 0x4066 <__prologue_saves__>
      e6:	a8 e0       	ldi	r26, 0x08	; 8
      e8:	4e 01       	movw	r8, r28
      ea:	08 94       	sec
      ec:	81 1c       	adc	r8, r1
      ee:	91 1c       	adc	r9, r1
      f0:	f4 01       	movw	r30, r8
      f2:	6a 2e       	mov	r6, r26
      f4:	11 92       	st	Z+, r1
      f6:	6a 94       	dec	r6
      f8:	e9 f7       	brne	.-6      	; 0xf4 <__udivdi3+0x1a>
      fa:	29 83       	std	Y+1, r18	; 0x01
      fc:	3a 83       	std	Y+2, r19	; 0x02
      fe:	4b 83       	std	Y+3, r20	; 0x03
     100:	5c 83       	std	Y+4, r21	; 0x04
     102:	6d 83       	std	Y+5, r22	; 0x05
     104:	7e 83       	std	Y+6, r23	; 0x06
     106:	8f 83       	std	Y+7, r24	; 0x07
     108:	98 87       	std	Y+8, r25	; 0x08
     10a:	ce 01       	movw	r24, r28
     10c:	09 96       	adiw	r24, 0x09	; 9
     10e:	fc 01       	movw	r30, r24
     110:	11 92       	st	Z+, r1
     112:	aa 95       	dec	r26
     114:	e9 f7       	brne	.-6      	; 0x110 <__udivdi3+0x36>
     116:	a9 86       	std	Y+9, r10	; 0x09
     118:	ba 86       	std	Y+10, r11	; 0x0a
     11a:	cb 86       	std	Y+11, r12	; 0x0b
     11c:	dc 86       	std	Y+12, r13	; 0x0c
     11e:	ed 86       	std	Y+13, r14	; 0x0d
     120:	fe 86       	std	Y+14, r15	; 0x0e
     122:	0f 87       	std	Y+15, r16	; 0x0f
     124:	18 8b       	std	Y+16, r17	; 0x10
     126:	29 84       	ldd	r2, Y+9	; 0x09
     128:	3a 84       	ldd	r3, Y+10	; 0x0a
     12a:	4b 84       	ldd	r4, Y+11	; 0x0b
     12c:	5c 84       	ldd	r5, Y+12	; 0x0c
     12e:	ed 84       	ldd	r14, Y+13	; 0x0d
     130:	fe 84       	ldd	r15, Y+14	; 0x0e
     132:	0f 85       	ldd	r16, Y+15	; 0x0f
     134:	18 89       	ldd	r17, Y+16	; 0x10
     136:	69 80       	ldd	r6, Y+1	; 0x01
     138:	7a 80       	ldd	r7, Y+2	; 0x02
     13a:	8b 80       	ldd	r8, Y+3	; 0x03
     13c:	9c 80       	ldd	r9, Y+4	; 0x04
     13e:	6d a6       	std	Y+45, r6	; 0x2d
     140:	7e a6       	std	Y+46, r7	; 0x2e
     142:	8f a6       	std	Y+47, r8	; 0x2f
     144:	98 aa       	std	Y+48, r9	; 0x30
     146:	6d 80       	ldd	r6, Y+5	; 0x05
     148:	7e 80       	ldd	r7, Y+6	; 0x06
     14a:	8f 80       	ldd	r8, Y+7	; 0x07
     14c:	98 84       	ldd	r9, Y+8	; 0x08
     14e:	e1 14       	cp	r14, r1
     150:	f1 04       	cpc	r15, r1
     152:	01 05       	cpc	r16, r1
     154:	11 05       	cpc	r17, r1
     156:	09 f0       	breq	.+2      	; 0x15a <__udivdi3+0x80>
     158:	b3 c3       	rjmp	.+1894   	; 0x8c0 <__stack+0x61>
     15a:	62 14       	cp	r6, r2
     15c:	73 04       	cpc	r7, r3
     15e:	84 04       	cpc	r8, r4
     160:	95 04       	cpc	r9, r5
     162:	08 f0       	brcs	.+2      	; 0x166 <__udivdi3+0x8c>
     164:	3d c1       	rjmp	.+634    	; 0x3e0 <__udivdi3+0x306>
     166:	00 e0       	ldi	r16, 0x00	; 0
     168:	20 16       	cp	r2, r16
     16a:	00 e0       	ldi	r16, 0x00	; 0
     16c:	30 06       	cpc	r3, r16
     16e:	01 e0       	ldi	r16, 0x01	; 1
     170:	40 06       	cpc	r4, r16
     172:	00 e0       	ldi	r16, 0x00	; 0
     174:	50 06       	cpc	r5, r16
     176:	88 f4       	brcc	.+34     	; 0x19a <__udivdi3+0xc0>
     178:	1f ef       	ldi	r17, 0xFF	; 255
     17a:	21 16       	cp	r2, r17
     17c:	31 04       	cpc	r3, r1
     17e:	41 04       	cpc	r4, r1
     180:	51 04       	cpc	r5, r1
     182:	39 f0       	breq	.+14     	; 0x192 <__udivdi3+0xb8>
     184:	30 f0       	brcs	.+12     	; 0x192 <__udivdi3+0xb8>
     186:	48 e0       	ldi	r20, 0x08	; 8
     188:	e4 2e       	mov	r14, r20
     18a:	f1 2c       	mov	r15, r1
     18c:	01 2d       	mov	r16, r1
     18e:	11 2d       	mov	r17, r1
     190:	18 c0       	rjmp	.+48     	; 0x1c2 <__udivdi3+0xe8>
     192:	ee 24       	eor	r14, r14
     194:	ff 24       	eor	r15, r15
     196:	87 01       	movw	r16, r14
     198:	14 c0       	rjmp	.+40     	; 0x1c2 <__udivdi3+0xe8>
     19a:	20 e0       	ldi	r18, 0x00	; 0
     19c:	22 16       	cp	r2, r18
     19e:	20 e0       	ldi	r18, 0x00	; 0
     1a0:	32 06       	cpc	r3, r18
     1a2:	20 e0       	ldi	r18, 0x00	; 0
     1a4:	42 06       	cpc	r4, r18
     1a6:	21 e0       	ldi	r18, 0x01	; 1
     1a8:	52 06       	cpc	r5, r18
     1aa:	30 f0       	brcs	.+12     	; 0x1b8 <__udivdi3+0xde>
     1ac:	38 e1       	ldi	r19, 0x18	; 24
     1ae:	e3 2e       	mov	r14, r19
     1b0:	f1 2c       	mov	r15, r1
     1b2:	01 2d       	mov	r16, r1
     1b4:	11 2d       	mov	r17, r1
     1b6:	05 c0       	rjmp	.+10     	; 0x1c2 <__udivdi3+0xe8>
     1b8:	20 e1       	ldi	r18, 0x10	; 16
     1ba:	e2 2e       	mov	r14, r18
     1bc:	f1 2c       	mov	r15, r1
     1be:	01 2d       	mov	r16, r1
     1c0:	11 2d       	mov	r17, r1
     1c2:	d2 01       	movw	r26, r4
     1c4:	c1 01       	movw	r24, r2
     1c6:	0e 2c       	mov	r0, r14
     1c8:	04 c0       	rjmp	.+8      	; 0x1d2 <__udivdi3+0xf8>
     1ca:	b6 95       	lsr	r27
     1cc:	a7 95       	ror	r26
     1ce:	97 95       	ror	r25
     1d0:	87 95       	ror	r24
     1d2:	0a 94       	dec	r0
     1d4:	d2 f7       	brpl	.-12     	; 0x1ca <__udivdi3+0xf0>
     1d6:	85 59       	subi	r24, 0x95	; 149
     1d8:	9f 4f       	sbci	r25, 0xFF	; 255
     1da:	dc 01       	movw	r26, r24
     1dc:	2c 91       	ld	r18, X
     1de:	80 e2       	ldi	r24, 0x20	; 32
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	a0 e0       	ldi	r26, 0x00	; 0
     1e4:	b0 e0       	ldi	r27, 0x00	; 0
     1e6:	8e 19       	sub	r24, r14
     1e8:	9f 09       	sbc	r25, r15
     1ea:	a0 0b       	sbc	r26, r16
     1ec:	b1 0b       	sbc	r27, r17
     1ee:	7c 01       	movw	r14, r24
     1f0:	8d 01       	movw	r16, r26
     1f2:	e2 1a       	sub	r14, r18
     1f4:	f1 08       	sbc	r15, r1
     1f6:	01 09       	sbc	r16, r1
     1f8:	11 09       	sbc	r17, r1
     1fa:	e1 14       	cp	r14, r1
     1fc:	f1 04       	cpc	r15, r1
     1fe:	01 05       	cpc	r16, r1
     200:	11 05       	cpc	r17, r1
     202:	a1 f1       	breq	.+104    	; 0x26c <__udivdi3+0x192>
     204:	0e 2c       	mov	r0, r14
     206:	04 c0       	rjmp	.+8      	; 0x210 <__udivdi3+0x136>
     208:	22 0c       	add	r2, r2
     20a:	33 1c       	adc	r3, r3
     20c:	44 1c       	adc	r4, r4
     20e:	55 1c       	adc	r5, r5
     210:	0a 94       	dec	r0
     212:	d2 f7       	brpl	.-12     	; 0x208 <__udivdi3+0x12e>
     214:	a4 01       	movw	r20, r8
     216:	93 01       	movw	r18, r6
     218:	0e 2c       	mov	r0, r14
     21a:	04 c0       	rjmp	.+8      	; 0x224 <__udivdi3+0x14a>
     21c:	22 0f       	add	r18, r18
     21e:	33 1f       	adc	r19, r19
     220:	44 1f       	adc	r20, r20
     222:	55 1f       	adc	r21, r21
     224:	0a 94       	dec	r0
     226:	d2 f7       	brpl	.-12     	; 0x21c <__udivdi3+0x142>
     228:	80 e2       	ldi	r24, 0x20	; 32
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	8e 19       	sub	r24, r14
     22e:	9f 09       	sbc	r25, r15
     230:	6d a4       	ldd	r6, Y+45	; 0x2d
     232:	7e a4       	ldd	r7, Y+46	; 0x2e
     234:	8f a4       	ldd	r8, Y+47	; 0x2f
     236:	98 a8       	ldd	r9, Y+48	; 0x30
     238:	04 c0       	rjmp	.+8      	; 0x242 <__udivdi3+0x168>
     23a:	96 94       	lsr	r9
     23c:	87 94       	ror	r8
     23e:	77 94       	ror	r7
     240:	67 94       	ror	r6
     242:	8a 95       	dec	r24
     244:	d2 f7       	brpl	.-12     	; 0x23a <__udivdi3+0x160>
     246:	62 2a       	or	r6, r18
     248:	73 2a       	or	r7, r19
     24a:	84 2a       	or	r8, r20
     24c:	95 2a       	or	r9, r21
     24e:	ad a4       	ldd	r10, Y+45	; 0x2d
     250:	be a4       	ldd	r11, Y+46	; 0x2e
     252:	cf a4       	ldd	r12, Y+47	; 0x2f
     254:	d8 a8       	ldd	r13, Y+48	; 0x30
     256:	04 c0       	rjmp	.+8      	; 0x260 <__udivdi3+0x186>
     258:	aa 0c       	add	r10, r10
     25a:	bb 1c       	adc	r11, r11
     25c:	cc 1c       	adc	r12, r12
     25e:	dd 1c       	adc	r13, r13
     260:	ea 94       	dec	r14
     262:	d2 f7       	brpl	.-12     	; 0x258 <__udivdi3+0x17e>
     264:	ad a6       	std	Y+45, r10	; 0x2d
     266:	be a6       	std	Y+46, r11	; 0x2e
     268:	cf a6       	std	Y+47, r12	; 0x2f
     26a:	d8 aa       	std	Y+48, r13	; 0x30
     26c:	62 01       	movw	r12, r4
     26e:	ee 24       	eor	r14, r14
     270:	ff 24       	eor	r15, r15
     272:	cd aa       	std	Y+53, r12	; 0x35
     274:	de aa       	std	Y+54, r13	; 0x36
     276:	ef aa       	std	Y+55, r14	; 0x37
     278:	f8 ae       	std	Y+56, r15	; 0x38
     27a:	92 01       	movw	r18, r4
     27c:	81 01       	movw	r16, r2
     27e:	20 70       	andi	r18, 0x00	; 0
     280:	30 70       	andi	r19, 0x00	; 0
     282:	09 af       	std	Y+57, r16	; 0x39
     284:	1a af       	std	Y+58, r17	; 0x3a
     286:	2b af       	std	Y+59, r18	; 0x3b
     288:	3c af       	std	Y+60, r19	; 0x3c
     28a:	c4 01       	movw	r24, r8
     28c:	b3 01       	movw	r22, r6
     28e:	a7 01       	movw	r20, r14
     290:	96 01       	movw	r18, r12
     292:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     296:	7b 01       	movw	r14, r22
     298:	8c 01       	movw	r16, r24
     29a:	c4 01       	movw	r24, r8
     29c:	b3 01       	movw	r22, r6
     29e:	2d a9       	ldd	r18, Y+53	; 0x35
     2a0:	3e a9       	ldd	r19, Y+54	; 0x36
     2a2:	4f a9       	ldd	r20, Y+55	; 0x37
     2a4:	58 ad       	ldd	r21, Y+56	; 0x38
     2a6:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     2aa:	c9 01       	movw	r24, r18
     2ac:	da 01       	movw	r26, r20
     2ae:	3c 01       	movw	r6, r24
     2b0:	4d 01       	movw	r8, r26
     2b2:	c4 01       	movw	r24, r8
     2b4:	b3 01       	movw	r22, r6
     2b6:	29 ad       	ldd	r18, Y+57	; 0x39
     2b8:	3a ad       	ldd	r19, Y+58	; 0x3a
     2ba:	4b ad       	ldd	r20, Y+59	; 0x3b
     2bc:	5c ad       	ldd	r21, Y+60	; 0x3c
     2be:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
     2c2:	9b 01       	movw	r18, r22
     2c4:	ac 01       	movw	r20, r24
     2c6:	87 01       	movw	r16, r14
     2c8:	ff 24       	eor	r15, r15
     2ca:	ee 24       	eor	r14, r14
     2cc:	ad a4       	ldd	r10, Y+45	; 0x2d
     2ce:	be a4       	ldd	r11, Y+46	; 0x2e
     2d0:	cf a4       	ldd	r12, Y+47	; 0x2f
     2d2:	d8 a8       	ldd	r13, Y+48	; 0x30
     2d4:	c6 01       	movw	r24, r12
     2d6:	aa 27       	eor	r26, r26
     2d8:	bb 27       	eor	r27, r27
     2da:	57 01       	movw	r10, r14
     2dc:	68 01       	movw	r12, r16
     2de:	a8 2a       	or	r10, r24
     2e0:	b9 2a       	or	r11, r25
     2e2:	ca 2a       	or	r12, r26
     2e4:	db 2a       	or	r13, r27
     2e6:	a2 16       	cp	r10, r18
     2e8:	b3 06       	cpc	r11, r19
     2ea:	c4 06       	cpc	r12, r20
     2ec:	d5 06       	cpc	r13, r21
     2ee:	e0 f4       	brcc	.+56     	; 0x328 <__udivdi3+0x24e>
     2f0:	08 94       	sec
     2f2:	61 08       	sbc	r6, r1
     2f4:	71 08       	sbc	r7, r1
     2f6:	81 08       	sbc	r8, r1
     2f8:	91 08       	sbc	r9, r1
     2fa:	a2 0c       	add	r10, r2
     2fc:	b3 1c       	adc	r11, r3
     2fe:	c4 1c       	adc	r12, r4
     300:	d5 1c       	adc	r13, r5
     302:	a2 14       	cp	r10, r2
     304:	b3 04       	cpc	r11, r3
     306:	c4 04       	cpc	r12, r4
     308:	d5 04       	cpc	r13, r5
     30a:	70 f0       	brcs	.+28     	; 0x328 <__udivdi3+0x24e>
     30c:	a2 16       	cp	r10, r18
     30e:	b3 06       	cpc	r11, r19
     310:	c4 06       	cpc	r12, r20
     312:	d5 06       	cpc	r13, r21
     314:	48 f4       	brcc	.+18     	; 0x328 <__udivdi3+0x24e>
     316:	08 94       	sec
     318:	61 08       	sbc	r6, r1
     31a:	71 08       	sbc	r7, r1
     31c:	81 08       	sbc	r8, r1
     31e:	91 08       	sbc	r9, r1
     320:	a2 0c       	add	r10, r2
     322:	b3 1c       	adc	r11, r3
     324:	c4 1c       	adc	r12, r4
     326:	d5 1c       	adc	r13, r5
     328:	a2 1a       	sub	r10, r18
     32a:	b3 0a       	sbc	r11, r19
     32c:	c4 0a       	sbc	r12, r20
     32e:	d5 0a       	sbc	r13, r21
     330:	c6 01       	movw	r24, r12
     332:	b5 01       	movw	r22, r10
     334:	2d a9       	ldd	r18, Y+53	; 0x35
     336:	3e a9       	ldd	r19, Y+54	; 0x36
     338:	4f a9       	ldd	r20, Y+55	; 0x37
     33a:	58 ad       	ldd	r21, Y+56	; 0x38
     33c:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     340:	7b 01       	movw	r14, r22
     342:	8c 01       	movw	r16, r24
     344:	c6 01       	movw	r24, r12
     346:	b5 01       	movw	r22, r10
     348:	2d a9       	ldd	r18, Y+53	; 0x35
     34a:	3e a9       	ldd	r19, Y+54	; 0x36
     34c:	4f a9       	ldd	r20, Y+55	; 0x37
     34e:	58 ad       	ldd	r21, Y+56	; 0x38
     350:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     354:	c9 01       	movw	r24, r18
     356:	da 01       	movw	r26, r20
     358:	5c 01       	movw	r10, r24
     35a:	6d 01       	movw	r12, r26
     35c:	c6 01       	movw	r24, r12
     35e:	b5 01       	movw	r22, r10
     360:	29 ad       	ldd	r18, Y+57	; 0x39
     362:	3a ad       	ldd	r19, Y+58	; 0x3a
     364:	4b ad       	ldd	r20, Y+59	; 0x3b
     366:	5c ad       	ldd	r21, Y+60	; 0x3c
     368:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
     36c:	9b 01       	movw	r18, r22
     36e:	ac 01       	movw	r20, r24
     370:	87 01       	movw	r16, r14
     372:	ff 24       	eor	r15, r15
     374:	ee 24       	eor	r14, r14
     376:	8d a5       	ldd	r24, Y+45	; 0x2d
     378:	9e a5       	ldd	r25, Y+46	; 0x2e
     37a:	af a5       	ldd	r26, Y+47	; 0x2f
     37c:	b8 a9       	ldd	r27, Y+48	; 0x30
     37e:	a0 70       	andi	r26, 0x00	; 0
     380:	b0 70       	andi	r27, 0x00	; 0
     382:	e8 2a       	or	r14, r24
     384:	f9 2a       	or	r15, r25
     386:	0a 2b       	or	r16, r26
     388:	1b 2b       	or	r17, r27
     38a:	e2 16       	cp	r14, r18
     38c:	f3 06       	cpc	r15, r19
     38e:	04 07       	cpc	r16, r20
     390:	15 07       	cpc	r17, r21
     392:	c0 f4       	brcc	.+48     	; 0x3c4 <__udivdi3+0x2ea>
     394:	08 94       	sec
     396:	a1 08       	sbc	r10, r1
     398:	b1 08       	sbc	r11, r1
     39a:	c1 08       	sbc	r12, r1
     39c:	d1 08       	sbc	r13, r1
     39e:	e2 0c       	add	r14, r2
     3a0:	f3 1c       	adc	r15, r3
     3a2:	04 1d       	adc	r16, r4
     3a4:	15 1d       	adc	r17, r5
     3a6:	e2 14       	cp	r14, r2
     3a8:	f3 04       	cpc	r15, r3
     3aa:	04 05       	cpc	r16, r4
     3ac:	15 05       	cpc	r17, r5
     3ae:	50 f0       	brcs	.+20     	; 0x3c4 <__udivdi3+0x2ea>
     3b0:	e2 16       	cp	r14, r18
     3b2:	f3 06       	cpc	r15, r19
     3b4:	04 07       	cpc	r16, r20
     3b6:	15 07       	cpc	r17, r21
     3b8:	28 f4       	brcc	.+10     	; 0x3c4 <__udivdi3+0x2ea>
     3ba:	08 94       	sec
     3bc:	a1 08       	sbc	r10, r1
     3be:	b1 08       	sbc	r11, r1
     3c0:	c1 08       	sbc	r12, r1
     3c2:	d1 08       	sbc	r13, r1
     3c4:	d3 01       	movw	r26, r6
     3c6:	99 27       	eor	r25, r25
     3c8:	88 27       	eor	r24, r24
     3ca:	86 01       	movw	r16, r12
     3cc:	75 01       	movw	r14, r10
     3ce:	e8 2a       	or	r14, r24
     3d0:	f9 2a       	or	r15, r25
     3d2:	0a 2b       	or	r16, r26
     3d4:	1b 2b       	or	r17, r27
     3d6:	e9 aa       	std	Y+49, r14	; 0x31
     3d8:	fa aa       	std	Y+50, r15	; 0x32
     3da:	0b ab       	std	Y+51, r16	; 0x33
     3dc:	1c ab       	std	Y+52, r17	; 0x34
     3de:	cf c4       	rjmp	.+2462   	; 0xd7e <__stack+0x51f>
     3e0:	21 14       	cp	r2, r1
     3e2:	31 04       	cpc	r3, r1
     3e4:	41 04       	cpc	r4, r1
     3e6:	51 04       	cpc	r5, r1
     3e8:	71 f4       	brne	.+28     	; 0x406 <__udivdi3+0x32c>
     3ea:	61 e0       	ldi	r22, 0x01	; 1
     3ec:	70 e0       	ldi	r23, 0x00	; 0
     3ee:	80 e0       	ldi	r24, 0x00	; 0
     3f0:	90 e0       	ldi	r25, 0x00	; 0
     3f2:	20 e0       	ldi	r18, 0x00	; 0
     3f4:	30 e0       	ldi	r19, 0x00	; 0
     3f6:	40 e0       	ldi	r20, 0x00	; 0
     3f8:	50 e0       	ldi	r21, 0x00	; 0
     3fa:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     3fe:	c9 01       	movw	r24, r18
     400:	da 01       	movw	r26, r20
     402:	1c 01       	movw	r2, r24
     404:	2d 01       	movw	r4, r26
     406:	00 e0       	ldi	r16, 0x00	; 0
     408:	20 16       	cp	r2, r16
     40a:	00 e0       	ldi	r16, 0x00	; 0
     40c:	30 06       	cpc	r3, r16
     40e:	01 e0       	ldi	r16, 0x01	; 1
     410:	40 06       	cpc	r4, r16
     412:	00 e0       	ldi	r16, 0x00	; 0
     414:	50 06       	cpc	r5, r16
     416:	88 f4       	brcc	.+34     	; 0x43a <__udivdi3+0x360>
     418:	1f ef       	ldi	r17, 0xFF	; 255
     41a:	21 16       	cp	r2, r17
     41c:	31 04       	cpc	r3, r1
     41e:	41 04       	cpc	r4, r1
     420:	51 04       	cpc	r5, r1
     422:	31 f0       	breq	.+12     	; 0x430 <__udivdi3+0x356>
     424:	28 f0       	brcs	.+10     	; 0x430 <__udivdi3+0x356>
     426:	48 e0       	ldi	r20, 0x08	; 8
     428:	50 e0       	ldi	r21, 0x00	; 0
     42a:	60 e0       	ldi	r22, 0x00	; 0
     42c:	70 e0       	ldi	r23, 0x00	; 0
     42e:	17 c0       	rjmp	.+46     	; 0x45e <__udivdi3+0x384>
     430:	40 e0       	ldi	r20, 0x00	; 0
     432:	50 e0       	ldi	r21, 0x00	; 0
     434:	60 e0       	ldi	r22, 0x00	; 0
     436:	70 e0       	ldi	r23, 0x00	; 0
     438:	12 c0       	rjmp	.+36     	; 0x45e <__udivdi3+0x384>
     43a:	20 e0       	ldi	r18, 0x00	; 0
     43c:	22 16       	cp	r2, r18
     43e:	20 e0       	ldi	r18, 0x00	; 0
     440:	32 06       	cpc	r3, r18
     442:	20 e0       	ldi	r18, 0x00	; 0
     444:	42 06       	cpc	r4, r18
     446:	21 e0       	ldi	r18, 0x01	; 1
     448:	52 06       	cpc	r5, r18
     44a:	28 f0       	brcs	.+10     	; 0x456 <__udivdi3+0x37c>
     44c:	48 e1       	ldi	r20, 0x18	; 24
     44e:	50 e0       	ldi	r21, 0x00	; 0
     450:	60 e0       	ldi	r22, 0x00	; 0
     452:	70 e0       	ldi	r23, 0x00	; 0
     454:	04 c0       	rjmp	.+8      	; 0x45e <__udivdi3+0x384>
     456:	40 e1       	ldi	r20, 0x10	; 16
     458:	50 e0       	ldi	r21, 0x00	; 0
     45a:	60 e0       	ldi	r22, 0x00	; 0
     45c:	70 e0       	ldi	r23, 0x00	; 0
     45e:	d2 01       	movw	r26, r4
     460:	c1 01       	movw	r24, r2
     462:	04 2e       	mov	r0, r20
     464:	04 c0       	rjmp	.+8      	; 0x46e <__udivdi3+0x394>
     466:	b6 95       	lsr	r27
     468:	a7 95       	ror	r26
     46a:	97 95       	ror	r25
     46c:	87 95       	ror	r24
     46e:	0a 94       	dec	r0
     470:	d2 f7       	brpl	.-12     	; 0x466 <__udivdi3+0x38c>
     472:	85 59       	subi	r24, 0x95	; 149
     474:	9f 4f       	sbci	r25, 0xFF	; 255
     476:	dc 01       	movw	r26, r24
     478:	2c 91       	ld	r18, X
     47a:	e0 e2       	ldi	r30, 0x20	; 32
     47c:	ee 2e       	mov	r14, r30
     47e:	f1 2c       	mov	r15, r1
     480:	01 2d       	mov	r16, r1
     482:	11 2d       	mov	r17, r1
     484:	d8 01       	movw	r26, r16
     486:	c7 01       	movw	r24, r14
     488:	84 1b       	sub	r24, r20
     48a:	95 0b       	sbc	r25, r21
     48c:	a6 0b       	sbc	r26, r22
     48e:	b7 0b       	sbc	r27, r23
     490:	82 1b       	sub	r24, r18
     492:	91 09       	sbc	r25, r1
     494:	a1 09       	sbc	r26, r1
     496:	b1 09       	sbc	r27, r1
     498:	00 97       	sbiw	r24, 0x00	; 0
     49a:	a1 05       	cpc	r26, r1
     49c:	b1 05       	cpc	r27, r1
     49e:	61 f4       	brne	.+24     	; 0x4b8 <__udivdi3+0x3de>
     4a0:	64 01       	movw	r12, r8
     4a2:	53 01       	movw	r10, r6
     4a4:	a2 18       	sub	r10, r2
     4a6:	b3 08       	sbc	r11, r3
     4a8:	c4 08       	sbc	r12, r4
     4aa:	d5 08       	sbc	r13, r5
     4ac:	31 e0       	ldi	r19, 0x01	; 1
     4ae:	63 2e       	mov	r6, r19
     4b0:	71 2c       	mov	r7, r1
     4b2:	81 2c       	mov	r8, r1
     4b4:	91 2c       	mov	r9, r1
     4b6:	1e c1       	rjmp	.+572    	; 0x6f4 <__udivdi3+0x61a>
     4b8:	6f 96       	adiw	r28, 0x1f	; 31
     4ba:	8f af       	std	Y+63, r24	; 0x3f
     4bc:	6f 97       	sbiw	r28, 0x1f	; 31
     4be:	08 2e       	mov	r0, r24
     4c0:	04 c0       	rjmp	.+8      	; 0x4ca <__udivdi3+0x3f0>
     4c2:	22 0c       	add	r2, r2
     4c4:	33 1c       	adc	r3, r3
     4c6:	44 1c       	adc	r4, r4
     4c8:	55 1c       	adc	r5, r5
     4ca:	0a 94       	dec	r0
     4cc:	d2 f7       	brpl	.-12     	; 0x4c2 <__udivdi3+0x3e8>
     4ce:	ee 2d       	mov	r30, r14
     4d0:	e8 1b       	sub	r30, r24
     4d2:	64 01       	movw	r12, r8
     4d4:	53 01       	movw	r10, r6
     4d6:	0e 2e       	mov	r0, r30
     4d8:	04 c0       	rjmp	.+8      	; 0x4e2 <__udivdi3+0x408>
     4da:	d6 94       	lsr	r13
     4dc:	c7 94       	ror	r12
     4de:	b7 94       	ror	r11
     4e0:	a7 94       	ror	r10
     4e2:	0a 94       	dec	r0
     4e4:	d2 f7       	brpl	.-12     	; 0x4da <__udivdi3+0x400>
     4e6:	a4 01       	movw	r20, r8
     4e8:	93 01       	movw	r18, r6
     4ea:	6f 96       	adiw	r28, 0x1f	; 31
     4ec:	0f ac       	ldd	r0, Y+63	; 0x3f
     4ee:	6f 97       	sbiw	r28, 0x1f	; 31
     4f0:	04 c0       	rjmp	.+8      	; 0x4fa <__udivdi3+0x420>
     4f2:	22 0f       	add	r18, r18
     4f4:	33 1f       	adc	r19, r19
     4f6:	44 1f       	adc	r20, r20
     4f8:	55 1f       	adc	r21, r21
     4fa:	0a 94       	dec	r0
     4fc:	d2 f7       	brpl	.-12     	; 0x4f2 <__udivdi3+0x418>
     4fe:	6d a4       	ldd	r6, Y+45	; 0x2d
     500:	7e a4       	ldd	r7, Y+46	; 0x2e
     502:	8f a4       	ldd	r8, Y+47	; 0x2f
     504:	98 a8       	ldd	r9, Y+48	; 0x30
     506:	0e 2e       	mov	r0, r30
     508:	04 c0       	rjmp	.+8      	; 0x512 <__udivdi3+0x438>
     50a:	96 94       	lsr	r9
     50c:	87 94       	ror	r8
     50e:	77 94       	ror	r7
     510:	67 94       	ror	r6
     512:	0a 94       	dec	r0
     514:	d2 f7       	brpl	.-12     	; 0x50a <__udivdi3+0x430>
     516:	84 01       	movw	r16, r8
     518:	73 01       	movw	r14, r6
     51a:	e2 2a       	or	r14, r18
     51c:	f3 2a       	or	r15, r19
     51e:	04 2b       	or	r16, r20
     520:	15 2b       	or	r17, r21
     522:	e9 a6       	std	Y+41, r14	; 0x29
     524:	fa a6       	std	Y+42, r15	; 0x2a
     526:	0b a7       	std	Y+43, r16	; 0x2b
     528:	1c a7       	std	Y+44, r17	; 0x2c
     52a:	32 01       	movw	r6, r4
     52c:	88 24       	eor	r8, r8
     52e:	99 24       	eor	r9, r9
     530:	92 01       	movw	r18, r4
     532:	81 01       	movw	r16, r2
     534:	20 70       	andi	r18, 0x00	; 0
     536:	30 70       	andi	r19, 0x00	; 0
     538:	21 96       	adiw	r28, 0x01	; 1
     53a:	0c af       	std	Y+60, r16	; 0x3c
     53c:	1d af       	std	Y+61, r17	; 0x3d
     53e:	2e af       	std	Y+62, r18	; 0x3e
     540:	3f af       	std	Y+63, r19	; 0x3f
     542:	21 97       	sbiw	r28, 0x01	; 1
     544:	c6 01       	movw	r24, r12
     546:	b5 01       	movw	r22, r10
     548:	a4 01       	movw	r20, r8
     54a:	93 01       	movw	r18, r6
     54c:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     550:	7b 01       	movw	r14, r22
     552:	8c 01       	movw	r16, r24
     554:	c6 01       	movw	r24, r12
     556:	b5 01       	movw	r22, r10
     558:	a4 01       	movw	r20, r8
     55a:	93 01       	movw	r18, r6
     55c:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     560:	c9 01       	movw	r24, r18
     562:	da 01       	movw	r26, r20
     564:	25 96       	adiw	r28, 0x05	; 5
     566:	8c af       	std	Y+60, r24	; 0x3c
     568:	9d af       	std	Y+61, r25	; 0x3d
     56a:	ae af       	std	Y+62, r26	; 0x3e
     56c:	bf af       	std	Y+63, r27	; 0x3f
     56e:	25 97       	sbiw	r28, 0x05	; 5
     570:	bc 01       	movw	r22, r24
     572:	cd 01       	movw	r24, r26
     574:	21 96       	adiw	r28, 0x01	; 1
     576:	2c ad       	ldd	r18, Y+60	; 0x3c
     578:	3d ad       	ldd	r19, Y+61	; 0x3d
     57a:	4e ad       	ldd	r20, Y+62	; 0x3e
     57c:	5f ad       	ldd	r21, Y+63	; 0x3f
     57e:	21 97       	sbiw	r28, 0x01	; 1
     580:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
     584:	9b 01       	movw	r18, r22
     586:	ac 01       	movw	r20, r24
     588:	87 01       	movw	r16, r14
     58a:	ff 24       	eor	r15, r15
     58c:	ee 24       	eor	r14, r14
     58e:	a9 a4       	ldd	r10, Y+41	; 0x29
     590:	ba a4       	ldd	r11, Y+42	; 0x2a
     592:	cb a4       	ldd	r12, Y+43	; 0x2b
     594:	dc a4       	ldd	r13, Y+44	; 0x2c
     596:	c6 01       	movw	r24, r12
     598:	aa 27       	eor	r26, r26
     59a:	bb 27       	eor	r27, r27
     59c:	5c 01       	movw	r10, r24
     59e:	6d 01       	movw	r12, r26
     5a0:	ae 28       	or	r10, r14
     5a2:	bf 28       	or	r11, r15
     5a4:	c0 2a       	or	r12, r16
     5a6:	d1 2a       	or	r13, r17
     5a8:	a2 16       	cp	r10, r18
     5aa:	b3 06       	cpc	r11, r19
     5ac:	c4 06       	cpc	r12, r20
     5ae:	d5 06       	cpc	r13, r21
     5b0:	60 f5       	brcc	.+88     	; 0x60a <__udivdi3+0x530>
     5b2:	25 96       	adiw	r28, 0x05	; 5
     5b4:	6c ad       	ldd	r22, Y+60	; 0x3c
     5b6:	7d ad       	ldd	r23, Y+61	; 0x3d
     5b8:	8e ad       	ldd	r24, Y+62	; 0x3e
     5ba:	9f ad       	ldd	r25, Y+63	; 0x3f
     5bc:	25 97       	sbiw	r28, 0x05	; 5
     5be:	61 50       	subi	r22, 0x01	; 1
     5c0:	70 40       	sbci	r23, 0x00	; 0
     5c2:	80 40       	sbci	r24, 0x00	; 0
     5c4:	90 40       	sbci	r25, 0x00	; 0
     5c6:	25 96       	adiw	r28, 0x05	; 5
     5c8:	6c af       	std	Y+60, r22	; 0x3c
     5ca:	7d af       	std	Y+61, r23	; 0x3d
     5cc:	8e af       	std	Y+62, r24	; 0x3e
     5ce:	9f af       	std	Y+63, r25	; 0x3f
     5d0:	25 97       	sbiw	r28, 0x05	; 5
     5d2:	a2 0c       	add	r10, r2
     5d4:	b3 1c       	adc	r11, r3
     5d6:	c4 1c       	adc	r12, r4
     5d8:	d5 1c       	adc	r13, r5
     5da:	a2 14       	cp	r10, r2
     5dc:	b3 04       	cpc	r11, r3
     5de:	c4 04       	cpc	r12, r4
     5e0:	d5 04       	cpc	r13, r5
     5e2:	98 f0       	brcs	.+38     	; 0x60a <__udivdi3+0x530>
     5e4:	a2 16       	cp	r10, r18
     5e6:	b3 06       	cpc	r11, r19
     5e8:	c4 06       	cpc	r12, r20
     5ea:	d5 06       	cpc	r13, r21
     5ec:	70 f4       	brcc	.+28     	; 0x60a <__udivdi3+0x530>
     5ee:	61 50       	subi	r22, 0x01	; 1
     5f0:	70 40       	sbci	r23, 0x00	; 0
     5f2:	80 40       	sbci	r24, 0x00	; 0
     5f4:	90 40       	sbci	r25, 0x00	; 0
     5f6:	25 96       	adiw	r28, 0x05	; 5
     5f8:	6c af       	std	Y+60, r22	; 0x3c
     5fa:	7d af       	std	Y+61, r23	; 0x3d
     5fc:	8e af       	std	Y+62, r24	; 0x3e
     5fe:	9f af       	std	Y+63, r25	; 0x3f
     600:	25 97       	sbiw	r28, 0x05	; 5
     602:	a2 0c       	add	r10, r2
     604:	b3 1c       	adc	r11, r3
     606:	c4 1c       	adc	r12, r4
     608:	d5 1c       	adc	r13, r5
     60a:	a2 1a       	sub	r10, r18
     60c:	b3 0a       	sbc	r11, r19
     60e:	c4 0a       	sbc	r12, r20
     610:	d5 0a       	sbc	r13, r21
     612:	c6 01       	movw	r24, r12
     614:	b5 01       	movw	r22, r10
     616:	a4 01       	movw	r20, r8
     618:	93 01       	movw	r18, r6
     61a:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     61e:	7b 01       	movw	r14, r22
     620:	8c 01       	movw	r16, r24
     622:	c6 01       	movw	r24, r12
     624:	b5 01       	movw	r22, r10
     626:	a4 01       	movw	r20, r8
     628:	93 01       	movw	r18, r6
     62a:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     62e:	c9 01       	movw	r24, r18
     630:	da 01       	movw	r26, r20
     632:	3c 01       	movw	r6, r24
     634:	4d 01       	movw	r8, r26
     636:	c4 01       	movw	r24, r8
     638:	b3 01       	movw	r22, r6
     63a:	21 96       	adiw	r28, 0x01	; 1
     63c:	2c ad       	ldd	r18, Y+60	; 0x3c
     63e:	3d ad       	ldd	r19, Y+61	; 0x3d
     640:	4e ad       	ldd	r20, Y+62	; 0x3e
     642:	5f ad       	ldd	r21, Y+63	; 0x3f
     644:	21 97       	sbiw	r28, 0x01	; 1
     646:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
     64a:	9b 01       	movw	r18, r22
     64c:	ac 01       	movw	r20, r24
     64e:	87 01       	movw	r16, r14
     650:	ff 24       	eor	r15, r15
     652:	ee 24       	eor	r14, r14
     654:	89 a5       	ldd	r24, Y+41	; 0x29
     656:	9a a5       	ldd	r25, Y+42	; 0x2a
     658:	ab a5       	ldd	r26, Y+43	; 0x2b
     65a:	bc a5       	ldd	r27, Y+44	; 0x2c
     65c:	a0 70       	andi	r26, 0x00	; 0
     65e:	b0 70       	andi	r27, 0x00	; 0
     660:	57 01       	movw	r10, r14
     662:	68 01       	movw	r12, r16
     664:	a8 2a       	or	r10, r24
     666:	b9 2a       	or	r11, r25
     668:	ca 2a       	or	r12, r26
     66a:	db 2a       	or	r13, r27
     66c:	a2 16       	cp	r10, r18
     66e:	b3 06       	cpc	r11, r19
     670:	c4 06       	cpc	r12, r20
     672:	d5 06       	cpc	r13, r21
     674:	e0 f4       	brcc	.+56     	; 0x6ae <__udivdi3+0x5d4>
     676:	08 94       	sec
     678:	61 08       	sbc	r6, r1
     67a:	71 08       	sbc	r7, r1
     67c:	81 08       	sbc	r8, r1
     67e:	91 08       	sbc	r9, r1
     680:	a2 0c       	add	r10, r2
     682:	b3 1c       	adc	r11, r3
     684:	c4 1c       	adc	r12, r4
     686:	d5 1c       	adc	r13, r5
     688:	a2 14       	cp	r10, r2
     68a:	b3 04       	cpc	r11, r3
     68c:	c4 04       	cpc	r12, r4
     68e:	d5 04       	cpc	r13, r5
     690:	70 f0       	brcs	.+28     	; 0x6ae <__udivdi3+0x5d4>
     692:	a2 16       	cp	r10, r18
     694:	b3 06       	cpc	r11, r19
     696:	c4 06       	cpc	r12, r20
     698:	d5 06       	cpc	r13, r21
     69a:	48 f4       	brcc	.+18     	; 0x6ae <__udivdi3+0x5d4>
     69c:	08 94       	sec
     69e:	61 08       	sbc	r6, r1
     6a0:	71 08       	sbc	r7, r1
     6a2:	81 08       	sbc	r8, r1
     6a4:	91 08       	sbc	r9, r1
     6a6:	a2 0c       	add	r10, r2
     6a8:	b3 1c       	adc	r11, r3
     6aa:	c4 1c       	adc	r12, r4
     6ac:	d5 1c       	adc	r13, r5
     6ae:	8d a5       	ldd	r24, Y+45	; 0x2d
     6b0:	9e a5       	ldd	r25, Y+46	; 0x2e
     6b2:	af a5       	ldd	r26, Y+47	; 0x2f
     6b4:	b8 a9       	ldd	r27, Y+48	; 0x30
     6b6:	6f 96       	adiw	r28, 0x1f	; 31
     6b8:	0f ac       	ldd	r0, Y+63	; 0x3f
     6ba:	6f 97       	sbiw	r28, 0x1f	; 31
     6bc:	04 c0       	rjmp	.+8      	; 0x6c6 <__udivdi3+0x5ec>
     6be:	88 0f       	add	r24, r24
     6c0:	99 1f       	adc	r25, r25
     6c2:	aa 1f       	adc	r26, r26
     6c4:	bb 1f       	adc	r27, r27
     6c6:	0a 94       	dec	r0
     6c8:	d2 f7       	brpl	.-12     	; 0x6be <__udivdi3+0x5e4>
     6ca:	8d a7       	std	Y+45, r24	; 0x2d
     6cc:	9e a7       	std	Y+46, r25	; 0x2e
     6ce:	af a7       	std	Y+47, r26	; 0x2f
     6d0:	b8 ab       	std	Y+48, r27	; 0x30
     6d2:	a2 1a       	sub	r10, r18
     6d4:	b3 0a       	sbc	r11, r19
     6d6:	c4 0a       	sbc	r12, r20
     6d8:	d5 0a       	sbc	r13, r21
     6da:	25 96       	adiw	r28, 0x05	; 5
     6dc:	ec ac       	ldd	r14, Y+60	; 0x3c
     6de:	fd ac       	ldd	r15, Y+61	; 0x3d
     6e0:	0e ad       	ldd	r16, Y+62	; 0x3e
     6e2:	1f ad       	ldd	r17, Y+63	; 0x3f
     6e4:	25 97       	sbiw	r28, 0x05	; 5
     6e6:	d7 01       	movw	r26, r14
     6e8:	99 27       	eor	r25, r25
     6ea:	88 27       	eor	r24, r24
     6ec:	68 2a       	or	r6, r24
     6ee:	79 2a       	or	r7, r25
     6f0:	8a 2a       	or	r8, r26
     6f2:	9b 2a       	or	r9, r27
     6f4:	82 01       	movw	r16, r4
     6f6:	22 27       	eor	r18, r18
     6f8:	33 27       	eor	r19, r19
     6fa:	29 96       	adiw	r28, 0x09	; 9
     6fc:	0c af       	std	Y+60, r16	; 0x3c
     6fe:	1d af       	std	Y+61, r17	; 0x3d
     700:	2e af       	std	Y+62, r18	; 0x3e
     702:	3f af       	std	Y+63, r19	; 0x3f
     704:	29 97       	sbiw	r28, 0x09	; 9
     706:	a2 01       	movw	r20, r4
     708:	91 01       	movw	r18, r2
     70a:	40 70       	andi	r20, 0x00	; 0
     70c:	50 70       	andi	r21, 0x00	; 0
     70e:	2d 96       	adiw	r28, 0x0d	; 13
     710:	2c af       	std	Y+60, r18	; 0x3c
     712:	3d af       	std	Y+61, r19	; 0x3d
     714:	4e af       	std	Y+62, r20	; 0x3e
     716:	5f af       	std	Y+63, r21	; 0x3f
     718:	2d 97       	sbiw	r28, 0x0d	; 13
     71a:	c6 01       	movw	r24, r12
     71c:	b5 01       	movw	r22, r10
     71e:	29 96       	adiw	r28, 0x09	; 9
     720:	2c ad       	ldd	r18, Y+60	; 0x3c
     722:	3d ad       	ldd	r19, Y+61	; 0x3d
     724:	4e ad       	ldd	r20, Y+62	; 0x3e
     726:	5f ad       	ldd	r21, Y+63	; 0x3f
     728:	29 97       	sbiw	r28, 0x09	; 9
     72a:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     72e:	7b 01       	movw	r14, r22
     730:	8c 01       	movw	r16, r24
     732:	c6 01       	movw	r24, r12
     734:	b5 01       	movw	r22, r10
     736:	29 96       	adiw	r28, 0x09	; 9
     738:	2c ad       	ldd	r18, Y+60	; 0x3c
     73a:	3d ad       	ldd	r19, Y+61	; 0x3d
     73c:	4e ad       	ldd	r20, Y+62	; 0x3e
     73e:	5f ad       	ldd	r21, Y+63	; 0x3f
     740:	29 97       	sbiw	r28, 0x09	; 9
     742:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     746:	c9 01       	movw	r24, r18
     748:	da 01       	movw	r26, r20
     74a:	61 96       	adiw	r28, 0x11	; 17
     74c:	8c af       	std	Y+60, r24	; 0x3c
     74e:	9d af       	std	Y+61, r25	; 0x3d
     750:	ae af       	std	Y+62, r26	; 0x3e
     752:	bf af       	std	Y+63, r27	; 0x3f
     754:	61 97       	sbiw	r28, 0x11	; 17
     756:	bc 01       	movw	r22, r24
     758:	cd 01       	movw	r24, r26
     75a:	2d 96       	adiw	r28, 0x0d	; 13
     75c:	2c ad       	ldd	r18, Y+60	; 0x3c
     75e:	3d ad       	ldd	r19, Y+61	; 0x3d
     760:	4e ad       	ldd	r20, Y+62	; 0x3e
     762:	5f ad       	ldd	r21, Y+63	; 0x3f
     764:	2d 97       	sbiw	r28, 0x0d	; 13
     766:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
     76a:	9b 01       	movw	r18, r22
     76c:	ac 01       	movw	r20, r24
     76e:	87 01       	movw	r16, r14
     770:	ff 24       	eor	r15, r15
     772:	ee 24       	eor	r14, r14
     774:	ad a4       	ldd	r10, Y+45	; 0x2d
     776:	be a4       	ldd	r11, Y+46	; 0x2e
     778:	cf a4       	ldd	r12, Y+47	; 0x2f
     77a:	d8 a8       	ldd	r13, Y+48	; 0x30
     77c:	c6 01       	movw	r24, r12
     77e:	aa 27       	eor	r26, r26
     780:	bb 27       	eor	r27, r27
     782:	57 01       	movw	r10, r14
     784:	68 01       	movw	r12, r16
     786:	a8 2a       	or	r10, r24
     788:	b9 2a       	or	r11, r25
     78a:	ca 2a       	or	r12, r26
     78c:	db 2a       	or	r13, r27
     78e:	a2 16       	cp	r10, r18
     790:	b3 06       	cpc	r11, r19
     792:	c4 06       	cpc	r12, r20
     794:	d5 06       	cpc	r13, r21
     796:	60 f5       	brcc	.+88     	; 0x7f0 <__udivdi3+0x716>
     798:	61 96       	adiw	r28, 0x11	; 17
     79a:	6c ad       	ldd	r22, Y+60	; 0x3c
     79c:	7d ad       	ldd	r23, Y+61	; 0x3d
     79e:	8e ad       	ldd	r24, Y+62	; 0x3e
     7a0:	9f ad       	ldd	r25, Y+63	; 0x3f
     7a2:	61 97       	sbiw	r28, 0x11	; 17
     7a4:	61 50       	subi	r22, 0x01	; 1
     7a6:	70 40       	sbci	r23, 0x00	; 0
     7a8:	80 40       	sbci	r24, 0x00	; 0
     7aa:	90 40       	sbci	r25, 0x00	; 0
     7ac:	61 96       	adiw	r28, 0x11	; 17
     7ae:	6c af       	std	Y+60, r22	; 0x3c
     7b0:	7d af       	std	Y+61, r23	; 0x3d
     7b2:	8e af       	std	Y+62, r24	; 0x3e
     7b4:	9f af       	std	Y+63, r25	; 0x3f
     7b6:	61 97       	sbiw	r28, 0x11	; 17
     7b8:	a2 0c       	add	r10, r2
     7ba:	b3 1c       	adc	r11, r3
     7bc:	c4 1c       	adc	r12, r4
     7be:	d5 1c       	adc	r13, r5
     7c0:	a2 14       	cp	r10, r2
     7c2:	b3 04       	cpc	r11, r3
     7c4:	c4 04       	cpc	r12, r4
     7c6:	d5 04       	cpc	r13, r5
     7c8:	98 f0       	brcs	.+38     	; 0x7f0 <__udivdi3+0x716>
     7ca:	a2 16       	cp	r10, r18
     7cc:	b3 06       	cpc	r11, r19
     7ce:	c4 06       	cpc	r12, r20
     7d0:	d5 06       	cpc	r13, r21
     7d2:	70 f4       	brcc	.+28     	; 0x7f0 <__udivdi3+0x716>
     7d4:	61 50       	subi	r22, 0x01	; 1
     7d6:	70 40       	sbci	r23, 0x00	; 0
     7d8:	80 40       	sbci	r24, 0x00	; 0
     7da:	90 40       	sbci	r25, 0x00	; 0
     7dc:	61 96       	adiw	r28, 0x11	; 17
     7de:	6c af       	std	Y+60, r22	; 0x3c
     7e0:	7d af       	std	Y+61, r23	; 0x3d
     7e2:	8e af       	std	Y+62, r24	; 0x3e
     7e4:	9f af       	std	Y+63, r25	; 0x3f
     7e6:	61 97       	sbiw	r28, 0x11	; 17
     7e8:	a2 0c       	add	r10, r2
     7ea:	b3 1c       	adc	r11, r3
     7ec:	c4 1c       	adc	r12, r4
     7ee:	d5 1c       	adc	r13, r5
     7f0:	a2 1a       	sub	r10, r18
     7f2:	b3 0a       	sbc	r11, r19
     7f4:	c4 0a       	sbc	r12, r20
     7f6:	d5 0a       	sbc	r13, r21
     7f8:	c6 01       	movw	r24, r12
     7fa:	b5 01       	movw	r22, r10
     7fc:	29 96       	adiw	r28, 0x09	; 9
     7fe:	2c ad       	ldd	r18, Y+60	; 0x3c
     800:	3d ad       	ldd	r19, Y+61	; 0x3d
     802:	4e ad       	ldd	r20, Y+62	; 0x3e
     804:	5f ad       	ldd	r21, Y+63	; 0x3f
     806:	29 97       	sbiw	r28, 0x09	; 9
     808:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     80c:	7b 01       	movw	r14, r22
     80e:	8c 01       	movw	r16, r24
     810:	c6 01       	movw	r24, r12
     812:	b5 01       	movw	r22, r10
     814:	29 96       	adiw	r28, 0x09	; 9
     816:	2c ad       	ldd	r18, Y+60	; 0x3c
     818:	3d ad       	ldd	r19, Y+61	; 0x3d
     81a:	4e ad       	ldd	r20, Y+62	; 0x3e
     81c:	5f ad       	ldd	r21, Y+63	; 0x3f
     81e:	29 97       	sbiw	r28, 0x09	; 9
     820:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     824:	c9 01       	movw	r24, r18
     826:	da 01       	movw	r26, r20
     828:	5c 01       	movw	r10, r24
     82a:	6d 01       	movw	r12, r26
     82c:	c6 01       	movw	r24, r12
     82e:	b5 01       	movw	r22, r10
     830:	2d 96       	adiw	r28, 0x0d	; 13
     832:	2c ad       	ldd	r18, Y+60	; 0x3c
     834:	3d ad       	ldd	r19, Y+61	; 0x3d
     836:	4e ad       	ldd	r20, Y+62	; 0x3e
     838:	5f ad       	ldd	r21, Y+63	; 0x3f
     83a:	2d 97       	sbiw	r28, 0x0d	; 13
     83c:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
     840:	9b 01       	movw	r18, r22
     842:	ac 01       	movw	r20, r24
     844:	87 01       	movw	r16, r14
     846:	ff 24       	eor	r15, r15
     848:	ee 24       	eor	r14, r14
     84a:	8d a5       	ldd	r24, Y+45	; 0x2d
     84c:	9e a5       	ldd	r25, Y+46	; 0x2e
     84e:	af a5       	ldd	r26, Y+47	; 0x2f
     850:	b8 a9       	ldd	r27, Y+48	; 0x30
     852:	a0 70       	andi	r26, 0x00	; 0
     854:	b0 70       	andi	r27, 0x00	; 0
     856:	e8 2a       	or	r14, r24
     858:	f9 2a       	or	r15, r25
     85a:	0a 2b       	or	r16, r26
     85c:	1b 2b       	or	r17, r27
     85e:	e2 16       	cp	r14, r18
     860:	f3 06       	cpc	r15, r19
     862:	04 07       	cpc	r16, r20
     864:	15 07       	cpc	r17, r21
     866:	c0 f4       	brcc	.+48     	; 0x898 <__stack+0x39>
     868:	08 94       	sec
     86a:	a1 08       	sbc	r10, r1
     86c:	b1 08       	sbc	r11, r1
     86e:	c1 08       	sbc	r12, r1
     870:	d1 08       	sbc	r13, r1
     872:	e2 0c       	add	r14, r2
     874:	f3 1c       	adc	r15, r3
     876:	04 1d       	adc	r16, r4
     878:	15 1d       	adc	r17, r5
     87a:	e2 14       	cp	r14, r2
     87c:	f3 04       	cpc	r15, r3
     87e:	04 05       	cpc	r16, r4
     880:	15 05       	cpc	r17, r5
     882:	50 f0       	brcs	.+20     	; 0x898 <__stack+0x39>
     884:	e2 16       	cp	r14, r18
     886:	f3 06       	cpc	r15, r19
     888:	04 07       	cpc	r16, r20
     88a:	15 07       	cpc	r17, r21
     88c:	28 f4       	brcc	.+10     	; 0x898 <__stack+0x39>
     88e:	08 94       	sec
     890:	a1 08       	sbc	r10, r1
     892:	b1 08       	sbc	r11, r1
     894:	c1 08       	sbc	r12, r1
     896:	d1 08       	sbc	r13, r1
     898:	61 96       	adiw	r28, 0x11	; 17
     89a:	ec ac       	ldd	r14, Y+60	; 0x3c
     89c:	fd ac       	ldd	r15, Y+61	; 0x3d
     89e:	0e ad       	ldd	r16, Y+62	; 0x3e
     8a0:	1f ad       	ldd	r17, Y+63	; 0x3f
     8a2:	61 97       	sbiw	r28, 0x11	; 17
     8a4:	d7 01       	movw	r26, r14
     8a6:	99 27       	eor	r25, r25
     8a8:	88 27       	eor	r24, r24
     8aa:	96 01       	movw	r18, r12
     8ac:	85 01       	movw	r16, r10
     8ae:	08 2b       	or	r16, r24
     8b0:	19 2b       	or	r17, r25
     8b2:	2a 2b       	or	r18, r26
     8b4:	3b 2b       	or	r19, r27
     8b6:	09 ab       	std	Y+49, r16	; 0x31
     8b8:	1a ab       	std	Y+50, r17	; 0x32
     8ba:	2b ab       	std	Y+51, r18	; 0x33
     8bc:	3c ab       	std	Y+52, r19	; 0x34
     8be:	62 c2       	rjmp	.+1220   	; 0xd84 <__stack+0x525>
     8c0:	6e 14       	cp	r6, r14
     8c2:	7f 04       	cpc	r7, r15
     8c4:	80 06       	cpc	r8, r16
     8c6:	91 06       	cpc	r9, r17
     8c8:	08 f4       	brcc	.+2      	; 0x8cc <__stack+0x6d>
     8ca:	51 c2       	rjmp	.+1186   	; 0xd6e <__stack+0x50f>
     8cc:	20 e0       	ldi	r18, 0x00	; 0
     8ce:	e2 16       	cp	r14, r18
     8d0:	20 e0       	ldi	r18, 0x00	; 0
     8d2:	f2 06       	cpc	r15, r18
     8d4:	21 e0       	ldi	r18, 0x01	; 1
     8d6:	02 07       	cpc	r16, r18
     8d8:	20 e0       	ldi	r18, 0x00	; 0
     8da:	12 07       	cpc	r17, r18
     8dc:	88 f4       	brcc	.+34     	; 0x900 <__stack+0xa1>
     8de:	3f ef       	ldi	r19, 0xFF	; 255
     8e0:	e3 16       	cp	r14, r19
     8e2:	f1 04       	cpc	r15, r1
     8e4:	01 05       	cpc	r16, r1
     8e6:	11 05       	cpc	r17, r1
     8e8:	31 f0       	breq	.+12     	; 0x8f6 <__stack+0x97>
     8ea:	28 f0       	brcs	.+10     	; 0x8f6 <__stack+0x97>
     8ec:	48 e0       	ldi	r20, 0x08	; 8
     8ee:	50 e0       	ldi	r21, 0x00	; 0
     8f0:	60 e0       	ldi	r22, 0x00	; 0
     8f2:	70 e0       	ldi	r23, 0x00	; 0
     8f4:	17 c0       	rjmp	.+46     	; 0x924 <__stack+0xc5>
     8f6:	40 e0       	ldi	r20, 0x00	; 0
     8f8:	50 e0       	ldi	r21, 0x00	; 0
     8fa:	60 e0       	ldi	r22, 0x00	; 0
     8fc:	70 e0       	ldi	r23, 0x00	; 0
     8fe:	12 c0       	rjmp	.+36     	; 0x924 <__stack+0xc5>
     900:	40 e0       	ldi	r20, 0x00	; 0
     902:	e4 16       	cp	r14, r20
     904:	40 e0       	ldi	r20, 0x00	; 0
     906:	f4 06       	cpc	r15, r20
     908:	40 e0       	ldi	r20, 0x00	; 0
     90a:	04 07       	cpc	r16, r20
     90c:	41 e0       	ldi	r20, 0x01	; 1
     90e:	14 07       	cpc	r17, r20
     910:	28 f0       	brcs	.+10     	; 0x91c <__stack+0xbd>
     912:	48 e1       	ldi	r20, 0x18	; 24
     914:	50 e0       	ldi	r21, 0x00	; 0
     916:	60 e0       	ldi	r22, 0x00	; 0
     918:	70 e0       	ldi	r23, 0x00	; 0
     91a:	04 c0       	rjmp	.+8      	; 0x924 <__stack+0xc5>
     91c:	40 e1       	ldi	r20, 0x10	; 16
     91e:	50 e0       	ldi	r21, 0x00	; 0
     920:	60 e0       	ldi	r22, 0x00	; 0
     922:	70 e0       	ldi	r23, 0x00	; 0
     924:	d8 01       	movw	r26, r16
     926:	c7 01       	movw	r24, r14
     928:	04 2e       	mov	r0, r20
     92a:	04 c0       	rjmp	.+8      	; 0x934 <__stack+0xd5>
     92c:	b6 95       	lsr	r27
     92e:	a7 95       	ror	r26
     930:	97 95       	ror	r25
     932:	87 95       	ror	r24
     934:	0a 94       	dec	r0
     936:	d2 f7       	brpl	.-12     	; 0x92c <__stack+0xcd>
     938:	85 59       	subi	r24, 0x95	; 149
     93a:	9f 4f       	sbci	r25, 0xFF	; 255
     93c:	dc 01       	movw	r26, r24
     93e:	2c 91       	ld	r18, X
     940:	30 e2       	ldi	r19, 0x20	; 32
     942:	a3 2e       	mov	r10, r19
     944:	b1 2c       	mov	r11, r1
     946:	c1 2c       	mov	r12, r1
     948:	d1 2c       	mov	r13, r1
     94a:	d6 01       	movw	r26, r12
     94c:	c5 01       	movw	r24, r10
     94e:	84 1b       	sub	r24, r20
     950:	95 0b       	sbc	r25, r21
     952:	a6 0b       	sbc	r26, r22
     954:	b7 0b       	sbc	r27, r23
     956:	82 1b       	sub	r24, r18
     958:	91 09       	sbc	r25, r1
     95a:	a1 09       	sbc	r26, r1
     95c:	b1 09       	sbc	r27, r1
     95e:	00 97       	sbiw	r24, 0x00	; 0
     960:	a1 05       	cpc	r26, r1
     962:	b1 05       	cpc	r27, r1
     964:	89 f4       	brne	.+34     	; 0x988 <__stack+0x129>
     966:	e6 14       	cp	r14, r6
     968:	f7 04       	cpc	r15, r7
     96a:	08 05       	cpc	r16, r8
     96c:	19 05       	cpc	r17, r9
     96e:	08 f4       	brcc	.+2      	; 0x972 <__stack+0x113>
     970:	f2 c1       	rjmp	.+996    	; 0xd56 <__stack+0x4f7>
     972:	6d a4       	ldd	r6, Y+45	; 0x2d
     974:	7e a4       	ldd	r7, Y+46	; 0x2e
     976:	8f a4       	ldd	r8, Y+47	; 0x2f
     978:	98 a8       	ldd	r9, Y+48	; 0x30
     97a:	62 14       	cp	r6, r2
     97c:	73 04       	cpc	r7, r3
     97e:	84 04       	cpc	r8, r4
     980:	95 04       	cpc	r9, r5
     982:	08 f0       	brcs	.+2      	; 0x986 <__stack+0x127>
     984:	e8 c1       	rjmp	.+976    	; 0xd56 <__stack+0x4f7>
     986:	f3 c1       	rjmp	.+998    	; 0xd6e <__stack+0x50f>
     988:	6e 96       	adiw	r28, 0x1e	; 30
     98a:	8f af       	std	Y+63, r24	; 0x3f
     98c:	6e 97       	sbiw	r28, 0x1e	; 30
     98e:	08 2e       	mov	r0, r24
     990:	04 c0       	rjmp	.+8      	; 0x99a <__stack+0x13b>
     992:	ee 0c       	add	r14, r14
     994:	ff 1c       	adc	r15, r15
     996:	00 1f       	adc	r16, r16
     998:	11 1f       	adc	r17, r17
     99a:	0a 94       	dec	r0
     99c:	d2 f7       	brpl	.-12     	; 0x992 <__stack+0x133>
     99e:	6a 2d       	mov	r22, r10
     9a0:	68 1b       	sub	r22, r24
     9a2:	d2 01       	movw	r26, r4
     9a4:	c1 01       	movw	r24, r2
     9a6:	06 2e       	mov	r0, r22
     9a8:	04 c0       	rjmp	.+8      	; 0x9b2 <__stack+0x153>
     9aa:	b6 95       	lsr	r27
     9ac:	a7 95       	ror	r26
     9ae:	97 95       	ror	r25
     9b0:	87 95       	ror	r24
     9b2:	0a 94       	dec	r0
     9b4:	d2 f7       	brpl	.-12     	; 0x9aa <__stack+0x14b>
     9b6:	5c 01       	movw	r10, r24
     9b8:	6d 01       	movw	r12, r26
     9ba:	ae 28       	or	r10, r14
     9bc:	bf 28       	or	r11, r15
     9be:	c0 2a       	or	r12, r16
     9c0:	d1 2a       	or	r13, r17
     9c2:	ad a2       	std	Y+37, r10	; 0x25
     9c4:	be a2       	std	Y+38, r11	; 0x26
     9c6:	cf a2       	std	Y+39, r12	; 0x27
     9c8:	d8 a6       	std	Y+40, r13	; 0x28
     9ca:	72 01       	movw	r14, r4
     9cc:	61 01       	movw	r12, r2
     9ce:	6e 96       	adiw	r28, 0x1e	; 30
     9d0:	0f ac       	ldd	r0, Y+63	; 0x3f
     9d2:	6e 97       	sbiw	r28, 0x1e	; 30
     9d4:	04 c0       	rjmp	.+8      	; 0x9de <__stack+0x17f>
     9d6:	cc 0c       	add	r12, r12
     9d8:	dd 1c       	adc	r13, r13
     9da:	ee 1c       	adc	r14, r14
     9dc:	ff 1c       	adc	r15, r15
     9de:	0a 94       	dec	r0
     9e0:	d2 f7       	brpl	.-12     	; 0x9d6 <__stack+0x177>
     9e2:	c9 a2       	std	Y+33, r12	; 0x21
     9e4:	da a2       	std	Y+34, r13	; 0x22
     9e6:	eb a2       	std	Y+35, r14	; 0x23
     9e8:	fc a2       	std	Y+36, r15	; 0x24
     9ea:	64 01       	movw	r12, r8
     9ec:	53 01       	movw	r10, r6
     9ee:	06 2e       	mov	r0, r22
     9f0:	04 c0       	rjmp	.+8      	; 0x9fa <__stack+0x19b>
     9f2:	d6 94       	lsr	r13
     9f4:	c7 94       	ror	r12
     9f6:	b7 94       	ror	r11
     9f8:	a7 94       	ror	r10
     9fa:	0a 94       	dec	r0
     9fc:	d2 f7       	brpl	.-12     	; 0x9f2 <__stack+0x193>
     9fe:	d4 01       	movw	r26, r8
     a00:	c3 01       	movw	r24, r6
     a02:	6e 96       	adiw	r28, 0x1e	; 30
     a04:	0f ac       	ldd	r0, Y+63	; 0x3f
     a06:	6e 97       	sbiw	r28, 0x1e	; 30
     a08:	04 c0       	rjmp	.+8      	; 0xa12 <__stack+0x1b3>
     a0a:	88 0f       	add	r24, r24
     a0c:	99 1f       	adc	r25, r25
     a0e:	aa 1f       	adc	r26, r26
     a10:	bb 1f       	adc	r27, r27
     a12:	0a 94       	dec	r0
     a14:	d2 f7       	brpl	.-12     	; 0xa0a <__stack+0x1ab>
     a16:	ed a4       	ldd	r14, Y+45	; 0x2d
     a18:	fe a4       	ldd	r15, Y+46	; 0x2e
     a1a:	0f a5       	ldd	r16, Y+47	; 0x2f
     a1c:	18 a9       	ldd	r17, Y+48	; 0x30
     a1e:	04 c0       	rjmp	.+8      	; 0xa28 <__stack+0x1c9>
     a20:	16 95       	lsr	r17
     a22:	07 95       	ror	r16
     a24:	f7 94       	ror	r15
     a26:	e7 94       	ror	r14
     a28:	6a 95       	dec	r22
     a2a:	d2 f7       	brpl	.-12     	; 0xa20 <__stack+0x1c1>
     a2c:	37 01       	movw	r6, r14
     a2e:	48 01       	movw	r8, r16
     a30:	68 2a       	or	r6, r24
     a32:	79 2a       	or	r7, r25
     a34:	8a 2a       	or	r8, r26
     a36:	9b 2a       	or	r9, r27
     a38:	6d 8e       	std	Y+29, r6	; 0x1d
     a3a:	7e 8e       	std	Y+30, r7	; 0x1e
     a3c:	8f 8e       	std	Y+31, r8	; 0x1f
     a3e:	98 a2       	std	Y+32, r9	; 0x20
     a40:	ed a0       	ldd	r14, Y+37	; 0x25
     a42:	fe a0       	ldd	r15, Y+38	; 0x26
     a44:	0f a1       	ldd	r16, Y+39	; 0x27
     a46:	18 a5       	ldd	r17, Y+40	; 0x28
     a48:	38 01       	movw	r6, r16
     a4a:	88 24       	eor	r8, r8
     a4c:	99 24       	eor	r9, r9
     a4e:	98 01       	movw	r18, r16
     a50:	87 01       	movw	r16, r14
     a52:	20 70       	andi	r18, 0x00	; 0
     a54:	30 70       	andi	r19, 0x00	; 0
     a56:	65 96       	adiw	r28, 0x15	; 21
     a58:	0c af       	std	Y+60, r16	; 0x3c
     a5a:	1d af       	std	Y+61, r17	; 0x3d
     a5c:	2e af       	std	Y+62, r18	; 0x3e
     a5e:	3f af       	std	Y+63, r19	; 0x3f
     a60:	65 97       	sbiw	r28, 0x15	; 21
     a62:	c6 01       	movw	r24, r12
     a64:	b5 01       	movw	r22, r10
     a66:	a4 01       	movw	r20, r8
     a68:	93 01       	movw	r18, r6
     a6a:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     a6e:	7b 01       	movw	r14, r22
     a70:	8c 01       	movw	r16, r24
     a72:	c6 01       	movw	r24, r12
     a74:	b5 01       	movw	r22, r10
     a76:	a4 01       	movw	r20, r8
     a78:	93 01       	movw	r18, r6
     a7a:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     a7e:	c9 01       	movw	r24, r18
     a80:	da 01       	movw	r26, r20
     a82:	1c 01       	movw	r2, r24
     a84:	2d 01       	movw	r4, r26
     a86:	c2 01       	movw	r24, r4
     a88:	b1 01       	movw	r22, r2
     a8a:	65 96       	adiw	r28, 0x15	; 21
     a8c:	2c ad       	ldd	r18, Y+60	; 0x3c
     a8e:	3d ad       	ldd	r19, Y+61	; 0x3d
     a90:	4e ad       	ldd	r20, Y+62	; 0x3e
     a92:	5f ad       	ldd	r21, Y+63	; 0x3f
     a94:	65 97       	sbiw	r28, 0x15	; 21
     a96:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
     a9a:	9b 01       	movw	r18, r22
     a9c:	ac 01       	movw	r20, r24
     a9e:	87 01       	movw	r16, r14
     aa0:	ff 24       	eor	r15, r15
     aa2:	ee 24       	eor	r14, r14
     aa4:	ad 8c       	ldd	r10, Y+29	; 0x1d
     aa6:	be 8c       	ldd	r11, Y+30	; 0x1e
     aa8:	cf 8c       	ldd	r12, Y+31	; 0x1f
     aaa:	d8 a0       	ldd	r13, Y+32	; 0x20
     aac:	c6 01       	movw	r24, r12
     aae:	aa 27       	eor	r26, r26
     ab0:	bb 27       	eor	r27, r27
     ab2:	57 01       	movw	r10, r14
     ab4:	68 01       	movw	r12, r16
     ab6:	a8 2a       	or	r10, r24
     ab8:	b9 2a       	or	r11, r25
     aba:	ca 2a       	or	r12, r26
     abc:	db 2a       	or	r13, r27
     abe:	a2 16       	cp	r10, r18
     ac0:	b3 06       	cpc	r11, r19
     ac2:	c4 06       	cpc	r12, r20
     ac4:	d5 06       	cpc	r13, r21
     ac6:	00 f5       	brcc	.+64     	; 0xb08 <__stack+0x2a9>
     ac8:	08 94       	sec
     aca:	21 08       	sbc	r2, r1
     acc:	31 08       	sbc	r3, r1
     ace:	41 08       	sbc	r4, r1
     ad0:	51 08       	sbc	r5, r1
     ad2:	ed a0       	ldd	r14, Y+37	; 0x25
     ad4:	fe a0       	ldd	r15, Y+38	; 0x26
     ad6:	0f a1       	ldd	r16, Y+39	; 0x27
     ad8:	18 a5       	ldd	r17, Y+40	; 0x28
     ada:	ae 0c       	add	r10, r14
     adc:	bf 1c       	adc	r11, r15
     ade:	c0 1e       	adc	r12, r16
     ae0:	d1 1e       	adc	r13, r17
     ae2:	ae 14       	cp	r10, r14
     ae4:	bf 04       	cpc	r11, r15
     ae6:	c0 06       	cpc	r12, r16
     ae8:	d1 06       	cpc	r13, r17
     aea:	70 f0       	brcs	.+28     	; 0xb08 <__stack+0x2a9>
     aec:	a2 16       	cp	r10, r18
     aee:	b3 06       	cpc	r11, r19
     af0:	c4 06       	cpc	r12, r20
     af2:	d5 06       	cpc	r13, r21
     af4:	48 f4       	brcc	.+18     	; 0xb08 <__stack+0x2a9>
     af6:	08 94       	sec
     af8:	21 08       	sbc	r2, r1
     afa:	31 08       	sbc	r3, r1
     afc:	41 08       	sbc	r4, r1
     afe:	51 08       	sbc	r5, r1
     b00:	ae 0c       	add	r10, r14
     b02:	bf 1c       	adc	r11, r15
     b04:	c0 1e       	adc	r12, r16
     b06:	d1 1e       	adc	r13, r17
     b08:	a2 1a       	sub	r10, r18
     b0a:	b3 0a       	sbc	r11, r19
     b0c:	c4 0a       	sbc	r12, r20
     b0e:	d5 0a       	sbc	r13, r21
     b10:	c6 01       	movw	r24, r12
     b12:	b5 01       	movw	r22, r10
     b14:	a4 01       	movw	r20, r8
     b16:	93 01       	movw	r18, r6
     b18:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     b1c:	7b 01       	movw	r14, r22
     b1e:	8c 01       	movw	r16, r24
     b20:	c6 01       	movw	r24, r12
     b22:	b5 01       	movw	r22, r10
     b24:	a4 01       	movw	r20, r8
     b26:	93 01       	movw	r18, r6
     b28:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     b2c:	c9 01       	movw	r24, r18
     b2e:	da 01       	movw	r26, r20
     b30:	3c 01       	movw	r6, r24
     b32:	4d 01       	movw	r8, r26
     b34:	c4 01       	movw	r24, r8
     b36:	b3 01       	movw	r22, r6
     b38:	65 96       	adiw	r28, 0x15	; 21
     b3a:	2c ad       	ldd	r18, Y+60	; 0x3c
     b3c:	3d ad       	ldd	r19, Y+61	; 0x3d
     b3e:	4e ad       	ldd	r20, Y+62	; 0x3e
     b40:	5f ad       	ldd	r21, Y+63	; 0x3f
     b42:	65 97       	sbiw	r28, 0x15	; 21
     b44:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
     b48:	9b 01       	movw	r18, r22
     b4a:	ac 01       	movw	r20, r24
     b4c:	87 01       	movw	r16, r14
     b4e:	ff 24       	eor	r15, r15
     b50:	ee 24       	eor	r14, r14
     b52:	8d 8d       	ldd	r24, Y+29	; 0x1d
     b54:	9e 8d       	ldd	r25, Y+30	; 0x1e
     b56:	af 8d       	ldd	r26, Y+31	; 0x1f
     b58:	b8 a1       	ldd	r27, Y+32	; 0x20
     b5a:	a0 70       	andi	r26, 0x00	; 0
     b5c:	b0 70       	andi	r27, 0x00	; 0
     b5e:	57 01       	movw	r10, r14
     b60:	68 01       	movw	r12, r16
     b62:	a8 2a       	or	r10, r24
     b64:	b9 2a       	or	r11, r25
     b66:	ca 2a       	or	r12, r26
     b68:	db 2a       	or	r13, r27
     b6a:	a2 16       	cp	r10, r18
     b6c:	b3 06       	cpc	r11, r19
     b6e:	c4 06       	cpc	r12, r20
     b70:	d5 06       	cpc	r13, r21
     b72:	00 f5       	brcc	.+64     	; 0xbb4 <__stack+0x355>
     b74:	08 94       	sec
     b76:	61 08       	sbc	r6, r1
     b78:	71 08       	sbc	r7, r1
     b7a:	81 08       	sbc	r8, r1
     b7c:	91 08       	sbc	r9, r1
     b7e:	6d a1       	ldd	r22, Y+37	; 0x25
     b80:	7e a1       	ldd	r23, Y+38	; 0x26
     b82:	8f a1       	ldd	r24, Y+39	; 0x27
     b84:	98 a5       	ldd	r25, Y+40	; 0x28
     b86:	a6 0e       	add	r10, r22
     b88:	b7 1e       	adc	r11, r23
     b8a:	c8 1e       	adc	r12, r24
     b8c:	d9 1e       	adc	r13, r25
     b8e:	a6 16       	cp	r10, r22
     b90:	b7 06       	cpc	r11, r23
     b92:	c8 06       	cpc	r12, r24
     b94:	d9 06       	cpc	r13, r25
     b96:	70 f0       	brcs	.+28     	; 0xbb4 <__stack+0x355>
     b98:	a2 16       	cp	r10, r18
     b9a:	b3 06       	cpc	r11, r19
     b9c:	c4 06       	cpc	r12, r20
     b9e:	d5 06       	cpc	r13, r21
     ba0:	48 f4       	brcc	.+18     	; 0xbb4 <__stack+0x355>
     ba2:	08 94       	sec
     ba4:	61 08       	sbc	r6, r1
     ba6:	71 08       	sbc	r7, r1
     ba8:	81 08       	sbc	r8, r1
     baa:	91 08       	sbc	r9, r1
     bac:	a6 0e       	add	r10, r22
     bae:	b7 1e       	adc	r11, r23
     bb0:	c8 1e       	adc	r12, r24
     bb2:	d9 1e       	adc	r13, r25
     bb4:	d6 01       	movw	r26, r12
     bb6:	c5 01       	movw	r24, r10
     bb8:	82 1b       	sub	r24, r18
     bba:	93 0b       	sbc	r25, r19
     bbc:	a4 0b       	sbc	r26, r20
     bbe:	b5 0b       	sbc	r27, r21
     bc0:	89 8f       	std	Y+25, r24	; 0x19
     bc2:	9a 8f       	std	Y+26, r25	; 0x1a
     bc4:	ab 8f       	std	Y+27, r26	; 0x1b
     bc6:	bc 8f       	std	Y+28, r27	; 0x1c
     bc8:	d1 01       	movw	r26, r2
     bca:	99 27       	eor	r25, r25
     bcc:	88 27       	eor	r24, r24
     bce:	64 01       	movw	r12, r8
     bd0:	53 01       	movw	r10, r6
     bd2:	a8 2a       	or	r10, r24
     bd4:	b9 2a       	or	r11, r25
     bd6:	ca 2a       	or	r12, r26
     bd8:	db 2a       	or	r13, r27
     bda:	a9 aa       	std	Y+49, r10	; 0x31
     bdc:	ba aa       	std	Y+50, r11	; 0x32
     bde:	cb aa       	std	Y+51, r12	; 0x33
     be0:	dc aa       	std	Y+52, r13	; 0x34
     be2:	86 01       	movw	r16, r12
     be4:	75 01       	movw	r14, r10
     be6:	2f ef       	ldi	r18, 0xFF	; 255
     be8:	3f ef       	ldi	r19, 0xFF	; 255
     bea:	40 e0       	ldi	r20, 0x00	; 0
     bec:	50 e0       	ldi	r21, 0x00	; 0
     bee:	e2 22       	and	r14, r18
     bf0:	f3 22       	and	r15, r19
     bf2:	04 23       	and	r16, r20
     bf4:	15 23       	and	r17, r21
     bf6:	a6 01       	movw	r20, r12
     bf8:	66 27       	eor	r22, r22
     bfa:	77 27       	eor	r23, r23
     bfc:	6d 96       	adiw	r28, 0x1d	; 29
     bfe:	4c af       	std	Y+60, r20	; 0x3c
     c00:	5d af       	std	Y+61, r21	; 0x3d
     c02:	6e af       	std	Y+62, r22	; 0x3e
     c04:	7f af       	std	Y+63, r23	; 0x3f
     c06:	6d 97       	sbiw	r28, 0x1d	; 29
     c08:	a9 a0       	ldd	r10, Y+33	; 0x21
     c0a:	ba a0       	ldd	r11, Y+34	; 0x22
     c0c:	cb a0       	ldd	r12, Y+35	; 0x23
     c0e:	dc a0       	ldd	r13, Y+36	; 0x24
     c10:	6f ef       	ldi	r22, 0xFF	; 255
     c12:	7f ef       	ldi	r23, 0xFF	; 255
     c14:	80 e0       	ldi	r24, 0x00	; 0
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	a6 22       	and	r10, r22
     c1a:	b7 22       	and	r11, r23
     c1c:	c8 22       	and	r12, r24
     c1e:	d9 22       	and	r13, r25
     c20:	89 a1       	ldd	r24, Y+33	; 0x21
     c22:	9a a1       	ldd	r25, Y+34	; 0x22
     c24:	ab a1       	ldd	r26, Y+35	; 0x23
     c26:	bc a1       	ldd	r27, Y+36	; 0x24
     c28:	1d 01       	movw	r2, r26
     c2a:	44 24       	eor	r4, r4
     c2c:	55 24       	eor	r5, r5
     c2e:	c8 01       	movw	r24, r16
     c30:	b7 01       	movw	r22, r14
     c32:	a6 01       	movw	r20, r12
     c34:	95 01       	movw	r18, r10
     c36:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
     c3a:	69 96       	adiw	r28, 0x19	; 25
     c3c:	6c af       	std	Y+60, r22	; 0x3c
     c3e:	7d af       	std	Y+61, r23	; 0x3d
     c40:	8e af       	std	Y+62, r24	; 0x3e
     c42:	9f af       	std	Y+63, r25	; 0x3f
     c44:	69 97       	sbiw	r28, 0x19	; 25
     c46:	c8 01       	movw	r24, r16
     c48:	b7 01       	movw	r22, r14
     c4a:	a2 01       	movw	r20, r4
     c4c:	91 01       	movw	r18, r2
     c4e:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
     c52:	3b 01       	movw	r6, r22
     c54:	4c 01       	movw	r8, r24
     c56:	6d 96       	adiw	r28, 0x1d	; 29
     c58:	6c ad       	ldd	r22, Y+60	; 0x3c
     c5a:	7d ad       	ldd	r23, Y+61	; 0x3d
     c5c:	8e ad       	ldd	r24, Y+62	; 0x3e
     c5e:	9f ad       	ldd	r25, Y+63	; 0x3f
     c60:	6d 97       	sbiw	r28, 0x1d	; 29
     c62:	a6 01       	movw	r20, r12
     c64:	95 01       	movw	r18, r10
     c66:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
     c6a:	7b 01       	movw	r14, r22
     c6c:	8c 01       	movw	r16, r24
     c6e:	6d 96       	adiw	r28, 0x1d	; 29
     c70:	6c ad       	ldd	r22, Y+60	; 0x3c
     c72:	7d ad       	ldd	r23, Y+61	; 0x3d
     c74:	8e ad       	ldd	r24, Y+62	; 0x3e
     c76:	9f ad       	ldd	r25, Y+63	; 0x3f
     c78:	6d 97       	sbiw	r28, 0x1d	; 29
     c7a:	a2 01       	movw	r20, r4
     c7c:	91 01       	movw	r18, r2
     c7e:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
     c82:	5b 01       	movw	r10, r22
     c84:	6c 01       	movw	r12, r24
     c86:	a8 01       	movw	r20, r16
     c88:	97 01       	movw	r18, r14
     c8a:	26 0d       	add	r18, r6
     c8c:	37 1d       	adc	r19, r7
     c8e:	48 1d       	adc	r20, r8
     c90:	59 1d       	adc	r21, r9
     c92:	69 96       	adiw	r28, 0x19	; 25
     c94:	6c ac       	ldd	r6, Y+60	; 0x3c
     c96:	7d ac       	ldd	r7, Y+61	; 0x3d
     c98:	8e ac       	ldd	r8, Y+62	; 0x3e
     c9a:	9f ac       	ldd	r9, Y+63	; 0x3f
     c9c:	69 97       	sbiw	r28, 0x19	; 25
     c9e:	c4 01       	movw	r24, r8
     ca0:	aa 27       	eor	r26, r26
     ca2:	bb 27       	eor	r27, r27
     ca4:	28 0f       	add	r18, r24
     ca6:	39 1f       	adc	r19, r25
     ca8:	4a 1f       	adc	r20, r26
     caa:	5b 1f       	adc	r21, r27
     cac:	2e 15       	cp	r18, r14
     cae:	3f 05       	cpc	r19, r15
     cb0:	40 07       	cpc	r20, r16
     cb2:	51 07       	cpc	r21, r17
     cb4:	48 f4       	brcc	.+18     	; 0xcc8 <__stack+0x469>
     cb6:	e1 2c       	mov	r14, r1
     cb8:	f1 2c       	mov	r15, r1
     cba:	61 e0       	ldi	r22, 0x01	; 1
     cbc:	06 2f       	mov	r16, r22
     cbe:	11 2d       	mov	r17, r1
     cc0:	ae 0c       	add	r10, r14
     cc2:	bf 1c       	adc	r11, r15
     cc4:	c0 1e       	adc	r12, r16
     cc6:	d1 1e       	adc	r13, r17
     cc8:	ca 01       	movw	r24, r20
     cca:	aa 27       	eor	r26, r26
     ccc:	bb 27       	eor	r27, r27
     cce:	bc 01       	movw	r22, r24
     cd0:	cd 01       	movw	r24, r26
     cd2:	6a 0d       	add	r22, r10
     cd4:	7b 1d       	adc	r23, r11
     cd6:	8c 1d       	adc	r24, r12
     cd8:	9d 1d       	adc	r25, r13
     cda:	69 8c       	ldd	r6, Y+25	; 0x19
     cdc:	7a 8c       	ldd	r7, Y+26	; 0x1a
     cde:	8b 8c       	ldd	r8, Y+27	; 0x1b
     ce0:	9c 8c       	ldd	r9, Y+28	; 0x1c
     ce2:	66 16       	cp	r6, r22
     ce4:	77 06       	cpc	r7, r23
     ce6:	88 06       	cpc	r8, r24
     ce8:	99 06       	cpc	r9, r25
     cea:	40 f1       	brcs	.+80     	; 0xd3c <__stack+0x4dd>
     cec:	66 15       	cp	r22, r6
     cee:	77 05       	cpc	r23, r7
     cf0:	88 05       	cpc	r24, r8
     cf2:	99 05       	cpc	r25, r9
     cf4:	09 f0       	breq	.+2      	; 0xcf8 <__stack+0x499>
     cf6:	43 c0       	rjmp	.+134    	; 0xd7e <__stack+0x51f>
     cf8:	d9 01       	movw	r26, r18
     cfa:	99 27       	eor	r25, r25
     cfc:	88 27       	eor	r24, r24
     cfe:	69 96       	adiw	r28, 0x19	; 25
     d00:	2c ad       	ldd	r18, Y+60	; 0x3c
     d02:	3d ad       	ldd	r19, Y+61	; 0x3d
     d04:	4e ad       	ldd	r20, Y+62	; 0x3e
     d06:	5f ad       	ldd	r21, Y+63	; 0x3f
     d08:	69 97       	sbiw	r28, 0x19	; 25
     d0a:	40 70       	andi	r20, 0x00	; 0
     d0c:	50 70       	andi	r21, 0x00	; 0
     d0e:	82 0f       	add	r24, r18
     d10:	93 1f       	adc	r25, r19
     d12:	a4 1f       	adc	r26, r20
     d14:	b5 1f       	adc	r27, r21
     d16:	2d a5       	ldd	r18, Y+45	; 0x2d
     d18:	3e a5       	ldd	r19, Y+46	; 0x2e
     d1a:	4f a5       	ldd	r20, Y+47	; 0x2f
     d1c:	58 a9       	ldd	r21, Y+48	; 0x30
     d1e:	6e 96       	adiw	r28, 0x1e	; 30
     d20:	0f ac       	ldd	r0, Y+63	; 0x3f
     d22:	6e 97       	sbiw	r28, 0x1e	; 30
     d24:	04 c0       	rjmp	.+8      	; 0xd2e <__stack+0x4cf>
     d26:	22 0f       	add	r18, r18
     d28:	33 1f       	adc	r19, r19
     d2a:	44 1f       	adc	r20, r20
     d2c:	55 1f       	adc	r21, r21
     d2e:	0a 94       	dec	r0
     d30:	d2 f7       	brpl	.-12     	; 0xd26 <__stack+0x4c7>
     d32:	28 17       	cp	r18, r24
     d34:	39 07       	cpc	r19, r25
     d36:	4a 07       	cpc	r20, r26
     d38:	5b 07       	cpc	r21, r27
     d3a:	08 f5       	brcc	.+66     	; 0xd7e <__stack+0x51f>
     d3c:	09 a9       	ldd	r16, Y+49	; 0x31
     d3e:	1a a9       	ldd	r17, Y+50	; 0x32
     d40:	2b a9       	ldd	r18, Y+51	; 0x33
     d42:	3c a9       	ldd	r19, Y+52	; 0x34
     d44:	01 50       	subi	r16, 0x01	; 1
     d46:	10 40       	sbci	r17, 0x00	; 0
     d48:	20 40       	sbci	r18, 0x00	; 0
     d4a:	30 40       	sbci	r19, 0x00	; 0
     d4c:	09 ab       	std	Y+49, r16	; 0x31
     d4e:	1a ab       	std	Y+50, r17	; 0x32
     d50:	2b ab       	std	Y+51, r18	; 0x33
     d52:	3c ab       	std	Y+52, r19	; 0x34
     d54:	14 c0       	rjmp	.+40     	; 0xd7e <__stack+0x51f>
     d56:	66 24       	eor	r6, r6
     d58:	77 24       	eor	r7, r7
     d5a:	43 01       	movw	r8, r6
     d5c:	21 e0       	ldi	r18, 0x01	; 1
     d5e:	30 e0       	ldi	r19, 0x00	; 0
     d60:	40 e0       	ldi	r20, 0x00	; 0
     d62:	50 e0       	ldi	r21, 0x00	; 0
     d64:	29 ab       	std	Y+49, r18	; 0x31
     d66:	3a ab       	std	Y+50, r19	; 0x32
     d68:	4b ab       	std	Y+51, r20	; 0x33
     d6a:	5c ab       	std	Y+52, r21	; 0x34
     d6c:	0b c0       	rjmp	.+22     	; 0xd84 <__stack+0x525>
     d6e:	66 24       	eor	r6, r6
     d70:	77 24       	eor	r7, r7
     d72:	43 01       	movw	r8, r6
     d74:	19 aa       	std	Y+49, r1	; 0x31
     d76:	1a aa       	std	Y+50, r1	; 0x32
     d78:	1b aa       	std	Y+51, r1	; 0x33
     d7a:	1c aa       	std	Y+52, r1	; 0x34
     d7c:	03 c0       	rjmp	.+6      	; 0xd84 <__stack+0x525>
     d7e:	66 24       	eor	r6, r6
     d80:	77 24       	eor	r7, r7
     d82:	43 01       	movw	r8, r6
     d84:	fe 01       	movw	r30, r28
     d86:	71 96       	adiw	r30, 0x11	; 17
     d88:	88 e0       	ldi	r24, 0x08	; 8
     d8a:	df 01       	movw	r26, r30
     d8c:	1d 92       	st	X+, r1
     d8e:	8a 95       	dec	r24
     d90:	e9 f7       	brne	.-6      	; 0xd8c <__stack+0x52d>
     d92:	a9 a8       	ldd	r10, Y+49	; 0x31
     d94:	ba a8       	ldd	r11, Y+50	; 0x32
     d96:	cb a8       	ldd	r12, Y+51	; 0x33
     d98:	dc a8       	ldd	r13, Y+52	; 0x34
     d9a:	a9 8a       	std	Y+17, r10	; 0x11
     d9c:	ba 8a       	std	Y+18, r11	; 0x12
     d9e:	cb 8a       	std	Y+19, r12	; 0x13
     da0:	dc 8a       	std	Y+20, r13	; 0x14
     da2:	6d 8a       	std	Y+21, r6	; 0x15
     da4:	7e 8a       	std	Y+22, r7	; 0x16
     da6:	8f 8a       	std	Y+23, r8	; 0x17
     da8:	98 8e       	std	Y+24, r9	; 0x18
     daa:	29 a9       	ldd	r18, Y+49	; 0x31
     dac:	3a 89       	ldd	r19, Y+18	; 0x12
     dae:	4b 89       	ldd	r20, Y+19	; 0x13
     db0:	5c 89       	ldd	r21, Y+20	; 0x14
     db2:	66 2d       	mov	r22, r6
     db4:	7e 89       	ldd	r23, Y+22	; 0x16
     db6:	8f 89       	ldd	r24, Y+23	; 0x17
     db8:	98 8d       	ldd	r25, Y+24	; 0x18
     dba:	c2 5a       	subi	r28, 0xA2	; 162
     dbc:	df 4f       	sbci	r29, 0xFF	; 255
     dbe:	e2 e1       	ldi	r30, 0x12	; 18
     dc0:	0c 94 4f 20 	jmp	0x409e	; 0x409e <__epilogue_restores__>

00000dc4 <__umoddi3>:
     dc4:	ab e5       	ldi	r26, 0x5B	; 91
     dc6:	b0 e0       	ldi	r27, 0x00	; 0
     dc8:	e8 ee       	ldi	r30, 0xE8	; 232
     dca:	f6 e0       	ldi	r31, 0x06	; 6
     dcc:	0c 94 33 20 	jmp	0x4066	; 0x4066 <__prologue_saves__>
     dd0:	a8 e0       	ldi	r26, 0x08	; 8
     dd2:	4e 01       	movw	r8, r28
     dd4:	08 94       	sec
     dd6:	81 1c       	adc	r8, r1
     dd8:	91 1c       	adc	r9, r1
     dda:	f4 01       	movw	r30, r8
     ddc:	6a 2e       	mov	r6, r26
     dde:	11 92       	st	Z+, r1
     de0:	6a 94       	dec	r6
     de2:	e9 f7       	brne	.-6      	; 0xdde <__umoddi3+0x1a>
     de4:	29 83       	std	Y+1, r18	; 0x01
     de6:	3a 83       	std	Y+2, r19	; 0x02
     de8:	4b 83       	std	Y+3, r20	; 0x03
     dea:	5c 83       	std	Y+4, r21	; 0x04
     dec:	6d 83       	std	Y+5, r22	; 0x05
     dee:	7e 83       	std	Y+6, r23	; 0x06
     df0:	8f 83       	std	Y+7, r24	; 0x07
     df2:	98 87       	std	Y+8, r25	; 0x08
     df4:	ce 01       	movw	r24, r28
     df6:	09 96       	adiw	r24, 0x09	; 9
     df8:	fc 01       	movw	r30, r24
     dfa:	11 92       	st	Z+, r1
     dfc:	aa 95       	dec	r26
     dfe:	e9 f7       	brne	.-6      	; 0xdfa <__umoddi3+0x36>
     e00:	a9 86       	std	Y+9, r10	; 0x09
     e02:	ba 86       	std	Y+10, r11	; 0x0a
     e04:	cb 86       	std	Y+11, r12	; 0x0b
     e06:	dc 86       	std	Y+12, r13	; 0x0c
     e08:	ed 86       	std	Y+13, r14	; 0x0d
     e0a:	fe 86       	std	Y+14, r15	; 0x0e
     e0c:	0f 87       	std	Y+15, r16	; 0x0f
     e0e:	18 8b       	std	Y+16, r17	; 0x10
     e10:	29 84       	ldd	r2, Y+9	; 0x09
     e12:	3a 84       	ldd	r3, Y+10	; 0x0a
     e14:	4b 84       	ldd	r4, Y+11	; 0x0b
     e16:	5c 84       	ldd	r5, Y+12	; 0x0c
     e18:	ad 84       	ldd	r10, Y+13	; 0x0d
     e1a:	be 84       	ldd	r11, Y+14	; 0x0e
     e1c:	cf 84       	ldd	r12, Y+15	; 0x0f
     e1e:	d8 88       	ldd	r13, Y+16	; 0x10
     e20:	29 81       	ldd	r18, Y+1	; 0x01
     e22:	3a 81       	ldd	r19, Y+2	; 0x02
     e24:	4b 81       	ldd	r20, Y+3	; 0x03
     e26:	5c 81       	ldd	r21, Y+4	; 0x04
     e28:	69 96       	adiw	r28, 0x19	; 25
     e2a:	2f af       	std	Y+63, r18	; 0x3f
     e2c:	69 97       	sbiw	r28, 0x19	; 25
     e2e:	6a 96       	adiw	r28, 0x1a	; 26
     e30:	3f af       	std	Y+63, r19	; 0x3f
     e32:	6a 97       	sbiw	r28, 0x1a	; 26
     e34:	6b 96       	adiw	r28, 0x1b	; 27
     e36:	4f af       	std	Y+63, r20	; 0x3f
     e38:	6b 97       	sbiw	r28, 0x1b	; 27
     e3a:	6c 96       	adiw	r28, 0x1c	; 28
     e3c:	5f af       	std	Y+63, r21	; 0x3f
     e3e:	6c 97       	sbiw	r28, 0x1c	; 28
     e40:	6c 96       	adiw	r28, 0x1c	; 28
     e42:	6c ac       	ldd	r6, Y+60	; 0x3c
     e44:	7d ac       	ldd	r7, Y+61	; 0x3d
     e46:	8e ac       	ldd	r8, Y+62	; 0x3e
     e48:	9f ac       	ldd	r9, Y+63	; 0x3f
     e4a:	6c 97       	sbiw	r28, 0x1c	; 28
     e4c:	69 aa       	std	Y+49, r6	; 0x31
     e4e:	7a aa       	std	Y+50, r7	; 0x32
     e50:	8b aa       	std	Y+51, r8	; 0x33
     e52:	9c aa       	std	Y+52, r9	; 0x34
     e54:	6d 81       	ldd	r22, Y+5	; 0x05
     e56:	7e 81       	ldd	r23, Y+6	; 0x06
     e58:	8f 81       	ldd	r24, Y+7	; 0x07
     e5a:	98 85       	ldd	r25, Y+8	; 0x08
     e5c:	3b 01       	movw	r6, r22
     e5e:	4c 01       	movw	r8, r24
     e60:	6d aa       	std	Y+53, r6	; 0x35
     e62:	7e aa       	std	Y+54, r7	; 0x36
     e64:	8f aa       	std	Y+55, r8	; 0x37
     e66:	98 ae       	std	Y+56, r9	; 0x38
     e68:	a1 14       	cp	r10, r1
     e6a:	b1 04       	cpc	r11, r1
     e6c:	c1 04       	cpc	r12, r1
     e6e:	d1 04       	cpc	r13, r1
     e70:	09 f0       	breq	.+2      	; 0xe74 <__umoddi3+0xb0>
     e72:	04 c3       	rjmp	.+1544   	; 0x147c <__umoddi3+0x6b8>
     e74:	62 14       	cp	r6, r2
     e76:	73 04       	cpc	r7, r3
     e78:	84 04       	cpc	r8, r4
     e7a:	95 04       	cpc	r9, r5
     e7c:	08 f0       	brcs	.+2      	; 0xe80 <__umoddi3+0xbc>
     e7e:	00 c1       	rjmp	.+512    	; 0x1080 <__umoddi3+0x2bc>
     e80:	00 e0       	ldi	r16, 0x00	; 0
     e82:	20 16       	cp	r2, r16
     e84:	00 e0       	ldi	r16, 0x00	; 0
     e86:	30 06       	cpc	r3, r16
     e88:	01 e0       	ldi	r16, 0x01	; 1
     e8a:	40 06       	cpc	r4, r16
     e8c:	00 e0       	ldi	r16, 0x00	; 0
     e8e:	50 06       	cpc	r5, r16
     e90:	88 f4       	brcc	.+34     	; 0xeb4 <__umoddi3+0xf0>
     e92:	1f ef       	ldi	r17, 0xFF	; 255
     e94:	21 16       	cp	r2, r17
     e96:	31 04       	cpc	r3, r1
     e98:	41 04       	cpc	r4, r1
     e9a:	51 04       	cpc	r5, r1
     e9c:	39 f0       	breq	.+14     	; 0xeac <__umoddi3+0xe8>
     e9e:	30 f0       	brcs	.+12     	; 0xeac <__umoddi3+0xe8>
     ea0:	88 e0       	ldi	r24, 0x08	; 8
     ea2:	e8 2e       	mov	r14, r24
     ea4:	f1 2c       	mov	r15, r1
     ea6:	01 2d       	mov	r16, r1
     ea8:	11 2d       	mov	r17, r1
     eaa:	18 c0       	rjmp	.+48     	; 0xedc <__umoddi3+0x118>
     eac:	ee 24       	eor	r14, r14
     eae:	ff 24       	eor	r15, r15
     eb0:	87 01       	movw	r16, r14
     eb2:	14 c0       	rjmp	.+40     	; 0xedc <__umoddi3+0x118>
     eb4:	40 e0       	ldi	r20, 0x00	; 0
     eb6:	24 16       	cp	r2, r20
     eb8:	40 e0       	ldi	r20, 0x00	; 0
     eba:	34 06       	cpc	r3, r20
     ebc:	40 e0       	ldi	r20, 0x00	; 0
     ebe:	44 06       	cpc	r4, r20
     ec0:	41 e0       	ldi	r20, 0x01	; 1
     ec2:	54 06       	cpc	r5, r20
     ec4:	30 f0       	brcs	.+12     	; 0xed2 <__umoddi3+0x10e>
     ec6:	b8 e1       	ldi	r27, 0x18	; 24
     ec8:	eb 2e       	mov	r14, r27
     eca:	f1 2c       	mov	r15, r1
     ecc:	01 2d       	mov	r16, r1
     ece:	11 2d       	mov	r17, r1
     ed0:	05 c0       	rjmp	.+10     	; 0xedc <__umoddi3+0x118>
     ed2:	a0 e1       	ldi	r26, 0x10	; 16
     ed4:	ea 2e       	mov	r14, r26
     ed6:	f1 2c       	mov	r15, r1
     ed8:	01 2d       	mov	r16, r1
     eda:	11 2d       	mov	r17, r1
     edc:	d2 01       	movw	r26, r4
     ede:	c1 01       	movw	r24, r2
     ee0:	0e 2c       	mov	r0, r14
     ee2:	04 c0       	rjmp	.+8      	; 0xeec <__umoddi3+0x128>
     ee4:	b6 95       	lsr	r27
     ee6:	a7 95       	ror	r26
     ee8:	97 95       	ror	r25
     eea:	87 95       	ror	r24
     eec:	0a 94       	dec	r0
     eee:	d2 f7       	brpl	.-12     	; 0xee4 <__umoddi3+0x120>
     ef0:	85 59       	subi	r24, 0x95	; 149
     ef2:	9f 4f       	sbci	r25, 0xFF	; 255
     ef4:	dc 01       	movw	r26, r24
     ef6:	2c 91       	ld	r18, X
     ef8:	80 e2       	ldi	r24, 0x20	; 32
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	a0 e0       	ldi	r26, 0x00	; 0
     efe:	b0 e0       	ldi	r27, 0x00	; 0
     f00:	8e 19       	sub	r24, r14
     f02:	9f 09       	sbc	r25, r15
     f04:	a0 0b       	sbc	r26, r16
     f06:	b1 0b       	sbc	r27, r17
     f08:	5c 01       	movw	r10, r24
     f0a:	6d 01       	movw	r12, r26
     f0c:	a2 1a       	sub	r10, r18
     f0e:	b1 08       	sbc	r11, r1
     f10:	c1 08       	sbc	r12, r1
     f12:	d1 08       	sbc	r13, r1
     f14:	a9 ae       	std	Y+57, r10	; 0x39
     f16:	ba ae       	std	Y+58, r11	; 0x3a
     f18:	cb ae       	std	Y+59, r12	; 0x3b
     f1a:	dc ae       	std	Y+60, r13	; 0x3c
     f1c:	a1 14       	cp	r10, r1
     f1e:	b1 04       	cpc	r11, r1
     f20:	c1 04       	cpc	r12, r1
     f22:	d1 04       	cpc	r13, r1
     f24:	09 f4       	brne	.+2      	; 0xf28 <__umoddi3+0x164>
     f26:	3f c0       	rjmp	.+126    	; 0xfa6 <__umoddi3+0x1e2>
     f28:	69 ad       	ldd	r22, Y+57	; 0x39
     f2a:	06 2e       	mov	r0, r22
     f2c:	04 c0       	rjmp	.+8      	; 0xf36 <__umoddi3+0x172>
     f2e:	22 0c       	add	r2, r2
     f30:	33 1c       	adc	r3, r3
     f32:	44 1c       	adc	r4, r4
     f34:	55 1c       	adc	r5, r5
     f36:	0a 94       	dec	r0
     f38:	d2 f7       	brpl	.-12     	; 0xf2e <__umoddi3+0x16a>
     f3a:	a4 01       	movw	r20, r8
     f3c:	93 01       	movw	r18, r6
     f3e:	06 2e       	mov	r0, r22
     f40:	04 c0       	rjmp	.+8      	; 0xf4a <__umoddi3+0x186>
     f42:	22 0f       	add	r18, r18
     f44:	33 1f       	adc	r19, r19
     f46:	44 1f       	adc	r20, r20
     f48:	55 1f       	adc	r21, r21
     f4a:	0a 94       	dec	r0
     f4c:	d2 f7       	brpl	.-12     	; 0xf42 <__umoddi3+0x17e>
     f4e:	80 e2       	ldi	r24, 0x20	; 32
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	8a 19       	sub	r24, r10
     f54:	9b 09       	sbc	r25, r11
     f56:	6c 96       	adiw	r28, 0x1c	; 28
     f58:	cc ac       	ldd	r12, Y+60	; 0x3c
     f5a:	dd ac       	ldd	r13, Y+61	; 0x3d
     f5c:	ee ac       	ldd	r14, Y+62	; 0x3e
     f5e:	ff ac       	ldd	r15, Y+63	; 0x3f
     f60:	6c 97       	sbiw	r28, 0x1c	; 28
     f62:	04 c0       	rjmp	.+8      	; 0xf6c <__umoddi3+0x1a8>
     f64:	f6 94       	lsr	r15
     f66:	e7 94       	ror	r14
     f68:	d7 94       	ror	r13
     f6a:	c7 94       	ror	r12
     f6c:	8a 95       	dec	r24
     f6e:	d2 f7       	brpl	.-12     	; 0xf64 <__umoddi3+0x1a0>
     f70:	87 01       	movw	r16, r14
     f72:	76 01       	movw	r14, r12
     f74:	e2 2a       	or	r14, r18
     f76:	f3 2a       	or	r15, r19
     f78:	04 2b       	or	r16, r20
     f7a:	15 2b       	or	r17, r21
     f7c:	ed aa       	std	Y+53, r14	; 0x35
     f7e:	fe aa       	std	Y+54, r15	; 0x36
     f80:	0f ab       	std	Y+55, r16	; 0x37
     f82:	18 af       	std	Y+56, r17	; 0x38
     f84:	6c 96       	adiw	r28, 0x1c	; 28
     f86:	8c ad       	ldd	r24, Y+60	; 0x3c
     f88:	9d ad       	ldd	r25, Y+61	; 0x3d
     f8a:	ae ad       	ldd	r26, Y+62	; 0x3e
     f8c:	bf ad       	ldd	r27, Y+63	; 0x3f
     f8e:	6c 97       	sbiw	r28, 0x1c	; 28
     f90:	04 c0       	rjmp	.+8      	; 0xf9a <__umoddi3+0x1d6>
     f92:	88 0f       	add	r24, r24
     f94:	99 1f       	adc	r25, r25
     f96:	aa 1f       	adc	r26, r26
     f98:	bb 1f       	adc	r27, r27
     f9a:	6a 95       	dec	r22
     f9c:	d2 f7       	brpl	.-12     	; 0xf92 <__umoddi3+0x1ce>
     f9e:	89 ab       	std	Y+49, r24	; 0x31
     fa0:	9a ab       	std	Y+50, r25	; 0x32
     fa2:	ab ab       	std	Y+51, r26	; 0x33
     fa4:	bc ab       	std	Y+52, r27	; 0x34
     fa6:	32 01       	movw	r6, r4
     fa8:	88 24       	eor	r8, r8
     faa:	99 24       	eor	r9, r9
     fac:	b2 01       	movw	r22, r4
     fae:	a1 01       	movw	r20, r2
     fb0:	60 70       	andi	r22, 0x00	; 0
     fb2:	70 70       	andi	r23, 0x00	; 0
     fb4:	21 96       	adiw	r28, 0x01	; 1
     fb6:	4c af       	std	Y+60, r20	; 0x3c
     fb8:	5d af       	std	Y+61, r21	; 0x3d
     fba:	6e af       	std	Y+62, r22	; 0x3e
     fbc:	7f af       	std	Y+63, r23	; 0x3f
     fbe:	21 97       	sbiw	r28, 0x01	; 1
     fc0:	6d a9       	ldd	r22, Y+53	; 0x35
     fc2:	7e a9       	ldd	r23, Y+54	; 0x36
     fc4:	8f a9       	ldd	r24, Y+55	; 0x37
     fc6:	98 ad       	ldd	r25, Y+56	; 0x38
     fc8:	a4 01       	movw	r20, r8
     fca:	93 01       	movw	r18, r6
     fcc:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     fd0:	7b 01       	movw	r14, r22
     fd2:	8c 01       	movw	r16, r24
     fd4:	6d a9       	ldd	r22, Y+53	; 0x35
     fd6:	7e a9       	ldd	r23, Y+54	; 0x36
     fd8:	8f a9       	ldd	r24, Y+55	; 0x37
     fda:	98 ad       	ldd	r25, Y+56	; 0x38
     fdc:	a4 01       	movw	r20, r8
     fde:	93 01       	movw	r18, r6
     fe0:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
     fe4:	ca 01       	movw	r24, r20
     fe6:	b9 01       	movw	r22, r18
     fe8:	21 96       	adiw	r28, 0x01	; 1
     fea:	2c ad       	ldd	r18, Y+60	; 0x3c
     fec:	3d ad       	ldd	r19, Y+61	; 0x3d
     fee:	4e ad       	ldd	r20, Y+62	; 0x3e
     ff0:	5f ad       	ldd	r21, Y+63	; 0x3f
     ff2:	21 97       	sbiw	r28, 0x01	; 1
     ff4:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
     ff8:	9b 01       	movw	r18, r22
     ffa:	ac 01       	movw	r20, r24
     ffc:	87 01       	movw	r16, r14
     ffe:	ff 24       	eor	r15, r15
    1000:	ee 24       	eor	r14, r14
    1002:	a9 a8       	ldd	r10, Y+49	; 0x31
    1004:	ba a8       	ldd	r11, Y+50	; 0x32
    1006:	cb a8       	ldd	r12, Y+51	; 0x33
    1008:	dc a8       	ldd	r13, Y+52	; 0x34
    100a:	c6 01       	movw	r24, r12
    100c:	aa 27       	eor	r26, r26
    100e:	bb 27       	eor	r27, r27
    1010:	57 01       	movw	r10, r14
    1012:	68 01       	movw	r12, r16
    1014:	a8 2a       	or	r10, r24
    1016:	b9 2a       	or	r11, r25
    1018:	ca 2a       	or	r12, r26
    101a:	db 2a       	or	r13, r27
    101c:	a2 16       	cp	r10, r18
    101e:	b3 06       	cpc	r11, r19
    1020:	c4 06       	cpc	r12, r20
    1022:	d5 06       	cpc	r13, r21
    1024:	90 f4       	brcc	.+36     	; 0x104a <__umoddi3+0x286>
    1026:	a2 0c       	add	r10, r2
    1028:	b3 1c       	adc	r11, r3
    102a:	c4 1c       	adc	r12, r4
    102c:	d5 1c       	adc	r13, r5
    102e:	a2 14       	cp	r10, r2
    1030:	b3 04       	cpc	r11, r3
    1032:	c4 04       	cpc	r12, r4
    1034:	d5 04       	cpc	r13, r5
    1036:	48 f0       	brcs	.+18     	; 0x104a <__umoddi3+0x286>
    1038:	a2 16       	cp	r10, r18
    103a:	b3 06       	cpc	r11, r19
    103c:	c4 06       	cpc	r12, r20
    103e:	d5 06       	cpc	r13, r21
    1040:	20 f4       	brcc	.+8      	; 0x104a <__umoddi3+0x286>
    1042:	a2 0c       	add	r10, r2
    1044:	b3 1c       	adc	r11, r3
    1046:	c4 1c       	adc	r12, r4
    1048:	d5 1c       	adc	r13, r5
    104a:	a2 1a       	sub	r10, r18
    104c:	b3 0a       	sbc	r11, r19
    104e:	c4 0a       	sbc	r12, r20
    1050:	d5 0a       	sbc	r13, r21
    1052:	c6 01       	movw	r24, r12
    1054:	b5 01       	movw	r22, r10
    1056:	a4 01       	movw	r20, r8
    1058:	93 01       	movw	r18, r6
    105a:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
    105e:	7b 01       	movw	r14, r22
    1060:	8c 01       	movw	r16, r24
    1062:	c6 01       	movw	r24, r12
    1064:	b5 01       	movw	r22, r10
    1066:	a4 01       	movw	r20, r8
    1068:	93 01       	movw	r18, r6
    106a:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
    106e:	ca 01       	movw	r24, r20
    1070:	b9 01       	movw	r22, r18
    1072:	21 96       	adiw	r28, 0x01	; 1
    1074:	2c ad       	ldd	r18, Y+60	; 0x3c
    1076:	3d ad       	ldd	r19, Y+61	; 0x3d
    1078:	4e ad       	ldd	r20, Y+62	; 0x3e
    107a:	5f ad       	ldd	r21, Y+63	; 0x3f
    107c:	21 97       	sbiw	r28, 0x01	; 1
    107e:	ba c1       	rjmp	.+884    	; 0x13f4 <__umoddi3+0x630>
    1080:	21 14       	cp	r2, r1
    1082:	31 04       	cpc	r3, r1
    1084:	41 04       	cpc	r4, r1
    1086:	51 04       	cpc	r5, r1
    1088:	71 f4       	brne	.+28     	; 0x10a6 <__umoddi3+0x2e2>
    108a:	61 e0       	ldi	r22, 0x01	; 1
    108c:	70 e0       	ldi	r23, 0x00	; 0
    108e:	80 e0       	ldi	r24, 0x00	; 0
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	20 e0       	ldi	r18, 0x00	; 0
    1094:	30 e0       	ldi	r19, 0x00	; 0
    1096:	40 e0       	ldi	r20, 0x00	; 0
    1098:	50 e0       	ldi	r21, 0x00	; 0
    109a:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
    109e:	c9 01       	movw	r24, r18
    10a0:	da 01       	movw	r26, r20
    10a2:	1c 01       	movw	r2, r24
    10a4:	2d 01       	movw	r4, r26
    10a6:	00 e0       	ldi	r16, 0x00	; 0
    10a8:	20 16       	cp	r2, r16
    10aa:	00 e0       	ldi	r16, 0x00	; 0
    10ac:	30 06       	cpc	r3, r16
    10ae:	01 e0       	ldi	r16, 0x01	; 1
    10b0:	40 06       	cpc	r4, r16
    10b2:	00 e0       	ldi	r16, 0x00	; 0
    10b4:	50 06       	cpc	r5, r16
    10b6:	88 f4       	brcc	.+34     	; 0x10da <__umoddi3+0x316>
    10b8:	1f ef       	ldi	r17, 0xFF	; 255
    10ba:	21 16       	cp	r2, r17
    10bc:	31 04       	cpc	r3, r1
    10be:	41 04       	cpc	r4, r1
    10c0:	51 04       	cpc	r5, r1
    10c2:	39 f0       	breq	.+14     	; 0x10d2 <__umoddi3+0x30e>
    10c4:	30 f0       	brcs	.+12     	; 0x10d2 <__umoddi3+0x30e>
    10c6:	68 e0       	ldi	r22, 0x08	; 8
    10c8:	e6 2e       	mov	r14, r22
    10ca:	f1 2c       	mov	r15, r1
    10cc:	01 2d       	mov	r16, r1
    10ce:	11 2d       	mov	r17, r1
    10d0:	18 c0       	rjmp	.+48     	; 0x1102 <__umoddi3+0x33e>
    10d2:	ee 24       	eor	r14, r14
    10d4:	ff 24       	eor	r15, r15
    10d6:	87 01       	movw	r16, r14
    10d8:	14 c0       	rjmp	.+40     	; 0x1102 <__umoddi3+0x33e>
    10da:	40 e0       	ldi	r20, 0x00	; 0
    10dc:	24 16       	cp	r2, r20
    10de:	40 e0       	ldi	r20, 0x00	; 0
    10e0:	34 06       	cpc	r3, r20
    10e2:	40 e0       	ldi	r20, 0x00	; 0
    10e4:	44 06       	cpc	r4, r20
    10e6:	41 e0       	ldi	r20, 0x01	; 1
    10e8:	54 06       	cpc	r5, r20
    10ea:	30 f0       	brcs	.+12     	; 0x10f8 <__umoddi3+0x334>
    10ec:	58 e1       	ldi	r21, 0x18	; 24
    10ee:	e5 2e       	mov	r14, r21
    10f0:	f1 2c       	mov	r15, r1
    10f2:	01 2d       	mov	r16, r1
    10f4:	11 2d       	mov	r17, r1
    10f6:	05 c0       	rjmp	.+10     	; 0x1102 <__umoddi3+0x33e>
    10f8:	40 e1       	ldi	r20, 0x10	; 16
    10fa:	e4 2e       	mov	r14, r20
    10fc:	f1 2c       	mov	r15, r1
    10fe:	01 2d       	mov	r16, r1
    1100:	11 2d       	mov	r17, r1
    1102:	d2 01       	movw	r26, r4
    1104:	c1 01       	movw	r24, r2
    1106:	0e 2c       	mov	r0, r14
    1108:	04 c0       	rjmp	.+8      	; 0x1112 <__umoddi3+0x34e>
    110a:	b6 95       	lsr	r27
    110c:	a7 95       	ror	r26
    110e:	97 95       	ror	r25
    1110:	87 95       	ror	r24
    1112:	0a 94       	dec	r0
    1114:	d2 f7       	brpl	.-12     	; 0x110a <__umoddi3+0x346>
    1116:	85 59       	subi	r24, 0x95	; 149
    1118:	9f 4f       	sbci	r25, 0xFF	; 255
    111a:	dc 01       	movw	r26, r24
    111c:	2c 91       	ld	r18, X
    111e:	30 e2       	ldi	r19, 0x20	; 32
    1120:	a3 2e       	mov	r10, r19
    1122:	b1 2c       	mov	r11, r1
    1124:	c1 2c       	mov	r12, r1
    1126:	d1 2c       	mov	r13, r1
    1128:	d6 01       	movw	r26, r12
    112a:	c5 01       	movw	r24, r10
    112c:	8e 19       	sub	r24, r14
    112e:	9f 09       	sbc	r25, r15
    1130:	a0 0b       	sbc	r26, r16
    1132:	b1 0b       	sbc	r27, r17
    1134:	7c 01       	movw	r14, r24
    1136:	8d 01       	movw	r16, r26
    1138:	e2 1a       	sub	r14, r18
    113a:	f1 08       	sbc	r15, r1
    113c:	01 09       	sbc	r16, r1
    113e:	11 09       	sbc	r17, r1
    1140:	e9 ae       	std	Y+57, r14	; 0x39
    1142:	fa ae       	std	Y+58, r15	; 0x3a
    1144:	0b af       	std	Y+59, r16	; 0x3b
    1146:	1c af       	std	Y+60, r17	; 0x3c
    1148:	e1 14       	cp	r14, r1
    114a:	f1 04       	cpc	r15, r1
    114c:	01 05       	cpc	r16, r1
    114e:	11 05       	cpc	r17, r1
    1150:	39 f4       	brne	.+14     	; 0x1160 <__umoddi3+0x39c>
    1152:	64 01       	movw	r12, r8
    1154:	53 01       	movw	r10, r6
    1156:	a2 18       	sub	r10, r2
    1158:	b3 08       	sbc	r11, r3
    115a:	c4 08       	sbc	r12, r4
    115c:	d5 08       	sbc	r13, r5
    115e:	e2 c0       	rjmp	.+452    	; 0x1324 <__umoddi3+0x560>
    1160:	f9 ac       	ldd	r15, Y+57	; 0x39
    1162:	68 96       	adiw	r28, 0x18	; 24
    1164:	ff ae       	std	Y+63, r15	; 0x3f
    1166:	68 97       	sbiw	r28, 0x18	; 24
    1168:	0f 2c       	mov	r0, r15
    116a:	04 c0       	rjmp	.+8      	; 0x1174 <__umoddi3+0x3b0>
    116c:	22 0c       	add	r2, r2
    116e:	33 1c       	adc	r3, r3
    1170:	44 1c       	adc	r4, r4
    1172:	55 1c       	adc	r5, r5
    1174:	0a 94       	dec	r0
    1176:	d2 f7       	brpl	.-12     	; 0x116c <__umoddi3+0x3a8>
    1178:	8a 2d       	mov	r24, r10
    117a:	8f 19       	sub	r24, r15
    117c:	64 01       	movw	r12, r8
    117e:	53 01       	movw	r10, r6
    1180:	08 2e       	mov	r0, r24
    1182:	04 c0       	rjmp	.+8      	; 0x118c <__umoddi3+0x3c8>
    1184:	d6 94       	lsr	r13
    1186:	c7 94       	ror	r12
    1188:	b7 94       	ror	r11
    118a:	a7 94       	ror	r10
    118c:	0a 94       	dec	r0
    118e:	d2 f7       	brpl	.-12     	; 0x1184 <__umoddi3+0x3c0>
    1190:	a4 01       	movw	r20, r8
    1192:	93 01       	movw	r18, r6
    1194:	04 c0       	rjmp	.+8      	; 0x119e <__umoddi3+0x3da>
    1196:	22 0f       	add	r18, r18
    1198:	33 1f       	adc	r19, r19
    119a:	44 1f       	adc	r20, r20
    119c:	55 1f       	adc	r21, r21
    119e:	fa 94       	dec	r15
    11a0:	d2 f7       	brpl	.-12     	; 0x1196 <__umoddi3+0x3d2>
    11a2:	6c 96       	adiw	r28, 0x1c	; 28
    11a4:	6c ac       	ldd	r6, Y+60	; 0x3c
    11a6:	7d ac       	ldd	r7, Y+61	; 0x3d
    11a8:	8e ac       	ldd	r8, Y+62	; 0x3e
    11aa:	9f ac       	ldd	r9, Y+63	; 0x3f
    11ac:	6c 97       	sbiw	r28, 0x1c	; 28
    11ae:	04 c0       	rjmp	.+8      	; 0x11b8 <__umoddi3+0x3f4>
    11b0:	96 94       	lsr	r9
    11b2:	87 94       	ror	r8
    11b4:	77 94       	ror	r7
    11b6:	67 94       	ror	r6
    11b8:	8a 95       	dec	r24
    11ba:	d2 f7       	brpl	.-12     	; 0x11b0 <__umoddi3+0x3ec>
    11bc:	84 01       	movw	r16, r8
    11be:	73 01       	movw	r14, r6
    11c0:	e2 2a       	or	r14, r18
    11c2:	f3 2a       	or	r15, r19
    11c4:	04 2b       	or	r16, r20
    11c6:	15 2b       	or	r17, r21
    11c8:	ed a6       	std	Y+45, r14	; 0x2d
    11ca:	fe a6       	std	Y+46, r15	; 0x2e
    11cc:	0f a7       	std	Y+47, r16	; 0x2f
    11ce:	18 ab       	std	Y+48, r17	; 0x30
    11d0:	32 01       	movw	r6, r4
    11d2:	88 24       	eor	r8, r8
    11d4:	99 24       	eor	r9, r9
    11d6:	b2 01       	movw	r22, r4
    11d8:	a1 01       	movw	r20, r2
    11da:	60 70       	andi	r22, 0x00	; 0
    11dc:	70 70       	andi	r23, 0x00	; 0
    11de:	25 96       	adiw	r28, 0x05	; 5
    11e0:	4c af       	std	Y+60, r20	; 0x3c
    11e2:	5d af       	std	Y+61, r21	; 0x3d
    11e4:	6e af       	std	Y+62, r22	; 0x3e
    11e6:	7f af       	std	Y+63, r23	; 0x3f
    11e8:	25 97       	sbiw	r28, 0x05	; 5
    11ea:	c6 01       	movw	r24, r12
    11ec:	b5 01       	movw	r22, r10
    11ee:	a4 01       	movw	r20, r8
    11f0:	93 01       	movw	r18, r6
    11f2:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
    11f6:	7b 01       	movw	r14, r22
    11f8:	8c 01       	movw	r16, r24
    11fa:	c6 01       	movw	r24, r12
    11fc:	b5 01       	movw	r22, r10
    11fe:	a4 01       	movw	r20, r8
    1200:	93 01       	movw	r18, r6
    1202:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
    1206:	ca 01       	movw	r24, r20
    1208:	b9 01       	movw	r22, r18
    120a:	25 96       	adiw	r28, 0x05	; 5
    120c:	2c ad       	ldd	r18, Y+60	; 0x3c
    120e:	3d ad       	ldd	r19, Y+61	; 0x3d
    1210:	4e ad       	ldd	r20, Y+62	; 0x3e
    1212:	5f ad       	ldd	r21, Y+63	; 0x3f
    1214:	25 97       	sbiw	r28, 0x05	; 5
    1216:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
    121a:	9b 01       	movw	r18, r22
    121c:	ac 01       	movw	r20, r24
    121e:	87 01       	movw	r16, r14
    1220:	ff 24       	eor	r15, r15
    1222:	ee 24       	eor	r14, r14
    1224:	ad a4       	ldd	r10, Y+45	; 0x2d
    1226:	be a4       	ldd	r11, Y+46	; 0x2e
    1228:	cf a4       	ldd	r12, Y+47	; 0x2f
    122a:	d8 a8       	ldd	r13, Y+48	; 0x30
    122c:	c6 01       	movw	r24, r12
    122e:	aa 27       	eor	r26, r26
    1230:	bb 27       	eor	r27, r27
    1232:	5c 01       	movw	r10, r24
    1234:	6d 01       	movw	r12, r26
    1236:	ae 28       	or	r10, r14
    1238:	bf 28       	or	r11, r15
    123a:	c0 2a       	or	r12, r16
    123c:	d1 2a       	or	r13, r17
    123e:	a2 16       	cp	r10, r18
    1240:	b3 06       	cpc	r11, r19
    1242:	c4 06       	cpc	r12, r20
    1244:	d5 06       	cpc	r13, r21
    1246:	90 f4       	brcc	.+36     	; 0x126c <__umoddi3+0x4a8>
    1248:	a2 0c       	add	r10, r2
    124a:	b3 1c       	adc	r11, r3
    124c:	c4 1c       	adc	r12, r4
    124e:	d5 1c       	adc	r13, r5
    1250:	a2 14       	cp	r10, r2
    1252:	b3 04       	cpc	r11, r3
    1254:	c4 04       	cpc	r12, r4
    1256:	d5 04       	cpc	r13, r5
    1258:	48 f0       	brcs	.+18     	; 0x126c <__umoddi3+0x4a8>
    125a:	a2 16       	cp	r10, r18
    125c:	b3 06       	cpc	r11, r19
    125e:	c4 06       	cpc	r12, r20
    1260:	d5 06       	cpc	r13, r21
    1262:	20 f4       	brcc	.+8      	; 0x126c <__umoddi3+0x4a8>
    1264:	a2 0c       	add	r10, r2
    1266:	b3 1c       	adc	r11, r3
    1268:	c4 1c       	adc	r12, r4
    126a:	d5 1c       	adc	r13, r5
    126c:	a2 1a       	sub	r10, r18
    126e:	b3 0a       	sbc	r11, r19
    1270:	c4 0a       	sbc	r12, r20
    1272:	d5 0a       	sbc	r13, r21
    1274:	c6 01       	movw	r24, r12
    1276:	b5 01       	movw	r22, r10
    1278:	a4 01       	movw	r20, r8
    127a:	93 01       	movw	r18, r6
    127c:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
    1280:	7b 01       	movw	r14, r22
    1282:	8c 01       	movw	r16, r24
    1284:	c6 01       	movw	r24, r12
    1286:	b5 01       	movw	r22, r10
    1288:	a4 01       	movw	r20, r8
    128a:	93 01       	movw	r18, r6
    128c:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
    1290:	ca 01       	movw	r24, r20
    1292:	b9 01       	movw	r22, r18
    1294:	25 96       	adiw	r28, 0x05	; 5
    1296:	2c ad       	ldd	r18, Y+60	; 0x3c
    1298:	3d ad       	ldd	r19, Y+61	; 0x3d
    129a:	4e ad       	ldd	r20, Y+62	; 0x3e
    129c:	5f ad       	ldd	r21, Y+63	; 0x3f
    129e:	25 97       	sbiw	r28, 0x05	; 5
    12a0:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
    12a4:	9b 01       	movw	r18, r22
    12a6:	ac 01       	movw	r20, r24
    12a8:	87 01       	movw	r16, r14
    12aa:	ff 24       	eor	r15, r15
    12ac:	ee 24       	eor	r14, r14
    12ae:	8d a5       	ldd	r24, Y+45	; 0x2d
    12b0:	9e a5       	ldd	r25, Y+46	; 0x2e
    12b2:	af a5       	ldd	r26, Y+47	; 0x2f
    12b4:	b8 a9       	ldd	r27, Y+48	; 0x30
    12b6:	a0 70       	andi	r26, 0x00	; 0
    12b8:	b0 70       	andi	r27, 0x00	; 0
    12ba:	57 01       	movw	r10, r14
    12bc:	68 01       	movw	r12, r16
    12be:	a8 2a       	or	r10, r24
    12c0:	b9 2a       	or	r11, r25
    12c2:	ca 2a       	or	r12, r26
    12c4:	db 2a       	or	r13, r27
    12c6:	a2 16       	cp	r10, r18
    12c8:	b3 06       	cpc	r11, r19
    12ca:	c4 06       	cpc	r12, r20
    12cc:	d5 06       	cpc	r13, r21
    12ce:	90 f4       	brcc	.+36     	; 0x12f4 <__umoddi3+0x530>
    12d0:	a2 0c       	add	r10, r2
    12d2:	b3 1c       	adc	r11, r3
    12d4:	c4 1c       	adc	r12, r4
    12d6:	d5 1c       	adc	r13, r5
    12d8:	a2 14       	cp	r10, r2
    12da:	b3 04       	cpc	r11, r3
    12dc:	c4 04       	cpc	r12, r4
    12de:	d5 04       	cpc	r13, r5
    12e0:	48 f0       	brcs	.+18     	; 0x12f4 <__umoddi3+0x530>
    12e2:	a2 16       	cp	r10, r18
    12e4:	b3 06       	cpc	r11, r19
    12e6:	c4 06       	cpc	r12, r20
    12e8:	d5 06       	cpc	r13, r21
    12ea:	20 f4       	brcc	.+8      	; 0x12f4 <__umoddi3+0x530>
    12ec:	a2 0c       	add	r10, r2
    12ee:	b3 1c       	adc	r11, r3
    12f0:	c4 1c       	adc	r12, r4
    12f2:	d5 1c       	adc	r13, r5
    12f4:	6c 96       	adiw	r28, 0x1c	; 28
    12f6:	ec ac       	ldd	r14, Y+60	; 0x3c
    12f8:	fd ac       	ldd	r15, Y+61	; 0x3d
    12fa:	0e ad       	ldd	r16, Y+62	; 0x3e
    12fc:	1f ad       	ldd	r17, Y+63	; 0x3f
    12fe:	6c 97       	sbiw	r28, 0x1c	; 28
    1300:	68 96       	adiw	r28, 0x18	; 24
    1302:	0f ac       	ldd	r0, Y+63	; 0x3f
    1304:	68 97       	sbiw	r28, 0x18	; 24
    1306:	04 c0       	rjmp	.+8      	; 0x1310 <__umoddi3+0x54c>
    1308:	ee 0c       	add	r14, r14
    130a:	ff 1c       	adc	r15, r15
    130c:	00 1f       	adc	r16, r16
    130e:	11 1f       	adc	r17, r17
    1310:	0a 94       	dec	r0
    1312:	d2 f7       	brpl	.-12     	; 0x1308 <__umoddi3+0x544>
    1314:	e9 aa       	std	Y+49, r14	; 0x31
    1316:	fa aa       	std	Y+50, r15	; 0x32
    1318:	0b ab       	std	Y+51, r16	; 0x33
    131a:	1c ab       	std	Y+52, r17	; 0x34
    131c:	a2 1a       	sub	r10, r18
    131e:	b3 0a       	sbc	r11, r19
    1320:	c4 0a       	sbc	r12, r20
    1322:	d5 0a       	sbc	r13, r21
    1324:	32 01       	movw	r6, r4
    1326:	88 24       	eor	r8, r8
    1328:	99 24       	eor	r9, r9
    132a:	b2 01       	movw	r22, r4
    132c:	a1 01       	movw	r20, r2
    132e:	60 70       	andi	r22, 0x00	; 0
    1330:	70 70       	andi	r23, 0x00	; 0
    1332:	29 96       	adiw	r28, 0x09	; 9
    1334:	4c af       	std	Y+60, r20	; 0x3c
    1336:	5d af       	std	Y+61, r21	; 0x3d
    1338:	6e af       	std	Y+62, r22	; 0x3e
    133a:	7f af       	std	Y+63, r23	; 0x3f
    133c:	29 97       	sbiw	r28, 0x09	; 9
    133e:	c6 01       	movw	r24, r12
    1340:	b5 01       	movw	r22, r10
    1342:	a4 01       	movw	r20, r8
    1344:	93 01       	movw	r18, r6
    1346:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
    134a:	7b 01       	movw	r14, r22
    134c:	8c 01       	movw	r16, r24
    134e:	c6 01       	movw	r24, r12
    1350:	b5 01       	movw	r22, r10
    1352:	a4 01       	movw	r20, r8
    1354:	93 01       	movw	r18, r6
    1356:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
    135a:	ca 01       	movw	r24, r20
    135c:	b9 01       	movw	r22, r18
    135e:	29 96       	adiw	r28, 0x09	; 9
    1360:	2c ad       	ldd	r18, Y+60	; 0x3c
    1362:	3d ad       	ldd	r19, Y+61	; 0x3d
    1364:	4e ad       	ldd	r20, Y+62	; 0x3e
    1366:	5f ad       	ldd	r21, Y+63	; 0x3f
    1368:	29 97       	sbiw	r28, 0x09	; 9
    136a:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
    136e:	9b 01       	movw	r18, r22
    1370:	ac 01       	movw	r20, r24
    1372:	87 01       	movw	r16, r14
    1374:	ff 24       	eor	r15, r15
    1376:	ee 24       	eor	r14, r14
    1378:	a9 a8       	ldd	r10, Y+49	; 0x31
    137a:	ba a8       	ldd	r11, Y+50	; 0x32
    137c:	cb a8       	ldd	r12, Y+51	; 0x33
    137e:	dc a8       	ldd	r13, Y+52	; 0x34
    1380:	c6 01       	movw	r24, r12
    1382:	aa 27       	eor	r26, r26
    1384:	bb 27       	eor	r27, r27
    1386:	57 01       	movw	r10, r14
    1388:	68 01       	movw	r12, r16
    138a:	a8 2a       	or	r10, r24
    138c:	b9 2a       	or	r11, r25
    138e:	ca 2a       	or	r12, r26
    1390:	db 2a       	or	r13, r27
    1392:	a2 16       	cp	r10, r18
    1394:	b3 06       	cpc	r11, r19
    1396:	c4 06       	cpc	r12, r20
    1398:	d5 06       	cpc	r13, r21
    139a:	90 f4       	brcc	.+36     	; 0x13c0 <__umoddi3+0x5fc>
    139c:	a2 0c       	add	r10, r2
    139e:	b3 1c       	adc	r11, r3
    13a0:	c4 1c       	adc	r12, r4
    13a2:	d5 1c       	adc	r13, r5
    13a4:	a2 14       	cp	r10, r2
    13a6:	b3 04       	cpc	r11, r3
    13a8:	c4 04       	cpc	r12, r4
    13aa:	d5 04       	cpc	r13, r5
    13ac:	48 f0       	brcs	.+18     	; 0x13c0 <__umoddi3+0x5fc>
    13ae:	a2 16       	cp	r10, r18
    13b0:	b3 06       	cpc	r11, r19
    13b2:	c4 06       	cpc	r12, r20
    13b4:	d5 06       	cpc	r13, r21
    13b6:	20 f4       	brcc	.+8      	; 0x13c0 <__umoddi3+0x5fc>
    13b8:	a2 0c       	add	r10, r2
    13ba:	b3 1c       	adc	r11, r3
    13bc:	c4 1c       	adc	r12, r4
    13be:	d5 1c       	adc	r13, r5
    13c0:	a2 1a       	sub	r10, r18
    13c2:	b3 0a       	sbc	r11, r19
    13c4:	c4 0a       	sbc	r12, r20
    13c6:	d5 0a       	sbc	r13, r21
    13c8:	c6 01       	movw	r24, r12
    13ca:	b5 01       	movw	r22, r10
    13cc:	a4 01       	movw	r20, r8
    13ce:	93 01       	movw	r18, r6
    13d0:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
    13d4:	7b 01       	movw	r14, r22
    13d6:	8c 01       	movw	r16, r24
    13d8:	c6 01       	movw	r24, r12
    13da:	b5 01       	movw	r22, r10
    13dc:	a4 01       	movw	r20, r8
    13de:	93 01       	movw	r18, r6
    13e0:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
    13e4:	ca 01       	movw	r24, r20
    13e6:	b9 01       	movw	r22, r18
    13e8:	29 96       	adiw	r28, 0x09	; 9
    13ea:	2c ad       	ldd	r18, Y+60	; 0x3c
    13ec:	3d ad       	ldd	r19, Y+61	; 0x3d
    13ee:	4e ad       	ldd	r20, Y+62	; 0x3e
    13f0:	5f ad       	ldd	r21, Y+63	; 0x3f
    13f2:	29 97       	sbiw	r28, 0x09	; 9
    13f4:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
    13f8:	9b 01       	movw	r18, r22
    13fa:	ac 01       	movw	r20, r24
    13fc:	87 01       	movw	r16, r14
    13fe:	ff 24       	eor	r15, r15
    1400:	ee 24       	eor	r14, r14
    1402:	89 a9       	ldd	r24, Y+49	; 0x31
    1404:	9a a9       	ldd	r25, Y+50	; 0x32
    1406:	ab a9       	ldd	r26, Y+51	; 0x33
    1408:	bc a9       	ldd	r27, Y+52	; 0x34
    140a:	a0 70       	andi	r26, 0x00	; 0
    140c:	b0 70       	andi	r27, 0x00	; 0
    140e:	e8 2a       	or	r14, r24
    1410:	f9 2a       	or	r15, r25
    1412:	0a 2b       	or	r16, r26
    1414:	1b 2b       	or	r17, r27
    1416:	e2 16       	cp	r14, r18
    1418:	f3 06       	cpc	r15, r19
    141a:	04 07       	cpc	r16, r20
    141c:	15 07       	cpc	r17, r21
    141e:	90 f4       	brcc	.+36     	; 0x1444 <__umoddi3+0x680>
    1420:	e2 0c       	add	r14, r2
    1422:	f3 1c       	adc	r15, r3
    1424:	04 1d       	adc	r16, r4
    1426:	15 1d       	adc	r17, r5
    1428:	e2 14       	cp	r14, r2
    142a:	f3 04       	cpc	r15, r3
    142c:	04 05       	cpc	r16, r4
    142e:	15 05       	cpc	r17, r5
    1430:	48 f0       	brcs	.+18     	; 0x1444 <__umoddi3+0x680>
    1432:	e2 16       	cp	r14, r18
    1434:	f3 06       	cpc	r15, r19
    1436:	04 07       	cpc	r16, r20
    1438:	15 07       	cpc	r17, r21
    143a:	20 f4       	brcc	.+8      	; 0x1444 <__umoddi3+0x680>
    143c:	e2 0c       	add	r14, r2
    143e:	f3 1c       	adc	r15, r3
    1440:	04 1d       	adc	r16, r4
    1442:	15 1d       	adc	r17, r5
    1444:	e2 1a       	sub	r14, r18
    1446:	f3 0a       	sbc	r15, r19
    1448:	04 0b       	sbc	r16, r20
    144a:	15 0b       	sbc	r17, r21
    144c:	d8 01       	movw	r26, r16
    144e:	c7 01       	movw	r24, r14
    1450:	09 ac       	ldd	r0, Y+57	; 0x39
    1452:	04 c0       	rjmp	.+8      	; 0x145c <__umoddi3+0x698>
    1454:	b6 95       	lsr	r27
    1456:	a7 95       	ror	r26
    1458:	97 95       	ror	r25
    145a:	87 95       	ror	r24
    145c:	0a 94       	dec	r0
    145e:	d2 f7       	brpl	.-12     	; 0x1454 <__umoddi3+0x690>
    1460:	89 8b       	std	Y+17, r24	; 0x11
    1462:	9a 8b       	std	Y+18, r25	; 0x12
    1464:	ab 8b       	std	Y+19, r26	; 0x13
    1466:	bc 8b       	std	Y+20, r27	; 0x14
    1468:	1d 8a       	std	Y+21, r1	; 0x15
    146a:	1e 8a       	std	Y+22, r1	; 0x16
    146c:	1f 8a       	std	Y+23, r1	; 0x17
    146e:	18 8e       	std	Y+24, r1	; 0x18
    1470:	28 2f       	mov	r18, r24
    1472:	3a 89       	ldd	r19, Y+18	; 0x12
    1474:	4b 89       	ldd	r20, Y+19	; 0x13
    1476:	5c 89       	ldd	r21, Y+20	; 0x14
    1478:	6d 89       	ldd	r22, Y+21	; 0x15
    147a:	0c c3       	rjmp	.+1560   	; 0x1a94 <__umoddi3+0xcd0>
    147c:	6a 14       	cp	r6, r10
    147e:	7b 04       	cpc	r7, r11
    1480:	8c 04       	cpc	r8, r12
    1482:	9d 04       	cpc	r9, r13
    1484:	08 f4       	brcc	.+2      	; 0x1488 <__umoddi3+0x6c4>
    1486:	09 c3       	rjmp	.+1554   	; 0x1a9a <__umoddi3+0xcd6>
    1488:	00 e0       	ldi	r16, 0x00	; 0
    148a:	a0 16       	cp	r10, r16
    148c:	00 e0       	ldi	r16, 0x00	; 0
    148e:	b0 06       	cpc	r11, r16
    1490:	01 e0       	ldi	r16, 0x01	; 1
    1492:	c0 06       	cpc	r12, r16
    1494:	00 e0       	ldi	r16, 0x00	; 0
    1496:	d0 06       	cpc	r13, r16
    1498:	88 f4       	brcc	.+34     	; 0x14bc <__umoddi3+0x6f8>
    149a:	1f ef       	ldi	r17, 0xFF	; 255
    149c:	a1 16       	cp	r10, r17
    149e:	b1 04       	cpc	r11, r1
    14a0:	c1 04       	cpc	r12, r1
    14a2:	d1 04       	cpc	r13, r1
    14a4:	39 f0       	breq	.+14     	; 0x14b4 <__umoddi3+0x6f0>
    14a6:	30 f0       	brcs	.+12     	; 0x14b4 <__umoddi3+0x6f0>
    14a8:	28 e0       	ldi	r18, 0x08	; 8
    14aa:	e2 2e       	mov	r14, r18
    14ac:	f1 2c       	mov	r15, r1
    14ae:	01 2d       	mov	r16, r1
    14b0:	11 2d       	mov	r17, r1
    14b2:	18 c0       	rjmp	.+48     	; 0x14e4 <__umoddi3+0x720>
    14b4:	ee 24       	eor	r14, r14
    14b6:	ff 24       	eor	r15, r15
    14b8:	87 01       	movw	r16, r14
    14ba:	14 c0       	rjmp	.+40     	; 0x14e4 <__umoddi3+0x720>
    14bc:	40 e0       	ldi	r20, 0x00	; 0
    14be:	a4 16       	cp	r10, r20
    14c0:	40 e0       	ldi	r20, 0x00	; 0
    14c2:	b4 06       	cpc	r11, r20
    14c4:	40 e0       	ldi	r20, 0x00	; 0
    14c6:	c4 06       	cpc	r12, r20
    14c8:	41 e0       	ldi	r20, 0x01	; 1
    14ca:	d4 06       	cpc	r13, r20
    14cc:	30 f0       	brcs	.+12     	; 0x14da <__umoddi3+0x716>
    14ce:	98 e1       	ldi	r25, 0x18	; 24
    14d0:	e9 2e       	mov	r14, r25
    14d2:	f1 2c       	mov	r15, r1
    14d4:	01 2d       	mov	r16, r1
    14d6:	11 2d       	mov	r17, r1
    14d8:	05 c0       	rjmp	.+10     	; 0x14e4 <__umoddi3+0x720>
    14da:	80 e1       	ldi	r24, 0x10	; 16
    14dc:	e8 2e       	mov	r14, r24
    14de:	f1 2c       	mov	r15, r1
    14e0:	01 2d       	mov	r16, r1
    14e2:	11 2d       	mov	r17, r1
    14e4:	d6 01       	movw	r26, r12
    14e6:	c5 01       	movw	r24, r10
    14e8:	0e 2c       	mov	r0, r14
    14ea:	04 c0       	rjmp	.+8      	; 0x14f4 <__umoddi3+0x730>
    14ec:	b6 95       	lsr	r27
    14ee:	a7 95       	ror	r26
    14f0:	97 95       	ror	r25
    14f2:	87 95       	ror	r24
    14f4:	0a 94       	dec	r0
    14f6:	d2 f7       	brpl	.-12     	; 0x14ec <__umoddi3+0x728>
    14f8:	85 59       	subi	r24, 0x95	; 149
    14fa:	9f 4f       	sbci	r25, 0xFF	; 255
    14fc:	dc 01       	movw	r26, r24
    14fe:	2c 91       	ld	r18, X
    1500:	80 e2       	ldi	r24, 0x20	; 32
    1502:	90 e0       	ldi	r25, 0x00	; 0
    1504:	a0 e0       	ldi	r26, 0x00	; 0
    1506:	b0 e0       	ldi	r27, 0x00	; 0
    1508:	8e 19       	sub	r24, r14
    150a:	9f 09       	sbc	r25, r15
    150c:	a0 0b       	sbc	r26, r16
    150e:	b1 0b       	sbc	r27, r17
    1510:	82 1b       	sub	r24, r18
    1512:	91 09       	sbc	r25, r1
    1514:	a1 09       	sbc	r26, r1
    1516:	b1 09       	sbc	r27, r1
    1518:	00 97       	sbiw	r24, 0x00	; 0
    151a:	a1 05       	cpc	r26, r1
    151c:	b1 05       	cpc	r27, r1
    151e:	09 f0       	breq	.+2      	; 0x1522 <__umoddi3+0x75e>
    1520:	4f c0       	rjmp	.+158    	; 0x15c0 <__umoddi3+0x7fc>
    1522:	a6 14       	cp	r10, r6
    1524:	b7 04       	cpc	r11, r7
    1526:	c8 04       	cpc	r12, r8
    1528:	d9 04       	cpc	r13, r9
    152a:	58 f0       	brcs	.+22     	; 0x1542 <__umoddi3+0x77e>
    152c:	6c 96       	adiw	r28, 0x1c	; 28
    152e:	ec ac       	ldd	r14, Y+60	; 0x3c
    1530:	fd ac       	ldd	r15, Y+61	; 0x3d
    1532:	0e ad       	ldd	r16, Y+62	; 0x3e
    1534:	1f ad       	ldd	r17, Y+63	; 0x3f
    1536:	6c 97       	sbiw	r28, 0x1c	; 28
    1538:	e2 14       	cp	r14, r2
    153a:	f3 04       	cpc	r15, r3
    153c:	04 05       	cpc	r16, r4
    153e:	15 05       	cpc	r17, r5
    1540:	68 f1       	brcs	.+90     	; 0x159c <__umoddi3+0x7d8>
    1542:	6c 96       	adiw	r28, 0x1c	; 28
    1544:	ec ac       	ldd	r14, Y+60	; 0x3c
    1546:	fd ac       	ldd	r15, Y+61	; 0x3d
    1548:	0e ad       	ldd	r16, Y+62	; 0x3e
    154a:	1f ad       	ldd	r17, Y+63	; 0x3f
    154c:	6c 97       	sbiw	r28, 0x1c	; 28
    154e:	e2 18       	sub	r14, r2
    1550:	f3 08       	sbc	r15, r3
    1552:	04 09       	sbc	r16, r4
    1554:	15 09       	sbc	r17, r5
    1556:	a4 01       	movw	r20, r8
    1558:	93 01       	movw	r18, r6
    155a:	2a 19       	sub	r18, r10
    155c:	3b 09       	sbc	r19, r11
    155e:	4c 09       	sbc	r20, r12
    1560:	5d 09       	sbc	r21, r13
    1562:	aa 24       	eor	r10, r10
    1564:	bb 24       	eor	r11, r11
    1566:	65 01       	movw	r12, r10
    1568:	6c 96       	adiw	r28, 0x1c	; 28
    156a:	6c ad       	ldd	r22, Y+60	; 0x3c
    156c:	7d ad       	ldd	r23, Y+61	; 0x3d
    156e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1570:	9f ad       	ldd	r25, Y+63	; 0x3f
    1572:	6c 97       	sbiw	r28, 0x1c	; 28
    1574:	6e 15       	cp	r22, r14
    1576:	7f 05       	cpc	r23, r15
    1578:	80 07       	cpc	r24, r16
    157a:	91 07       	cpc	r25, r17
    157c:	28 f4       	brcc	.+10     	; 0x1588 <__umoddi3+0x7c4>
    157e:	b1 e0       	ldi	r27, 0x01	; 1
    1580:	ab 2e       	mov	r10, r27
    1582:	b1 2c       	mov	r11, r1
    1584:	c1 2c       	mov	r12, r1
    1586:	d1 2c       	mov	r13, r1
    1588:	da 01       	movw	r26, r20
    158a:	c9 01       	movw	r24, r18
    158c:	8a 19       	sub	r24, r10
    158e:	9b 09       	sbc	r25, r11
    1590:	ac 09       	sbc	r26, r12
    1592:	bd 09       	sbc	r27, r13
    1594:	8d ab       	std	Y+53, r24	; 0x35
    1596:	9e ab       	std	Y+54, r25	; 0x36
    1598:	af ab       	std	Y+55, r26	; 0x37
    159a:	b8 af       	std	Y+56, r27	; 0x38
    159c:	e9 8a       	std	Y+17, r14	; 0x11
    159e:	fa 8a       	std	Y+18, r15	; 0x12
    15a0:	0b 8b       	std	Y+19, r16	; 0x13
    15a2:	1c 8b       	std	Y+20, r17	; 0x14
    15a4:	6d a8       	ldd	r6, Y+53	; 0x35
    15a6:	7e a8       	ldd	r7, Y+54	; 0x36
    15a8:	8f a8       	ldd	r8, Y+55	; 0x37
    15aa:	98 ac       	ldd	r9, Y+56	; 0x38
    15ac:	6d 8a       	std	Y+21, r6	; 0x15
    15ae:	7e 8a       	std	Y+22, r7	; 0x16
    15b0:	8f 8a       	std	Y+23, r8	; 0x17
    15b2:	98 8e       	std	Y+24, r9	; 0x18
    15b4:	2e 2d       	mov	r18, r14
    15b6:	3a 89       	ldd	r19, Y+18	; 0x12
    15b8:	4b 89       	ldd	r20, Y+19	; 0x13
    15ba:	5c 89       	ldd	r21, Y+20	; 0x14
    15bc:	6d a9       	ldd	r22, Y+53	; 0x35
    15be:	6a c2       	rjmp	.+1236   	; 0x1a94 <__umoddi3+0xcd0>
    15c0:	67 96       	adiw	r28, 0x17	; 23
    15c2:	8f af       	std	Y+63, r24	; 0x3f
    15c4:	67 97       	sbiw	r28, 0x17	; 23
    15c6:	a6 01       	movw	r20, r12
    15c8:	95 01       	movw	r18, r10
    15ca:	08 2e       	mov	r0, r24
    15cc:	04 c0       	rjmp	.+8      	; 0x15d6 <__umoddi3+0x812>
    15ce:	22 0f       	add	r18, r18
    15d0:	33 1f       	adc	r19, r19
    15d2:	44 1f       	adc	r20, r20
    15d4:	55 1f       	adc	r21, r21
    15d6:	0a 94       	dec	r0
    15d8:	d2 f7       	brpl	.-12     	; 0x15ce <__umoddi3+0x80a>
    15da:	a0 e2       	ldi	r26, 0x20	; 32
    15dc:	aa 2e       	mov	r10, r26
    15de:	a8 1a       	sub	r10, r24
    15e0:	66 96       	adiw	r28, 0x16	; 22
    15e2:	af ae       	std	Y+63, r10	; 0x3f
    15e4:	66 97       	sbiw	r28, 0x16	; 22
    15e6:	d2 01       	movw	r26, r4
    15e8:	c1 01       	movw	r24, r2
    15ea:	04 c0       	rjmp	.+8      	; 0x15f4 <__umoddi3+0x830>
    15ec:	b6 95       	lsr	r27
    15ee:	a7 95       	ror	r26
    15f0:	97 95       	ror	r25
    15f2:	87 95       	ror	r24
    15f4:	aa 94       	dec	r10
    15f6:	d2 f7       	brpl	.-12     	; 0x15ec <__umoddi3+0x828>
    15f8:	6c 01       	movw	r12, r24
    15fa:	7d 01       	movw	r14, r26
    15fc:	c2 2a       	or	r12, r18
    15fe:	d3 2a       	or	r13, r19
    1600:	e4 2a       	or	r14, r20
    1602:	f5 2a       	or	r15, r21
    1604:	c9 a6       	std	Y+41, r12	; 0x29
    1606:	da a6       	std	Y+42, r13	; 0x2a
    1608:	eb a6       	std	Y+43, r14	; 0x2b
    160a:	fc a6       	std	Y+44, r15	; 0x2c
    160c:	82 01       	movw	r16, r4
    160e:	71 01       	movw	r14, r2
    1610:	67 96       	adiw	r28, 0x17	; 23
    1612:	0f ac       	ldd	r0, Y+63	; 0x3f
    1614:	67 97       	sbiw	r28, 0x17	; 23
    1616:	04 c0       	rjmp	.+8      	; 0x1620 <__umoddi3+0x85c>
    1618:	ee 0c       	add	r14, r14
    161a:	ff 1c       	adc	r15, r15
    161c:	00 1f       	adc	r16, r16
    161e:	11 1f       	adc	r17, r17
    1620:	0a 94       	dec	r0
    1622:	d2 f7       	brpl	.-12     	; 0x1618 <__umoddi3+0x854>
    1624:	ed a2       	std	Y+37, r14	; 0x25
    1626:	fe a2       	std	Y+38, r15	; 0x26
    1628:	0f a3       	std	Y+39, r16	; 0x27
    162a:	18 a7       	std	Y+40, r17	; 0x28
    162c:	64 01       	movw	r12, r8
    162e:	53 01       	movw	r10, r6
    1630:	66 96       	adiw	r28, 0x16	; 22
    1632:	0f ac       	ldd	r0, Y+63	; 0x3f
    1634:	66 97       	sbiw	r28, 0x16	; 22
    1636:	04 c0       	rjmp	.+8      	; 0x1640 <__umoddi3+0x87c>
    1638:	d6 94       	lsr	r13
    163a:	c7 94       	ror	r12
    163c:	b7 94       	ror	r11
    163e:	a7 94       	ror	r10
    1640:	0a 94       	dec	r0
    1642:	d2 f7       	brpl	.-12     	; 0x1638 <__umoddi3+0x874>
    1644:	a4 01       	movw	r20, r8
    1646:	93 01       	movw	r18, r6
    1648:	67 96       	adiw	r28, 0x17	; 23
    164a:	0f ac       	ldd	r0, Y+63	; 0x3f
    164c:	67 97       	sbiw	r28, 0x17	; 23
    164e:	04 c0       	rjmp	.+8      	; 0x1658 <__umoddi3+0x894>
    1650:	22 0f       	add	r18, r18
    1652:	33 1f       	adc	r19, r19
    1654:	44 1f       	adc	r20, r20
    1656:	55 1f       	adc	r21, r21
    1658:	0a 94       	dec	r0
    165a:	d2 f7       	brpl	.-12     	; 0x1650 <__umoddi3+0x88c>
    165c:	6c 96       	adiw	r28, 0x1c	; 28
    165e:	8c ad       	ldd	r24, Y+60	; 0x3c
    1660:	9d ad       	ldd	r25, Y+61	; 0x3d
    1662:	ae ad       	ldd	r26, Y+62	; 0x3e
    1664:	bf ad       	ldd	r27, Y+63	; 0x3f
    1666:	6c 97       	sbiw	r28, 0x1c	; 28
    1668:	66 96       	adiw	r28, 0x16	; 22
    166a:	0f ac       	ldd	r0, Y+63	; 0x3f
    166c:	66 97       	sbiw	r28, 0x16	; 22
    166e:	04 c0       	rjmp	.+8      	; 0x1678 <__umoddi3+0x8b4>
    1670:	b6 95       	lsr	r27
    1672:	a7 95       	ror	r26
    1674:	97 95       	ror	r25
    1676:	87 95       	ror	r24
    1678:	0a 94       	dec	r0
    167a:	d2 f7       	brpl	.-12     	; 0x1670 <__umoddi3+0x8ac>
    167c:	3c 01       	movw	r6, r24
    167e:	4d 01       	movw	r8, r26
    1680:	62 2a       	or	r6, r18
    1682:	73 2a       	or	r7, r19
    1684:	84 2a       	or	r8, r20
    1686:	95 2a       	or	r9, r21
    1688:	69 a2       	std	Y+33, r6	; 0x21
    168a:	7a a2       	std	Y+34, r7	; 0x22
    168c:	8b a2       	std	Y+35, r8	; 0x23
    168e:	9c a2       	std	Y+36, r9	; 0x24
    1690:	6c 96       	adiw	r28, 0x1c	; 28
    1692:	ec ac       	ldd	r14, Y+60	; 0x3c
    1694:	fd ac       	ldd	r15, Y+61	; 0x3d
    1696:	0e ad       	ldd	r16, Y+62	; 0x3e
    1698:	1f ad       	ldd	r17, Y+63	; 0x3f
    169a:	6c 97       	sbiw	r28, 0x1c	; 28
    169c:	67 96       	adiw	r28, 0x17	; 23
    169e:	0f ac       	ldd	r0, Y+63	; 0x3f
    16a0:	67 97       	sbiw	r28, 0x17	; 23
    16a2:	04 c0       	rjmp	.+8      	; 0x16ac <__umoddi3+0x8e8>
    16a4:	ee 0c       	add	r14, r14
    16a6:	ff 1c       	adc	r15, r15
    16a8:	00 1f       	adc	r16, r16
    16aa:	11 1f       	adc	r17, r17
    16ac:	0a 94       	dec	r0
    16ae:	d2 f7       	brpl	.-12     	; 0x16a4 <__umoddi3+0x8e0>
    16b0:	ed 8e       	std	Y+29, r14	; 0x1d
    16b2:	fe 8e       	std	Y+30, r15	; 0x1e
    16b4:	0f 8f       	std	Y+31, r16	; 0x1f
    16b6:	18 a3       	std	Y+32, r17	; 0x20
    16b8:	49 a5       	ldd	r20, Y+41	; 0x29
    16ba:	5a a5       	ldd	r21, Y+42	; 0x2a
    16bc:	6b a5       	ldd	r22, Y+43	; 0x2b
    16be:	7c a5       	ldd	r23, Y+44	; 0x2c
    16c0:	3b 01       	movw	r6, r22
    16c2:	88 24       	eor	r8, r8
    16c4:	99 24       	eor	r9, r9
    16c6:	60 70       	andi	r22, 0x00	; 0
    16c8:	70 70       	andi	r23, 0x00	; 0
    16ca:	2d 96       	adiw	r28, 0x0d	; 13
    16cc:	4c af       	std	Y+60, r20	; 0x3c
    16ce:	5d af       	std	Y+61, r21	; 0x3d
    16d0:	6e af       	std	Y+62, r22	; 0x3e
    16d2:	7f af       	std	Y+63, r23	; 0x3f
    16d4:	2d 97       	sbiw	r28, 0x0d	; 13
    16d6:	c6 01       	movw	r24, r12
    16d8:	b5 01       	movw	r22, r10
    16da:	a4 01       	movw	r20, r8
    16dc:	93 01       	movw	r18, r6
    16de:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
    16e2:	7b 01       	movw	r14, r22
    16e4:	8c 01       	movw	r16, r24
    16e6:	c6 01       	movw	r24, r12
    16e8:	b5 01       	movw	r22, r10
    16ea:	a4 01       	movw	r20, r8
    16ec:	93 01       	movw	r18, r6
    16ee:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
    16f2:	c9 01       	movw	r24, r18
    16f4:	da 01       	movw	r26, r20
    16f6:	1c 01       	movw	r2, r24
    16f8:	2d 01       	movw	r4, r26
    16fa:	c2 01       	movw	r24, r4
    16fc:	b1 01       	movw	r22, r2
    16fe:	2d 96       	adiw	r28, 0x0d	; 13
    1700:	2c ad       	ldd	r18, Y+60	; 0x3c
    1702:	3d ad       	ldd	r19, Y+61	; 0x3d
    1704:	4e ad       	ldd	r20, Y+62	; 0x3e
    1706:	5f ad       	ldd	r21, Y+63	; 0x3f
    1708:	2d 97       	sbiw	r28, 0x0d	; 13
    170a:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
    170e:	9b 01       	movw	r18, r22
    1710:	ac 01       	movw	r20, r24
    1712:	87 01       	movw	r16, r14
    1714:	ff 24       	eor	r15, r15
    1716:	ee 24       	eor	r14, r14
    1718:	a9 a0       	ldd	r10, Y+33	; 0x21
    171a:	ba a0       	ldd	r11, Y+34	; 0x22
    171c:	cb a0       	ldd	r12, Y+35	; 0x23
    171e:	dc a0       	ldd	r13, Y+36	; 0x24
    1720:	c6 01       	movw	r24, r12
    1722:	aa 27       	eor	r26, r26
    1724:	bb 27       	eor	r27, r27
    1726:	57 01       	movw	r10, r14
    1728:	68 01       	movw	r12, r16
    172a:	a8 2a       	or	r10, r24
    172c:	b9 2a       	or	r11, r25
    172e:	ca 2a       	or	r12, r26
    1730:	db 2a       	or	r13, r27
    1732:	a2 16       	cp	r10, r18
    1734:	b3 06       	cpc	r11, r19
    1736:	c4 06       	cpc	r12, r20
    1738:	d5 06       	cpc	r13, r21
    173a:	00 f5       	brcc	.+64     	; 0x177c <__umoddi3+0x9b8>
    173c:	08 94       	sec
    173e:	21 08       	sbc	r2, r1
    1740:	31 08       	sbc	r3, r1
    1742:	41 08       	sbc	r4, r1
    1744:	51 08       	sbc	r5, r1
    1746:	e9 a4       	ldd	r14, Y+41	; 0x29
    1748:	fa a4       	ldd	r15, Y+42	; 0x2a
    174a:	0b a5       	ldd	r16, Y+43	; 0x2b
    174c:	1c a5       	ldd	r17, Y+44	; 0x2c
    174e:	ae 0c       	add	r10, r14
    1750:	bf 1c       	adc	r11, r15
    1752:	c0 1e       	adc	r12, r16
    1754:	d1 1e       	adc	r13, r17
    1756:	ae 14       	cp	r10, r14
    1758:	bf 04       	cpc	r11, r15
    175a:	c0 06       	cpc	r12, r16
    175c:	d1 06       	cpc	r13, r17
    175e:	70 f0       	brcs	.+28     	; 0x177c <__umoddi3+0x9b8>
    1760:	a2 16       	cp	r10, r18
    1762:	b3 06       	cpc	r11, r19
    1764:	c4 06       	cpc	r12, r20
    1766:	d5 06       	cpc	r13, r21
    1768:	48 f4       	brcc	.+18     	; 0x177c <__umoddi3+0x9b8>
    176a:	08 94       	sec
    176c:	21 08       	sbc	r2, r1
    176e:	31 08       	sbc	r3, r1
    1770:	41 08       	sbc	r4, r1
    1772:	51 08       	sbc	r5, r1
    1774:	ae 0c       	add	r10, r14
    1776:	bf 1c       	adc	r11, r15
    1778:	c0 1e       	adc	r12, r16
    177a:	d1 1e       	adc	r13, r17
    177c:	a2 1a       	sub	r10, r18
    177e:	b3 0a       	sbc	r11, r19
    1780:	c4 0a       	sbc	r12, r20
    1782:	d5 0a       	sbc	r13, r21
    1784:	c6 01       	movw	r24, r12
    1786:	b5 01       	movw	r22, r10
    1788:	a4 01       	movw	r20, r8
    178a:	93 01       	movw	r18, r6
    178c:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
    1790:	7b 01       	movw	r14, r22
    1792:	8c 01       	movw	r16, r24
    1794:	c6 01       	movw	r24, r12
    1796:	b5 01       	movw	r22, r10
    1798:	a4 01       	movw	r20, r8
    179a:	93 01       	movw	r18, r6
    179c:	0e 94 11 20 	call	0x4022	; 0x4022 <__udivmodsi4>
    17a0:	c9 01       	movw	r24, r18
    17a2:	da 01       	movw	r26, r20
    17a4:	3c 01       	movw	r6, r24
    17a6:	4d 01       	movw	r8, r26
    17a8:	c4 01       	movw	r24, r8
    17aa:	b3 01       	movw	r22, r6
    17ac:	2d 96       	adiw	r28, 0x0d	; 13
    17ae:	2c ad       	ldd	r18, Y+60	; 0x3c
    17b0:	3d ad       	ldd	r19, Y+61	; 0x3d
    17b2:	4e ad       	ldd	r20, Y+62	; 0x3e
    17b4:	5f ad       	ldd	r21, Y+63	; 0x3f
    17b6:	2d 97       	sbiw	r28, 0x0d	; 13
    17b8:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
    17bc:	9b 01       	movw	r18, r22
    17be:	ac 01       	movw	r20, r24
    17c0:	87 01       	movw	r16, r14
    17c2:	ff 24       	eor	r15, r15
    17c4:	ee 24       	eor	r14, r14
    17c6:	89 a1       	ldd	r24, Y+33	; 0x21
    17c8:	9a a1       	ldd	r25, Y+34	; 0x22
    17ca:	ab a1       	ldd	r26, Y+35	; 0x23
    17cc:	bc a1       	ldd	r27, Y+36	; 0x24
    17ce:	a0 70       	andi	r26, 0x00	; 0
    17d0:	b0 70       	andi	r27, 0x00	; 0
    17d2:	57 01       	movw	r10, r14
    17d4:	68 01       	movw	r12, r16
    17d6:	a8 2a       	or	r10, r24
    17d8:	b9 2a       	or	r11, r25
    17da:	ca 2a       	or	r12, r26
    17dc:	db 2a       	or	r13, r27
    17de:	a2 16       	cp	r10, r18
    17e0:	b3 06       	cpc	r11, r19
    17e2:	c4 06       	cpc	r12, r20
    17e4:	d5 06       	cpc	r13, r21
    17e6:	00 f5       	brcc	.+64     	; 0x1828 <__umoddi3+0xa64>
    17e8:	08 94       	sec
    17ea:	61 08       	sbc	r6, r1
    17ec:	71 08       	sbc	r7, r1
    17ee:	81 08       	sbc	r8, r1
    17f0:	91 08       	sbc	r9, r1
    17f2:	69 a5       	ldd	r22, Y+41	; 0x29
    17f4:	7a a5       	ldd	r23, Y+42	; 0x2a
    17f6:	8b a5       	ldd	r24, Y+43	; 0x2b
    17f8:	9c a5       	ldd	r25, Y+44	; 0x2c
    17fa:	a6 0e       	add	r10, r22
    17fc:	b7 1e       	adc	r11, r23
    17fe:	c8 1e       	adc	r12, r24
    1800:	d9 1e       	adc	r13, r25
    1802:	a6 16       	cp	r10, r22
    1804:	b7 06       	cpc	r11, r23
    1806:	c8 06       	cpc	r12, r24
    1808:	d9 06       	cpc	r13, r25
    180a:	70 f0       	brcs	.+28     	; 0x1828 <__umoddi3+0xa64>
    180c:	a2 16       	cp	r10, r18
    180e:	b3 06       	cpc	r11, r19
    1810:	c4 06       	cpc	r12, r20
    1812:	d5 06       	cpc	r13, r21
    1814:	48 f4       	brcc	.+18     	; 0x1828 <__umoddi3+0xa64>
    1816:	08 94       	sec
    1818:	61 08       	sbc	r6, r1
    181a:	71 08       	sbc	r7, r1
    181c:	81 08       	sbc	r8, r1
    181e:	91 08       	sbc	r9, r1
    1820:	a6 0e       	add	r10, r22
    1822:	b7 1e       	adc	r11, r23
    1824:	c8 1e       	adc	r12, r24
    1826:	d9 1e       	adc	r13, r25
    1828:	d6 01       	movw	r26, r12
    182a:	c5 01       	movw	r24, r10
    182c:	82 1b       	sub	r24, r18
    182e:	93 0b       	sbc	r25, r19
    1830:	a4 0b       	sbc	r26, r20
    1832:	b5 0b       	sbc	r27, r21
    1834:	89 8f       	std	Y+25, r24	; 0x19
    1836:	9a 8f       	std	Y+26, r25	; 0x1a
    1838:	ab 8f       	std	Y+27, r26	; 0x1b
    183a:	bc 8f       	std	Y+28, r27	; 0x1c
    183c:	d1 01       	movw	r26, r2
    183e:	99 27       	eor	r25, r25
    1840:	88 27       	eor	r24, r24
    1842:	84 01       	movw	r16, r8
    1844:	73 01       	movw	r14, r6
    1846:	e8 2a       	or	r14, r24
    1848:	f9 2a       	or	r15, r25
    184a:	0a 2b       	or	r16, r26
    184c:	1b 2b       	or	r17, r27
    184e:	4f ef       	ldi	r20, 0xFF	; 255
    1850:	a4 2e       	mov	r10, r20
    1852:	4f ef       	ldi	r20, 0xFF	; 255
    1854:	b4 2e       	mov	r11, r20
    1856:	c1 2c       	mov	r12, r1
    1858:	d1 2c       	mov	r13, r1
    185a:	ae 20       	and	r10, r14
    185c:	bf 20       	and	r11, r15
    185e:	c0 22       	and	r12, r16
    1860:	d1 22       	and	r13, r17
    1862:	78 01       	movw	r14, r16
    1864:	00 27       	eor	r16, r16
    1866:	11 27       	eor	r17, r17
    1868:	6d a0       	ldd	r6, Y+37	; 0x25
    186a:	7e a0       	ldd	r7, Y+38	; 0x26
    186c:	8f a0       	ldd	r8, Y+39	; 0x27
    186e:	98 a4       	ldd	r9, Y+40	; 0x28
    1870:	4f ef       	ldi	r20, 0xFF	; 255
    1872:	5f ef       	ldi	r21, 0xFF	; 255
    1874:	60 e0       	ldi	r22, 0x00	; 0
    1876:	70 e0       	ldi	r23, 0x00	; 0
    1878:	64 22       	and	r6, r20
    187a:	75 22       	and	r7, r21
    187c:	86 22       	and	r8, r22
    187e:	97 22       	and	r9, r23
    1880:	8d a1       	ldd	r24, Y+37	; 0x25
    1882:	9e a1       	ldd	r25, Y+38	; 0x26
    1884:	af a1       	ldd	r26, Y+39	; 0x27
    1886:	b8 a5       	ldd	r27, Y+40	; 0x28
    1888:	bd 01       	movw	r22, r26
    188a:	88 27       	eor	r24, r24
    188c:	99 27       	eor	r25, r25
    188e:	65 96       	adiw	r28, 0x15	; 21
    1890:	6c af       	std	Y+60, r22	; 0x3c
    1892:	7d af       	std	Y+61, r23	; 0x3d
    1894:	8e af       	std	Y+62, r24	; 0x3e
    1896:	9f af       	std	Y+63, r25	; 0x3f
    1898:	65 97       	sbiw	r28, 0x15	; 21
    189a:	c6 01       	movw	r24, r12
    189c:	b5 01       	movw	r22, r10
    189e:	a4 01       	movw	r20, r8
    18a0:	93 01       	movw	r18, r6
    18a2:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
    18a6:	61 96       	adiw	r28, 0x11	; 17
    18a8:	6c af       	std	Y+60, r22	; 0x3c
    18aa:	7d af       	std	Y+61, r23	; 0x3d
    18ac:	8e af       	std	Y+62, r24	; 0x3e
    18ae:	9f af       	std	Y+63, r25	; 0x3f
    18b0:	61 97       	sbiw	r28, 0x11	; 17
    18b2:	c6 01       	movw	r24, r12
    18b4:	b5 01       	movw	r22, r10
    18b6:	65 96       	adiw	r28, 0x15	; 21
    18b8:	2c ad       	ldd	r18, Y+60	; 0x3c
    18ba:	3d ad       	ldd	r19, Y+61	; 0x3d
    18bc:	4e ad       	ldd	r20, Y+62	; 0x3e
    18be:	5f ad       	ldd	r21, Y+63	; 0x3f
    18c0:	65 97       	sbiw	r28, 0x15	; 21
    18c2:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
    18c6:	1b 01       	movw	r2, r22
    18c8:	2c 01       	movw	r4, r24
    18ca:	c8 01       	movw	r24, r16
    18cc:	b7 01       	movw	r22, r14
    18ce:	a4 01       	movw	r20, r8
    18d0:	93 01       	movw	r18, r6
    18d2:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
    18d6:	5b 01       	movw	r10, r22
    18d8:	6c 01       	movw	r12, r24
    18da:	c8 01       	movw	r24, r16
    18dc:	b7 01       	movw	r22, r14
    18de:	65 96       	adiw	r28, 0x15	; 21
    18e0:	2c ad       	ldd	r18, Y+60	; 0x3c
    18e2:	3d ad       	ldd	r19, Y+61	; 0x3d
    18e4:	4e ad       	ldd	r20, Y+62	; 0x3e
    18e6:	5f ad       	ldd	r21, Y+63	; 0x3f
    18e8:	65 97       	sbiw	r28, 0x15	; 21
    18ea:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
    18ee:	7b 01       	movw	r14, r22
    18f0:	8c 01       	movw	r16, r24
    18f2:	a6 01       	movw	r20, r12
    18f4:	95 01       	movw	r18, r10
    18f6:	22 0d       	add	r18, r2
    18f8:	33 1d       	adc	r19, r3
    18fa:	44 1d       	adc	r20, r4
    18fc:	55 1d       	adc	r21, r5
    18fe:	61 96       	adiw	r28, 0x11	; 17
    1900:	6c ac       	ldd	r6, Y+60	; 0x3c
    1902:	7d ac       	ldd	r7, Y+61	; 0x3d
    1904:	8e ac       	ldd	r8, Y+62	; 0x3e
    1906:	9f ac       	ldd	r9, Y+63	; 0x3f
    1908:	61 97       	sbiw	r28, 0x11	; 17
    190a:	c4 01       	movw	r24, r8
    190c:	aa 27       	eor	r26, r26
    190e:	bb 27       	eor	r27, r27
    1910:	28 0f       	add	r18, r24
    1912:	39 1f       	adc	r19, r25
    1914:	4a 1f       	adc	r20, r26
    1916:	5b 1f       	adc	r21, r27
    1918:	2a 15       	cp	r18, r10
    191a:	3b 05       	cpc	r19, r11
    191c:	4c 05       	cpc	r20, r12
    191e:	5d 05       	cpc	r21, r13
    1920:	48 f4       	brcc	.+18     	; 0x1934 <__umoddi3+0xb70>
    1922:	81 2c       	mov	r8, r1
    1924:	91 2c       	mov	r9, r1
    1926:	e1 e0       	ldi	r30, 0x01	; 1
    1928:	ae 2e       	mov	r10, r30
    192a:	b1 2c       	mov	r11, r1
    192c:	e8 0c       	add	r14, r8
    192e:	f9 1c       	adc	r15, r9
    1930:	0a 1d       	adc	r16, r10
    1932:	1b 1d       	adc	r17, r11
    1934:	ca 01       	movw	r24, r20
    1936:	aa 27       	eor	r26, r26
    1938:	bb 27       	eor	r27, r27
    193a:	57 01       	movw	r10, r14
    193c:	68 01       	movw	r12, r16
    193e:	a8 0e       	add	r10, r24
    1940:	b9 1e       	adc	r11, r25
    1942:	ca 1e       	adc	r12, r26
    1944:	db 1e       	adc	r13, r27
    1946:	a9 01       	movw	r20, r18
    1948:	33 27       	eor	r19, r19
    194a:	22 27       	eor	r18, r18
    194c:	61 96       	adiw	r28, 0x11	; 17
    194e:	8c ad       	ldd	r24, Y+60	; 0x3c
    1950:	9d ad       	ldd	r25, Y+61	; 0x3d
    1952:	ae ad       	ldd	r26, Y+62	; 0x3e
    1954:	bf ad       	ldd	r27, Y+63	; 0x3f
    1956:	61 97       	sbiw	r28, 0x11	; 17
    1958:	a0 70       	andi	r26, 0x00	; 0
    195a:	b0 70       	andi	r27, 0x00	; 0
    195c:	28 0f       	add	r18, r24
    195e:	39 1f       	adc	r19, r25
    1960:	4a 1f       	adc	r20, r26
    1962:	5b 1f       	adc	r21, r27
    1964:	e9 8c       	ldd	r14, Y+25	; 0x19
    1966:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1968:	0b 8d       	ldd	r16, Y+27	; 0x1b
    196a:	1c 8d       	ldd	r17, Y+28	; 0x1c
    196c:	ea 14       	cp	r14, r10
    196e:	fb 04       	cpc	r15, r11
    1970:	0c 05       	cpc	r16, r12
    1972:	1d 05       	cpc	r17, r13
    1974:	70 f0       	brcs	.+28     	; 0x1992 <__umoddi3+0xbce>
    1976:	ae 14       	cp	r10, r14
    1978:	bf 04       	cpc	r11, r15
    197a:	c0 06       	cpc	r12, r16
    197c:	d1 06       	cpc	r13, r17
    197e:	69 f5       	brne	.+90     	; 0x19da <__umoddi3+0xc16>
    1980:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1982:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1984:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1986:	98 a1       	ldd	r25, Y+32	; 0x20
    1988:	62 17       	cp	r22, r18
    198a:	73 07       	cpc	r23, r19
    198c:	84 07       	cpc	r24, r20
    198e:	95 07       	cpc	r25, r21
    1990:	20 f5       	brcc	.+72     	; 0x19da <__umoddi3+0xc16>
    1992:	da 01       	movw	r26, r20
    1994:	c9 01       	movw	r24, r18
    1996:	6d a0       	ldd	r6, Y+37	; 0x25
    1998:	7e a0       	ldd	r7, Y+38	; 0x26
    199a:	8f a0       	ldd	r8, Y+39	; 0x27
    199c:	98 a4       	ldd	r9, Y+40	; 0x28
    199e:	86 19       	sub	r24, r6
    19a0:	97 09       	sbc	r25, r7
    19a2:	a8 09       	sbc	r26, r8
    19a4:	b9 09       	sbc	r27, r9
    19a6:	e9 a4       	ldd	r14, Y+41	; 0x29
    19a8:	fa a4       	ldd	r15, Y+42	; 0x2a
    19aa:	0b a5       	ldd	r16, Y+43	; 0x2b
    19ac:	1c a5       	ldd	r17, Y+44	; 0x2c
    19ae:	ae 18       	sub	r10, r14
    19b0:	bf 08       	sbc	r11, r15
    19b2:	c0 0a       	sbc	r12, r16
    19b4:	d1 0a       	sbc	r13, r17
    19b6:	ee 24       	eor	r14, r14
    19b8:	ff 24       	eor	r15, r15
    19ba:	87 01       	movw	r16, r14
    19bc:	28 17       	cp	r18, r24
    19be:	39 07       	cpc	r19, r25
    19c0:	4a 07       	cpc	r20, r26
    19c2:	5b 07       	cpc	r21, r27
    19c4:	28 f4       	brcc	.+10     	; 0x19d0 <__umoddi3+0xc0c>
    19c6:	21 e0       	ldi	r18, 0x01	; 1
    19c8:	e2 2e       	mov	r14, r18
    19ca:	f1 2c       	mov	r15, r1
    19cc:	01 2d       	mov	r16, r1
    19ce:	11 2d       	mov	r17, r1
    19d0:	ae 18       	sub	r10, r14
    19d2:	bf 08       	sbc	r11, r15
    19d4:	c0 0a       	sbc	r12, r16
    19d6:	d1 0a       	sbc	r13, r17
    19d8:	02 c0       	rjmp	.+4      	; 0x19de <__umoddi3+0xc1a>
    19da:	da 01       	movw	r26, r20
    19dc:	c9 01       	movw	r24, r18
    19de:	6d 8c       	ldd	r6, Y+29	; 0x1d
    19e0:	7e 8c       	ldd	r7, Y+30	; 0x1e
    19e2:	8f 8c       	ldd	r8, Y+31	; 0x1f
    19e4:	98 a0       	ldd	r9, Y+32	; 0x20
    19e6:	68 1a       	sub	r6, r24
    19e8:	79 0a       	sbc	r7, r25
    19ea:	8a 0a       	sbc	r8, r26
    19ec:	9b 0a       	sbc	r9, r27
    19ee:	49 8d       	ldd	r20, Y+25	; 0x19
    19f0:	5a 8d       	ldd	r21, Y+26	; 0x1a
    19f2:	6b 8d       	ldd	r22, Y+27	; 0x1b
    19f4:	7c 8d       	ldd	r23, Y+28	; 0x1c
    19f6:	4a 19       	sub	r20, r10
    19f8:	5b 09       	sbc	r21, r11
    19fa:	6c 09       	sbc	r22, r12
    19fc:	7d 09       	sbc	r23, r13
    19fe:	5a 01       	movw	r10, r20
    1a00:	6b 01       	movw	r12, r22
    1a02:	22 24       	eor	r2, r2
    1a04:	33 24       	eor	r3, r3
    1a06:	21 01       	movw	r4, r2
    1a08:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1a0a:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1a0c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1a0e:	98 a1       	ldd	r25, Y+32	; 0x20
    1a10:	66 15       	cp	r22, r6
    1a12:	77 05       	cpc	r23, r7
    1a14:	88 05       	cpc	r24, r8
    1a16:	99 05       	cpc	r25, r9
    1a18:	28 f4       	brcc	.+10     	; 0x1a24 <__umoddi3+0xc60>
    1a1a:	81 e0       	ldi	r24, 0x01	; 1
    1a1c:	28 2e       	mov	r2, r24
    1a1e:	31 2c       	mov	r3, r1
    1a20:	41 2c       	mov	r4, r1
    1a22:	51 2c       	mov	r5, r1
    1a24:	86 01       	movw	r16, r12
    1a26:	75 01       	movw	r14, r10
    1a28:	e2 18       	sub	r14, r2
    1a2a:	f3 08       	sbc	r15, r3
    1a2c:	04 09       	sbc	r16, r4
    1a2e:	15 09       	sbc	r17, r5
    1a30:	a8 01       	movw	r20, r16
    1a32:	97 01       	movw	r18, r14
    1a34:	66 96       	adiw	r28, 0x16	; 22
    1a36:	0f ac       	ldd	r0, Y+63	; 0x3f
    1a38:	66 97       	sbiw	r28, 0x16	; 22
    1a3a:	04 c0       	rjmp	.+8      	; 0x1a44 <__umoddi3+0xc80>
    1a3c:	22 0f       	add	r18, r18
    1a3e:	33 1f       	adc	r19, r19
    1a40:	44 1f       	adc	r20, r20
    1a42:	55 1f       	adc	r21, r21
    1a44:	0a 94       	dec	r0
    1a46:	d2 f7       	brpl	.-12     	; 0x1a3c <__umoddi3+0xc78>
    1a48:	d4 01       	movw	r26, r8
    1a4a:	c3 01       	movw	r24, r6
    1a4c:	67 96       	adiw	r28, 0x17	; 23
    1a4e:	0f ac       	ldd	r0, Y+63	; 0x3f
    1a50:	67 97       	sbiw	r28, 0x17	; 23
    1a52:	04 c0       	rjmp	.+8      	; 0x1a5c <__umoddi3+0xc98>
    1a54:	b6 95       	lsr	r27
    1a56:	a7 95       	ror	r26
    1a58:	97 95       	ror	r25
    1a5a:	87 95       	ror	r24
    1a5c:	0a 94       	dec	r0
    1a5e:	d2 f7       	brpl	.-12     	; 0x1a54 <__umoddi3+0xc90>
    1a60:	28 2b       	or	r18, r24
    1a62:	39 2b       	or	r19, r25
    1a64:	4a 2b       	or	r20, r26
    1a66:	5b 2b       	or	r21, r27
    1a68:	29 8b       	std	Y+17, r18	; 0x11
    1a6a:	3a 8b       	std	Y+18, r19	; 0x12
    1a6c:	4b 8b       	std	Y+19, r20	; 0x13
    1a6e:	5c 8b       	std	Y+20, r21	; 0x14
    1a70:	67 96       	adiw	r28, 0x17	; 23
    1a72:	0f ac       	ldd	r0, Y+63	; 0x3f
    1a74:	67 97       	sbiw	r28, 0x17	; 23
    1a76:	04 c0       	rjmp	.+8      	; 0x1a80 <__umoddi3+0xcbc>
    1a78:	16 95       	lsr	r17
    1a7a:	07 95       	ror	r16
    1a7c:	f7 94       	ror	r15
    1a7e:	e7 94       	ror	r14
    1a80:	0a 94       	dec	r0
    1a82:	d2 f7       	brpl	.-12     	; 0x1a78 <__umoddi3+0xcb4>
    1a84:	ed 8a       	std	Y+21, r14	; 0x15
    1a86:	fe 8a       	std	Y+22, r15	; 0x16
    1a88:	0f 8b       	std	Y+23, r16	; 0x17
    1a8a:	18 8f       	std	Y+24, r17	; 0x18
    1a8c:	3a 89       	ldd	r19, Y+18	; 0x12
    1a8e:	4b 89       	ldd	r20, Y+19	; 0x13
    1a90:	5c 89       	ldd	r21, Y+20	; 0x14
    1a92:	6e 2d       	mov	r22, r14
    1a94:	7e 89       	ldd	r23, Y+22	; 0x16
    1a96:	8f 89       	ldd	r24, Y+23	; 0x17
    1a98:	98 8d       	ldd	r25, Y+24	; 0x18
    1a9a:	c5 5a       	subi	r28, 0xA5	; 165
    1a9c:	df 4f       	sbci	r29, 0xFF	; 255
    1a9e:	e2 e1       	ldi	r30, 0x12	; 18
    1aa0:	0c 94 4f 20 	jmp	0x409e	; 0x409e <__epilogue_restores__>

00001aa4 <_fpadd_parts>:
    1aa4:	a0 e0       	ldi	r26, 0x00	; 0
    1aa6:	b0 e0       	ldi	r27, 0x00	; 0
    1aa8:	e8 e5       	ldi	r30, 0x58	; 88
    1aaa:	fd e0       	ldi	r31, 0x0D	; 13
    1aac:	0c 94 33 20 	jmp	0x4066	; 0x4066 <__prologue_saves__>
    1ab0:	dc 01       	movw	r26, r24
    1ab2:	2b 01       	movw	r4, r22
    1ab4:	fa 01       	movw	r30, r20
    1ab6:	9c 91       	ld	r25, X
    1ab8:	92 30       	cpi	r25, 0x02	; 2
    1aba:	08 f4       	brcc	.+2      	; 0x1abe <_fpadd_parts+0x1a>
    1abc:	39 c1       	rjmp	.+626    	; 0x1d30 <_fpadd_parts+0x28c>
    1abe:	eb 01       	movw	r28, r22
    1ac0:	88 81       	ld	r24, Y
    1ac2:	82 30       	cpi	r24, 0x02	; 2
    1ac4:	08 f4       	brcc	.+2      	; 0x1ac8 <_fpadd_parts+0x24>
    1ac6:	33 c1       	rjmp	.+614    	; 0x1d2e <_fpadd_parts+0x28a>
    1ac8:	94 30       	cpi	r25, 0x04	; 4
    1aca:	69 f4       	brne	.+26     	; 0x1ae6 <_fpadd_parts+0x42>
    1acc:	84 30       	cpi	r24, 0x04	; 4
    1ace:	09 f0       	breq	.+2      	; 0x1ad2 <_fpadd_parts+0x2e>
    1ad0:	2f c1       	rjmp	.+606    	; 0x1d30 <_fpadd_parts+0x28c>
    1ad2:	11 96       	adiw	r26, 0x01	; 1
    1ad4:	9c 91       	ld	r25, X
    1ad6:	11 97       	sbiw	r26, 0x01	; 1
    1ad8:	89 81       	ldd	r24, Y+1	; 0x01
    1ada:	98 17       	cp	r25, r24
    1adc:	09 f4       	brne	.+2      	; 0x1ae0 <_fpadd_parts+0x3c>
    1ade:	28 c1       	rjmp	.+592    	; 0x1d30 <_fpadd_parts+0x28c>
    1ae0:	a3 e6       	ldi	r26, 0x63	; 99
    1ae2:	b0 e0       	ldi	r27, 0x00	; 0
    1ae4:	25 c1       	rjmp	.+586    	; 0x1d30 <_fpadd_parts+0x28c>
    1ae6:	84 30       	cpi	r24, 0x04	; 4
    1ae8:	09 f4       	brne	.+2      	; 0x1aec <_fpadd_parts+0x48>
    1aea:	21 c1       	rjmp	.+578    	; 0x1d2e <_fpadd_parts+0x28a>
    1aec:	82 30       	cpi	r24, 0x02	; 2
    1aee:	a9 f4       	brne	.+42     	; 0x1b1a <_fpadd_parts+0x76>
    1af0:	92 30       	cpi	r25, 0x02	; 2
    1af2:	09 f0       	breq	.+2      	; 0x1af6 <_fpadd_parts+0x52>
    1af4:	1d c1       	rjmp	.+570    	; 0x1d30 <_fpadd_parts+0x28c>
    1af6:	9a 01       	movw	r18, r20
    1af8:	ad 01       	movw	r20, r26
    1afa:	88 e0       	ldi	r24, 0x08	; 8
    1afc:	ea 01       	movw	r28, r20
    1afe:	09 90       	ld	r0, Y+
    1b00:	ae 01       	movw	r20, r28
    1b02:	e9 01       	movw	r28, r18
    1b04:	09 92       	st	Y+, r0
    1b06:	9e 01       	movw	r18, r28
    1b08:	81 50       	subi	r24, 0x01	; 1
    1b0a:	c1 f7       	brne	.-16     	; 0x1afc <_fpadd_parts+0x58>
    1b0c:	e2 01       	movw	r28, r4
    1b0e:	89 81       	ldd	r24, Y+1	; 0x01
    1b10:	11 96       	adiw	r26, 0x01	; 1
    1b12:	9c 91       	ld	r25, X
    1b14:	89 23       	and	r24, r25
    1b16:	81 83       	std	Z+1, r24	; 0x01
    1b18:	08 c1       	rjmp	.+528    	; 0x1d2a <_fpadd_parts+0x286>
    1b1a:	92 30       	cpi	r25, 0x02	; 2
    1b1c:	09 f4       	brne	.+2      	; 0x1b20 <_fpadd_parts+0x7c>
    1b1e:	07 c1       	rjmp	.+526    	; 0x1d2e <_fpadd_parts+0x28a>
    1b20:	12 96       	adiw	r26, 0x02	; 2
    1b22:	2d 90       	ld	r2, X+
    1b24:	3c 90       	ld	r3, X
    1b26:	13 97       	sbiw	r26, 0x03	; 3
    1b28:	eb 01       	movw	r28, r22
    1b2a:	8a 81       	ldd	r24, Y+2	; 0x02
    1b2c:	9b 81       	ldd	r25, Y+3	; 0x03
    1b2e:	14 96       	adiw	r26, 0x04	; 4
    1b30:	ad 90       	ld	r10, X+
    1b32:	bd 90       	ld	r11, X+
    1b34:	cd 90       	ld	r12, X+
    1b36:	dc 90       	ld	r13, X
    1b38:	17 97       	sbiw	r26, 0x07	; 7
    1b3a:	ec 80       	ldd	r14, Y+4	; 0x04
    1b3c:	fd 80       	ldd	r15, Y+5	; 0x05
    1b3e:	0e 81       	ldd	r16, Y+6	; 0x06
    1b40:	1f 81       	ldd	r17, Y+7	; 0x07
    1b42:	91 01       	movw	r18, r2
    1b44:	28 1b       	sub	r18, r24
    1b46:	39 0b       	sbc	r19, r25
    1b48:	b9 01       	movw	r22, r18
    1b4a:	37 ff       	sbrs	r19, 7
    1b4c:	04 c0       	rjmp	.+8      	; 0x1b56 <_fpadd_parts+0xb2>
    1b4e:	66 27       	eor	r22, r22
    1b50:	77 27       	eor	r23, r23
    1b52:	62 1b       	sub	r22, r18
    1b54:	73 0b       	sbc	r23, r19
    1b56:	60 32       	cpi	r22, 0x20	; 32
    1b58:	71 05       	cpc	r23, r1
    1b5a:	0c f0       	brlt	.+2      	; 0x1b5e <_fpadd_parts+0xba>
    1b5c:	61 c0       	rjmp	.+194    	; 0x1c20 <_fpadd_parts+0x17c>
    1b5e:	12 16       	cp	r1, r18
    1b60:	13 06       	cpc	r1, r19
    1b62:	6c f5       	brge	.+90     	; 0x1bbe <_fpadd_parts+0x11a>
    1b64:	37 01       	movw	r6, r14
    1b66:	48 01       	movw	r8, r16
    1b68:	06 2e       	mov	r0, r22
    1b6a:	04 c0       	rjmp	.+8      	; 0x1b74 <_fpadd_parts+0xd0>
    1b6c:	96 94       	lsr	r9
    1b6e:	87 94       	ror	r8
    1b70:	77 94       	ror	r7
    1b72:	67 94       	ror	r6
    1b74:	0a 94       	dec	r0
    1b76:	d2 f7       	brpl	.-12     	; 0x1b6c <_fpadd_parts+0xc8>
    1b78:	21 e0       	ldi	r18, 0x01	; 1
    1b7a:	30 e0       	ldi	r19, 0x00	; 0
    1b7c:	40 e0       	ldi	r20, 0x00	; 0
    1b7e:	50 e0       	ldi	r21, 0x00	; 0
    1b80:	04 c0       	rjmp	.+8      	; 0x1b8a <_fpadd_parts+0xe6>
    1b82:	22 0f       	add	r18, r18
    1b84:	33 1f       	adc	r19, r19
    1b86:	44 1f       	adc	r20, r20
    1b88:	55 1f       	adc	r21, r21
    1b8a:	6a 95       	dec	r22
    1b8c:	d2 f7       	brpl	.-12     	; 0x1b82 <_fpadd_parts+0xde>
    1b8e:	21 50       	subi	r18, 0x01	; 1
    1b90:	30 40       	sbci	r19, 0x00	; 0
    1b92:	40 40       	sbci	r20, 0x00	; 0
    1b94:	50 40       	sbci	r21, 0x00	; 0
    1b96:	2e 21       	and	r18, r14
    1b98:	3f 21       	and	r19, r15
    1b9a:	40 23       	and	r20, r16
    1b9c:	51 23       	and	r21, r17
    1b9e:	21 15       	cp	r18, r1
    1ba0:	31 05       	cpc	r19, r1
    1ba2:	41 05       	cpc	r20, r1
    1ba4:	51 05       	cpc	r21, r1
    1ba6:	21 f0       	breq	.+8      	; 0x1bb0 <_fpadd_parts+0x10c>
    1ba8:	21 e0       	ldi	r18, 0x01	; 1
    1baa:	30 e0       	ldi	r19, 0x00	; 0
    1bac:	40 e0       	ldi	r20, 0x00	; 0
    1bae:	50 e0       	ldi	r21, 0x00	; 0
    1bb0:	79 01       	movw	r14, r18
    1bb2:	8a 01       	movw	r16, r20
    1bb4:	e6 28       	or	r14, r6
    1bb6:	f7 28       	or	r15, r7
    1bb8:	08 29       	or	r16, r8
    1bba:	19 29       	or	r17, r9
    1bbc:	3c c0       	rjmp	.+120    	; 0x1c36 <_fpadd_parts+0x192>
    1bbe:	23 2b       	or	r18, r19
    1bc0:	d1 f1       	breq	.+116    	; 0x1c36 <_fpadd_parts+0x192>
    1bc2:	26 0e       	add	r2, r22
    1bc4:	37 1e       	adc	r3, r23
    1bc6:	35 01       	movw	r6, r10
    1bc8:	46 01       	movw	r8, r12
    1bca:	06 2e       	mov	r0, r22
    1bcc:	04 c0       	rjmp	.+8      	; 0x1bd6 <_fpadd_parts+0x132>
    1bce:	96 94       	lsr	r9
    1bd0:	87 94       	ror	r8
    1bd2:	77 94       	ror	r7
    1bd4:	67 94       	ror	r6
    1bd6:	0a 94       	dec	r0
    1bd8:	d2 f7       	brpl	.-12     	; 0x1bce <_fpadd_parts+0x12a>
    1bda:	21 e0       	ldi	r18, 0x01	; 1
    1bdc:	30 e0       	ldi	r19, 0x00	; 0
    1bde:	40 e0       	ldi	r20, 0x00	; 0
    1be0:	50 e0       	ldi	r21, 0x00	; 0
    1be2:	04 c0       	rjmp	.+8      	; 0x1bec <_fpadd_parts+0x148>
    1be4:	22 0f       	add	r18, r18
    1be6:	33 1f       	adc	r19, r19
    1be8:	44 1f       	adc	r20, r20
    1bea:	55 1f       	adc	r21, r21
    1bec:	6a 95       	dec	r22
    1bee:	d2 f7       	brpl	.-12     	; 0x1be4 <_fpadd_parts+0x140>
    1bf0:	21 50       	subi	r18, 0x01	; 1
    1bf2:	30 40       	sbci	r19, 0x00	; 0
    1bf4:	40 40       	sbci	r20, 0x00	; 0
    1bf6:	50 40       	sbci	r21, 0x00	; 0
    1bf8:	2a 21       	and	r18, r10
    1bfa:	3b 21       	and	r19, r11
    1bfc:	4c 21       	and	r20, r12
    1bfe:	5d 21       	and	r21, r13
    1c00:	21 15       	cp	r18, r1
    1c02:	31 05       	cpc	r19, r1
    1c04:	41 05       	cpc	r20, r1
    1c06:	51 05       	cpc	r21, r1
    1c08:	21 f0       	breq	.+8      	; 0x1c12 <_fpadd_parts+0x16e>
    1c0a:	21 e0       	ldi	r18, 0x01	; 1
    1c0c:	30 e0       	ldi	r19, 0x00	; 0
    1c0e:	40 e0       	ldi	r20, 0x00	; 0
    1c10:	50 e0       	ldi	r21, 0x00	; 0
    1c12:	59 01       	movw	r10, r18
    1c14:	6a 01       	movw	r12, r20
    1c16:	a6 28       	or	r10, r6
    1c18:	b7 28       	or	r11, r7
    1c1a:	c8 28       	or	r12, r8
    1c1c:	d9 28       	or	r13, r9
    1c1e:	0b c0       	rjmp	.+22     	; 0x1c36 <_fpadd_parts+0x192>
    1c20:	82 15       	cp	r24, r2
    1c22:	93 05       	cpc	r25, r3
    1c24:	2c f0       	brlt	.+10     	; 0x1c30 <_fpadd_parts+0x18c>
    1c26:	1c 01       	movw	r2, r24
    1c28:	aa 24       	eor	r10, r10
    1c2a:	bb 24       	eor	r11, r11
    1c2c:	65 01       	movw	r12, r10
    1c2e:	03 c0       	rjmp	.+6      	; 0x1c36 <_fpadd_parts+0x192>
    1c30:	ee 24       	eor	r14, r14
    1c32:	ff 24       	eor	r15, r15
    1c34:	87 01       	movw	r16, r14
    1c36:	11 96       	adiw	r26, 0x01	; 1
    1c38:	9c 91       	ld	r25, X
    1c3a:	d2 01       	movw	r26, r4
    1c3c:	11 96       	adiw	r26, 0x01	; 1
    1c3e:	8c 91       	ld	r24, X
    1c40:	98 17       	cp	r25, r24
    1c42:	09 f4       	brne	.+2      	; 0x1c46 <_fpadd_parts+0x1a2>
    1c44:	45 c0       	rjmp	.+138    	; 0x1cd0 <_fpadd_parts+0x22c>
    1c46:	99 23       	and	r25, r25
    1c48:	39 f0       	breq	.+14     	; 0x1c58 <_fpadd_parts+0x1b4>
    1c4a:	a8 01       	movw	r20, r16
    1c4c:	97 01       	movw	r18, r14
    1c4e:	2a 19       	sub	r18, r10
    1c50:	3b 09       	sbc	r19, r11
    1c52:	4c 09       	sbc	r20, r12
    1c54:	5d 09       	sbc	r21, r13
    1c56:	06 c0       	rjmp	.+12     	; 0x1c64 <_fpadd_parts+0x1c0>
    1c58:	a6 01       	movw	r20, r12
    1c5a:	95 01       	movw	r18, r10
    1c5c:	2e 19       	sub	r18, r14
    1c5e:	3f 09       	sbc	r19, r15
    1c60:	40 0b       	sbc	r20, r16
    1c62:	51 0b       	sbc	r21, r17
    1c64:	57 fd       	sbrc	r21, 7
    1c66:	08 c0       	rjmp	.+16     	; 0x1c78 <_fpadd_parts+0x1d4>
    1c68:	11 82       	std	Z+1, r1	; 0x01
    1c6a:	33 82       	std	Z+3, r3	; 0x03
    1c6c:	22 82       	std	Z+2, r2	; 0x02
    1c6e:	24 83       	std	Z+4, r18	; 0x04
    1c70:	35 83       	std	Z+5, r19	; 0x05
    1c72:	46 83       	std	Z+6, r20	; 0x06
    1c74:	57 83       	std	Z+7, r21	; 0x07
    1c76:	1d c0       	rjmp	.+58     	; 0x1cb2 <_fpadd_parts+0x20e>
    1c78:	81 e0       	ldi	r24, 0x01	; 1
    1c7a:	81 83       	std	Z+1, r24	; 0x01
    1c7c:	33 82       	std	Z+3, r3	; 0x03
    1c7e:	22 82       	std	Z+2, r2	; 0x02
    1c80:	88 27       	eor	r24, r24
    1c82:	99 27       	eor	r25, r25
    1c84:	dc 01       	movw	r26, r24
    1c86:	82 1b       	sub	r24, r18
    1c88:	93 0b       	sbc	r25, r19
    1c8a:	a4 0b       	sbc	r26, r20
    1c8c:	b5 0b       	sbc	r27, r21
    1c8e:	84 83       	std	Z+4, r24	; 0x04
    1c90:	95 83       	std	Z+5, r25	; 0x05
    1c92:	a6 83       	std	Z+6, r26	; 0x06
    1c94:	b7 83       	std	Z+7, r27	; 0x07
    1c96:	0d c0       	rjmp	.+26     	; 0x1cb2 <_fpadd_parts+0x20e>
    1c98:	22 0f       	add	r18, r18
    1c9a:	33 1f       	adc	r19, r19
    1c9c:	44 1f       	adc	r20, r20
    1c9e:	55 1f       	adc	r21, r21
    1ca0:	24 83       	std	Z+4, r18	; 0x04
    1ca2:	35 83       	std	Z+5, r19	; 0x05
    1ca4:	46 83       	std	Z+6, r20	; 0x06
    1ca6:	57 83       	std	Z+7, r21	; 0x07
    1ca8:	82 81       	ldd	r24, Z+2	; 0x02
    1caa:	93 81       	ldd	r25, Z+3	; 0x03
    1cac:	01 97       	sbiw	r24, 0x01	; 1
    1cae:	93 83       	std	Z+3, r25	; 0x03
    1cb0:	82 83       	std	Z+2, r24	; 0x02
    1cb2:	24 81       	ldd	r18, Z+4	; 0x04
    1cb4:	35 81       	ldd	r19, Z+5	; 0x05
    1cb6:	46 81       	ldd	r20, Z+6	; 0x06
    1cb8:	57 81       	ldd	r21, Z+7	; 0x07
    1cba:	da 01       	movw	r26, r20
    1cbc:	c9 01       	movw	r24, r18
    1cbe:	01 97       	sbiw	r24, 0x01	; 1
    1cc0:	a1 09       	sbc	r26, r1
    1cc2:	b1 09       	sbc	r27, r1
    1cc4:	8f 5f       	subi	r24, 0xFF	; 255
    1cc6:	9f 4f       	sbci	r25, 0xFF	; 255
    1cc8:	af 4f       	sbci	r26, 0xFF	; 255
    1cca:	bf 43       	sbci	r27, 0x3F	; 63
    1ccc:	28 f3       	brcs	.-54     	; 0x1c98 <_fpadd_parts+0x1f4>
    1cce:	0b c0       	rjmp	.+22     	; 0x1ce6 <_fpadd_parts+0x242>
    1cd0:	91 83       	std	Z+1, r25	; 0x01
    1cd2:	33 82       	std	Z+3, r3	; 0x03
    1cd4:	22 82       	std	Z+2, r2	; 0x02
    1cd6:	ea 0c       	add	r14, r10
    1cd8:	fb 1c       	adc	r15, r11
    1cda:	0c 1d       	adc	r16, r12
    1cdc:	1d 1d       	adc	r17, r13
    1cde:	e4 82       	std	Z+4, r14	; 0x04
    1ce0:	f5 82       	std	Z+5, r15	; 0x05
    1ce2:	06 83       	std	Z+6, r16	; 0x06
    1ce4:	17 83       	std	Z+7, r17	; 0x07
    1ce6:	83 e0       	ldi	r24, 0x03	; 3
    1ce8:	80 83       	st	Z, r24
    1cea:	24 81       	ldd	r18, Z+4	; 0x04
    1cec:	35 81       	ldd	r19, Z+5	; 0x05
    1cee:	46 81       	ldd	r20, Z+6	; 0x06
    1cf0:	57 81       	ldd	r21, Z+7	; 0x07
    1cf2:	57 ff       	sbrs	r21, 7
    1cf4:	1a c0       	rjmp	.+52     	; 0x1d2a <_fpadd_parts+0x286>
    1cf6:	c9 01       	movw	r24, r18
    1cf8:	aa 27       	eor	r26, r26
    1cfa:	97 fd       	sbrc	r25, 7
    1cfc:	a0 95       	com	r26
    1cfe:	ba 2f       	mov	r27, r26
    1d00:	81 70       	andi	r24, 0x01	; 1
    1d02:	90 70       	andi	r25, 0x00	; 0
    1d04:	a0 70       	andi	r26, 0x00	; 0
    1d06:	b0 70       	andi	r27, 0x00	; 0
    1d08:	56 95       	lsr	r21
    1d0a:	47 95       	ror	r20
    1d0c:	37 95       	ror	r19
    1d0e:	27 95       	ror	r18
    1d10:	82 2b       	or	r24, r18
    1d12:	93 2b       	or	r25, r19
    1d14:	a4 2b       	or	r26, r20
    1d16:	b5 2b       	or	r27, r21
    1d18:	84 83       	std	Z+4, r24	; 0x04
    1d1a:	95 83       	std	Z+5, r25	; 0x05
    1d1c:	a6 83       	std	Z+6, r26	; 0x06
    1d1e:	b7 83       	std	Z+7, r27	; 0x07
    1d20:	82 81       	ldd	r24, Z+2	; 0x02
    1d22:	93 81       	ldd	r25, Z+3	; 0x03
    1d24:	01 96       	adiw	r24, 0x01	; 1
    1d26:	93 83       	std	Z+3, r25	; 0x03
    1d28:	82 83       	std	Z+2, r24	; 0x02
    1d2a:	df 01       	movw	r26, r30
    1d2c:	01 c0       	rjmp	.+2      	; 0x1d30 <_fpadd_parts+0x28c>
    1d2e:	d2 01       	movw	r26, r4
    1d30:	cd 01       	movw	r24, r26
    1d32:	cd b7       	in	r28, 0x3d	; 61
    1d34:	de b7       	in	r29, 0x3e	; 62
    1d36:	e2 e1       	ldi	r30, 0x12	; 18
    1d38:	0c 94 4f 20 	jmp	0x409e	; 0x409e <__epilogue_restores__>

00001d3c <__subsf3>:
    1d3c:	a0 e2       	ldi	r26, 0x20	; 32
    1d3e:	b0 e0       	ldi	r27, 0x00	; 0
    1d40:	e4 ea       	ldi	r30, 0xA4	; 164
    1d42:	fe e0       	ldi	r31, 0x0E	; 14
    1d44:	0c 94 3f 20 	jmp	0x407e	; 0x407e <__prologue_saves__+0x18>
    1d48:	69 83       	std	Y+1, r22	; 0x01
    1d4a:	7a 83       	std	Y+2, r23	; 0x02
    1d4c:	8b 83       	std	Y+3, r24	; 0x03
    1d4e:	9c 83       	std	Y+4, r25	; 0x04
    1d50:	2d 83       	std	Y+5, r18	; 0x05
    1d52:	3e 83       	std	Y+6, r19	; 0x06
    1d54:	4f 83       	std	Y+7, r20	; 0x07
    1d56:	58 87       	std	Y+8, r21	; 0x08
    1d58:	e9 e0       	ldi	r30, 0x09	; 9
    1d5a:	ee 2e       	mov	r14, r30
    1d5c:	f1 2c       	mov	r15, r1
    1d5e:	ec 0e       	add	r14, r28
    1d60:	fd 1e       	adc	r15, r29
    1d62:	ce 01       	movw	r24, r28
    1d64:	01 96       	adiw	r24, 0x01	; 1
    1d66:	b7 01       	movw	r22, r14
    1d68:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    1d6c:	8e 01       	movw	r16, r28
    1d6e:	0f 5e       	subi	r16, 0xEF	; 239
    1d70:	1f 4f       	sbci	r17, 0xFF	; 255
    1d72:	ce 01       	movw	r24, r28
    1d74:	05 96       	adiw	r24, 0x05	; 5
    1d76:	b8 01       	movw	r22, r16
    1d78:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    1d7c:	8a 89       	ldd	r24, Y+18	; 0x12
    1d7e:	91 e0       	ldi	r25, 0x01	; 1
    1d80:	89 27       	eor	r24, r25
    1d82:	8a 8b       	std	Y+18, r24	; 0x12
    1d84:	c7 01       	movw	r24, r14
    1d86:	b8 01       	movw	r22, r16
    1d88:	ae 01       	movw	r20, r28
    1d8a:	47 5e       	subi	r20, 0xE7	; 231
    1d8c:	5f 4f       	sbci	r21, 0xFF	; 255
    1d8e:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <_fpadd_parts>
    1d92:	0e 94 da 10 	call	0x21b4	; 0x21b4 <__pack_f>
    1d96:	a0 96       	adiw	r28, 0x20	; 32
    1d98:	e6 e0       	ldi	r30, 0x06	; 6
    1d9a:	0c 94 5b 20 	jmp	0x40b6	; 0x40b6 <__epilogue_restores__+0x18>

00001d9e <__addsf3>:
    1d9e:	a0 e2       	ldi	r26, 0x20	; 32
    1da0:	b0 e0       	ldi	r27, 0x00	; 0
    1da2:	e5 ed       	ldi	r30, 0xD5	; 213
    1da4:	fe e0       	ldi	r31, 0x0E	; 14
    1da6:	0c 94 3f 20 	jmp	0x407e	; 0x407e <__prologue_saves__+0x18>
    1daa:	69 83       	std	Y+1, r22	; 0x01
    1dac:	7a 83       	std	Y+2, r23	; 0x02
    1dae:	8b 83       	std	Y+3, r24	; 0x03
    1db0:	9c 83       	std	Y+4, r25	; 0x04
    1db2:	2d 83       	std	Y+5, r18	; 0x05
    1db4:	3e 83       	std	Y+6, r19	; 0x06
    1db6:	4f 83       	std	Y+7, r20	; 0x07
    1db8:	58 87       	std	Y+8, r21	; 0x08
    1dba:	f9 e0       	ldi	r31, 0x09	; 9
    1dbc:	ef 2e       	mov	r14, r31
    1dbe:	f1 2c       	mov	r15, r1
    1dc0:	ec 0e       	add	r14, r28
    1dc2:	fd 1e       	adc	r15, r29
    1dc4:	ce 01       	movw	r24, r28
    1dc6:	01 96       	adiw	r24, 0x01	; 1
    1dc8:	b7 01       	movw	r22, r14
    1dca:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    1dce:	8e 01       	movw	r16, r28
    1dd0:	0f 5e       	subi	r16, 0xEF	; 239
    1dd2:	1f 4f       	sbci	r17, 0xFF	; 255
    1dd4:	ce 01       	movw	r24, r28
    1dd6:	05 96       	adiw	r24, 0x05	; 5
    1dd8:	b8 01       	movw	r22, r16
    1dda:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    1dde:	c7 01       	movw	r24, r14
    1de0:	b8 01       	movw	r22, r16
    1de2:	ae 01       	movw	r20, r28
    1de4:	47 5e       	subi	r20, 0xE7	; 231
    1de6:	5f 4f       	sbci	r21, 0xFF	; 255
    1de8:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <_fpadd_parts>
    1dec:	0e 94 da 10 	call	0x21b4	; 0x21b4 <__pack_f>
    1df0:	a0 96       	adiw	r28, 0x20	; 32
    1df2:	e6 e0       	ldi	r30, 0x06	; 6
    1df4:	0c 94 5b 20 	jmp	0x40b6	; 0x40b6 <__epilogue_restores__+0x18>

00001df8 <__mulsf3>:
    1df8:	a0 e2       	ldi	r26, 0x20	; 32
    1dfa:	b0 e0       	ldi	r27, 0x00	; 0
    1dfc:	e2 e0       	ldi	r30, 0x02	; 2
    1dfe:	ff e0       	ldi	r31, 0x0F	; 15
    1e00:	0c 94 33 20 	jmp	0x4066	; 0x4066 <__prologue_saves__>
    1e04:	69 83       	std	Y+1, r22	; 0x01
    1e06:	7a 83       	std	Y+2, r23	; 0x02
    1e08:	8b 83       	std	Y+3, r24	; 0x03
    1e0a:	9c 83       	std	Y+4, r25	; 0x04
    1e0c:	2d 83       	std	Y+5, r18	; 0x05
    1e0e:	3e 83       	std	Y+6, r19	; 0x06
    1e10:	4f 83       	std	Y+7, r20	; 0x07
    1e12:	58 87       	std	Y+8, r21	; 0x08
    1e14:	ce 01       	movw	r24, r28
    1e16:	01 96       	adiw	r24, 0x01	; 1
    1e18:	be 01       	movw	r22, r28
    1e1a:	67 5f       	subi	r22, 0xF7	; 247
    1e1c:	7f 4f       	sbci	r23, 0xFF	; 255
    1e1e:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    1e22:	ce 01       	movw	r24, r28
    1e24:	05 96       	adiw	r24, 0x05	; 5
    1e26:	be 01       	movw	r22, r28
    1e28:	6f 5e       	subi	r22, 0xEF	; 239
    1e2a:	7f 4f       	sbci	r23, 0xFF	; 255
    1e2c:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    1e30:	99 85       	ldd	r25, Y+9	; 0x09
    1e32:	92 30       	cpi	r25, 0x02	; 2
    1e34:	88 f0       	brcs	.+34     	; 0x1e58 <__mulsf3+0x60>
    1e36:	89 89       	ldd	r24, Y+17	; 0x11
    1e38:	82 30       	cpi	r24, 0x02	; 2
    1e3a:	c8 f0       	brcs	.+50     	; 0x1e6e <__mulsf3+0x76>
    1e3c:	94 30       	cpi	r25, 0x04	; 4
    1e3e:	19 f4       	brne	.+6      	; 0x1e46 <__mulsf3+0x4e>
    1e40:	82 30       	cpi	r24, 0x02	; 2
    1e42:	51 f4       	brne	.+20     	; 0x1e58 <__mulsf3+0x60>
    1e44:	04 c0       	rjmp	.+8      	; 0x1e4e <__mulsf3+0x56>
    1e46:	84 30       	cpi	r24, 0x04	; 4
    1e48:	29 f4       	brne	.+10     	; 0x1e54 <__mulsf3+0x5c>
    1e4a:	92 30       	cpi	r25, 0x02	; 2
    1e4c:	81 f4       	brne	.+32     	; 0x1e6e <__mulsf3+0x76>
    1e4e:	83 e6       	ldi	r24, 0x63	; 99
    1e50:	90 e0       	ldi	r25, 0x00	; 0
    1e52:	c6 c0       	rjmp	.+396    	; 0x1fe0 <__mulsf3+0x1e8>
    1e54:	92 30       	cpi	r25, 0x02	; 2
    1e56:	49 f4       	brne	.+18     	; 0x1e6a <__mulsf3+0x72>
    1e58:	20 e0       	ldi	r18, 0x00	; 0
    1e5a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e5c:	8a 89       	ldd	r24, Y+18	; 0x12
    1e5e:	98 13       	cpse	r25, r24
    1e60:	21 e0       	ldi	r18, 0x01	; 1
    1e62:	2a 87       	std	Y+10, r18	; 0x0a
    1e64:	ce 01       	movw	r24, r28
    1e66:	09 96       	adiw	r24, 0x09	; 9
    1e68:	bb c0       	rjmp	.+374    	; 0x1fe0 <__mulsf3+0x1e8>
    1e6a:	82 30       	cpi	r24, 0x02	; 2
    1e6c:	49 f4       	brne	.+18     	; 0x1e80 <__mulsf3+0x88>
    1e6e:	20 e0       	ldi	r18, 0x00	; 0
    1e70:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e72:	8a 89       	ldd	r24, Y+18	; 0x12
    1e74:	98 13       	cpse	r25, r24
    1e76:	21 e0       	ldi	r18, 0x01	; 1
    1e78:	2a 8b       	std	Y+18, r18	; 0x12
    1e7a:	ce 01       	movw	r24, r28
    1e7c:	41 96       	adiw	r24, 0x11	; 17
    1e7e:	b0 c0       	rjmp	.+352    	; 0x1fe0 <__mulsf3+0x1e8>
    1e80:	2d 84       	ldd	r2, Y+13	; 0x0d
    1e82:	3e 84       	ldd	r3, Y+14	; 0x0e
    1e84:	4f 84       	ldd	r4, Y+15	; 0x0f
    1e86:	58 88       	ldd	r5, Y+16	; 0x10
    1e88:	6d 88       	ldd	r6, Y+21	; 0x15
    1e8a:	7e 88       	ldd	r7, Y+22	; 0x16
    1e8c:	8f 88       	ldd	r8, Y+23	; 0x17
    1e8e:	98 8c       	ldd	r9, Y+24	; 0x18
    1e90:	ee 24       	eor	r14, r14
    1e92:	ff 24       	eor	r15, r15
    1e94:	87 01       	movw	r16, r14
    1e96:	aa 24       	eor	r10, r10
    1e98:	bb 24       	eor	r11, r11
    1e9a:	65 01       	movw	r12, r10
    1e9c:	40 e0       	ldi	r20, 0x00	; 0
    1e9e:	50 e0       	ldi	r21, 0x00	; 0
    1ea0:	60 e0       	ldi	r22, 0x00	; 0
    1ea2:	70 e0       	ldi	r23, 0x00	; 0
    1ea4:	e0 e0       	ldi	r30, 0x00	; 0
    1ea6:	f0 e0       	ldi	r31, 0x00	; 0
    1ea8:	c1 01       	movw	r24, r2
    1eaa:	81 70       	andi	r24, 0x01	; 1
    1eac:	90 70       	andi	r25, 0x00	; 0
    1eae:	89 2b       	or	r24, r25
    1eb0:	e9 f0       	breq	.+58     	; 0x1eec <__mulsf3+0xf4>
    1eb2:	e6 0c       	add	r14, r6
    1eb4:	f7 1c       	adc	r15, r7
    1eb6:	08 1d       	adc	r16, r8
    1eb8:	19 1d       	adc	r17, r9
    1eba:	9a 01       	movw	r18, r20
    1ebc:	ab 01       	movw	r20, r22
    1ebe:	2a 0d       	add	r18, r10
    1ec0:	3b 1d       	adc	r19, r11
    1ec2:	4c 1d       	adc	r20, r12
    1ec4:	5d 1d       	adc	r21, r13
    1ec6:	80 e0       	ldi	r24, 0x00	; 0
    1ec8:	90 e0       	ldi	r25, 0x00	; 0
    1eca:	a0 e0       	ldi	r26, 0x00	; 0
    1ecc:	b0 e0       	ldi	r27, 0x00	; 0
    1ece:	e6 14       	cp	r14, r6
    1ed0:	f7 04       	cpc	r15, r7
    1ed2:	08 05       	cpc	r16, r8
    1ed4:	19 05       	cpc	r17, r9
    1ed6:	20 f4       	brcc	.+8      	; 0x1ee0 <__mulsf3+0xe8>
    1ed8:	81 e0       	ldi	r24, 0x01	; 1
    1eda:	90 e0       	ldi	r25, 0x00	; 0
    1edc:	a0 e0       	ldi	r26, 0x00	; 0
    1ede:	b0 e0       	ldi	r27, 0x00	; 0
    1ee0:	ba 01       	movw	r22, r20
    1ee2:	a9 01       	movw	r20, r18
    1ee4:	48 0f       	add	r20, r24
    1ee6:	59 1f       	adc	r21, r25
    1ee8:	6a 1f       	adc	r22, r26
    1eea:	7b 1f       	adc	r23, r27
    1eec:	aa 0c       	add	r10, r10
    1eee:	bb 1c       	adc	r11, r11
    1ef0:	cc 1c       	adc	r12, r12
    1ef2:	dd 1c       	adc	r13, r13
    1ef4:	97 fe       	sbrs	r9, 7
    1ef6:	08 c0       	rjmp	.+16     	; 0x1f08 <__mulsf3+0x110>
    1ef8:	81 e0       	ldi	r24, 0x01	; 1
    1efa:	90 e0       	ldi	r25, 0x00	; 0
    1efc:	a0 e0       	ldi	r26, 0x00	; 0
    1efe:	b0 e0       	ldi	r27, 0x00	; 0
    1f00:	a8 2a       	or	r10, r24
    1f02:	b9 2a       	or	r11, r25
    1f04:	ca 2a       	or	r12, r26
    1f06:	db 2a       	or	r13, r27
    1f08:	31 96       	adiw	r30, 0x01	; 1
    1f0a:	e0 32       	cpi	r30, 0x20	; 32
    1f0c:	f1 05       	cpc	r31, r1
    1f0e:	49 f0       	breq	.+18     	; 0x1f22 <__mulsf3+0x12a>
    1f10:	66 0c       	add	r6, r6
    1f12:	77 1c       	adc	r7, r7
    1f14:	88 1c       	adc	r8, r8
    1f16:	99 1c       	adc	r9, r9
    1f18:	56 94       	lsr	r5
    1f1a:	47 94       	ror	r4
    1f1c:	37 94       	ror	r3
    1f1e:	27 94       	ror	r2
    1f20:	c3 cf       	rjmp	.-122    	; 0x1ea8 <__mulsf3+0xb0>
    1f22:	fa 85       	ldd	r31, Y+10	; 0x0a
    1f24:	ea 89       	ldd	r30, Y+18	; 0x12
    1f26:	2b 89       	ldd	r18, Y+19	; 0x13
    1f28:	3c 89       	ldd	r19, Y+20	; 0x14
    1f2a:	8b 85       	ldd	r24, Y+11	; 0x0b
    1f2c:	9c 85       	ldd	r25, Y+12	; 0x0c
    1f2e:	28 0f       	add	r18, r24
    1f30:	39 1f       	adc	r19, r25
    1f32:	2e 5f       	subi	r18, 0xFE	; 254
    1f34:	3f 4f       	sbci	r19, 0xFF	; 255
    1f36:	17 c0       	rjmp	.+46     	; 0x1f66 <__mulsf3+0x16e>
    1f38:	ca 01       	movw	r24, r20
    1f3a:	81 70       	andi	r24, 0x01	; 1
    1f3c:	90 70       	andi	r25, 0x00	; 0
    1f3e:	89 2b       	or	r24, r25
    1f40:	61 f0       	breq	.+24     	; 0x1f5a <__mulsf3+0x162>
    1f42:	16 95       	lsr	r17
    1f44:	07 95       	ror	r16
    1f46:	f7 94       	ror	r15
    1f48:	e7 94       	ror	r14
    1f4a:	80 e0       	ldi	r24, 0x00	; 0
    1f4c:	90 e0       	ldi	r25, 0x00	; 0
    1f4e:	a0 e0       	ldi	r26, 0x00	; 0
    1f50:	b0 e8       	ldi	r27, 0x80	; 128
    1f52:	e8 2a       	or	r14, r24
    1f54:	f9 2a       	or	r15, r25
    1f56:	0a 2b       	or	r16, r26
    1f58:	1b 2b       	or	r17, r27
    1f5a:	76 95       	lsr	r23
    1f5c:	67 95       	ror	r22
    1f5e:	57 95       	ror	r21
    1f60:	47 95       	ror	r20
    1f62:	2f 5f       	subi	r18, 0xFF	; 255
    1f64:	3f 4f       	sbci	r19, 0xFF	; 255
    1f66:	77 fd       	sbrc	r23, 7
    1f68:	e7 cf       	rjmp	.-50     	; 0x1f38 <__mulsf3+0x140>
    1f6a:	0c c0       	rjmp	.+24     	; 0x1f84 <__mulsf3+0x18c>
    1f6c:	44 0f       	add	r20, r20
    1f6e:	55 1f       	adc	r21, r21
    1f70:	66 1f       	adc	r22, r22
    1f72:	77 1f       	adc	r23, r23
    1f74:	17 fd       	sbrc	r17, 7
    1f76:	41 60       	ori	r20, 0x01	; 1
    1f78:	ee 0c       	add	r14, r14
    1f7a:	ff 1c       	adc	r15, r15
    1f7c:	00 1f       	adc	r16, r16
    1f7e:	11 1f       	adc	r17, r17
    1f80:	21 50       	subi	r18, 0x01	; 1
    1f82:	30 40       	sbci	r19, 0x00	; 0
    1f84:	40 30       	cpi	r20, 0x00	; 0
    1f86:	90 e0       	ldi	r25, 0x00	; 0
    1f88:	59 07       	cpc	r21, r25
    1f8a:	90 e0       	ldi	r25, 0x00	; 0
    1f8c:	69 07       	cpc	r22, r25
    1f8e:	90 e4       	ldi	r25, 0x40	; 64
    1f90:	79 07       	cpc	r23, r25
    1f92:	60 f3       	brcs	.-40     	; 0x1f6c <__mulsf3+0x174>
    1f94:	2b 8f       	std	Y+27, r18	; 0x1b
    1f96:	3c 8f       	std	Y+28, r19	; 0x1c
    1f98:	db 01       	movw	r26, r22
    1f9a:	ca 01       	movw	r24, r20
    1f9c:	8f 77       	andi	r24, 0x7F	; 127
    1f9e:	90 70       	andi	r25, 0x00	; 0
    1fa0:	a0 70       	andi	r26, 0x00	; 0
    1fa2:	b0 70       	andi	r27, 0x00	; 0
    1fa4:	80 34       	cpi	r24, 0x40	; 64
    1fa6:	91 05       	cpc	r25, r1
    1fa8:	a1 05       	cpc	r26, r1
    1faa:	b1 05       	cpc	r27, r1
    1fac:	61 f4       	brne	.+24     	; 0x1fc6 <__mulsf3+0x1ce>
    1fae:	47 fd       	sbrc	r20, 7
    1fb0:	0a c0       	rjmp	.+20     	; 0x1fc6 <__mulsf3+0x1ce>
    1fb2:	e1 14       	cp	r14, r1
    1fb4:	f1 04       	cpc	r15, r1
    1fb6:	01 05       	cpc	r16, r1
    1fb8:	11 05       	cpc	r17, r1
    1fba:	29 f0       	breq	.+10     	; 0x1fc6 <__mulsf3+0x1ce>
    1fbc:	40 5c       	subi	r20, 0xC0	; 192
    1fbe:	5f 4f       	sbci	r21, 0xFF	; 255
    1fc0:	6f 4f       	sbci	r22, 0xFF	; 255
    1fc2:	7f 4f       	sbci	r23, 0xFF	; 255
    1fc4:	40 78       	andi	r20, 0x80	; 128
    1fc6:	1a 8e       	std	Y+26, r1	; 0x1a
    1fc8:	fe 17       	cp	r31, r30
    1fca:	11 f0       	breq	.+4      	; 0x1fd0 <__mulsf3+0x1d8>
    1fcc:	81 e0       	ldi	r24, 0x01	; 1
    1fce:	8a 8f       	std	Y+26, r24	; 0x1a
    1fd0:	4d 8f       	std	Y+29, r20	; 0x1d
    1fd2:	5e 8f       	std	Y+30, r21	; 0x1e
    1fd4:	6f 8f       	std	Y+31, r22	; 0x1f
    1fd6:	78 a3       	std	Y+32, r23	; 0x20
    1fd8:	83 e0       	ldi	r24, 0x03	; 3
    1fda:	89 8f       	std	Y+25, r24	; 0x19
    1fdc:	ce 01       	movw	r24, r28
    1fde:	49 96       	adiw	r24, 0x19	; 25
    1fe0:	0e 94 da 10 	call	0x21b4	; 0x21b4 <__pack_f>
    1fe4:	a0 96       	adiw	r28, 0x20	; 32
    1fe6:	e2 e1       	ldi	r30, 0x12	; 18
    1fe8:	0c 94 4f 20 	jmp	0x409e	; 0x409e <__epilogue_restores__>

00001fec <__gtsf2>:
    1fec:	a8 e1       	ldi	r26, 0x18	; 24
    1fee:	b0 e0       	ldi	r27, 0x00	; 0
    1ff0:	ec ef       	ldi	r30, 0xFC	; 252
    1ff2:	ff e0       	ldi	r31, 0x0F	; 15
    1ff4:	0c 94 3f 20 	jmp	0x407e	; 0x407e <__prologue_saves__+0x18>
    1ff8:	69 83       	std	Y+1, r22	; 0x01
    1ffa:	7a 83       	std	Y+2, r23	; 0x02
    1ffc:	8b 83       	std	Y+3, r24	; 0x03
    1ffe:	9c 83       	std	Y+4, r25	; 0x04
    2000:	2d 83       	std	Y+5, r18	; 0x05
    2002:	3e 83       	std	Y+6, r19	; 0x06
    2004:	4f 83       	std	Y+7, r20	; 0x07
    2006:	58 87       	std	Y+8, r21	; 0x08
    2008:	89 e0       	ldi	r24, 0x09	; 9
    200a:	e8 2e       	mov	r14, r24
    200c:	f1 2c       	mov	r15, r1
    200e:	ec 0e       	add	r14, r28
    2010:	fd 1e       	adc	r15, r29
    2012:	ce 01       	movw	r24, r28
    2014:	01 96       	adiw	r24, 0x01	; 1
    2016:	b7 01       	movw	r22, r14
    2018:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    201c:	8e 01       	movw	r16, r28
    201e:	0f 5e       	subi	r16, 0xEF	; 239
    2020:	1f 4f       	sbci	r17, 0xFF	; 255
    2022:	ce 01       	movw	r24, r28
    2024:	05 96       	adiw	r24, 0x05	; 5
    2026:	b8 01       	movw	r22, r16
    2028:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    202c:	89 85       	ldd	r24, Y+9	; 0x09
    202e:	82 30       	cpi	r24, 0x02	; 2
    2030:	40 f0       	brcs	.+16     	; 0x2042 <__gtsf2+0x56>
    2032:	89 89       	ldd	r24, Y+17	; 0x11
    2034:	82 30       	cpi	r24, 0x02	; 2
    2036:	28 f0       	brcs	.+10     	; 0x2042 <__gtsf2+0x56>
    2038:	c7 01       	movw	r24, r14
    203a:	b8 01       	movw	r22, r16
    203c:	0e 94 27 12 	call	0x244e	; 0x244e <__fpcmp_parts_f>
    2040:	01 c0       	rjmp	.+2      	; 0x2044 <__gtsf2+0x58>
    2042:	8f ef       	ldi	r24, 0xFF	; 255
    2044:	68 96       	adiw	r28, 0x18	; 24
    2046:	e6 e0       	ldi	r30, 0x06	; 6
    2048:	0c 94 5b 20 	jmp	0x40b6	; 0x40b6 <__epilogue_restores__+0x18>

0000204c <__gesf2>:
    204c:	a8 e1       	ldi	r26, 0x18	; 24
    204e:	b0 e0       	ldi	r27, 0x00	; 0
    2050:	ec e2       	ldi	r30, 0x2C	; 44
    2052:	f0 e1       	ldi	r31, 0x10	; 16
    2054:	0c 94 3f 20 	jmp	0x407e	; 0x407e <__prologue_saves__+0x18>
    2058:	69 83       	std	Y+1, r22	; 0x01
    205a:	7a 83       	std	Y+2, r23	; 0x02
    205c:	8b 83       	std	Y+3, r24	; 0x03
    205e:	9c 83       	std	Y+4, r25	; 0x04
    2060:	2d 83       	std	Y+5, r18	; 0x05
    2062:	3e 83       	std	Y+6, r19	; 0x06
    2064:	4f 83       	std	Y+7, r20	; 0x07
    2066:	58 87       	std	Y+8, r21	; 0x08
    2068:	89 e0       	ldi	r24, 0x09	; 9
    206a:	e8 2e       	mov	r14, r24
    206c:	f1 2c       	mov	r15, r1
    206e:	ec 0e       	add	r14, r28
    2070:	fd 1e       	adc	r15, r29
    2072:	ce 01       	movw	r24, r28
    2074:	01 96       	adiw	r24, 0x01	; 1
    2076:	b7 01       	movw	r22, r14
    2078:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    207c:	8e 01       	movw	r16, r28
    207e:	0f 5e       	subi	r16, 0xEF	; 239
    2080:	1f 4f       	sbci	r17, 0xFF	; 255
    2082:	ce 01       	movw	r24, r28
    2084:	05 96       	adiw	r24, 0x05	; 5
    2086:	b8 01       	movw	r22, r16
    2088:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    208c:	89 85       	ldd	r24, Y+9	; 0x09
    208e:	82 30       	cpi	r24, 0x02	; 2
    2090:	40 f0       	brcs	.+16     	; 0x20a2 <__gesf2+0x56>
    2092:	89 89       	ldd	r24, Y+17	; 0x11
    2094:	82 30       	cpi	r24, 0x02	; 2
    2096:	28 f0       	brcs	.+10     	; 0x20a2 <__gesf2+0x56>
    2098:	c7 01       	movw	r24, r14
    209a:	b8 01       	movw	r22, r16
    209c:	0e 94 27 12 	call	0x244e	; 0x244e <__fpcmp_parts_f>
    20a0:	01 c0       	rjmp	.+2      	; 0x20a4 <__gesf2+0x58>
    20a2:	8f ef       	ldi	r24, 0xFF	; 255
    20a4:	68 96       	adiw	r28, 0x18	; 24
    20a6:	e6 e0       	ldi	r30, 0x06	; 6
    20a8:	0c 94 5b 20 	jmp	0x40b6	; 0x40b6 <__epilogue_restores__+0x18>

000020ac <__ltsf2>:
    20ac:	a8 e1       	ldi	r26, 0x18	; 24
    20ae:	b0 e0       	ldi	r27, 0x00	; 0
    20b0:	ec e5       	ldi	r30, 0x5C	; 92
    20b2:	f0 e1       	ldi	r31, 0x10	; 16
    20b4:	0c 94 3f 20 	jmp	0x407e	; 0x407e <__prologue_saves__+0x18>
    20b8:	69 83       	std	Y+1, r22	; 0x01
    20ba:	7a 83       	std	Y+2, r23	; 0x02
    20bc:	8b 83       	std	Y+3, r24	; 0x03
    20be:	9c 83       	std	Y+4, r25	; 0x04
    20c0:	2d 83       	std	Y+5, r18	; 0x05
    20c2:	3e 83       	std	Y+6, r19	; 0x06
    20c4:	4f 83       	std	Y+7, r20	; 0x07
    20c6:	58 87       	std	Y+8, r21	; 0x08
    20c8:	89 e0       	ldi	r24, 0x09	; 9
    20ca:	e8 2e       	mov	r14, r24
    20cc:	f1 2c       	mov	r15, r1
    20ce:	ec 0e       	add	r14, r28
    20d0:	fd 1e       	adc	r15, r29
    20d2:	ce 01       	movw	r24, r28
    20d4:	01 96       	adiw	r24, 0x01	; 1
    20d6:	b7 01       	movw	r22, r14
    20d8:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    20dc:	8e 01       	movw	r16, r28
    20de:	0f 5e       	subi	r16, 0xEF	; 239
    20e0:	1f 4f       	sbci	r17, 0xFF	; 255
    20e2:	ce 01       	movw	r24, r28
    20e4:	05 96       	adiw	r24, 0x05	; 5
    20e6:	b8 01       	movw	r22, r16
    20e8:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    20ec:	89 85       	ldd	r24, Y+9	; 0x09
    20ee:	82 30       	cpi	r24, 0x02	; 2
    20f0:	40 f0       	brcs	.+16     	; 0x2102 <__ltsf2+0x56>
    20f2:	89 89       	ldd	r24, Y+17	; 0x11
    20f4:	82 30       	cpi	r24, 0x02	; 2
    20f6:	28 f0       	brcs	.+10     	; 0x2102 <__ltsf2+0x56>
    20f8:	c7 01       	movw	r24, r14
    20fa:	b8 01       	movw	r22, r16
    20fc:	0e 94 27 12 	call	0x244e	; 0x244e <__fpcmp_parts_f>
    2100:	01 c0       	rjmp	.+2      	; 0x2104 <__ltsf2+0x58>
    2102:	81 e0       	ldi	r24, 0x01	; 1
    2104:	68 96       	adiw	r28, 0x18	; 24
    2106:	e6 e0       	ldi	r30, 0x06	; 6
    2108:	0c 94 5b 20 	jmp	0x40b6	; 0x40b6 <__epilogue_restores__+0x18>

0000210c <__fixsfsi>:
    210c:	ac e0       	ldi	r26, 0x0C	; 12
    210e:	b0 e0       	ldi	r27, 0x00	; 0
    2110:	ec e8       	ldi	r30, 0x8C	; 140
    2112:	f0 e1       	ldi	r31, 0x10	; 16
    2114:	0c 94 43 20 	jmp	0x4086	; 0x4086 <__prologue_saves__+0x20>
    2118:	69 83       	std	Y+1, r22	; 0x01
    211a:	7a 83       	std	Y+2, r23	; 0x02
    211c:	8b 83       	std	Y+3, r24	; 0x03
    211e:	9c 83       	std	Y+4, r25	; 0x04
    2120:	ce 01       	movw	r24, r28
    2122:	01 96       	adiw	r24, 0x01	; 1
    2124:	be 01       	movw	r22, r28
    2126:	6b 5f       	subi	r22, 0xFB	; 251
    2128:	7f 4f       	sbci	r23, 0xFF	; 255
    212a:	0e 94 af 11 	call	0x235e	; 0x235e <__unpack_f>
    212e:	8d 81       	ldd	r24, Y+5	; 0x05
    2130:	82 30       	cpi	r24, 0x02	; 2
    2132:	61 f1       	breq	.+88     	; 0x218c <__fixsfsi+0x80>
    2134:	82 30       	cpi	r24, 0x02	; 2
    2136:	50 f1       	brcs	.+84     	; 0x218c <__fixsfsi+0x80>
    2138:	84 30       	cpi	r24, 0x04	; 4
    213a:	21 f4       	brne	.+8      	; 0x2144 <__fixsfsi+0x38>
    213c:	8e 81       	ldd	r24, Y+6	; 0x06
    213e:	88 23       	and	r24, r24
    2140:	51 f1       	breq	.+84     	; 0x2196 <__fixsfsi+0x8a>
    2142:	2e c0       	rjmp	.+92     	; 0x21a0 <__fixsfsi+0x94>
    2144:	2f 81       	ldd	r18, Y+7	; 0x07
    2146:	38 85       	ldd	r19, Y+8	; 0x08
    2148:	37 fd       	sbrc	r19, 7
    214a:	20 c0       	rjmp	.+64     	; 0x218c <__fixsfsi+0x80>
    214c:	6e 81       	ldd	r22, Y+6	; 0x06
    214e:	2f 31       	cpi	r18, 0x1F	; 31
    2150:	31 05       	cpc	r19, r1
    2152:	1c f0       	brlt	.+6      	; 0x215a <__fixsfsi+0x4e>
    2154:	66 23       	and	r22, r22
    2156:	f9 f0       	breq	.+62     	; 0x2196 <__fixsfsi+0x8a>
    2158:	23 c0       	rjmp	.+70     	; 0x21a0 <__fixsfsi+0x94>
    215a:	8e e1       	ldi	r24, 0x1E	; 30
    215c:	90 e0       	ldi	r25, 0x00	; 0
    215e:	82 1b       	sub	r24, r18
    2160:	93 0b       	sbc	r25, r19
    2162:	29 85       	ldd	r18, Y+9	; 0x09
    2164:	3a 85       	ldd	r19, Y+10	; 0x0a
    2166:	4b 85       	ldd	r20, Y+11	; 0x0b
    2168:	5c 85       	ldd	r21, Y+12	; 0x0c
    216a:	04 c0       	rjmp	.+8      	; 0x2174 <__fixsfsi+0x68>
    216c:	56 95       	lsr	r21
    216e:	47 95       	ror	r20
    2170:	37 95       	ror	r19
    2172:	27 95       	ror	r18
    2174:	8a 95       	dec	r24
    2176:	d2 f7       	brpl	.-12     	; 0x216c <__fixsfsi+0x60>
    2178:	66 23       	and	r22, r22
    217a:	b1 f0       	breq	.+44     	; 0x21a8 <__fixsfsi+0x9c>
    217c:	50 95       	com	r21
    217e:	40 95       	com	r20
    2180:	30 95       	com	r19
    2182:	21 95       	neg	r18
    2184:	3f 4f       	sbci	r19, 0xFF	; 255
    2186:	4f 4f       	sbci	r20, 0xFF	; 255
    2188:	5f 4f       	sbci	r21, 0xFF	; 255
    218a:	0e c0       	rjmp	.+28     	; 0x21a8 <__fixsfsi+0x9c>
    218c:	20 e0       	ldi	r18, 0x00	; 0
    218e:	30 e0       	ldi	r19, 0x00	; 0
    2190:	40 e0       	ldi	r20, 0x00	; 0
    2192:	50 e0       	ldi	r21, 0x00	; 0
    2194:	09 c0       	rjmp	.+18     	; 0x21a8 <__fixsfsi+0x9c>
    2196:	2f ef       	ldi	r18, 0xFF	; 255
    2198:	3f ef       	ldi	r19, 0xFF	; 255
    219a:	4f ef       	ldi	r20, 0xFF	; 255
    219c:	5f e7       	ldi	r21, 0x7F	; 127
    219e:	04 c0       	rjmp	.+8      	; 0x21a8 <__fixsfsi+0x9c>
    21a0:	20 e0       	ldi	r18, 0x00	; 0
    21a2:	30 e0       	ldi	r19, 0x00	; 0
    21a4:	40 e0       	ldi	r20, 0x00	; 0
    21a6:	50 e8       	ldi	r21, 0x80	; 128
    21a8:	b9 01       	movw	r22, r18
    21aa:	ca 01       	movw	r24, r20
    21ac:	2c 96       	adiw	r28, 0x0c	; 12
    21ae:	e2 e0       	ldi	r30, 0x02	; 2
    21b0:	0c 94 5f 20 	jmp	0x40be	; 0x40be <__epilogue_restores__+0x20>

000021b4 <__pack_f>:
    21b4:	df 92       	push	r13
    21b6:	ef 92       	push	r14
    21b8:	ff 92       	push	r15
    21ba:	0f 93       	push	r16
    21bc:	1f 93       	push	r17
    21be:	fc 01       	movw	r30, r24
    21c0:	e4 80       	ldd	r14, Z+4	; 0x04
    21c2:	f5 80       	ldd	r15, Z+5	; 0x05
    21c4:	06 81       	ldd	r16, Z+6	; 0x06
    21c6:	17 81       	ldd	r17, Z+7	; 0x07
    21c8:	d1 80       	ldd	r13, Z+1	; 0x01
    21ca:	80 81       	ld	r24, Z
    21cc:	82 30       	cpi	r24, 0x02	; 2
    21ce:	48 f4       	brcc	.+18     	; 0x21e2 <__pack_f+0x2e>
    21d0:	80 e0       	ldi	r24, 0x00	; 0
    21d2:	90 e0       	ldi	r25, 0x00	; 0
    21d4:	a0 e1       	ldi	r26, 0x10	; 16
    21d6:	b0 e0       	ldi	r27, 0x00	; 0
    21d8:	e8 2a       	or	r14, r24
    21da:	f9 2a       	or	r15, r25
    21dc:	0a 2b       	or	r16, r26
    21de:	1b 2b       	or	r17, r27
    21e0:	a5 c0       	rjmp	.+330    	; 0x232c <__pack_f+0x178>
    21e2:	84 30       	cpi	r24, 0x04	; 4
    21e4:	09 f4       	brne	.+2      	; 0x21e8 <__pack_f+0x34>
    21e6:	9f c0       	rjmp	.+318    	; 0x2326 <__pack_f+0x172>
    21e8:	82 30       	cpi	r24, 0x02	; 2
    21ea:	21 f4       	brne	.+8      	; 0x21f4 <__pack_f+0x40>
    21ec:	ee 24       	eor	r14, r14
    21ee:	ff 24       	eor	r15, r15
    21f0:	87 01       	movw	r16, r14
    21f2:	05 c0       	rjmp	.+10     	; 0x21fe <__pack_f+0x4a>
    21f4:	e1 14       	cp	r14, r1
    21f6:	f1 04       	cpc	r15, r1
    21f8:	01 05       	cpc	r16, r1
    21fa:	11 05       	cpc	r17, r1
    21fc:	19 f4       	brne	.+6      	; 0x2204 <__pack_f+0x50>
    21fe:	e0 e0       	ldi	r30, 0x00	; 0
    2200:	f0 e0       	ldi	r31, 0x00	; 0
    2202:	96 c0       	rjmp	.+300    	; 0x2330 <__pack_f+0x17c>
    2204:	62 81       	ldd	r22, Z+2	; 0x02
    2206:	73 81       	ldd	r23, Z+3	; 0x03
    2208:	9f ef       	ldi	r25, 0xFF	; 255
    220a:	62 38       	cpi	r22, 0x82	; 130
    220c:	79 07       	cpc	r23, r25
    220e:	0c f0       	brlt	.+2      	; 0x2212 <__pack_f+0x5e>
    2210:	5b c0       	rjmp	.+182    	; 0x22c8 <__pack_f+0x114>
    2212:	22 e8       	ldi	r18, 0x82	; 130
    2214:	3f ef       	ldi	r19, 0xFF	; 255
    2216:	26 1b       	sub	r18, r22
    2218:	37 0b       	sbc	r19, r23
    221a:	2a 31       	cpi	r18, 0x1A	; 26
    221c:	31 05       	cpc	r19, r1
    221e:	2c f0       	brlt	.+10     	; 0x222a <__pack_f+0x76>
    2220:	20 e0       	ldi	r18, 0x00	; 0
    2222:	30 e0       	ldi	r19, 0x00	; 0
    2224:	40 e0       	ldi	r20, 0x00	; 0
    2226:	50 e0       	ldi	r21, 0x00	; 0
    2228:	2a c0       	rjmp	.+84     	; 0x227e <__pack_f+0xca>
    222a:	b8 01       	movw	r22, r16
    222c:	a7 01       	movw	r20, r14
    222e:	02 2e       	mov	r0, r18
    2230:	04 c0       	rjmp	.+8      	; 0x223a <__pack_f+0x86>
    2232:	76 95       	lsr	r23
    2234:	67 95       	ror	r22
    2236:	57 95       	ror	r21
    2238:	47 95       	ror	r20
    223a:	0a 94       	dec	r0
    223c:	d2 f7       	brpl	.-12     	; 0x2232 <__pack_f+0x7e>
    223e:	81 e0       	ldi	r24, 0x01	; 1
    2240:	90 e0       	ldi	r25, 0x00	; 0
    2242:	a0 e0       	ldi	r26, 0x00	; 0
    2244:	b0 e0       	ldi	r27, 0x00	; 0
    2246:	04 c0       	rjmp	.+8      	; 0x2250 <__pack_f+0x9c>
    2248:	88 0f       	add	r24, r24
    224a:	99 1f       	adc	r25, r25
    224c:	aa 1f       	adc	r26, r26
    224e:	bb 1f       	adc	r27, r27
    2250:	2a 95       	dec	r18
    2252:	d2 f7       	brpl	.-12     	; 0x2248 <__pack_f+0x94>
    2254:	01 97       	sbiw	r24, 0x01	; 1
    2256:	a1 09       	sbc	r26, r1
    2258:	b1 09       	sbc	r27, r1
    225a:	8e 21       	and	r24, r14
    225c:	9f 21       	and	r25, r15
    225e:	a0 23       	and	r26, r16
    2260:	b1 23       	and	r27, r17
    2262:	00 97       	sbiw	r24, 0x00	; 0
    2264:	a1 05       	cpc	r26, r1
    2266:	b1 05       	cpc	r27, r1
    2268:	21 f0       	breq	.+8      	; 0x2272 <__pack_f+0xbe>
    226a:	81 e0       	ldi	r24, 0x01	; 1
    226c:	90 e0       	ldi	r25, 0x00	; 0
    226e:	a0 e0       	ldi	r26, 0x00	; 0
    2270:	b0 e0       	ldi	r27, 0x00	; 0
    2272:	9a 01       	movw	r18, r20
    2274:	ab 01       	movw	r20, r22
    2276:	28 2b       	or	r18, r24
    2278:	39 2b       	or	r19, r25
    227a:	4a 2b       	or	r20, r26
    227c:	5b 2b       	or	r21, r27
    227e:	da 01       	movw	r26, r20
    2280:	c9 01       	movw	r24, r18
    2282:	8f 77       	andi	r24, 0x7F	; 127
    2284:	90 70       	andi	r25, 0x00	; 0
    2286:	a0 70       	andi	r26, 0x00	; 0
    2288:	b0 70       	andi	r27, 0x00	; 0
    228a:	80 34       	cpi	r24, 0x40	; 64
    228c:	91 05       	cpc	r25, r1
    228e:	a1 05       	cpc	r26, r1
    2290:	b1 05       	cpc	r27, r1
    2292:	39 f4       	brne	.+14     	; 0x22a2 <__pack_f+0xee>
    2294:	27 ff       	sbrs	r18, 7
    2296:	09 c0       	rjmp	.+18     	; 0x22aa <__pack_f+0xf6>
    2298:	20 5c       	subi	r18, 0xC0	; 192
    229a:	3f 4f       	sbci	r19, 0xFF	; 255
    229c:	4f 4f       	sbci	r20, 0xFF	; 255
    229e:	5f 4f       	sbci	r21, 0xFF	; 255
    22a0:	04 c0       	rjmp	.+8      	; 0x22aa <__pack_f+0xf6>
    22a2:	21 5c       	subi	r18, 0xC1	; 193
    22a4:	3f 4f       	sbci	r19, 0xFF	; 255
    22a6:	4f 4f       	sbci	r20, 0xFF	; 255
    22a8:	5f 4f       	sbci	r21, 0xFF	; 255
    22aa:	e0 e0       	ldi	r30, 0x00	; 0
    22ac:	f0 e0       	ldi	r31, 0x00	; 0
    22ae:	20 30       	cpi	r18, 0x00	; 0
    22b0:	a0 e0       	ldi	r26, 0x00	; 0
    22b2:	3a 07       	cpc	r19, r26
    22b4:	a0 e0       	ldi	r26, 0x00	; 0
    22b6:	4a 07       	cpc	r20, r26
    22b8:	a0 e4       	ldi	r26, 0x40	; 64
    22ba:	5a 07       	cpc	r21, r26
    22bc:	10 f0       	brcs	.+4      	; 0x22c2 <__pack_f+0x10e>
    22be:	e1 e0       	ldi	r30, 0x01	; 1
    22c0:	f0 e0       	ldi	r31, 0x00	; 0
    22c2:	79 01       	movw	r14, r18
    22c4:	8a 01       	movw	r16, r20
    22c6:	27 c0       	rjmp	.+78     	; 0x2316 <__pack_f+0x162>
    22c8:	60 38       	cpi	r22, 0x80	; 128
    22ca:	71 05       	cpc	r23, r1
    22cc:	64 f5       	brge	.+88     	; 0x2326 <__pack_f+0x172>
    22ce:	fb 01       	movw	r30, r22
    22d0:	e1 58       	subi	r30, 0x81	; 129
    22d2:	ff 4f       	sbci	r31, 0xFF	; 255
    22d4:	d8 01       	movw	r26, r16
    22d6:	c7 01       	movw	r24, r14
    22d8:	8f 77       	andi	r24, 0x7F	; 127
    22da:	90 70       	andi	r25, 0x00	; 0
    22dc:	a0 70       	andi	r26, 0x00	; 0
    22de:	b0 70       	andi	r27, 0x00	; 0
    22e0:	80 34       	cpi	r24, 0x40	; 64
    22e2:	91 05       	cpc	r25, r1
    22e4:	a1 05       	cpc	r26, r1
    22e6:	b1 05       	cpc	r27, r1
    22e8:	39 f4       	brne	.+14     	; 0x22f8 <__pack_f+0x144>
    22ea:	e7 fe       	sbrs	r14, 7
    22ec:	0d c0       	rjmp	.+26     	; 0x2308 <__pack_f+0x154>
    22ee:	80 e4       	ldi	r24, 0x40	; 64
    22f0:	90 e0       	ldi	r25, 0x00	; 0
    22f2:	a0 e0       	ldi	r26, 0x00	; 0
    22f4:	b0 e0       	ldi	r27, 0x00	; 0
    22f6:	04 c0       	rjmp	.+8      	; 0x2300 <__pack_f+0x14c>
    22f8:	8f e3       	ldi	r24, 0x3F	; 63
    22fa:	90 e0       	ldi	r25, 0x00	; 0
    22fc:	a0 e0       	ldi	r26, 0x00	; 0
    22fe:	b0 e0       	ldi	r27, 0x00	; 0
    2300:	e8 0e       	add	r14, r24
    2302:	f9 1e       	adc	r15, r25
    2304:	0a 1f       	adc	r16, r26
    2306:	1b 1f       	adc	r17, r27
    2308:	17 ff       	sbrs	r17, 7
    230a:	05 c0       	rjmp	.+10     	; 0x2316 <__pack_f+0x162>
    230c:	16 95       	lsr	r17
    230e:	07 95       	ror	r16
    2310:	f7 94       	ror	r15
    2312:	e7 94       	ror	r14
    2314:	31 96       	adiw	r30, 0x01	; 1
    2316:	87 e0       	ldi	r24, 0x07	; 7
    2318:	16 95       	lsr	r17
    231a:	07 95       	ror	r16
    231c:	f7 94       	ror	r15
    231e:	e7 94       	ror	r14
    2320:	8a 95       	dec	r24
    2322:	d1 f7       	brne	.-12     	; 0x2318 <__pack_f+0x164>
    2324:	05 c0       	rjmp	.+10     	; 0x2330 <__pack_f+0x17c>
    2326:	ee 24       	eor	r14, r14
    2328:	ff 24       	eor	r15, r15
    232a:	87 01       	movw	r16, r14
    232c:	ef ef       	ldi	r30, 0xFF	; 255
    232e:	f0 e0       	ldi	r31, 0x00	; 0
    2330:	6e 2f       	mov	r22, r30
    2332:	67 95       	ror	r22
    2334:	66 27       	eor	r22, r22
    2336:	67 95       	ror	r22
    2338:	90 2f       	mov	r25, r16
    233a:	9f 77       	andi	r25, 0x7F	; 127
    233c:	d7 94       	ror	r13
    233e:	dd 24       	eor	r13, r13
    2340:	d7 94       	ror	r13
    2342:	8e 2f       	mov	r24, r30
    2344:	86 95       	lsr	r24
    2346:	49 2f       	mov	r20, r25
    2348:	46 2b       	or	r20, r22
    234a:	58 2f       	mov	r21, r24
    234c:	5d 29       	or	r21, r13
    234e:	b7 01       	movw	r22, r14
    2350:	ca 01       	movw	r24, r20
    2352:	1f 91       	pop	r17
    2354:	0f 91       	pop	r16
    2356:	ff 90       	pop	r15
    2358:	ef 90       	pop	r14
    235a:	df 90       	pop	r13
    235c:	08 95       	ret

0000235e <__unpack_f>:
    235e:	fc 01       	movw	r30, r24
    2360:	db 01       	movw	r26, r22
    2362:	40 81       	ld	r20, Z
    2364:	51 81       	ldd	r21, Z+1	; 0x01
    2366:	22 81       	ldd	r18, Z+2	; 0x02
    2368:	62 2f       	mov	r22, r18
    236a:	6f 77       	andi	r22, 0x7F	; 127
    236c:	70 e0       	ldi	r23, 0x00	; 0
    236e:	22 1f       	adc	r18, r18
    2370:	22 27       	eor	r18, r18
    2372:	22 1f       	adc	r18, r18
    2374:	93 81       	ldd	r25, Z+3	; 0x03
    2376:	89 2f       	mov	r24, r25
    2378:	88 0f       	add	r24, r24
    237a:	82 2b       	or	r24, r18
    237c:	28 2f       	mov	r18, r24
    237e:	30 e0       	ldi	r19, 0x00	; 0
    2380:	99 1f       	adc	r25, r25
    2382:	99 27       	eor	r25, r25
    2384:	99 1f       	adc	r25, r25
    2386:	11 96       	adiw	r26, 0x01	; 1
    2388:	9c 93       	st	X, r25
    238a:	11 97       	sbiw	r26, 0x01	; 1
    238c:	21 15       	cp	r18, r1
    238e:	31 05       	cpc	r19, r1
    2390:	a9 f5       	brne	.+106    	; 0x23fc <__unpack_f+0x9e>
    2392:	41 15       	cp	r20, r1
    2394:	51 05       	cpc	r21, r1
    2396:	61 05       	cpc	r22, r1
    2398:	71 05       	cpc	r23, r1
    239a:	11 f4       	brne	.+4      	; 0x23a0 <__unpack_f+0x42>
    239c:	82 e0       	ldi	r24, 0x02	; 2
    239e:	37 c0       	rjmp	.+110    	; 0x240e <__unpack_f+0xb0>
    23a0:	82 e8       	ldi	r24, 0x82	; 130
    23a2:	9f ef       	ldi	r25, 0xFF	; 255
    23a4:	13 96       	adiw	r26, 0x03	; 3
    23a6:	9c 93       	st	X, r25
    23a8:	8e 93       	st	-X, r24
    23aa:	12 97       	sbiw	r26, 0x02	; 2
    23ac:	9a 01       	movw	r18, r20
    23ae:	ab 01       	movw	r20, r22
    23b0:	67 e0       	ldi	r22, 0x07	; 7
    23b2:	22 0f       	add	r18, r18
    23b4:	33 1f       	adc	r19, r19
    23b6:	44 1f       	adc	r20, r20
    23b8:	55 1f       	adc	r21, r21
    23ba:	6a 95       	dec	r22
    23bc:	d1 f7       	brne	.-12     	; 0x23b2 <__unpack_f+0x54>
    23be:	83 e0       	ldi	r24, 0x03	; 3
    23c0:	8c 93       	st	X, r24
    23c2:	0d c0       	rjmp	.+26     	; 0x23de <__unpack_f+0x80>
    23c4:	22 0f       	add	r18, r18
    23c6:	33 1f       	adc	r19, r19
    23c8:	44 1f       	adc	r20, r20
    23ca:	55 1f       	adc	r21, r21
    23cc:	12 96       	adiw	r26, 0x02	; 2
    23ce:	8d 91       	ld	r24, X+
    23d0:	9c 91       	ld	r25, X
    23d2:	13 97       	sbiw	r26, 0x03	; 3
    23d4:	01 97       	sbiw	r24, 0x01	; 1
    23d6:	13 96       	adiw	r26, 0x03	; 3
    23d8:	9c 93       	st	X, r25
    23da:	8e 93       	st	-X, r24
    23dc:	12 97       	sbiw	r26, 0x02	; 2
    23de:	20 30       	cpi	r18, 0x00	; 0
    23e0:	80 e0       	ldi	r24, 0x00	; 0
    23e2:	38 07       	cpc	r19, r24
    23e4:	80 e0       	ldi	r24, 0x00	; 0
    23e6:	48 07       	cpc	r20, r24
    23e8:	80 e4       	ldi	r24, 0x40	; 64
    23ea:	58 07       	cpc	r21, r24
    23ec:	58 f3       	brcs	.-42     	; 0x23c4 <__unpack_f+0x66>
    23ee:	14 96       	adiw	r26, 0x04	; 4
    23f0:	2d 93       	st	X+, r18
    23f2:	3d 93       	st	X+, r19
    23f4:	4d 93       	st	X+, r20
    23f6:	5c 93       	st	X, r21
    23f8:	17 97       	sbiw	r26, 0x07	; 7
    23fa:	08 95       	ret
    23fc:	2f 3f       	cpi	r18, 0xFF	; 255
    23fe:	31 05       	cpc	r19, r1
    2400:	79 f4       	brne	.+30     	; 0x2420 <__unpack_f+0xc2>
    2402:	41 15       	cp	r20, r1
    2404:	51 05       	cpc	r21, r1
    2406:	61 05       	cpc	r22, r1
    2408:	71 05       	cpc	r23, r1
    240a:	19 f4       	brne	.+6      	; 0x2412 <__unpack_f+0xb4>
    240c:	84 e0       	ldi	r24, 0x04	; 4
    240e:	8c 93       	st	X, r24
    2410:	08 95       	ret
    2412:	64 ff       	sbrs	r22, 4
    2414:	03 c0       	rjmp	.+6      	; 0x241c <__unpack_f+0xbe>
    2416:	81 e0       	ldi	r24, 0x01	; 1
    2418:	8c 93       	st	X, r24
    241a:	12 c0       	rjmp	.+36     	; 0x2440 <__unpack_f+0xe2>
    241c:	1c 92       	st	X, r1
    241e:	10 c0       	rjmp	.+32     	; 0x2440 <__unpack_f+0xe2>
    2420:	2f 57       	subi	r18, 0x7F	; 127
    2422:	30 40       	sbci	r19, 0x00	; 0
    2424:	13 96       	adiw	r26, 0x03	; 3
    2426:	3c 93       	st	X, r19
    2428:	2e 93       	st	-X, r18
    242a:	12 97       	sbiw	r26, 0x02	; 2
    242c:	83 e0       	ldi	r24, 0x03	; 3
    242e:	8c 93       	st	X, r24
    2430:	87 e0       	ldi	r24, 0x07	; 7
    2432:	44 0f       	add	r20, r20
    2434:	55 1f       	adc	r21, r21
    2436:	66 1f       	adc	r22, r22
    2438:	77 1f       	adc	r23, r23
    243a:	8a 95       	dec	r24
    243c:	d1 f7       	brne	.-12     	; 0x2432 <__unpack_f+0xd4>
    243e:	70 64       	ori	r23, 0x40	; 64
    2440:	14 96       	adiw	r26, 0x04	; 4
    2442:	4d 93       	st	X+, r20
    2444:	5d 93       	st	X+, r21
    2446:	6d 93       	st	X+, r22
    2448:	7c 93       	st	X, r23
    244a:	17 97       	sbiw	r26, 0x07	; 7
    244c:	08 95       	ret

0000244e <__fpcmp_parts_f>:
    244e:	1f 93       	push	r17
    2450:	dc 01       	movw	r26, r24
    2452:	fb 01       	movw	r30, r22
    2454:	9c 91       	ld	r25, X
    2456:	92 30       	cpi	r25, 0x02	; 2
    2458:	08 f4       	brcc	.+2      	; 0x245c <__fpcmp_parts_f+0xe>
    245a:	47 c0       	rjmp	.+142    	; 0x24ea <__fpcmp_parts_f+0x9c>
    245c:	80 81       	ld	r24, Z
    245e:	82 30       	cpi	r24, 0x02	; 2
    2460:	08 f4       	brcc	.+2      	; 0x2464 <__fpcmp_parts_f+0x16>
    2462:	43 c0       	rjmp	.+134    	; 0x24ea <__fpcmp_parts_f+0x9c>
    2464:	94 30       	cpi	r25, 0x04	; 4
    2466:	51 f4       	brne	.+20     	; 0x247c <__fpcmp_parts_f+0x2e>
    2468:	11 96       	adiw	r26, 0x01	; 1
    246a:	1c 91       	ld	r17, X
    246c:	84 30       	cpi	r24, 0x04	; 4
    246e:	99 f5       	brne	.+102    	; 0x24d6 <__fpcmp_parts_f+0x88>
    2470:	81 81       	ldd	r24, Z+1	; 0x01
    2472:	68 2f       	mov	r22, r24
    2474:	70 e0       	ldi	r23, 0x00	; 0
    2476:	61 1b       	sub	r22, r17
    2478:	71 09       	sbc	r23, r1
    247a:	3f c0       	rjmp	.+126    	; 0x24fa <__fpcmp_parts_f+0xac>
    247c:	84 30       	cpi	r24, 0x04	; 4
    247e:	21 f0       	breq	.+8      	; 0x2488 <__fpcmp_parts_f+0x3a>
    2480:	92 30       	cpi	r25, 0x02	; 2
    2482:	31 f4       	brne	.+12     	; 0x2490 <__fpcmp_parts_f+0x42>
    2484:	82 30       	cpi	r24, 0x02	; 2
    2486:	b9 f1       	breq	.+110    	; 0x24f6 <__fpcmp_parts_f+0xa8>
    2488:	81 81       	ldd	r24, Z+1	; 0x01
    248a:	88 23       	and	r24, r24
    248c:	89 f1       	breq	.+98     	; 0x24f0 <__fpcmp_parts_f+0xa2>
    248e:	2d c0       	rjmp	.+90     	; 0x24ea <__fpcmp_parts_f+0x9c>
    2490:	11 96       	adiw	r26, 0x01	; 1
    2492:	1c 91       	ld	r17, X
    2494:	11 97       	sbiw	r26, 0x01	; 1
    2496:	82 30       	cpi	r24, 0x02	; 2
    2498:	f1 f0       	breq	.+60     	; 0x24d6 <__fpcmp_parts_f+0x88>
    249a:	81 81       	ldd	r24, Z+1	; 0x01
    249c:	18 17       	cp	r17, r24
    249e:	d9 f4       	brne	.+54     	; 0x24d6 <__fpcmp_parts_f+0x88>
    24a0:	12 96       	adiw	r26, 0x02	; 2
    24a2:	2d 91       	ld	r18, X+
    24a4:	3c 91       	ld	r19, X
    24a6:	13 97       	sbiw	r26, 0x03	; 3
    24a8:	82 81       	ldd	r24, Z+2	; 0x02
    24aa:	93 81       	ldd	r25, Z+3	; 0x03
    24ac:	82 17       	cp	r24, r18
    24ae:	93 07       	cpc	r25, r19
    24b0:	94 f0       	brlt	.+36     	; 0x24d6 <__fpcmp_parts_f+0x88>
    24b2:	28 17       	cp	r18, r24
    24b4:	39 07       	cpc	r19, r25
    24b6:	bc f0       	brlt	.+46     	; 0x24e6 <__fpcmp_parts_f+0x98>
    24b8:	14 96       	adiw	r26, 0x04	; 4
    24ba:	8d 91       	ld	r24, X+
    24bc:	9d 91       	ld	r25, X+
    24be:	0d 90       	ld	r0, X+
    24c0:	bc 91       	ld	r27, X
    24c2:	a0 2d       	mov	r26, r0
    24c4:	24 81       	ldd	r18, Z+4	; 0x04
    24c6:	35 81       	ldd	r19, Z+5	; 0x05
    24c8:	46 81       	ldd	r20, Z+6	; 0x06
    24ca:	57 81       	ldd	r21, Z+7	; 0x07
    24cc:	28 17       	cp	r18, r24
    24ce:	39 07       	cpc	r19, r25
    24d0:	4a 07       	cpc	r20, r26
    24d2:	5b 07       	cpc	r21, r27
    24d4:	18 f4       	brcc	.+6      	; 0x24dc <__fpcmp_parts_f+0x8e>
    24d6:	11 23       	and	r17, r17
    24d8:	41 f0       	breq	.+16     	; 0x24ea <__fpcmp_parts_f+0x9c>
    24da:	0a c0       	rjmp	.+20     	; 0x24f0 <__fpcmp_parts_f+0xa2>
    24dc:	82 17       	cp	r24, r18
    24de:	93 07       	cpc	r25, r19
    24e0:	a4 07       	cpc	r26, r20
    24e2:	b5 07       	cpc	r27, r21
    24e4:	40 f4       	brcc	.+16     	; 0x24f6 <__fpcmp_parts_f+0xa8>
    24e6:	11 23       	and	r17, r17
    24e8:	19 f0       	breq	.+6      	; 0x24f0 <__fpcmp_parts_f+0xa2>
    24ea:	61 e0       	ldi	r22, 0x01	; 1
    24ec:	70 e0       	ldi	r23, 0x00	; 0
    24ee:	05 c0       	rjmp	.+10     	; 0x24fa <__fpcmp_parts_f+0xac>
    24f0:	6f ef       	ldi	r22, 0xFF	; 255
    24f2:	7f ef       	ldi	r23, 0xFF	; 255
    24f4:	02 c0       	rjmp	.+4      	; 0x24fa <__fpcmp_parts_f+0xac>
    24f6:	60 e0       	ldi	r22, 0x00	; 0
    24f8:	70 e0       	ldi	r23, 0x00	; 0
    24fa:	cb 01       	movw	r24, r22
    24fc:	1f 91       	pop	r17
    24fe:	08 95       	ret

00002500 <DIO_voidSetPinDirection>:
#include "../../01-LIB/BIT_MATH.h"
#include "DIO_Config.h"
#include "DIO_Interface.h"
#include "DIO_Private.h"

void DIO_voidSetPinDirection(u8 Copy_u8PortNum, u8 Copy_u8PinNum, u8 Copy_u8Mode){
    2500:	df 93       	push	r29
    2502:	cf 93       	push	r28
    2504:	cd b7       	in	r28, 0x3d	; 61
    2506:	de b7       	in	r29, 0x3e	; 62
    2508:	27 97       	sbiw	r28, 0x07	; 7
    250a:	0f b6       	in	r0, 0x3f	; 63
    250c:	f8 94       	cli
    250e:	de bf       	out	0x3e, r29	; 62
    2510:	0f be       	out	0x3f, r0	; 63
    2512:	cd bf       	out	0x3d, r28	; 61
    2514:	89 83       	std	Y+1, r24	; 0x01
    2516:	6a 83       	std	Y+2, r22	; 0x02
    2518:	4b 83       	std	Y+3, r20	; 0x03
	if (Copy_u8Mode == DIO_u8OUTPUT){
    251a:	8b 81       	ldd	r24, Y+3	; 0x03
    251c:	81 30       	cpi	r24, 0x01	; 1
    251e:	09 f0       	breq	.+2      	; 0x2522 <DIO_voidSetPinDirection+0x22>
    2520:	70 c0       	rjmp	.+224    	; 0x2602 <DIO_voidSetPinDirection+0x102>
		switch (Copy_u8PortNum)
    2522:	89 81       	ldd	r24, Y+1	; 0x01
    2524:	28 2f       	mov	r18, r24
    2526:	30 e0       	ldi	r19, 0x00	; 0
    2528:	3f 83       	std	Y+7, r19	; 0x07
    252a:	2e 83       	std	Y+6, r18	; 0x06
    252c:	8e 81       	ldd	r24, Y+6	; 0x06
    252e:	9f 81       	ldd	r25, Y+7	; 0x07
    2530:	82 30       	cpi	r24, 0x02	; 2
    2532:	91 05       	cpc	r25, r1
    2534:	51 f1       	breq	.+84     	; 0x258a <DIO_voidSetPinDirection+0x8a>
    2536:	2e 81       	ldd	r18, Y+6	; 0x06
    2538:	3f 81       	ldd	r19, Y+7	; 0x07
    253a:	23 30       	cpi	r18, 0x03	; 3
    253c:	31 05       	cpc	r19, r1
    253e:	34 f4       	brge	.+12     	; 0x254c <DIO_voidSetPinDirection+0x4c>
    2540:	8e 81       	ldd	r24, Y+6	; 0x06
    2542:	9f 81       	ldd	r25, Y+7	; 0x07
    2544:	81 30       	cpi	r24, 0x01	; 1
    2546:	91 05       	cpc	r25, r1
    2548:	61 f0       	breq	.+24     	; 0x2562 <DIO_voidSetPinDirection+0x62>
    254a:	d3 c0       	rjmp	.+422    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
    254c:	2e 81       	ldd	r18, Y+6	; 0x06
    254e:	3f 81       	ldd	r19, Y+7	; 0x07
    2550:	23 30       	cpi	r18, 0x03	; 3
    2552:	31 05       	cpc	r19, r1
    2554:	71 f1       	breq	.+92     	; 0x25b2 <DIO_voidSetPinDirection+0xb2>
    2556:	8e 81       	ldd	r24, Y+6	; 0x06
    2558:	9f 81       	ldd	r25, Y+7	; 0x07
    255a:	84 30       	cpi	r24, 0x04	; 4
    255c:	91 05       	cpc	r25, r1
    255e:	e9 f1       	breq	.+122    	; 0x25da <DIO_voidSetPinDirection+0xda>
    2560:	c8 c0       	rjmp	.+400    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
		{
			case DIO_u8PORTA: SET_BIT(DDRA, Copy_u8PinNum); break;
    2562:	aa e3       	ldi	r26, 0x3A	; 58
    2564:	b0 e0       	ldi	r27, 0x00	; 0
    2566:	ea e3       	ldi	r30, 0x3A	; 58
    2568:	f0 e0       	ldi	r31, 0x00	; 0
    256a:	80 81       	ld	r24, Z
    256c:	48 2f       	mov	r20, r24
    256e:	8a 81       	ldd	r24, Y+2	; 0x02
    2570:	28 2f       	mov	r18, r24
    2572:	30 e0       	ldi	r19, 0x00	; 0
    2574:	81 e0       	ldi	r24, 0x01	; 1
    2576:	90 e0       	ldi	r25, 0x00	; 0
    2578:	02 2e       	mov	r0, r18
    257a:	02 c0       	rjmp	.+4      	; 0x2580 <DIO_voidSetPinDirection+0x80>
    257c:	88 0f       	add	r24, r24
    257e:	99 1f       	adc	r25, r25
    2580:	0a 94       	dec	r0
    2582:	e2 f7       	brpl	.-8      	; 0x257c <DIO_voidSetPinDirection+0x7c>
    2584:	84 2b       	or	r24, r20
    2586:	8c 93       	st	X, r24
    2588:	b4 c0       	rjmp	.+360    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTB: SET_BIT(DDRB, Copy_u8PinNum); break;
    258a:	a7 e3       	ldi	r26, 0x37	; 55
    258c:	b0 e0       	ldi	r27, 0x00	; 0
    258e:	e7 e3       	ldi	r30, 0x37	; 55
    2590:	f0 e0       	ldi	r31, 0x00	; 0
    2592:	80 81       	ld	r24, Z
    2594:	48 2f       	mov	r20, r24
    2596:	8a 81       	ldd	r24, Y+2	; 0x02
    2598:	28 2f       	mov	r18, r24
    259a:	30 e0       	ldi	r19, 0x00	; 0
    259c:	81 e0       	ldi	r24, 0x01	; 1
    259e:	90 e0       	ldi	r25, 0x00	; 0
    25a0:	02 2e       	mov	r0, r18
    25a2:	02 c0       	rjmp	.+4      	; 0x25a8 <DIO_voidSetPinDirection+0xa8>
    25a4:	88 0f       	add	r24, r24
    25a6:	99 1f       	adc	r25, r25
    25a8:	0a 94       	dec	r0
    25aa:	e2 f7       	brpl	.-8      	; 0x25a4 <DIO_voidSetPinDirection+0xa4>
    25ac:	84 2b       	or	r24, r20
    25ae:	8c 93       	st	X, r24
    25b0:	a0 c0       	rjmp	.+320    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTC: SET_BIT(DDRC, Copy_u8PinNum); break;
    25b2:	a4 e3       	ldi	r26, 0x34	; 52
    25b4:	b0 e0       	ldi	r27, 0x00	; 0
    25b6:	e4 e3       	ldi	r30, 0x34	; 52
    25b8:	f0 e0       	ldi	r31, 0x00	; 0
    25ba:	80 81       	ld	r24, Z
    25bc:	48 2f       	mov	r20, r24
    25be:	8a 81       	ldd	r24, Y+2	; 0x02
    25c0:	28 2f       	mov	r18, r24
    25c2:	30 e0       	ldi	r19, 0x00	; 0
    25c4:	81 e0       	ldi	r24, 0x01	; 1
    25c6:	90 e0       	ldi	r25, 0x00	; 0
    25c8:	02 2e       	mov	r0, r18
    25ca:	02 c0       	rjmp	.+4      	; 0x25d0 <DIO_voidSetPinDirection+0xd0>
    25cc:	88 0f       	add	r24, r24
    25ce:	99 1f       	adc	r25, r25
    25d0:	0a 94       	dec	r0
    25d2:	e2 f7       	brpl	.-8      	; 0x25cc <DIO_voidSetPinDirection+0xcc>
    25d4:	84 2b       	or	r24, r20
    25d6:	8c 93       	st	X, r24
    25d8:	8c c0       	rjmp	.+280    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTD: SET_BIT(DDRD, Copy_u8PinNum); break;
    25da:	a1 e3       	ldi	r26, 0x31	; 49
    25dc:	b0 e0       	ldi	r27, 0x00	; 0
    25de:	e1 e3       	ldi	r30, 0x31	; 49
    25e0:	f0 e0       	ldi	r31, 0x00	; 0
    25e2:	80 81       	ld	r24, Z
    25e4:	48 2f       	mov	r20, r24
    25e6:	8a 81       	ldd	r24, Y+2	; 0x02
    25e8:	28 2f       	mov	r18, r24
    25ea:	30 e0       	ldi	r19, 0x00	; 0
    25ec:	81 e0       	ldi	r24, 0x01	; 1
    25ee:	90 e0       	ldi	r25, 0x00	; 0
    25f0:	02 2e       	mov	r0, r18
    25f2:	02 c0       	rjmp	.+4      	; 0x25f8 <DIO_voidSetPinDirection+0xf8>
    25f4:	88 0f       	add	r24, r24
    25f6:	99 1f       	adc	r25, r25
    25f8:	0a 94       	dec	r0
    25fa:	e2 f7       	brpl	.-8      	; 0x25f4 <DIO_voidSetPinDirection+0xf4>
    25fc:	84 2b       	or	r24, r20
    25fe:	8c 93       	st	X, r24
    2600:	78 c0       	rjmp	.+240    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
			default:    /*return error*/      				 break;
		}
	} else if (Copy_u8Mode == DIO_u8INPUT){
    2602:	8b 81       	ldd	r24, Y+3	; 0x03
    2604:	88 23       	and	r24, r24
    2606:	09 f0       	breq	.+2      	; 0x260a <DIO_voidSetPinDirection+0x10a>
    2608:	74 c0       	rjmp	.+232    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
		switch (Copy_u8PortNum)
    260a:	89 81       	ldd	r24, Y+1	; 0x01
    260c:	28 2f       	mov	r18, r24
    260e:	30 e0       	ldi	r19, 0x00	; 0
    2610:	3d 83       	std	Y+5, r19	; 0x05
    2612:	2c 83       	std	Y+4, r18	; 0x04
    2614:	8c 81       	ldd	r24, Y+4	; 0x04
    2616:	9d 81       	ldd	r25, Y+5	; 0x05
    2618:	82 30       	cpi	r24, 0x02	; 2
    261a:	91 05       	cpc	r25, r1
    261c:	61 f1       	breq	.+88     	; 0x2676 <DIO_voidSetPinDirection+0x176>
    261e:	2c 81       	ldd	r18, Y+4	; 0x04
    2620:	3d 81       	ldd	r19, Y+5	; 0x05
    2622:	23 30       	cpi	r18, 0x03	; 3
    2624:	31 05       	cpc	r19, r1
    2626:	34 f4       	brge	.+12     	; 0x2634 <DIO_voidSetPinDirection+0x134>
    2628:	8c 81       	ldd	r24, Y+4	; 0x04
    262a:	9d 81       	ldd	r25, Y+5	; 0x05
    262c:	81 30       	cpi	r24, 0x01	; 1
    262e:	91 05       	cpc	r25, r1
    2630:	69 f0       	breq	.+26     	; 0x264c <DIO_voidSetPinDirection+0x14c>
    2632:	5f c0       	rjmp	.+190    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
    2634:	2c 81       	ldd	r18, Y+4	; 0x04
    2636:	3d 81       	ldd	r19, Y+5	; 0x05
    2638:	23 30       	cpi	r18, 0x03	; 3
    263a:	31 05       	cpc	r19, r1
    263c:	89 f1       	breq	.+98     	; 0x26a0 <DIO_voidSetPinDirection+0x1a0>
    263e:	8c 81       	ldd	r24, Y+4	; 0x04
    2640:	9d 81       	ldd	r25, Y+5	; 0x05
    2642:	84 30       	cpi	r24, 0x04	; 4
    2644:	91 05       	cpc	r25, r1
    2646:	09 f4       	brne	.+2      	; 0x264a <DIO_voidSetPinDirection+0x14a>
    2648:	40 c0       	rjmp	.+128    	; 0x26ca <DIO_voidSetPinDirection+0x1ca>
    264a:	53 c0       	rjmp	.+166    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
		{
			case DIO_u8PORTA: CLR_BIT(DDRA, Copy_u8PinNum); break;
    264c:	aa e3       	ldi	r26, 0x3A	; 58
    264e:	b0 e0       	ldi	r27, 0x00	; 0
    2650:	ea e3       	ldi	r30, 0x3A	; 58
    2652:	f0 e0       	ldi	r31, 0x00	; 0
    2654:	80 81       	ld	r24, Z
    2656:	48 2f       	mov	r20, r24
    2658:	8a 81       	ldd	r24, Y+2	; 0x02
    265a:	28 2f       	mov	r18, r24
    265c:	30 e0       	ldi	r19, 0x00	; 0
    265e:	81 e0       	ldi	r24, 0x01	; 1
    2660:	90 e0       	ldi	r25, 0x00	; 0
    2662:	02 2e       	mov	r0, r18
    2664:	02 c0       	rjmp	.+4      	; 0x266a <DIO_voidSetPinDirection+0x16a>
    2666:	88 0f       	add	r24, r24
    2668:	99 1f       	adc	r25, r25
    266a:	0a 94       	dec	r0
    266c:	e2 f7       	brpl	.-8      	; 0x2666 <DIO_voidSetPinDirection+0x166>
    266e:	80 95       	com	r24
    2670:	84 23       	and	r24, r20
    2672:	8c 93       	st	X, r24
    2674:	3e c0       	rjmp	.+124    	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTB: CLR_BIT(DDRB, Copy_u8PinNum); break;
    2676:	a7 e3       	ldi	r26, 0x37	; 55
    2678:	b0 e0       	ldi	r27, 0x00	; 0
    267a:	e7 e3       	ldi	r30, 0x37	; 55
    267c:	f0 e0       	ldi	r31, 0x00	; 0
    267e:	80 81       	ld	r24, Z
    2680:	48 2f       	mov	r20, r24
    2682:	8a 81       	ldd	r24, Y+2	; 0x02
    2684:	28 2f       	mov	r18, r24
    2686:	30 e0       	ldi	r19, 0x00	; 0
    2688:	81 e0       	ldi	r24, 0x01	; 1
    268a:	90 e0       	ldi	r25, 0x00	; 0
    268c:	02 2e       	mov	r0, r18
    268e:	02 c0       	rjmp	.+4      	; 0x2694 <DIO_voidSetPinDirection+0x194>
    2690:	88 0f       	add	r24, r24
    2692:	99 1f       	adc	r25, r25
    2694:	0a 94       	dec	r0
    2696:	e2 f7       	brpl	.-8      	; 0x2690 <DIO_voidSetPinDirection+0x190>
    2698:	80 95       	com	r24
    269a:	84 23       	and	r24, r20
    269c:	8c 93       	st	X, r24
    269e:	29 c0       	rjmp	.+82     	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTC: CLR_BIT(DDRC, Copy_u8PinNum); break;
    26a0:	a4 e3       	ldi	r26, 0x34	; 52
    26a2:	b0 e0       	ldi	r27, 0x00	; 0
    26a4:	e4 e3       	ldi	r30, 0x34	; 52
    26a6:	f0 e0       	ldi	r31, 0x00	; 0
    26a8:	80 81       	ld	r24, Z
    26aa:	48 2f       	mov	r20, r24
    26ac:	8a 81       	ldd	r24, Y+2	; 0x02
    26ae:	28 2f       	mov	r18, r24
    26b0:	30 e0       	ldi	r19, 0x00	; 0
    26b2:	81 e0       	ldi	r24, 0x01	; 1
    26b4:	90 e0       	ldi	r25, 0x00	; 0
    26b6:	02 2e       	mov	r0, r18
    26b8:	02 c0       	rjmp	.+4      	; 0x26be <DIO_voidSetPinDirection+0x1be>
    26ba:	88 0f       	add	r24, r24
    26bc:	99 1f       	adc	r25, r25
    26be:	0a 94       	dec	r0
    26c0:	e2 f7       	brpl	.-8      	; 0x26ba <DIO_voidSetPinDirection+0x1ba>
    26c2:	80 95       	com	r24
    26c4:	84 23       	and	r24, r20
    26c6:	8c 93       	st	X, r24
    26c8:	14 c0       	rjmp	.+40     	; 0x26f2 <DIO_voidSetPinDirection+0x1f2>
			case DIO_u8PORTD: CLR_BIT(DDRD, Copy_u8PinNum); break;
    26ca:	a1 e3       	ldi	r26, 0x31	; 49
    26cc:	b0 e0       	ldi	r27, 0x00	; 0
    26ce:	e1 e3       	ldi	r30, 0x31	; 49
    26d0:	f0 e0       	ldi	r31, 0x00	; 0
    26d2:	80 81       	ld	r24, Z
    26d4:	48 2f       	mov	r20, r24
    26d6:	8a 81       	ldd	r24, Y+2	; 0x02
    26d8:	28 2f       	mov	r18, r24
    26da:	30 e0       	ldi	r19, 0x00	; 0
    26dc:	81 e0       	ldi	r24, 0x01	; 1
    26de:	90 e0       	ldi	r25, 0x00	; 0
    26e0:	02 2e       	mov	r0, r18
    26e2:	02 c0       	rjmp	.+4      	; 0x26e8 <DIO_voidSetPinDirection+0x1e8>
    26e4:	88 0f       	add	r24, r24
    26e6:	99 1f       	adc	r25, r25
    26e8:	0a 94       	dec	r0
    26ea:	e2 f7       	brpl	.-8      	; 0x26e4 <DIO_voidSetPinDirection+0x1e4>
    26ec:	80 95       	com	r24
    26ee:	84 23       	and	r24, r20
    26f0:	8c 93       	st	X, r24
			default:    /*return error*/      				 break;
		}
	} else{
		/*return error*/
	}
}
    26f2:	27 96       	adiw	r28, 0x07	; 7
    26f4:	0f b6       	in	r0, 0x3f	; 63
    26f6:	f8 94       	cli
    26f8:	de bf       	out	0x3e, r29	; 62
    26fa:	0f be       	out	0x3f, r0	; 63
    26fc:	cd bf       	out	0x3d, r28	; 61
    26fe:	cf 91       	pop	r28
    2700:	df 91       	pop	r29
    2702:	08 95       	ret

00002704 <DIO_voidSetPinValue>:
void DIO_voidSetPinValue(u8 Copy_u8PortNum, u8 Copy_u8PinNum, u8 Copy_u8Value){
    2704:	df 93       	push	r29
    2706:	cf 93       	push	r28
    2708:	cd b7       	in	r28, 0x3d	; 61
    270a:	de b7       	in	r29, 0x3e	; 62
    270c:	27 97       	sbiw	r28, 0x07	; 7
    270e:	0f b6       	in	r0, 0x3f	; 63
    2710:	f8 94       	cli
    2712:	de bf       	out	0x3e, r29	; 62
    2714:	0f be       	out	0x3f, r0	; 63
    2716:	cd bf       	out	0x3d, r28	; 61
    2718:	89 83       	std	Y+1, r24	; 0x01
    271a:	6a 83       	std	Y+2, r22	; 0x02
    271c:	4b 83       	std	Y+3, r20	; 0x03
	if (Copy_u8Value == DIO_u8HIGH){
    271e:	8b 81       	ldd	r24, Y+3	; 0x03
    2720:	81 30       	cpi	r24, 0x01	; 1
    2722:	09 f0       	breq	.+2      	; 0x2726 <DIO_voidSetPinValue+0x22>
    2724:	70 c0       	rjmp	.+224    	; 0x2806 <DIO_voidSetPinValue+0x102>
		switch (Copy_u8PortNum)
    2726:	89 81       	ldd	r24, Y+1	; 0x01
    2728:	28 2f       	mov	r18, r24
    272a:	30 e0       	ldi	r19, 0x00	; 0
    272c:	3f 83       	std	Y+7, r19	; 0x07
    272e:	2e 83       	std	Y+6, r18	; 0x06
    2730:	8e 81       	ldd	r24, Y+6	; 0x06
    2732:	9f 81       	ldd	r25, Y+7	; 0x07
    2734:	82 30       	cpi	r24, 0x02	; 2
    2736:	91 05       	cpc	r25, r1
    2738:	51 f1       	breq	.+84     	; 0x278e <DIO_voidSetPinValue+0x8a>
    273a:	2e 81       	ldd	r18, Y+6	; 0x06
    273c:	3f 81       	ldd	r19, Y+7	; 0x07
    273e:	23 30       	cpi	r18, 0x03	; 3
    2740:	31 05       	cpc	r19, r1
    2742:	34 f4       	brge	.+12     	; 0x2750 <DIO_voidSetPinValue+0x4c>
    2744:	8e 81       	ldd	r24, Y+6	; 0x06
    2746:	9f 81       	ldd	r25, Y+7	; 0x07
    2748:	81 30       	cpi	r24, 0x01	; 1
    274a:	91 05       	cpc	r25, r1
    274c:	61 f0       	breq	.+24     	; 0x2766 <DIO_voidSetPinValue+0x62>
    274e:	d3 c0       	rjmp	.+422    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
    2750:	2e 81       	ldd	r18, Y+6	; 0x06
    2752:	3f 81       	ldd	r19, Y+7	; 0x07
    2754:	23 30       	cpi	r18, 0x03	; 3
    2756:	31 05       	cpc	r19, r1
    2758:	71 f1       	breq	.+92     	; 0x27b6 <DIO_voidSetPinValue+0xb2>
    275a:	8e 81       	ldd	r24, Y+6	; 0x06
    275c:	9f 81       	ldd	r25, Y+7	; 0x07
    275e:	84 30       	cpi	r24, 0x04	; 4
    2760:	91 05       	cpc	r25, r1
    2762:	e9 f1       	breq	.+122    	; 0x27de <DIO_voidSetPinValue+0xda>
    2764:	c8 c0       	rjmp	.+400    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
		{
			case DIO_u8PORTA: SET_BIT(PORTA, Copy_u8PinNum); break;
    2766:	ab e3       	ldi	r26, 0x3B	; 59
    2768:	b0 e0       	ldi	r27, 0x00	; 0
    276a:	eb e3       	ldi	r30, 0x3B	; 59
    276c:	f0 e0       	ldi	r31, 0x00	; 0
    276e:	80 81       	ld	r24, Z
    2770:	48 2f       	mov	r20, r24
    2772:	8a 81       	ldd	r24, Y+2	; 0x02
    2774:	28 2f       	mov	r18, r24
    2776:	30 e0       	ldi	r19, 0x00	; 0
    2778:	81 e0       	ldi	r24, 0x01	; 1
    277a:	90 e0       	ldi	r25, 0x00	; 0
    277c:	02 2e       	mov	r0, r18
    277e:	02 c0       	rjmp	.+4      	; 0x2784 <DIO_voidSetPinValue+0x80>
    2780:	88 0f       	add	r24, r24
    2782:	99 1f       	adc	r25, r25
    2784:	0a 94       	dec	r0
    2786:	e2 f7       	brpl	.-8      	; 0x2780 <DIO_voidSetPinValue+0x7c>
    2788:	84 2b       	or	r24, r20
    278a:	8c 93       	st	X, r24
    278c:	b4 c0       	rjmp	.+360    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTB: SET_BIT(PORTB, Copy_u8PinNum); break;
    278e:	a8 e3       	ldi	r26, 0x38	; 56
    2790:	b0 e0       	ldi	r27, 0x00	; 0
    2792:	e8 e3       	ldi	r30, 0x38	; 56
    2794:	f0 e0       	ldi	r31, 0x00	; 0
    2796:	80 81       	ld	r24, Z
    2798:	48 2f       	mov	r20, r24
    279a:	8a 81       	ldd	r24, Y+2	; 0x02
    279c:	28 2f       	mov	r18, r24
    279e:	30 e0       	ldi	r19, 0x00	; 0
    27a0:	81 e0       	ldi	r24, 0x01	; 1
    27a2:	90 e0       	ldi	r25, 0x00	; 0
    27a4:	02 2e       	mov	r0, r18
    27a6:	02 c0       	rjmp	.+4      	; 0x27ac <DIO_voidSetPinValue+0xa8>
    27a8:	88 0f       	add	r24, r24
    27aa:	99 1f       	adc	r25, r25
    27ac:	0a 94       	dec	r0
    27ae:	e2 f7       	brpl	.-8      	; 0x27a8 <DIO_voidSetPinValue+0xa4>
    27b0:	84 2b       	or	r24, r20
    27b2:	8c 93       	st	X, r24
    27b4:	a0 c0       	rjmp	.+320    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTC: SET_BIT(PORTC, Copy_u8PinNum); break;
    27b6:	a5 e3       	ldi	r26, 0x35	; 53
    27b8:	b0 e0       	ldi	r27, 0x00	; 0
    27ba:	e5 e3       	ldi	r30, 0x35	; 53
    27bc:	f0 e0       	ldi	r31, 0x00	; 0
    27be:	80 81       	ld	r24, Z
    27c0:	48 2f       	mov	r20, r24
    27c2:	8a 81       	ldd	r24, Y+2	; 0x02
    27c4:	28 2f       	mov	r18, r24
    27c6:	30 e0       	ldi	r19, 0x00	; 0
    27c8:	81 e0       	ldi	r24, 0x01	; 1
    27ca:	90 e0       	ldi	r25, 0x00	; 0
    27cc:	02 2e       	mov	r0, r18
    27ce:	02 c0       	rjmp	.+4      	; 0x27d4 <DIO_voidSetPinValue+0xd0>
    27d0:	88 0f       	add	r24, r24
    27d2:	99 1f       	adc	r25, r25
    27d4:	0a 94       	dec	r0
    27d6:	e2 f7       	brpl	.-8      	; 0x27d0 <DIO_voidSetPinValue+0xcc>
    27d8:	84 2b       	or	r24, r20
    27da:	8c 93       	st	X, r24
    27dc:	8c c0       	rjmp	.+280    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTD: SET_BIT(PORTD, Copy_u8PinNum); break;
    27de:	a2 e3       	ldi	r26, 0x32	; 50
    27e0:	b0 e0       	ldi	r27, 0x00	; 0
    27e2:	e2 e3       	ldi	r30, 0x32	; 50
    27e4:	f0 e0       	ldi	r31, 0x00	; 0
    27e6:	80 81       	ld	r24, Z
    27e8:	48 2f       	mov	r20, r24
    27ea:	8a 81       	ldd	r24, Y+2	; 0x02
    27ec:	28 2f       	mov	r18, r24
    27ee:	30 e0       	ldi	r19, 0x00	; 0
    27f0:	81 e0       	ldi	r24, 0x01	; 1
    27f2:	90 e0       	ldi	r25, 0x00	; 0
    27f4:	02 2e       	mov	r0, r18
    27f6:	02 c0       	rjmp	.+4      	; 0x27fc <DIO_voidSetPinValue+0xf8>
    27f8:	88 0f       	add	r24, r24
    27fa:	99 1f       	adc	r25, r25
    27fc:	0a 94       	dec	r0
    27fe:	e2 f7       	brpl	.-8      	; 0x27f8 <DIO_voidSetPinValue+0xf4>
    2800:	84 2b       	or	r24, r20
    2802:	8c 93       	st	X, r24
    2804:	78 c0       	rjmp	.+240    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
			default:    /*return error*/      				  break;
		}
	} else if (Copy_u8Value == DIO_u8LOW){
    2806:	8b 81       	ldd	r24, Y+3	; 0x03
    2808:	88 23       	and	r24, r24
    280a:	09 f0       	breq	.+2      	; 0x280e <DIO_voidSetPinValue+0x10a>
    280c:	74 c0       	rjmp	.+232    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
		switch (Copy_u8PortNum)
    280e:	89 81       	ldd	r24, Y+1	; 0x01
    2810:	28 2f       	mov	r18, r24
    2812:	30 e0       	ldi	r19, 0x00	; 0
    2814:	3d 83       	std	Y+5, r19	; 0x05
    2816:	2c 83       	std	Y+4, r18	; 0x04
    2818:	8c 81       	ldd	r24, Y+4	; 0x04
    281a:	9d 81       	ldd	r25, Y+5	; 0x05
    281c:	82 30       	cpi	r24, 0x02	; 2
    281e:	91 05       	cpc	r25, r1
    2820:	61 f1       	breq	.+88     	; 0x287a <DIO_voidSetPinValue+0x176>
    2822:	2c 81       	ldd	r18, Y+4	; 0x04
    2824:	3d 81       	ldd	r19, Y+5	; 0x05
    2826:	23 30       	cpi	r18, 0x03	; 3
    2828:	31 05       	cpc	r19, r1
    282a:	34 f4       	brge	.+12     	; 0x2838 <DIO_voidSetPinValue+0x134>
    282c:	8c 81       	ldd	r24, Y+4	; 0x04
    282e:	9d 81       	ldd	r25, Y+5	; 0x05
    2830:	81 30       	cpi	r24, 0x01	; 1
    2832:	91 05       	cpc	r25, r1
    2834:	69 f0       	breq	.+26     	; 0x2850 <DIO_voidSetPinValue+0x14c>
    2836:	5f c0       	rjmp	.+190    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
    2838:	2c 81       	ldd	r18, Y+4	; 0x04
    283a:	3d 81       	ldd	r19, Y+5	; 0x05
    283c:	23 30       	cpi	r18, 0x03	; 3
    283e:	31 05       	cpc	r19, r1
    2840:	89 f1       	breq	.+98     	; 0x28a4 <DIO_voidSetPinValue+0x1a0>
    2842:	8c 81       	ldd	r24, Y+4	; 0x04
    2844:	9d 81       	ldd	r25, Y+5	; 0x05
    2846:	84 30       	cpi	r24, 0x04	; 4
    2848:	91 05       	cpc	r25, r1
    284a:	09 f4       	brne	.+2      	; 0x284e <DIO_voidSetPinValue+0x14a>
    284c:	40 c0       	rjmp	.+128    	; 0x28ce <DIO_voidSetPinValue+0x1ca>
    284e:	53 c0       	rjmp	.+166    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
		{
			case DIO_u8PORTA: CLR_BIT(PORTA, Copy_u8PinNum); break;
    2850:	ab e3       	ldi	r26, 0x3B	; 59
    2852:	b0 e0       	ldi	r27, 0x00	; 0
    2854:	eb e3       	ldi	r30, 0x3B	; 59
    2856:	f0 e0       	ldi	r31, 0x00	; 0
    2858:	80 81       	ld	r24, Z
    285a:	48 2f       	mov	r20, r24
    285c:	8a 81       	ldd	r24, Y+2	; 0x02
    285e:	28 2f       	mov	r18, r24
    2860:	30 e0       	ldi	r19, 0x00	; 0
    2862:	81 e0       	ldi	r24, 0x01	; 1
    2864:	90 e0       	ldi	r25, 0x00	; 0
    2866:	02 2e       	mov	r0, r18
    2868:	02 c0       	rjmp	.+4      	; 0x286e <DIO_voidSetPinValue+0x16a>
    286a:	88 0f       	add	r24, r24
    286c:	99 1f       	adc	r25, r25
    286e:	0a 94       	dec	r0
    2870:	e2 f7       	brpl	.-8      	; 0x286a <DIO_voidSetPinValue+0x166>
    2872:	80 95       	com	r24
    2874:	84 23       	and	r24, r20
    2876:	8c 93       	st	X, r24
    2878:	3e c0       	rjmp	.+124    	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTB: CLR_BIT(PORTB, Copy_u8PinNum); break;
    287a:	a8 e3       	ldi	r26, 0x38	; 56
    287c:	b0 e0       	ldi	r27, 0x00	; 0
    287e:	e8 e3       	ldi	r30, 0x38	; 56
    2880:	f0 e0       	ldi	r31, 0x00	; 0
    2882:	80 81       	ld	r24, Z
    2884:	48 2f       	mov	r20, r24
    2886:	8a 81       	ldd	r24, Y+2	; 0x02
    2888:	28 2f       	mov	r18, r24
    288a:	30 e0       	ldi	r19, 0x00	; 0
    288c:	81 e0       	ldi	r24, 0x01	; 1
    288e:	90 e0       	ldi	r25, 0x00	; 0
    2890:	02 2e       	mov	r0, r18
    2892:	02 c0       	rjmp	.+4      	; 0x2898 <DIO_voidSetPinValue+0x194>
    2894:	88 0f       	add	r24, r24
    2896:	99 1f       	adc	r25, r25
    2898:	0a 94       	dec	r0
    289a:	e2 f7       	brpl	.-8      	; 0x2894 <DIO_voidSetPinValue+0x190>
    289c:	80 95       	com	r24
    289e:	84 23       	and	r24, r20
    28a0:	8c 93       	st	X, r24
    28a2:	29 c0       	rjmp	.+82     	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTC: CLR_BIT(PORTC, Copy_u8PinNum); break;
    28a4:	a5 e3       	ldi	r26, 0x35	; 53
    28a6:	b0 e0       	ldi	r27, 0x00	; 0
    28a8:	e5 e3       	ldi	r30, 0x35	; 53
    28aa:	f0 e0       	ldi	r31, 0x00	; 0
    28ac:	80 81       	ld	r24, Z
    28ae:	48 2f       	mov	r20, r24
    28b0:	8a 81       	ldd	r24, Y+2	; 0x02
    28b2:	28 2f       	mov	r18, r24
    28b4:	30 e0       	ldi	r19, 0x00	; 0
    28b6:	81 e0       	ldi	r24, 0x01	; 1
    28b8:	90 e0       	ldi	r25, 0x00	; 0
    28ba:	02 2e       	mov	r0, r18
    28bc:	02 c0       	rjmp	.+4      	; 0x28c2 <DIO_voidSetPinValue+0x1be>
    28be:	88 0f       	add	r24, r24
    28c0:	99 1f       	adc	r25, r25
    28c2:	0a 94       	dec	r0
    28c4:	e2 f7       	brpl	.-8      	; 0x28be <DIO_voidSetPinValue+0x1ba>
    28c6:	80 95       	com	r24
    28c8:	84 23       	and	r24, r20
    28ca:	8c 93       	st	X, r24
    28cc:	14 c0       	rjmp	.+40     	; 0x28f6 <DIO_voidSetPinValue+0x1f2>
			case DIO_u8PORTD: CLR_BIT(PORTD, Copy_u8PinNum); break;
    28ce:	a2 e3       	ldi	r26, 0x32	; 50
    28d0:	b0 e0       	ldi	r27, 0x00	; 0
    28d2:	e2 e3       	ldi	r30, 0x32	; 50
    28d4:	f0 e0       	ldi	r31, 0x00	; 0
    28d6:	80 81       	ld	r24, Z
    28d8:	48 2f       	mov	r20, r24
    28da:	8a 81       	ldd	r24, Y+2	; 0x02
    28dc:	28 2f       	mov	r18, r24
    28de:	30 e0       	ldi	r19, 0x00	; 0
    28e0:	81 e0       	ldi	r24, 0x01	; 1
    28e2:	90 e0       	ldi	r25, 0x00	; 0
    28e4:	02 2e       	mov	r0, r18
    28e6:	02 c0       	rjmp	.+4      	; 0x28ec <DIO_voidSetPinValue+0x1e8>
    28e8:	88 0f       	add	r24, r24
    28ea:	99 1f       	adc	r25, r25
    28ec:	0a 94       	dec	r0
    28ee:	e2 f7       	brpl	.-8      	; 0x28e8 <DIO_voidSetPinValue+0x1e4>
    28f0:	80 95       	com	r24
    28f2:	84 23       	and	r24, r20
    28f4:	8c 93       	st	X, r24
			default:    /*return error*/      				  break;
		}
	} else{
		/*return error*/
	}
}
    28f6:	27 96       	adiw	r28, 0x07	; 7
    28f8:	0f b6       	in	r0, 0x3f	; 63
    28fa:	f8 94       	cli
    28fc:	de bf       	out	0x3e, r29	; 62
    28fe:	0f be       	out	0x3f, r0	; 63
    2900:	cd bf       	out	0x3d, r28	; 61
    2902:	cf 91       	pop	r28
    2904:	df 91       	pop	r29
    2906:	08 95       	ret

00002908 <DIO_voidSetPortDirection>:
void DIO_voidSetPortDirection(u8 Copy_u8PortNum, u8 Copy_u8Mode){
    2908:	df 93       	push	r29
    290a:	cf 93       	push	r28
    290c:	00 d0       	rcall	.+0      	; 0x290e <DIO_voidSetPortDirection+0x6>
    290e:	00 d0       	rcall	.+0      	; 0x2910 <DIO_voidSetPortDirection+0x8>
    2910:	cd b7       	in	r28, 0x3d	; 61
    2912:	de b7       	in	r29, 0x3e	; 62
    2914:	89 83       	std	Y+1, r24	; 0x01
    2916:	6a 83       	std	Y+2, r22	; 0x02
	switch (Copy_u8PortNum)
    2918:	89 81       	ldd	r24, Y+1	; 0x01
    291a:	28 2f       	mov	r18, r24
    291c:	30 e0       	ldi	r19, 0x00	; 0
    291e:	3c 83       	std	Y+4, r19	; 0x04
    2920:	2b 83       	std	Y+3, r18	; 0x03
    2922:	8b 81       	ldd	r24, Y+3	; 0x03
    2924:	9c 81       	ldd	r25, Y+4	; 0x04
    2926:	82 30       	cpi	r24, 0x02	; 2
    2928:	91 05       	cpc	r25, r1
    292a:	d9 f0       	breq	.+54     	; 0x2962 <DIO_voidSetPortDirection+0x5a>
    292c:	2b 81       	ldd	r18, Y+3	; 0x03
    292e:	3c 81       	ldd	r19, Y+4	; 0x04
    2930:	23 30       	cpi	r18, 0x03	; 3
    2932:	31 05       	cpc	r19, r1
    2934:	34 f4       	brge	.+12     	; 0x2942 <DIO_voidSetPortDirection+0x3a>
    2936:	8b 81       	ldd	r24, Y+3	; 0x03
    2938:	9c 81       	ldd	r25, Y+4	; 0x04
    293a:	81 30       	cpi	r24, 0x01	; 1
    293c:	91 05       	cpc	r25, r1
    293e:	61 f0       	breq	.+24     	; 0x2958 <DIO_voidSetPortDirection+0x50>
    2940:	1e c0       	rjmp	.+60     	; 0x297e <DIO_voidSetPortDirection+0x76>
    2942:	2b 81       	ldd	r18, Y+3	; 0x03
    2944:	3c 81       	ldd	r19, Y+4	; 0x04
    2946:	23 30       	cpi	r18, 0x03	; 3
    2948:	31 05       	cpc	r19, r1
    294a:	81 f0       	breq	.+32     	; 0x296c <DIO_voidSetPortDirection+0x64>
    294c:	8b 81       	ldd	r24, Y+3	; 0x03
    294e:	9c 81       	ldd	r25, Y+4	; 0x04
    2950:	84 30       	cpi	r24, 0x04	; 4
    2952:	91 05       	cpc	r25, r1
    2954:	81 f0       	breq	.+32     	; 0x2976 <DIO_voidSetPortDirection+0x6e>
    2956:	13 c0       	rjmp	.+38     	; 0x297e <DIO_voidSetPortDirection+0x76>
	{
		case DIO_u8PORTA: DDRA = Copy_u8Mode; break;
    2958:	ea e3       	ldi	r30, 0x3A	; 58
    295a:	f0 e0       	ldi	r31, 0x00	; 0
    295c:	8a 81       	ldd	r24, Y+2	; 0x02
    295e:	80 83       	st	Z, r24
    2960:	0e c0       	rjmp	.+28     	; 0x297e <DIO_voidSetPortDirection+0x76>
		case DIO_u8PORTB: DDRB = Copy_u8Mode; break;
    2962:	e7 e3       	ldi	r30, 0x37	; 55
    2964:	f0 e0       	ldi	r31, 0x00	; 0
    2966:	8a 81       	ldd	r24, Y+2	; 0x02
    2968:	80 83       	st	Z, r24
    296a:	09 c0       	rjmp	.+18     	; 0x297e <DIO_voidSetPortDirection+0x76>
		case DIO_u8PORTC: DDRC = Copy_u8Mode; break;
    296c:	e4 e3       	ldi	r30, 0x34	; 52
    296e:	f0 e0       	ldi	r31, 0x00	; 0
    2970:	8a 81       	ldd	r24, Y+2	; 0x02
    2972:	80 83       	st	Z, r24
    2974:	04 c0       	rjmp	.+8      	; 0x297e <DIO_voidSetPortDirection+0x76>
		case DIO_u8PORTD: DDRD = Copy_u8Mode; break;
    2976:	e1 e3       	ldi	r30, 0x31	; 49
    2978:	f0 e0       	ldi	r31, 0x00	; 0
    297a:	8a 81       	ldd	r24, Y+2	; 0x02
    297c:	80 83       	st	Z, r24
		default:    /*return error*/      	  break;
	}
}
    297e:	0f 90       	pop	r0
    2980:	0f 90       	pop	r0
    2982:	0f 90       	pop	r0
    2984:	0f 90       	pop	r0
    2986:	cf 91       	pop	r28
    2988:	df 91       	pop	r29
    298a:	08 95       	ret

0000298c <DIO_voidSetPortValue>:
void DIO_voidSetPortValue(u8 Copy_u8PortNum, u8 Copy_u8Value){
    298c:	df 93       	push	r29
    298e:	cf 93       	push	r28
    2990:	00 d0       	rcall	.+0      	; 0x2992 <DIO_voidSetPortValue+0x6>
    2992:	00 d0       	rcall	.+0      	; 0x2994 <DIO_voidSetPortValue+0x8>
    2994:	cd b7       	in	r28, 0x3d	; 61
    2996:	de b7       	in	r29, 0x3e	; 62
    2998:	89 83       	std	Y+1, r24	; 0x01
    299a:	6a 83       	std	Y+2, r22	; 0x02
	switch (Copy_u8PortNum)
    299c:	89 81       	ldd	r24, Y+1	; 0x01
    299e:	28 2f       	mov	r18, r24
    29a0:	30 e0       	ldi	r19, 0x00	; 0
    29a2:	3c 83       	std	Y+4, r19	; 0x04
    29a4:	2b 83       	std	Y+3, r18	; 0x03
    29a6:	8b 81       	ldd	r24, Y+3	; 0x03
    29a8:	9c 81       	ldd	r25, Y+4	; 0x04
    29aa:	82 30       	cpi	r24, 0x02	; 2
    29ac:	91 05       	cpc	r25, r1
    29ae:	d9 f0       	breq	.+54     	; 0x29e6 <DIO_voidSetPortValue+0x5a>
    29b0:	2b 81       	ldd	r18, Y+3	; 0x03
    29b2:	3c 81       	ldd	r19, Y+4	; 0x04
    29b4:	23 30       	cpi	r18, 0x03	; 3
    29b6:	31 05       	cpc	r19, r1
    29b8:	34 f4       	brge	.+12     	; 0x29c6 <DIO_voidSetPortValue+0x3a>
    29ba:	8b 81       	ldd	r24, Y+3	; 0x03
    29bc:	9c 81       	ldd	r25, Y+4	; 0x04
    29be:	81 30       	cpi	r24, 0x01	; 1
    29c0:	91 05       	cpc	r25, r1
    29c2:	61 f0       	breq	.+24     	; 0x29dc <DIO_voidSetPortValue+0x50>
    29c4:	1e c0       	rjmp	.+60     	; 0x2a02 <DIO_voidSetPortValue+0x76>
    29c6:	2b 81       	ldd	r18, Y+3	; 0x03
    29c8:	3c 81       	ldd	r19, Y+4	; 0x04
    29ca:	23 30       	cpi	r18, 0x03	; 3
    29cc:	31 05       	cpc	r19, r1
    29ce:	81 f0       	breq	.+32     	; 0x29f0 <DIO_voidSetPortValue+0x64>
    29d0:	8b 81       	ldd	r24, Y+3	; 0x03
    29d2:	9c 81       	ldd	r25, Y+4	; 0x04
    29d4:	84 30       	cpi	r24, 0x04	; 4
    29d6:	91 05       	cpc	r25, r1
    29d8:	81 f0       	breq	.+32     	; 0x29fa <DIO_voidSetPortValue+0x6e>
    29da:	13 c0       	rjmp	.+38     	; 0x2a02 <DIO_voidSetPortValue+0x76>
	{
		case DIO_u8PORTA: PORTA = Copy_u8Value; break;
    29dc:	eb e3       	ldi	r30, 0x3B	; 59
    29de:	f0 e0       	ldi	r31, 0x00	; 0
    29e0:	8a 81       	ldd	r24, Y+2	; 0x02
    29e2:	80 83       	st	Z, r24
    29e4:	0e c0       	rjmp	.+28     	; 0x2a02 <DIO_voidSetPortValue+0x76>
		case DIO_u8PORTB: PORTB = Copy_u8Value; break;
    29e6:	e8 e3       	ldi	r30, 0x38	; 56
    29e8:	f0 e0       	ldi	r31, 0x00	; 0
    29ea:	8a 81       	ldd	r24, Y+2	; 0x02
    29ec:	80 83       	st	Z, r24
    29ee:	09 c0       	rjmp	.+18     	; 0x2a02 <DIO_voidSetPortValue+0x76>
		case DIO_u8PORTC: PORTC = Copy_u8Value; break;
    29f0:	e5 e3       	ldi	r30, 0x35	; 53
    29f2:	f0 e0       	ldi	r31, 0x00	; 0
    29f4:	8a 81       	ldd	r24, Y+2	; 0x02
    29f6:	80 83       	st	Z, r24
    29f8:	04 c0       	rjmp	.+8      	; 0x2a02 <DIO_voidSetPortValue+0x76>
		case DIO_u8PORTD: PORTD = Copy_u8Value; break;
    29fa:	e2 e3       	ldi	r30, 0x32	; 50
    29fc:	f0 e0       	ldi	r31, 0x00	; 0
    29fe:	8a 81       	ldd	r24, Y+2	; 0x02
    2a00:	80 83       	st	Z, r24
		default:    /*return error*/      	  break;
	}
}
    2a02:	0f 90       	pop	r0
    2a04:	0f 90       	pop	r0
    2a06:	0f 90       	pop	r0
    2a08:	0f 90       	pop	r0
    2a0a:	cf 91       	pop	r28
    2a0c:	df 91       	pop	r29
    2a0e:	08 95       	ret

00002a10 <DIO_voidToggleValue>:
void DIO_voidToggleValue(u8 Copy_u8PortNum, u8 Copy_u8PinNum){
    2a10:	df 93       	push	r29
    2a12:	cf 93       	push	r28
    2a14:	00 d0       	rcall	.+0      	; 0x2a16 <DIO_voidToggleValue+0x6>
    2a16:	00 d0       	rcall	.+0      	; 0x2a18 <DIO_voidToggleValue+0x8>
    2a18:	cd b7       	in	r28, 0x3d	; 61
    2a1a:	de b7       	in	r29, 0x3e	; 62
    2a1c:	89 83       	std	Y+1, r24	; 0x01
    2a1e:	6a 83       	std	Y+2, r22	; 0x02
	switch (Copy_u8PortNum)
    2a20:	89 81       	ldd	r24, Y+1	; 0x01
    2a22:	28 2f       	mov	r18, r24
    2a24:	30 e0       	ldi	r19, 0x00	; 0
    2a26:	3c 83       	std	Y+4, r19	; 0x04
    2a28:	2b 83       	std	Y+3, r18	; 0x03
    2a2a:	8b 81       	ldd	r24, Y+3	; 0x03
    2a2c:	9c 81       	ldd	r25, Y+4	; 0x04
    2a2e:	82 30       	cpi	r24, 0x02	; 2
    2a30:	91 05       	cpc	r25, r1
    2a32:	51 f1       	breq	.+84     	; 0x2a88 <DIO_voidToggleValue+0x78>
    2a34:	2b 81       	ldd	r18, Y+3	; 0x03
    2a36:	3c 81       	ldd	r19, Y+4	; 0x04
    2a38:	23 30       	cpi	r18, 0x03	; 3
    2a3a:	31 05       	cpc	r19, r1
    2a3c:	34 f4       	brge	.+12     	; 0x2a4a <DIO_voidToggleValue+0x3a>
    2a3e:	8b 81       	ldd	r24, Y+3	; 0x03
    2a40:	9c 81       	ldd	r25, Y+4	; 0x04
    2a42:	81 30       	cpi	r24, 0x01	; 1
    2a44:	91 05       	cpc	r25, r1
    2a46:	61 f0       	breq	.+24     	; 0x2a60 <DIO_voidToggleValue+0x50>
    2a48:	5a c0       	rjmp	.+180    	; 0x2afe <DIO_voidToggleValue+0xee>
    2a4a:	2b 81       	ldd	r18, Y+3	; 0x03
    2a4c:	3c 81       	ldd	r19, Y+4	; 0x04
    2a4e:	23 30       	cpi	r18, 0x03	; 3
    2a50:	31 05       	cpc	r19, r1
    2a52:	71 f1       	breq	.+92     	; 0x2ab0 <DIO_voidToggleValue+0xa0>
    2a54:	8b 81       	ldd	r24, Y+3	; 0x03
    2a56:	9c 81       	ldd	r25, Y+4	; 0x04
    2a58:	84 30       	cpi	r24, 0x04	; 4
    2a5a:	91 05       	cpc	r25, r1
    2a5c:	e9 f1       	breq	.+122    	; 0x2ad8 <DIO_voidToggleValue+0xc8>
    2a5e:	4f c0       	rjmp	.+158    	; 0x2afe <DIO_voidToggleValue+0xee>
	{
		case DIO_u8PORTA: TOGGLE_BIT(PORTA,Copy_u8PinNum); break;
    2a60:	ab e3       	ldi	r26, 0x3B	; 59
    2a62:	b0 e0       	ldi	r27, 0x00	; 0
    2a64:	eb e3       	ldi	r30, 0x3B	; 59
    2a66:	f0 e0       	ldi	r31, 0x00	; 0
    2a68:	80 81       	ld	r24, Z
    2a6a:	48 2f       	mov	r20, r24
    2a6c:	8a 81       	ldd	r24, Y+2	; 0x02
    2a6e:	28 2f       	mov	r18, r24
    2a70:	30 e0       	ldi	r19, 0x00	; 0
    2a72:	81 e0       	ldi	r24, 0x01	; 1
    2a74:	90 e0       	ldi	r25, 0x00	; 0
    2a76:	02 2e       	mov	r0, r18
    2a78:	02 c0       	rjmp	.+4      	; 0x2a7e <DIO_voidToggleValue+0x6e>
    2a7a:	88 0f       	add	r24, r24
    2a7c:	99 1f       	adc	r25, r25
    2a7e:	0a 94       	dec	r0
    2a80:	e2 f7       	brpl	.-8      	; 0x2a7a <DIO_voidToggleValue+0x6a>
    2a82:	84 27       	eor	r24, r20
    2a84:	8c 93       	st	X, r24
    2a86:	3b c0       	rjmp	.+118    	; 0x2afe <DIO_voidToggleValue+0xee>
		case DIO_u8PORTB: TOGGLE_BIT(PORTB,Copy_u8PinNum); break;
    2a88:	a8 e3       	ldi	r26, 0x38	; 56
    2a8a:	b0 e0       	ldi	r27, 0x00	; 0
    2a8c:	e8 e3       	ldi	r30, 0x38	; 56
    2a8e:	f0 e0       	ldi	r31, 0x00	; 0
    2a90:	80 81       	ld	r24, Z
    2a92:	48 2f       	mov	r20, r24
    2a94:	8a 81       	ldd	r24, Y+2	; 0x02
    2a96:	28 2f       	mov	r18, r24
    2a98:	30 e0       	ldi	r19, 0x00	; 0
    2a9a:	81 e0       	ldi	r24, 0x01	; 1
    2a9c:	90 e0       	ldi	r25, 0x00	; 0
    2a9e:	02 2e       	mov	r0, r18
    2aa0:	02 c0       	rjmp	.+4      	; 0x2aa6 <DIO_voidToggleValue+0x96>
    2aa2:	88 0f       	add	r24, r24
    2aa4:	99 1f       	adc	r25, r25
    2aa6:	0a 94       	dec	r0
    2aa8:	e2 f7       	brpl	.-8      	; 0x2aa2 <DIO_voidToggleValue+0x92>
    2aaa:	84 27       	eor	r24, r20
    2aac:	8c 93       	st	X, r24
    2aae:	27 c0       	rjmp	.+78     	; 0x2afe <DIO_voidToggleValue+0xee>
		case DIO_u8PORTC: TOGGLE_BIT(PORTC,Copy_u8PinNum); break;
    2ab0:	a5 e3       	ldi	r26, 0x35	; 53
    2ab2:	b0 e0       	ldi	r27, 0x00	; 0
    2ab4:	e5 e3       	ldi	r30, 0x35	; 53
    2ab6:	f0 e0       	ldi	r31, 0x00	; 0
    2ab8:	80 81       	ld	r24, Z
    2aba:	48 2f       	mov	r20, r24
    2abc:	8a 81       	ldd	r24, Y+2	; 0x02
    2abe:	28 2f       	mov	r18, r24
    2ac0:	30 e0       	ldi	r19, 0x00	; 0
    2ac2:	81 e0       	ldi	r24, 0x01	; 1
    2ac4:	90 e0       	ldi	r25, 0x00	; 0
    2ac6:	02 2e       	mov	r0, r18
    2ac8:	02 c0       	rjmp	.+4      	; 0x2ace <DIO_voidToggleValue+0xbe>
    2aca:	88 0f       	add	r24, r24
    2acc:	99 1f       	adc	r25, r25
    2ace:	0a 94       	dec	r0
    2ad0:	e2 f7       	brpl	.-8      	; 0x2aca <DIO_voidToggleValue+0xba>
    2ad2:	84 27       	eor	r24, r20
    2ad4:	8c 93       	st	X, r24
    2ad6:	13 c0       	rjmp	.+38     	; 0x2afe <DIO_voidToggleValue+0xee>
		case DIO_u8PORTD: TOGGLE_BIT(PORTD,Copy_u8PinNum); break;
    2ad8:	a2 e3       	ldi	r26, 0x32	; 50
    2ada:	b0 e0       	ldi	r27, 0x00	; 0
    2adc:	e2 e3       	ldi	r30, 0x32	; 50
    2ade:	f0 e0       	ldi	r31, 0x00	; 0
    2ae0:	80 81       	ld	r24, Z
    2ae2:	48 2f       	mov	r20, r24
    2ae4:	8a 81       	ldd	r24, Y+2	; 0x02
    2ae6:	28 2f       	mov	r18, r24
    2ae8:	30 e0       	ldi	r19, 0x00	; 0
    2aea:	81 e0       	ldi	r24, 0x01	; 1
    2aec:	90 e0       	ldi	r25, 0x00	; 0
    2aee:	02 2e       	mov	r0, r18
    2af0:	02 c0       	rjmp	.+4      	; 0x2af6 <DIO_voidToggleValue+0xe6>
    2af2:	88 0f       	add	r24, r24
    2af4:	99 1f       	adc	r25, r25
    2af6:	0a 94       	dec	r0
    2af8:	e2 f7       	brpl	.-8      	; 0x2af2 <DIO_voidToggleValue+0xe2>
    2afa:	84 27       	eor	r24, r20
    2afc:	8c 93       	st	X, r24
		default:    /*return error*/      	  break;
	}
}
    2afe:	0f 90       	pop	r0
    2b00:	0f 90       	pop	r0
    2b02:	0f 90       	pop	r0
    2b04:	0f 90       	pop	r0
    2b06:	cf 91       	pop	r28
    2b08:	df 91       	pop	r29
    2b0a:	08 95       	ret

00002b0c <DIO_u8GetPinValue>:
u8 DIO_u8GetPinValue(u8 Copy_u8PortNum, u8 Copy_u8PinNum){
    2b0c:	df 93       	push	r29
    2b0e:	cf 93       	push	r28
    2b10:	00 d0       	rcall	.+0      	; 0x2b12 <DIO_u8GetPinValue+0x6>
    2b12:	00 d0       	rcall	.+0      	; 0x2b14 <DIO_u8GetPinValue+0x8>
    2b14:	0f 92       	push	r0
    2b16:	cd b7       	in	r28, 0x3d	; 61
    2b18:	de b7       	in	r29, 0x3e	; 62
    2b1a:	8a 83       	std	Y+2, r24	; 0x02
    2b1c:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8Result = 0;
    2b1e:	19 82       	std	Y+1, r1	; 0x01

	switch (Copy_u8PortNum)
    2b20:	8a 81       	ldd	r24, Y+2	; 0x02
    2b22:	28 2f       	mov	r18, r24
    2b24:	30 e0       	ldi	r19, 0x00	; 0
    2b26:	3d 83       	std	Y+5, r19	; 0x05
    2b28:	2c 83       	std	Y+4, r18	; 0x04
    2b2a:	4c 81       	ldd	r20, Y+4	; 0x04
    2b2c:	5d 81       	ldd	r21, Y+5	; 0x05
    2b2e:	42 30       	cpi	r20, 0x02	; 2
    2b30:	51 05       	cpc	r21, r1
    2b32:	41 f1       	breq	.+80     	; 0x2b84 <DIO_u8GetPinValue+0x78>
    2b34:	8c 81       	ldd	r24, Y+4	; 0x04
    2b36:	9d 81       	ldd	r25, Y+5	; 0x05
    2b38:	83 30       	cpi	r24, 0x03	; 3
    2b3a:	91 05       	cpc	r25, r1
    2b3c:	34 f4       	brge	.+12     	; 0x2b4a <DIO_u8GetPinValue+0x3e>
    2b3e:	2c 81       	ldd	r18, Y+4	; 0x04
    2b40:	3d 81       	ldd	r19, Y+5	; 0x05
    2b42:	21 30       	cpi	r18, 0x01	; 1
    2b44:	31 05       	cpc	r19, r1
    2b46:	61 f0       	breq	.+24     	; 0x2b60 <DIO_u8GetPinValue+0x54>
    2b48:	52 c0       	rjmp	.+164    	; 0x2bee <DIO_u8GetPinValue+0xe2>
    2b4a:	4c 81       	ldd	r20, Y+4	; 0x04
    2b4c:	5d 81       	ldd	r21, Y+5	; 0x05
    2b4e:	43 30       	cpi	r20, 0x03	; 3
    2b50:	51 05       	cpc	r21, r1
    2b52:	51 f1       	breq	.+84     	; 0x2ba8 <DIO_u8GetPinValue+0x9c>
    2b54:	8c 81       	ldd	r24, Y+4	; 0x04
    2b56:	9d 81       	ldd	r25, Y+5	; 0x05
    2b58:	84 30       	cpi	r24, 0x04	; 4
    2b5a:	91 05       	cpc	r25, r1
    2b5c:	b9 f1       	breq	.+110    	; 0x2bcc <DIO_u8GetPinValue+0xc0>
    2b5e:	47 c0       	rjmp	.+142    	; 0x2bee <DIO_u8GetPinValue+0xe2>
	{
		case DIO_u8PORTA: Local_u8Result = GET_BIT(PINA, Copy_u8PinNum); break;
    2b60:	e9 e3       	ldi	r30, 0x39	; 57
    2b62:	f0 e0       	ldi	r31, 0x00	; 0
    2b64:	80 81       	ld	r24, Z
    2b66:	28 2f       	mov	r18, r24
    2b68:	30 e0       	ldi	r19, 0x00	; 0
    2b6a:	8b 81       	ldd	r24, Y+3	; 0x03
    2b6c:	88 2f       	mov	r24, r24
    2b6e:	90 e0       	ldi	r25, 0x00	; 0
    2b70:	a9 01       	movw	r20, r18
    2b72:	02 c0       	rjmp	.+4      	; 0x2b78 <DIO_u8GetPinValue+0x6c>
    2b74:	55 95       	asr	r21
    2b76:	47 95       	ror	r20
    2b78:	8a 95       	dec	r24
    2b7a:	e2 f7       	brpl	.-8      	; 0x2b74 <DIO_u8GetPinValue+0x68>
    2b7c:	ca 01       	movw	r24, r20
    2b7e:	81 70       	andi	r24, 0x01	; 1
    2b80:	89 83       	std	Y+1, r24	; 0x01
    2b82:	35 c0       	rjmp	.+106    	; 0x2bee <DIO_u8GetPinValue+0xe2>
		case DIO_u8PORTB: Local_u8Result = GET_BIT(PINB, Copy_u8PinNum); break;
    2b84:	e6 e3       	ldi	r30, 0x36	; 54
    2b86:	f0 e0       	ldi	r31, 0x00	; 0
    2b88:	80 81       	ld	r24, Z
    2b8a:	28 2f       	mov	r18, r24
    2b8c:	30 e0       	ldi	r19, 0x00	; 0
    2b8e:	8b 81       	ldd	r24, Y+3	; 0x03
    2b90:	88 2f       	mov	r24, r24
    2b92:	90 e0       	ldi	r25, 0x00	; 0
    2b94:	a9 01       	movw	r20, r18
    2b96:	02 c0       	rjmp	.+4      	; 0x2b9c <DIO_u8GetPinValue+0x90>
    2b98:	55 95       	asr	r21
    2b9a:	47 95       	ror	r20
    2b9c:	8a 95       	dec	r24
    2b9e:	e2 f7       	brpl	.-8      	; 0x2b98 <DIO_u8GetPinValue+0x8c>
    2ba0:	ca 01       	movw	r24, r20
    2ba2:	81 70       	andi	r24, 0x01	; 1
    2ba4:	89 83       	std	Y+1, r24	; 0x01
    2ba6:	23 c0       	rjmp	.+70     	; 0x2bee <DIO_u8GetPinValue+0xe2>
		case DIO_u8PORTC: Local_u8Result = GET_BIT(PINC, Copy_u8PinNum); break;
    2ba8:	e3 e3       	ldi	r30, 0x33	; 51
    2baa:	f0 e0       	ldi	r31, 0x00	; 0
    2bac:	80 81       	ld	r24, Z
    2bae:	28 2f       	mov	r18, r24
    2bb0:	30 e0       	ldi	r19, 0x00	; 0
    2bb2:	8b 81       	ldd	r24, Y+3	; 0x03
    2bb4:	88 2f       	mov	r24, r24
    2bb6:	90 e0       	ldi	r25, 0x00	; 0
    2bb8:	a9 01       	movw	r20, r18
    2bba:	02 c0       	rjmp	.+4      	; 0x2bc0 <DIO_u8GetPinValue+0xb4>
    2bbc:	55 95       	asr	r21
    2bbe:	47 95       	ror	r20
    2bc0:	8a 95       	dec	r24
    2bc2:	e2 f7       	brpl	.-8      	; 0x2bbc <DIO_u8GetPinValue+0xb0>
    2bc4:	ca 01       	movw	r24, r20
    2bc6:	81 70       	andi	r24, 0x01	; 1
    2bc8:	89 83       	std	Y+1, r24	; 0x01
    2bca:	11 c0       	rjmp	.+34     	; 0x2bee <DIO_u8GetPinValue+0xe2>
		case DIO_u8PORTD: Local_u8Result = GET_BIT(PIND, Copy_u8PinNum); break;
    2bcc:	e0 e3       	ldi	r30, 0x30	; 48
    2bce:	f0 e0       	ldi	r31, 0x00	; 0
    2bd0:	80 81       	ld	r24, Z
    2bd2:	28 2f       	mov	r18, r24
    2bd4:	30 e0       	ldi	r19, 0x00	; 0
    2bd6:	8b 81       	ldd	r24, Y+3	; 0x03
    2bd8:	88 2f       	mov	r24, r24
    2bda:	90 e0       	ldi	r25, 0x00	; 0
    2bdc:	a9 01       	movw	r20, r18
    2bde:	02 c0       	rjmp	.+4      	; 0x2be4 <DIO_u8GetPinValue+0xd8>
    2be0:	55 95       	asr	r21
    2be2:	47 95       	ror	r20
    2be4:	8a 95       	dec	r24
    2be6:	e2 f7       	brpl	.-8      	; 0x2be0 <DIO_u8GetPinValue+0xd4>
    2be8:	ca 01       	movw	r24, r20
    2bea:	81 70       	andi	r24, 0x01	; 1
    2bec:	89 83       	std	Y+1, r24	; 0x01
		default:    /*return error*/      								   break;
	}
	return Local_u8Result;
    2bee:	89 81       	ldd	r24, Y+1	; 0x01
}
    2bf0:	0f 90       	pop	r0
    2bf2:	0f 90       	pop	r0
    2bf4:	0f 90       	pop	r0
    2bf6:	0f 90       	pop	r0
    2bf8:	0f 90       	pop	r0
    2bfa:	cf 91       	pop	r28
    2bfc:	df 91       	pop	r29
    2bfe:	08 95       	ret

00002c00 <KPD_init>:
u8 static KPD_Arr[4][4] = { {'7','8','9','/'},
							{'4','5','6','*'},
							{'1','2','3','-'},
							{'C','0','=','+'} };

void KPD_init(void){
    2c00:	df 93       	push	r29
    2c02:	cf 93       	push	r28
    2c04:	00 d0       	rcall	.+0      	; 0x2c06 <KPD_init+0x6>
    2c06:	cd b7       	in	r28, 0x3d	; 61
    2c08:	de b7       	in	r29, 0x3e	; 62
	//R0->R3 (rows)    //C0->C3 //0x0f
	//C0->C3 (columns) //C4->C7 //0xf0
	for (u8 i=0;i<4;i++){
    2c0a:	1a 82       	std	Y+2, r1	; 0x02
    2c0c:	08 c0       	rjmp	.+16     	; 0x2c1e <KPD_init+0x1e>
		DIO_voidSetPinDirection(KPD_PORT, i, DIO_u8OUTPUT);
    2c0e:	83 e0       	ldi	r24, 0x03	; 3
    2c10:	6a 81       	ldd	r22, Y+2	; 0x02
    2c12:	41 e0       	ldi	r20, 0x01	; 1
    2c14:	0e 94 80 12 	call	0x2500	; 0x2500 <DIO_voidSetPinDirection>
							{'C','0','=','+'} };

void KPD_init(void){
	//R0->R3 (rows)    //C0->C3 //0x0f
	//C0->C3 (columns) //C4->C7 //0xf0
	for (u8 i=0;i<4;i++){
    2c18:	8a 81       	ldd	r24, Y+2	; 0x02
    2c1a:	8f 5f       	subi	r24, 0xFF	; 255
    2c1c:	8a 83       	std	Y+2, r24	; 0x02
    2c1e:	8a 81       	ldd	r24, Y+2	; 0x02
    2c20:	84 30       	cpi	r24, 0x04	; 4
    2c22:	a8 f3       	brcs	.-22     	; 0x2c0e <KPD_init+0xe>
		DIO_voidSetPinDirection(KPD_PORT, i, DIO_u8OUTPUT);
	}
	for (u8 i=4;i<8;i++){
    2c24:	84 e0       	ldi	r24, 0x04	; 4
    2c26:	89 83       	std	Y+1, r24	; 0x01
    2c28:	08 c0       	rjmp	.+16     	; 0x2c3a <KPD_init+0x3a>
		DIO_voidSetPinDirection(KPD_PORT, i, DIO_u8INPUT);
    2c2a:	83 e0       	ldi	r24, 0x03	; 3
    2c2c:	69 81       	ldd	r22, Y+1	; 0x01
    2c2e:	40 e0       	ldi	r20, 0x00	; 0
    2c30:	0e 94 80 12 	call	0x2500	; 0x2500 <DIO_voidSetPinDirection>
	//R0->R3 (rows)    //C0->C3 //0x0f
	//C0->C3 (columns) //C4->C7 //0xf0
	for (u8 i=0;i<4;i++){
		DIO_voidSetPinDirection(KPD_PORT, i, DIO_u8OUTPUT);
	}
	for (u8 i=4;i<8;i++){
    2c34:	89 81       	ldd	r24, Y+1	; 0x01
    2c36:	8f 5f       	subi	r24, 0xFF	; 255
    2c38:	89 83       	std	Y+1, r24	; 0x01
    2c3a:	89 81       	ldd	r24, Y+1	; 0x01
    2c3c:	88 30       	cpi	r24, 0x08	; 8
    2c3e:	a8 f3       	brcs	.-22     	; 0x2c2a <KPD_init+0x2a>
		DIO_voidSetPinDirection(KPD_PORT, i, DIO_u8INPUT);
	}
	DIO_voidSetPortValue(KPD_PORT, 0xff); //PORTC =
    2c40:	83 e0       	ldi	r24, 0x03	; 3
    2c42:	6f ef       	ldi	r22, 0xFF	; 255
    2c44:	0e 94 c6 14 	call	0x298c	; 0x298c <DIO_voidSetPortValue>
}
    2c48:	0f 90       	pop	r0
    2c4a:	0f 90       	pop	r0
    2c4c:	cf 91       	pop	r28
    2c4e:	df 91       	pop	r29
    2c50:	08 95       	ret

00002c52 <KPD_GetPressedKey>:

u8 KPD_GetPressedKey(void){
    2c52:	df 93       	push	r29
    2c54:	cf 93       	push	r28
    2c56:	cd b7       	in	r28, 0x3d	; 61
    2c58:	de b7       	in	r29, 0x3e	; 62
    2c5a:	61 97       	sbiw	r28, 0x11	; 17
    2c5c:	0f b6       	in	r0, 0x3f	; 63
    2c5e:	f8 94       	cli
    2c60:	de bf       	out	0x3e, r29	; 62
    2c62:	0f be       	out	0x3f, r0	; 63
    2c64:	cd bf       	out	0x3d, r28	; 61
	u8 Key = 0;
    2c66:	19 8a       	std	Y+17, r1	; 0x11
	u8 row,col;
	for (row = 0; row < 4; row++){
    2c68:	18 8a       	std	Y+16, r1	; 0x10
    2c6a:	b6 c0       	rjmp	.+364    	; 0x2dd8 <KPD_GetPressedKey+0x186>
		DIO_voidSetPinValue(KPD_PORT, row, DIO_u8LOW);
    2c6c:	83 e0       	ldi	r24, 0x03	; 3
    2c6e:	68 89       	ldd	r22, Y+16	; 0x10
    2c70:	40 e0       	ldi	r20, 0x00	; 0
    2c72:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
		for(col = 4; col < 8; col++){
    2c76:	84 e0       	ldi	r24, 0x04	; 4
    2c78:	8f 87       	std	Y+15, r24	; 0x0f
    2c7a:	a2 c0       	rjmp	.+324    	; 0x2dc0 <KPD_GetPressedKey+0x16e>
			if (DIO_u8GetPinValue(KPD_PORT, col) == 0){
    2c7c:	83 e0       	ldi	r24, 0x03	; 3
    2c7e:	6f 85       	ldd	r22, Y+15	; 0x0f
    2c80:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <DIO_u8GetPinValue>
    2c84:	88 23       	and	r24, r24
    2c86:	09 f0       	breq	.+2      	; 0x2c8a <KPD_GetPressedKey+0x38>
    2c88:	98 c0       	rjmp	.+304    	; 0x2dba <KPD_GetPressedKey+0x168>
    2c8a:	80 e0       	ldi	r24, 0x00	; 0
    2c8c:	90 e0       	ldi	r25, 0x00	; 0
    2c8e:	a0 ef       	ldi	r26, 0xF0	; 240
    2c90:	b1 e4       	ldi	r27, 0x41	; 65
    2c92:	8b 87       	std	Y+11, r24	; 0x0b
    2c94:	9c 87       	std	Y+12, r25	; 0x0c
    2c96:	ad 87       	std	Y+13, r26	; 0x0d
    2c98:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c9a:	6b 85       	ldd	r22, Y+11	; 0x0b
    2c9c:	7c 85       	ldd	r23, Y+12	; 0x0c
    2c9e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2ca0:	9e 85       	ldd	r25, Y+14	; 0x0e
    2ca2:	20 e0       	ldi	r18, 0x00	; 0
    2ca4:	30 e0       	ldi	r19, 0x00	; 0
    2ca6:	4a ef       	ldi	r20, 0xFA	; 250
    2ca8:	54 e4       	ldi	r21, 0x44	; 68
    2caa:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    2cae:	dc 01       	movw	r26, r24
    2cb0:	cb 01       	movw	r24, r22
    2cb2:	8f 83       	std	Y+7, r24	; 0x07
    2cb4:	98 87       	std	Y+8, r25	; 0x08
    2cb6:	a9 87       	std	Y+9, r26	; 0x09
    2cb8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2cba:	6f 81       	ldd	r22, Y+7	; 0x07
    2cbc:	78 85       	ldd	r23, Y+8	; 0x08
    2cbe:	89 85       	ldd	r24, Y+9	; 0x09
    2cc0:	9a 85       	ldd	r25, Y+10	; 0x0a
    2cc2:	20 e0       	ldi	r18, 0x00	; 0
    2cc4:	30 e0       	ldi	r19, 0x00	; 0
    2cc6:	40 e8       	ldi	r20, 0x80	; 128
    2cc8:	5f e3       	ldi	r21, 0x3F	; 63
    2cca:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    2cce:	88 23       	and	r24, r24
    2cd0:	2c f4       	brge	.+10     	; 0x2cdc <KPD_GetPressedKey+0x8a>
		__ticks = 1;
    2cd2:	81 e0       	ldi	r24, 0x01	; 1
    2cd4:	90 e0       	ldi	r25, 0x00	; 0
    2cd6:	9e 83       	std	Y+6, r25	; 0x06
    2cd8:	8d 83       	std	Y+5, r24	; 0x05
    2cda:	3f c0       	rjmp	.+126    	; 0x2d5a <KPD_GetPressedKey+0x108>
	else if (__tmp > 65535)
    2cdc:	6f 81       	ldd	r22, Y+7	; 0x07
    2cde:	78 85       	ldd	r23, Y+8	; 0x08
    2ce0:	89 85       	ldd	r24, Y+9	; 0x09
    2ce2:	9a 85       	ldd	r25, Y+10	; 0x0a
    2ce4:	20 e0       	ldi	r18, 0x00	; 0
    2ce6:	3f ef       	ldi	r19, 0xFF	; 255
    2ce8:	4f e7       	ldi	r20, 0x7F	; 127
    2cea:	57 e4       	ldi	r21, 0x47	; 71
    2cec:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    2cf0:	18 16       	cp	r1, r24
    2cf2:	4c f5       	brge	.+82     	; 0x2d46 <KPD_GetPressedKey+0xf4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cf4:	6b 85       	ldd	r22, Y+11	; 0x0b
    2cf6:	7c 85       	ldd	r23, Y+12	; 0x0c
    2cf8:	8d 85       	ldd	r24, Y+13	; 0x0d
    2cfa:	9e 85       	ldd	r25, Y+14	; 0x0e
    2cfc:	20 e0       	ldi	r18, 0x00	; 0
    2cfe:	30 e0       	ldi	r19, 0x00	; 0
    2d00:	40 e2       	ldi	r20, 0x20	; 32
    2d02:	51 e4       	ldi	r21, 0x41	; 65
    2d04:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    2d08:	dc 01       	movw	r26, r24
    2d0a:	cb 01       	movw	r24, r22
    2d0c:	bc 01       	movw	r22, r24
    2d0e:	cd 01       	movw	r24, r26
    2d10:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d14:	dc 01       	movw	r26, r24
    2d16:	cb 01       	movw	r24, r22
    2d18:	9e 83       	std	Y+6, r25	; 0x06
    2d1a:	8d 83       	std	Y+5, r24	; 0x05
    2d1c:	0f c0       	rjmp	.+30     	; 0x2d3c <KPD_GetPressedKey+0xea>
    2d1e:	88 ec       	ldi	r24, 0xC8	; 200
    2d20:	90 e0       	ldi	r25, 0x00	; 0
    2d22:	9c 83       	std	Y+4, r25	; 0x04
    2d24:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2d26:	8b 81       	ldd	r24, Y+3	; 0x03
    2d28:	9c 81       	ldd	r25, Y+4	; 0x04
    2d2a:	01 97       	sbiw	r24, 0x01	; 1
    2d2c:	f1 f7       	brne	.-4      	; 0x2d2a <KPD_GetPressedKey+0xd8>
    2d2e:	9c 83       	std	Y+4, r25	; 0x04
    2d30:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d32:	8d 81       	ldd	r24, Y+5	; 0x05
    2d34:	9e 81       	ldd	r25, Y+6	; 0x06
    2d36:	01 97       	sbiw	r24, 0x01	; 1
    2d38:	9e 83       	std	Y+6, r25	; 0x06
    2d3a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d3c:	8d 81       	ldd	r24, Y+5	; 0x05
    2d3e:	9e 81       	ldd	r25, Y+6	; 0x06
    2d40:	00 97       	sbiw	r24, 0x00	; 0
    2d42:	69 f7       	brne	.-38     	; 0x2d1e <KPD_GetPressedKey+0xcc>
    2d44:	14 c0       	rjmp	.+40     	; 0x2d6e <KPD_GetPressedKey+0x11c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d46:	6f 81       	ldd	r22, Y+7	; 0x07
    2d48:	78 85       	ldd	r23, Y+8	; 0x08
    2d4a:	89 85       	ldd	r24, Y+9	; 0x09
    2d4c:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d4e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d52:	dc 01       	movw	r26, r24
    2d54:	cb 01       	movw	r24, r22
    2d56:	9e 83       	std	Y+6, r25	; 0x06
    2d58:	8d 83       	std	Y+5, r24	; 0x05
    2d5a:	8d 81       	ldd	r24, Y+5	; 0x05
    2d5c:	9e 81       	ldd	r25, Y+6	; 0x06
    2d5e:	9a 83       	std	Y+2, r25	; 0x02
    2d60:	89 83       	std	Y+1, r24	; 0x01
    2d62:	89 81       	ldd	r24, Y+1	; 0x01
    2d64:	9a 81       	ldd	r25, Y+2	; 0x02
    2d66:	01 97       	sbiw	r24, 0x01	; 1
    2d68:	f1 f7       	brne	.-4      	; 0x2d66 <KPD_GetPressedKey+0x114>
    2d6a:	9a 83       	std	Y+2, r25	; 0x02
    2d6c:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(30);
				if (DIO_u8GetPinValue(KPD_PORT, col) == 0){
    2d6e:	83 e0       	ldi	r24, 0x03	; 3
    2d70:	6f 85       	ldd	r22, Y+15	; 0x0f
    2d72:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <DIO_u8GetPinValue>
    2d76:	88 23       	and	r24, r24
    2d78:	01 f5       	brne	.+64     	; 0x2dba <KPD_GetPressedKey+0x168>
					while(DIO_u8GetPinValue(KPD_PORT, col) == 0);
    2d7a:	83 e0       	ldi	r24, 0x03	; 3
    2d7c:	6f 85       	ldd	r22, Y+15	; 0x0f
    2d7e:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <DIO_u8GetPinValue>
    2d82:	88 23       	and	r24, r24
    2d84:	d1 f3       	breq	.-12     	; 0x2d7a <KPD_GetPressedKey+0x128>
					Key = KPD_Arr[row][col-4];
    2d86:	88 89       	ldd	r24, Y+16	; 0x10
    2d88:	48 2f       	mov	r20, r24
    2d8a:	50 e0       	ldi	r21, 0x00	; 0
    2d8c:	8f 85       	ldd	r24, Y+15	; 0x0f
    2d8e:	88 2f       	mov	r24, r24
    2d90:	90 e0       	ldi	r25, 0x00	; 0
    2d92:	9c 01       	movw	r18, r24
    2d94:	24 50       	subi	r18, 0x04	; 4
    2d96:	30 40       	sbci	r19, 0x00	; 0
    2d98:	ca 01       	movw	r24, r20
    2d9a:	88 0f       	add	r24, r24
    2d9c:	99 1f       	adc	r25, r25
    2d9e:	88 0f       	add	r24, r24
    2da0:	99 1f       	adc	r25, r25
    2da2:	82 0f       	add	r24, r18
    2da4:	93 1f       	adc	r25, r19
    2da6:	fc 01       	movw	r30, r24
    2da8:	e5 59       	subi	r30, 0x95	; 149
    2daa:	fe 4f       	sbci	r31, 0xFE	; 254
    2dac:	80 81       	ld	r24, Z
    2dae:	89 8b       	std	Y+17, r24	; 0x11
					DIO_voidSetPinValue(KPD_PORT,row,DIO_u8HIGH);
    2db0:	83 e0       	ldi	r24, 0x03	; 3
    2db2:	68 89       	ldd	r22, Y+16	; 0x10
    2db4:	41 e0       	ldi	r20, 0x01	; 1
    2db6:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
u8 KPD_GetPressedKey(void){
	u8 Key = 0;
	u8 row,col;
	for (row = 0; row < 4; row++){
		DIO_voidSetPinValue(KPD_PORT, row, DIO_u8LOW);
		for(col = 4; col < 8; col++){
    2dba:	8f 85       	ldd	r24, Y+15	; 0x0f
    2dbc:	8f 5f       	subi	r24, 0xFF	; 255
    2dbe:	8f 87       	std	Y+15, r24	; 0x0f
    2dc0:	8f 85       	ldd	r24, Y+15	; 0x0f
    2dc2:	88 30       	cpi	r24, 0x08	; 8
    2dc4:	08 f4       	brcc	.+2      	; 0x2dc8 <KPD_GetPressedKey+0x176>
    2dc6:	5a cf       	rjmp	.-332    	; 0x2c7c <KPD_GetPressedKey+0x2a>
					Key = KPD_Arr[row][col-4];
					DIO_voidSetPinValue(KPD_PORT,row,DIO_u8HIGH);
				}
			}
		}
		DIO_voidSetPinValue(KPD_PORT,row,DIO_u8HIGH);
    2dc8:	83 e0       	ldi	r24, 0x03	; 3
    2dca:	68 89       	ldd	r22, Y+16	; 0x10
    2dcc:	41 e0       	ldi	r20, 0x01	; 1
    2dce:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
}

u8 KPD_GetPressedKey(void){
	u8 Key = 0;
	u8 row,col;
	for (row = 0; row < 4; row++){
    2dd2:	88 89       	ldd	r24, Y+16	; 0x10
    2dd4:	8f 5f       	subi	r24, 0xFF	; 255
    2dd6:	88 8b       	std	Y+16, r24	; 0x10
    2dd8:	88 89       	ldd	r24, Y+16	; 0x10
    2dda:	84 30       	cpi	r24, 0x04	; 4
    2ddc:	08 f4       	brcc	.+2      	; 0x2de0 <KPD_GetPressedKey+0x18e>
    2dde:	46 cf       	rjmp	.-372    	; 0x2c6c <KPD_GetPressedKey+0x1a>
			}
		}
		DIO_voidSetPinValue(KPD_PORT,row,DIO_u8HIGH);
	}
	//not pressed
	return Key;
    2de0:	89 89       	ldd	r24, Y+17	; 0x11
}
    2de2:	61 96       	adiw	r28, 0x11	; 17
    2de4:	0f b6       	in	r0, 0x3f	; 63
    2de6:	f8 94       	cli
    2de8:	de bf       	out	0x3e, r29	; 62
    2dea:	0f be       	out	0x3f, r0	; 63
    2dec:	cd bf       	out	0x3d, r28	; 61
    2dee:	cf 91       	pop	r28
    2df0:	df 91       	pop	r29
    2df2:	08 95       	ret

00002df4 <CLCD_init>:
 */

#include "util/delay.h"
#include "../04-CLCD/CLCD_Interface.h"

void CLCD_init(void){
    2df4:	df 93       	push	r29
    2df6:	cf 93       	push	r28
    2df8:	cd b7       	in	r28, 0x3d	; 61
    2dfa:	de b7       	in	r29, 0x3e	; 62
    2dfc:	6c 97       	sbiw	r28, 0x1c	; 28
    2dfe:	0f b6       	in	r0, 0x3f	; 63
    2e00:	f8 94       	cli
    2e02:	de bf       	out	0x3e, r29	; 62
    2e04:	0f be       	out	0x3f, r0	; 63
    2e06:	cd bf       	out	0x3d, r28	; 61
	/* data port output */
	DIO_voidSetPortDirection(CLCD_Data_Port, 255);
    2e08:	81 e0       	ldi	r24, 0x01	; 1
    2e0a:	6f ef       	ldi	r22, 0xFF	; 255
    2e0c:	0e 94 84 14 	call	0x2908	; 0x2908 <DIO_voidSetPortDirection>
	/* RS output */
	DIO_voidSetPinDirection(CLCD_Control_Port, CLCD_RS_PIN, DIO_u8OUTPUT);
    2e10:	82 e0       	ldi	r24, 0x02	; 2
    2e12:	60 e0       	ldi	r22, 0x00	; 0
    2e14:	41 e0       	ldi	r20, 0x01	; 1
    2e16:	0e 94 80 12 	call	0x2500	; 0x2500 <DIO_voidSetPinDirection>
	/* RW output */
	DIO_voidSetPinDirection(CLCD_Control_Port, CLCD_RW_PIN, DIO_u8OUTPUT);
    2e1a:	82 e0       	ldi	r24, 0x02	; 2
    2e1c:	61 e0       	ldi	r22, 0x01	; 1
    2e1e:	41 e0       	ldi	r20, 0x01	; 1
    2e20:	0e 94 80 12 	call	0x2500	; 0x2500 <DIO_voidSetPinDirection>
	/* EN output */
	DIO_voidSetPinDirection(CLCD_Control_Port, CLCD_EN_PIN, DIO_u8OUTPUT);
    2e24:	82 e0       	ldi	r24, 0x02	; 2
    2e26:	62 e0       	ldi	r22, 0x02	; 2
    2e28:	41 e0       	ldi	r20, 0x01	; 1
    2e2a:	0e 94 80 12 	call	0x2500	; 0x2500 <DIO_voidSetPinDirection>
    2e2e:	80 e0       	ldi	r24, 0x00	; 0
    2e30:	90 e0       	ldi	r25, 0x00	; 0
    2e32:	a8 e4       	ldi	r26, 0x48	; 72
    2e34:	b2 e4       	ldi	r27, 0x42	; 66
    2e36:	89 8f       	std	Y+25, r24	; 0x19
    2e38:	9a 8f       	std	Y+26, r25	; 0x1a
    2e3a:	ab 8f       	std	Y+27, r26	; 0x1b
    2e3c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e3e:	69 8d       	ldd	r22, Y+25	; 0x19
    2e40:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2e42:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2e44:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2e46:	20 e0       	ldi	r18, 0x00	; 0
    2e48:	30 e0       	ldi	r19, 0x00	; 0
    2e4a:	4a ef       	ldi	r20, 0xFA	; 250
    2e4c:	54 e4       	ldi	r21, 0x44	; 68
    2e4e:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    2e52:	dc 01       	movw	r26, r24
    2e54:	cb 01       	movw	r24, r22
    2e56:	8d 8b       	std	Y+21, r24	; 0x15
    2e58:	9e 8b       	std	Y+22, r25	; 0x16
    2e5a:	af 8b       	std	Y+23, r26	; 0x17
    2e5c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2e5e:	6d 89       	ldd	r22, Y+21	; 0x15
    2e60:	7e 89       	ldd	r23, Y+22	; 0x16
    2e62:	8f 89       	ldd	r24, Y+23	; 0x17
    2e64:	98 8d       	ldd	r25, Y+24	; 0x18
    2e66:	20 e0       	ldi	r18, 0x00	; 0
    2e68:	30 e0       	ldi	r19, 0x00	; 0
    2e6a:	40 e8       	ldi	r20, 0x80	; 128
    2e6c:	5f e3       	ldi	r21, 0x3F	; 63
    2e6e:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    2e72:	88 23       	and	r24, r24
    2e74:	2c f4       	brge	.+10     	; 0x2e80 <CLCD_init+0x8c>
		__ticks = 1;
    2e76:	81 e0       	ldi	r24, 0x01	; 1
    2e78:	90 e0       	ldi	r25, 0x00	; 0
    2e7a:	9c 8b       	std	Y+20, r25	; 0x14
    2e7c:	8b 8b       	std	Y+19, r24	; 0x13
    2e7e:	3f c0       	rjmp	.+126    	; 0x2efe <CLCD_init+0x10a>
	else if (__tmp > 65535)
    2e80:	6d 89       	ldd	r22, Y+21	; 0x15
    2e82:	7e 89       	ldd	r23, Y+22	; 0x16
    2e84:	8f 89       	ldd	r24, Y+23	; 0x17
    2e86:	98 8d       	ldd	r25, Y+24	; 0x18
    2e88:	20 e0       	ldi	r18, 0x00	; 0
    2e8a:	3f ef       	ldi	r19, 0xFF	; 255
    2e8c:	4f e7       	ldi	r20, 0x7F	; 127
    2e8e:	57 e4       	ldi	r21, 0x47	; 71
    2e90:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    2e94:	18 16       	cp	r1, r24
    2e96:	4c f5       	brge	.+82     	; 0x2eea <CLCD_init+0xf6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e98:	69 8d       	ldd	r22, Y+25	; 0x19
    2e9a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2e9c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2e9e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2ea0:	20 e0       	ldi	r18, 0x00	; 0
    2ea2:	30 e0       	ldi	r19, 0x00	; 0
    2ea4:	40 e2       	ldi	r20, 0x20	; 32
    2ea6:	51 e4       	ldi	r21, 0x41	; 65
    2ea8:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    2eac:	dc 01       	movw	r26, r24
    2eae:	cb 01       	movw	r24, r22
    2eb0:	bc 01       	movw	r22, r24
    2eb2:	cd 01       	movw	r24, r26
    2eb4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2eb8:	dc 01       	movw	r26, r24
    2eba:	cb 01       	movw	r24, r22
    2ebc:	9c 8b       	std	Y+20, r25	; 0x14
    2ebe:	8b 8b       	std	Y+19, r24	; 0x13
    2ec0:	0f c0       	rjmp	.+30     	; 0x2ee0 <CLCD_init+0xec>
    2ec2:	88 ec       	ldi	r24, 0xC8	; 200
    2ec4:	90 e0       	ldi	r25, 0x00	; 0
    2ec6:	9a 8b       	std	Y+18, r25	; 0x12
    2ec8:	89 8b       	std	Y+17, r24	; 0x11
    2eca:	89 89       	ldd	r24, Y+17	; 0x11
    2ecc:	9a 89       	ldd	r25, Y+18	; 0x12
    2ece:	01 97       	sbiw	r24, 0x01	; 1
    2ed0:	f1 f7       	brne	.-4      	; 0x2ece <CLCD_init+0xda>
    2ed2:	9a 8b       	std	Y+18, r25	; 0x12
    2ed4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ed6:	8b 89       	ldd	r24, Y+19	; 0x13
    2ed8:	9c 89       	ldd	r25, Y+20	; 0x14
    2eda:	01 97       	sbiw	r24, 0x01	; 1
    2edc:	9c 8b       	std	Y+20, r25	; 0x14
    2ede:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ee0:	8b 89       	ldd	r24, Y+19	; 0x13
    2ee2:	9c 89       	ldd	r25, Y+20	; 0x14
    2ee4:	00 97       	sbiw	r24, 0x00	; 0
    2ee6:	69 f7       	brne	.-38     	; 0x2ec2 <CLCD_init+0xce>
    2ee8:	14 c0       	rjmp	.+40     	; 0x2f12 <CLCD_init+0x11e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2eea:	6d 89       	ldd	r22, Y+21	; 0x15
    2eec:	7e 89       	ldd	r23, Y+22	; 0x16
    2eee:	8f 89       	ldd	r24, Y+23	; 0x17
    2ef0:	98 8d       	ldd	r25, Y+24	; 0x18
    2ef2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ef6:	dc 01       	movw	r26, r24
    2ef8:	cb 01       	movw	r24, r22
    2efa:	9c 8b       	std	Y+20, r25	; 0x14
    2efc:	8b 8b       	std	Y+19, r24	; 0x13
    2efe:	8b 89       	ldd	r24, Y+19	; 0x13
    2f00:	9c 89       	ldd	r25, Y+20	; 0x14
    2f02:	98 8b       	std	Y+16, r25	; 0x10
    2f04:	8f 87       	std	Y+15, r24	; 0x0f
    2f06:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f08:	98 89       	ldd	r25, Y+16	; 0x10
    2f0a:	01 97       	sbiw	r24, 0x01	; 1
    2f0c:	f1 f7       	brne	.-4      	; 0x2f0a <CLCD_init+0x116>
    2f0e:	98 8b       	std	Y+16, r25	; 0x10
    2f10:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(50);
	CLCD_WriteInes(0x38); //0b00111000 //FUNCTION_SET
    2f12:	88 e3       	ldi	r24, 0x38	; 56
    2f14:	0e 94 10 18 	call	0x3020	; 0x3020 <CLCD_WriteInes>
	CLCD_WriteInes(0x0C); //0b00001111 //DISPLAY_ON
    2f18:	8c e0       	ldi	r24, 0x0C	; 12
    2f1a:	0e 94 10 18 	call	0x3020	; 0x3020 <CLCD_WriteInes>
	CLCD_WriteInes(0x01); //0b00000001 //DISPLAY_CLEAR
    2f1e:	81 e0       	ldi	r24, 0x01	; 1
    2f20:	0e 94 10 18 	call	0x3020	; 0x3020 <CLCD_WriteInes>
    2f24:	80 e0       	ldi	r24, 0x00	; 0
    2f26:	90 e0       	ldi	r25, 0x00	; 0
    2f28:	a0 e8       	ldi	r26, 0x80	; 128
    2f2a:	bf e3       	ldi	r27, 0x3F	; 63
    2f2c:	8b 87       	std	Y+11, r24	; 0x0b
    2f2e:	9c 87       	std	Y+12, r25	; 0x0c
    2f30:	ad 87       	std	Y+13, r26	; 0x0d
    2f32:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f34:	6b 85       	ldd	r22, Y+11	; 0x0b
    2f36:	7c 85       	ldd	r23, Y+12	; 0x0c
    2f38:	8d 85       	ldd	r24, Y+13	; 0x0d
    2f3a:	9e 85       	ldd	r25, Y+14	; 0x0e
    2f3c:	20 e0       	ldi	r18, 0x00	; 0
    2f3e:	30 e0       	ldi	r19, 0x00	; 0
    2f40:	4a ef       	ldi	r20, 0xFA	; 250
    2f42:	54 e4       	ldi	r21, 0x44	; 68
    2f44:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    2f48:	dc 01       	movw	r26, r24
    2f4a:	cb 01       	movw	r24, r22
    2f4c:	8f 83       	std	Y+7, r24	; 0x07
    2f4e:	98 87       	std	Y+8, r25	; 0x08
    2f50:	a9 87       	std	Y+9, r26	; 0x09
    2f52:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2f54:	6f 81       	ldd	r22, Y+7	; 0x07
    2f56:	78 85       	ldd	r23, Y+8	; 0x08
    2f58:	89 85       	ldd	r24, Y+9	; 0x09
    2f5a:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f5c:	20 e0       	ldi	r18, 0x00	; 0
    2f5e:	30 e0       	ldi	r19, 0x00	; 0
    2f60:	40 e8       	ldi	r20, 0x80	; 128
    2f62:	5f e3       	ldi	r21, 0x3F	; 63
    2f64:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    2f68:	88 23       	and	r24, r24
    2f6a:	2c f4       	brge	.+10     	; 0x2f76 <CLCD_init+0x182>
		__ticks = 1;
    2f6c:	81 e0       	ldi	r24, 0x01	; 1
    2f6e:	90 e0       	ldi	r25, 0x00	; 0
    2f70:	9e 83       	std	Y+6, r25	; 0x06
    2f72:	8d 83       	std	Y+5, r24	; 0x05
    2f74:	3f c0       	rjmp	.+126    	; 0x2ff4 <CLCD_init+0x200>
	else if (__tmp > 65535)
    2f76:	6f 81       	ldd	r22, Y+7	; 0x07
    2f78:	78 85       	ldd	r23, Y+8	; 0x08
    2f7a:	89 85       	ldd	r24, Y+9	; 0x09
    2f7c:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f7e:	20 e0       	ldi	r18, 0x00	; 0
    2f80:	3f ef       	ldi	r19, 0xFF	; 255
    2f82:	4f e7       	ldi	r20, 0x7F	; 127
    2f84:	57 e4       	ldi	r21, 0x47	; 71
    2f86:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    2f8a:	18 16       	cp	r1, r24
    2f8c:	4c f5       	brge	.+82     	; 0x2fe0 <CLCD_init+0x1ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f8e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2f90:	7c 85       	ldd	r23, Y+12	; 0x0c
    2f92:	8d 85       	ldd	r24, Y+13	; 0x0d
    2f94:	9e 85       	ldd	r25, Y+14	; 0x0e
    2f96:	20 e0       	ldi	r18, 0x00	; 0
    2f98:	30 e0       	ldi	r19, 0x00	; 0
    2f9a:	40 e2       	ldi	r20, 0x20	; 32
    2f9c:	51 e4       	ldi	r21, 0x41	; 65
    2f9e:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    2fa2:	dc 01       	movw	r26, r24
    2fa4:	cb 01       	movw	r24, r22
    2fa6:	bc 01       	movw	r22, r24
    2fa8:	cd 01       	movw	r24, r26
    2faa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2fae:	dc 01       	movw	r26, r24
    2fb0:	cb 01       	movw	r24, r22
    2fb2:	9e 83       	std	Y+6, r25	; 0x06
    2fb4:	8d 83       	std	Y+5, r24	; 0x05
    2fb6:	0f c0       	rjmp	.+30     	; 0x2fd6 <CLCD_init+0x1e2>
    2fb8:	88 ec       	ldi	r24, 0xC8	; 200
    2fba:	90 e0       	ldi	r25, 0x00	; 0
    2fbc:	9c 83       	std	Y+4, r25	; 0x04
    2fbe:	8b 83       	std	Y+3, r24	; 0x03
    2fc0:	8b 81       	ldd	r24, Y+3	; 0x03
    2fc2:	9c 81       	ldd	r25, Y+4	; 0x04
    2fc4:	01 97       	sbiw	r24, 0x01	; 1
    2fc6:	f1 f7       	brne	.-4      	; 0x2fc4 <CLCD_init+0x1d0>
    2fc8:	9c 83       	std	Y+4, r25	; 0x04
    2fca:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2fcc:	8d 81       	ldd	r24, Y+5	; 0x05
    2fce:	9e 81       	ldd	r25, Y+6	; 0x06
    2fd0:	01 97       	sbiw	r24, 0x01	; 1
    2fd2:	9e 83       	std	Y+6, r25	; 0x06
    2fd4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2fd6:	8d 81       	ldd	r24, Y+5	; 0x05
    2fd8:	9e 81       	ldd	r25, Y+6	; 0x06
    2fda:	00 97       	sbiw	r24, 0x00	; 0
    2fdc:	69 f7       	brne	.-38     	; 0x2fb8 <CLCD_init+0x1c4>
    2fde:	14 c0       	rjmp	.+40     	; 0x3008 <CLCD_init+0x214>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2fe0:	6f 81       	ldd	r22, Y+7	; 0x07
    2fe2:	78 85       	ldd	r23, Y+8	; 0x08
    2fe4:	89 85       	ldd	r24, Y+9	; 0x09
    2fe6:	9a 85       	ldd	r25, Y+10	; 0x0a
    2fe8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2fec:	dc 01       	movw	r26, r24
    2fee:	cb 01       	movw	r24, r22
    2ff0:	9e 83       	std	Y+6, r25	; 0x06
    2ff2:	8d 83       	std	Y+5, r24	; 0x05
    2ff4:	8d 81       	ldd	r24, Y+5	; 0x05
    2ff6:	9e 81       	ldd	r25, Y+6	; 0x06
    2ff8:	9a 83       	std	Y+2, r25	; 0x02
    2ffa:	89 83       	std	Y+1, r24	; 0x01
    2ffc:	89 81       	ldd	r24, Y+1	; 0x01
    2ffe:	9a 81       	ldd	r25, Y+2	; 0x02
    3000:	01 97       	sbiw	r24, 0x01	; 1
    3002:	f1 f7       	brne	.-4      	; 0x3000 <CLCD_init+0x20c>
    3004:	9a 83       	std	Y+2, r25	; 0x02
    3006:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	CLCD_WriteInes(0x06); //0b00000110 //ENTRY_MODE_SET
    3008:	86 e0       	ldi	r24, 0x06	; 6
    300a:	0e 94 10 18 	call	0x3020	; 0x3020 <CLCD_WriteInes>
}
    300e:	6c 96       	adiw	r28, 0x1c	; 28
    3010:	0f b6       	in	r0, 0x3f	; 63
    3012:	f8 94       	cli
    3014:	de bf       	out	0x3e, r29	; 62
    3016:	0f be       	out	0x3f, r0	; 63
    3018:	cd bf       	out	0x3d, r28	; 61
    301a:	cf 91       	pop	r28
    301c:	df 91       	pop	r29
    301e:	08 95       	ret

00003020 <CLCD_WriteInes>:

void CLCD_WriteInes(u8 A_u8Command){
    3020:	df 93       	push	r29
    3022:	cf 93       	push	r28
    3024:	cd b7       	in	r28, 0x3d	; 61
    3026:	de b7       	in	r29, 0x3e	; 62
    3028:	6d 97       	sbiw	r28, 0x1d	; 29
    302a:	0f b6       	in	r0, 0x3f	; 63
    302c:	f8 94       	cli
    302e:	de bf       	out	0x3e, r29	; 62
    3030:	0f be       	out	0x3f, r0	; 63
    3032:	cd bf       	out	0x3d, r28	; 61
    3034:	8d 8f       	std	Y+29, r24	; 0x1d
	/* RS = 0 (Command mode) */
	DIO_voidSetPinValue(CLCD_Control_Port, CLCD_RS_PIN, DIO_u8LOW); //send commend
    3036:	82 e0       	ldi	r24, 0x02	; 2
    3038:	60 e0       	ldi	r22, 0x00	; 0
    303a:	40 e0       	ldi	r20, 0x00	; 0
    303c:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
	/* RW = 0 (Write mode) */
	DIO_voidSetPinValue(CLCD_Control_Port, CLCD_RW_PIN, DIO_u8LOW);
    3040:	82 e0       	ldi	r24, 0x02	; 2
    3042:	61 e0       	ldi	r22, 0x01	; 1
    3044:	40 e0       	ldi	r20, 0x00	; 0
    3046:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
	/* send command through the port */
	DIO_voidSetPortValue(CLCD_Data_Port, A_u8Command); //function set
    304a:	81 e0       	ldi	r24, 0x01	; 1
    304c:	6d 8d       	ldd	r22, Y+29	; 0x1d
    304e:	0e 94 c6 14 	call	0x298c	; 0x298c <DIO_voidSetPortValue>
	/* Enable sequence */
	DIO_voidSetPinValue(CLCD_Control_Port, CLCD_EN_PIN, DIO_u8HIGH);
    3052:	82 e0       	ldi	r24, 0x02	; 2
    3054:	62 e0       	ldi	r22, 0x02	; 2
    3056:	41 e0       	ldi	r20, 0x01	; 1
    3058:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
    305c:	80 e0       	ldi	r24, 0x00	; 0
    305e:	90 e0       	ldi	r25, 0x00	; 0
    3060:	a0 e8       	ldi	r26, 0x80	; 128
    3062:	bf e3       	ldi	r27, 0x3F	; 63
    3064:	89 8f       	std	Y+25, r24	; 0x19
    3066:	9a 8f       	std	Y+26, r25	; 0x1a
    3068:	ab 8f       	std	Y+27, r26	; 0x1b
    306a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    306c:	69 8d       	ldd	r22, Y+25	; 0x19
    306e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3070:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3072:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3074:	20 e0       	ldi	r18, 0x00	; 0
    3076:	30 e0       	ldi	r19, 0x00	; 0
    3078:	4a ef       	ldi	r20, 0xFA	; 250
    307a:	54 e4       	ldi	r21, 0x44	; 68
    307c:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    3080:	dc 01       	movw	r26, r24
    3082:	cb 01       	movw	r24, r22
    3084:	8d 8b       	std	Y+21, r24	; 0x15
    3086:	9e 8b       	std	Y+22, r25	; 0x16
    3088:	af 8b       	std	Y+23, r26	; 0x17
    308a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    308c:	6d 89       	ldd	r22, Y+21	; 0x15
    308e:	7e 89       	ldd	r23, Y+22	; 0x16
    3090:	8f 89       	ldd	r24, Y+23	; 0x17
    3092:	98 8d       	ldd	r25, Y+24	; 0x18
    3094:	20 e0       	ldi	r18, 0x00	; 0
    3096:	30 e0       	ldi	r19, 0x00	; 0
    3098:	40 e8       	ldi	r20, 0x80	; 128
    309a:	5f e3       	ldi	r21, 0x3F	; 63
    309c:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    30a0:	88 23       	and	r24, r24
    30a2:	2c f4       	brge	.+10     	; 0x30ae <CLCD_WriteInes+0x8e>
		__ticks = 1;
    30a4:	81 e0       	ldi	r24, 0x01	; 1
    30a6:	90 e0       	ldi	r25, 0x00	; 0
    30a8:	9c 8b       	std	Y+20, r25	; 0x14
    30aa:	8b 8b       	std	Y+19, r24	; 0x13
    30ac:	3f c0       	rjmp	.+126    	; 0x312c <CLCD_WriteInes+0x10c>
	else if (__tmp > 65535)
    30ae:	6d 89       	ldd	r22, Y+21	; 0x15
    30b0:	7e 89       	ldd	r23, Y+22	; 0x16
    30b2:	8f 89       	ldd	r24, Y+23	; 0x17
    30b4:	98 8d       	ldd	r25, Y+24	; 0x18
    30b6:	20 e0       	ldi	r18, 0x00	; 0
    30b8:	3f ef       	ldi	r19, 0xFF	; 255
    30ba:	4f e7       	ldi	r20, 0x7F	; 127
    30bc:	57 e4       	ldi	r21, 0x47	; 71
    30be:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    30c2:	18 16       	cp	r1, r24
    30c4:	4c f5       	brge	.+82     	; 0x3118 <CLCD_WriteInes+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30c6:	69 8d       	ldd	r22, Y+25	; 0x19
    30c8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    30ca:	8b 8d       	ldd	r24, Y+27	; 0x1b
    30cc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    30ce:	20 e0       	ldi	r18, 0x00	; 0
    30d0:	30 e0       	ldi	r19, 0x00	; 0
    30d2:	40 e2       	ldi	r20, 0x20	; 32
    30d4:	51 e4       	ldi	r21, 0x41	; 65
    30d6:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    30da:	dc 01       	movw	r26, r24
    30dc:	cb 01       	movw	r24, r22
    30de:	bc 01       	movw	r22, r24
    30e0:	cd 01       	movw	r24, r26
    30e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30e6:	dc 01       	movw	r26, r24
    30e8:	cb 01       	movw	r24, r22
    30ea:	9c 8b       	std	Y+20, r25	; 0x14
    30ec:	8b 8b       	std	Y+19, r24	; 0x13
    30ee:	0f c0       	rjmp	.+30     	; 0x310e <CLCD_WriteInes+0xee>
    30f0:	88 ec       	ldi	r24, 0xC8	; 200
    30f2:	90 e0       	ldi	r25, 0x00	; 0
    30f4:	9a 8b       	std	Y+18, r25	; 0x12
    30f6:	89 8b       	std	Y+17, r24	; 0x11
    30f8:	89 89       	ldd	r24, Y+17	; 0x11
    30fa:	9a 89       	ldd	r25, Y+18	; 0x12
    30fc:	01 97       	sbiw	r24, 0x01	; 1
    30fe:	f1 f7       	brne	.-4      	; 0x30fc <CLCD_WriteInes+0xdc>
    3100:	9a 8b       	std	Y+18, r25	; 0x12
    3102:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3104:	8b 89       	ldd	r24, Y+19	; 0x13
    3106:	9c 89       	ldd	r25, Y+20	; 0x14
    3108:	01 97       	sbiw	r24, 0x01	; 1
    310a:	9c 8b       	std	Y+20, r25	; 0x14
    310c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    310e:	8b 89       	ldd	r24, Y+19	; 0x13
    3110:	9c 89       	ldd	r25, Y+20	; 0x14
    3112:	00 97       	sbiw	r24, 0x00	; 0
    3114:	69 f7       	brne	.-38     	; 0x30f0 <CLCD_WriteInes+0xd0>
    3116:	14 c0       	rjmp	.+40     	; 0x3140 <CLCD_WriteInes+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3118:	6d 89       	ldd	r22, Y+21	; 0x15
    311a:	7e 89       	ldd	r23, Y+22	; 0x16
    311c:	8f 89       	ldd	r24, Y+23	; 0x17
    311e:	98 8d       	ldd	r25, Y+24	; 0x18
    3120:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3124:	dc 01       	movw	r26, r24
    3126:	cb 01       	movw	r24, r22
    3128:	9c 8b       	std	Y+20, r25	; 0x14
    312a:	8b 8b       	std	Y+19, r24	; 0x13
    312c:	8b 89       	ldd	r24, Y+19	; 0x13
    312e:	9c 89       	ldd	r25, Y+20	; 0x14
    3130:	98 8b       	std	Y+16, r25	; 0x10
    3132:	8f 87       	std	Y+15, r24	; 0x0f
    3134:	8f 85       	ldd	r24, Y+15	; 0x0f
    3136:	98 89       	ldd	r25, Y+16	; 0x10
    3138:	01 97       	sbiw	r24, 0x01	; 1
    313a:	f1 f7       	brne	.-4      	; 0x3138 <CLCD_WriteInes+0x118>
    313c:	98 8b       	std	Y+16, r25	; 0x10
    313e:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_voidSetPinValue(CLCD_Control_Port,CLCD_EN_PIN, DIO_u8LOW);
    3140:	82 e0       	ldi	r24, 0x02	; 2
    3142:	62 e0       	ldi	r22, 0x02	; 2
    3144:	40 e0       	ldi	r20, 0x00	; 0
    3146:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
    314a:	80 e0       	ldi	r24, 0x00	; 0
    314c:	90 e0       	ldi	r25, 0x00	; 0
    314e:	a0 e8       	ldi	r26, 0x80	; 128
    3150:	bf e3       	ldi	r27, 0x3F	; 63
    3152:	8b 87       	std	Y+11, r24	; 0x0b
    3154:	9c 87       	std	Y+12, r25	; 0x0c
    3156:	ad 87       	std	Y+13, r26	; 0x0d
    3158:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    315a:	6b 85       	ldd	r22, Y+11	; 0x0b
    315c:	7c 85       	ldd	r23, Y+12	; 0x0c
    315e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3160:	9e 85       	ldd	r25, Y+14	; 0x0e
    3162:	20 e0       	ldi	r18, 0x00	; 0
    3164:	30 e0       	ldi	r19, 0x00	; 0
    3166:	4a ef       	ldi	r20, 0xFA	; 250
    3168:	54 e4       	ldi	r21, 0x44	; 68
    316a:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    316e:	dc 01       	movw	r26, r24
    3170:	cb 01       	movw	r24, r22
    3172:	8f 83       	std	Y+7, r24	; 0x07
    3174:	98 87       	std	Y+8, r25	; 0x08
    3176:	a9 87       	std	Y+9, r26	; 0x09
    3178:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    317a:	6f 81       	ldd	r22, Y+7	; 0x07
    317c:	78 85       	ldd	r23, Y+8	; 0x08
    317e:	89 85       	ldd	r24, Y+9	; 0x09
    3180:	9a 85       	ldd	r25, Y+10	; 0x0a
    3182:	20 e0       	ldi	r18, 0x00	; 0
    3184:	30 e0       	ldi	r19, 0x00	; 0
    3186:	40 e8       	ldi	r20, 0x80	; 128
    3188:	5f e3       	ldi	r21, 0x3F	; 63
    318a:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    318e:	88 23       	and	r24, r24
    3190:	2c f4       	brge	.+10     	; 0x319c <CLCD_WriteInes+0x17c>
		__ticks = 1;
    3192:	81 e0       	ldi	r24, 0x01	; 1
    3194:	90 e0       	ldi	r25, 0x00	; 0
    3196:	9e 83       	std	Y+6, r25	; 0x06
    3198:	8d 83       	std	Y+5, r24	; 0x05
    319a:	3f c0       	rjmp	.+126    	; 0x321a <CLCD_WriteInes+0x1fa>
	else if (__tmp > 65535)
    319c:	6f 81       	ldd	r22, Y+7	; 0x07
    319e:	78 85       	ldd	r23, Y+8	; 0x08
    31a0:	89 85       	ldd	r24, Y+9	; 0x09
    31a2:	9a 85       	ldd	r25, Y+10	; 0x0a
    31a4:	20 e0       	ldi	r18, 0x00	; 0
    31a6:	3f ef       	ldi	r19, 0xFF	; 255
    31a8:	4f e7       	ldi	r20, 0x7F	; 127
    31aa:	57 e4       	ldi	r21, 0x47	; 71
    31ac:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    31b0:	18 16       	cp	r1, r24
    31b2:	4c f5       	brge	.+82     	; 0x3206 <CLCD_WriteInes+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    31b4:	6b 85       	ldd	r22, Y+11	; 0x0b
    31b6:	7c 85       	ldd	r23, Y+12	; 0x0c
    31b8:	8d 85       	ldd	r24, Y+13	; 0x0d
    31ba:	9e 85       	ldd	r25, Y+14	; 0x0e
    31bc:	20 e0       	ldi	r18, 0x00	; 0
    31be:	30 e0       	ldi	r19, 0x00	; 0
    31c0:	40 e2       	ldi	r20, 0x20	; 32
    31c2:	51 e4       	ldi	r21, 0x41	; 65
    31c4:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    31c8:	dc 01       	movw	r26, r24
    31ca:	cb 01       	movw	r24, r22
    31cc:	bc 01       	movw	r22, r24
    31ce:	cd 01       	movw	r24, r26
    31d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31d4:	dc 01       	movw	r26, r24
    31d6:	cb 01       	movw	r24, r22
    31d8:	9e 83       	std	Y+6, r25	; 0x06
    31da:	8d 83       	std	Y+5, r24	; 0x05
    31dc:	0f c0       	rjmp	.+30     	; 0x31fc <CLCD_WriteInes+0x1dc>
    31de:	88 ec       	ldi	r24, 0xC8	; 200
    31e0:	90 e0       	ldi	r25, 0x00	; 0
    31e2:	9c 83       	std	Y+4, r25	; 0x04
    31e4:	8b 83       	std	Y+3, r24	; 0x03
    31e6:	8b 81       	ldd	r24, Y+3	; 0x03
    31e8:	9c 81       	ldd	r25, Y+4	; 0x04
    31ea:	01 97       	sbiw	r24, 0x01	; 1
    31ec:	f1 f7       	brne	.-4      	; 0x31ea <CLCD_WriteInes+0x1ca>
    31ee:	9c 83       	std	Y+4, r25	; 0x04
    31f0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31f2:	8d 81       	ldd	r24, Y+5	; 0x05
    31f4:	9e 81       	ldd	r25, Y+6	; 0x06
    31f6:	01 97       	sbiw	r24, 0x01	; 1
    31f8:	9e 83       	std	Y+6, r25	; 0x06
    31fa:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31fc:	8d 81       	ldd	r24, Y+5	; 0x05
    31fe:	9e 81       	ldd	r25, Y+6	; 0x06
    3200:	00 97       	sbiw	r24, 0x00	; 0
    3202:	69 f7       	brne	.-38     	; 0x31de <CLCD_WriteInes+0x1be>
    3204:	14 c0       	rjmp	.+40     	; 0x322e <CLCD_WriteInes+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3206:	6f 81       	ldd	r22, Y+7	; 0x07
    3208:	78 85       	ldd	r23, Y+8	; 0x08
    320a:	89 85       	ldd	r24, Y+9	; 0x09
    320c:	9a 85       	ldd	r25, Y+10	; 0x0a
    320e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3212:	dc 01       	movw	r26, r24
    3214:	cb 01       	movw	r24, r22
    3216:	9e 83       	std	Y+6, r25	; 0x06
    3218:	8d 83       	std	Y+5, r24	; 0x05
    321a:	8d 81       	ldd	r24, Y+5	; 0x05
    321c:	9e 81       	ldd	r25, Y+6	; 0x06
    321e:	9a 83       	std	Y+2, r25	; 0x02
    3220:	89 83       	std	Y+1, r24	; 0x01
    3222:	89 81       	ldd	r24, Y+1	; 0x01
    3224:	9a 81       	ldd	r25, Y+2	; 0x02
    3226:	01 97       	sbiw	r24, 0x01	; 1
    3228:	f1 f7       	brne	.-4      	; 0x3226 <CLCD_WriteInes+0x206>
    322a:	9a 83       	std	Y+2, r25	; 0x02
    322c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    322e:	6d 96       	adiw	r28, 0x1d	; 29
    3230:	0f b6       	in	r0, 0x3f	; 63
    3232:	f8 94       	cli
    3234:	de bf       	out	0x3e, r29	; 62
    3236:	0f be       	out	0x3f, r0	; 63
    3238:	cd bf       	out	0x3d, r28	; 61
    323a:	cf 91       	pop	r28
    323c:	df 91       	pop	r29
    323e:	08 95       	ret

00003240 <CLCD_WriteData>:

void CLCD_WriteData(u8 Data){
    3240:	df 93       	push	r29
    3242:	cf 93       	push	r28
    3244:	cd b7       	in	r28, 0x3d	; 61
    3246:	de b7       	in	r29, 0x3e	; 62
    3248:	6d 97       	sbiw	r28, 0x1d	; 29
    324a:	0f b6       	in	r0, 0x3f	; 63
    324c:	f8 94       	cli
    324e:	de bf       	out	0x3e, r29	; 62
    3250:	0f be       	out	0x3f, r0	; 63
    3252:	cd bf       	out	0x3d, r28	; 61
    3254:	8d 8f       	std	Y+29, r24	; 0x1d
	/* RS = 1 (Command mode) */
	DIO_voidSetPinValue(CLCD_Control_Port, CLCD_RS_PIN, DIO_u8HIGH); //send commend
    3256:	82 e0       	ldi	r24, 0x02	; 2
    3258:	60 e0       	ldi	r22, 0x00	; 0
    325a:	41 e0       	ldi	r20, 0x01	; 1
    325c:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
	/* RW = 0 (Write mode) */
	DIO_voidSetPinValue(CLCD_Control_Port, CLCD_RW_PIN, DIO_u8LOW);
    3260:	82 e0       	ldi	r24, 0x02	; 2
    3262:	61 e0       	ldi	r22, 0x01	; 1
    3264:	40 e0       	ldi	r20, 0x00	; 0
    3266:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
	/* send command through the port */
	DIO_voidSetPortValue(CLCD_Data_Port, Data); //function set
    326a:	81 e0       	ldi	r24, 0x01	; 1
    326c:	6d 8d       	ldd	r22, Y+29	; 0x1d
    326e:	0e 94 c6 14 	call	0x298c	; 0x298c <DIO_voidSetPortValue>
	/* Enable sequence */
	DIO_voidSetPinValue(CLCD_Control_Port, CLCD_EN_PIN, DIO_u8HIGH);
    3272:	82 e0       	ldi	r24, 0x02	; 2
    3274:	62 e0       	ldi	r22, 0x02	; 2
    3276:	41 e0       	ldi	r20, 0x01	; 1
    3278:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
    327c:	80 e0       	ldi	r24, 0x00	; 0
    327e:	90 e0       	ldi	r25, 0x00	; 0
    3280:	a0 e8       	ldi	r26, 0x80	; 128
    3282:	bf e3       	ldi	r27, 0x3F	; 63
    3284:	89 8f       	std	Y+25, r24	; 0x19
    3286:	9a 8f       	std	Y+26, r25	; 0x1a
    3288:	ab 8f       	std	Y+27, r26	; 0x1b
    328a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    328c:	69 8d       	ldd	r22, Y+25	; 0x19
    328e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3290:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3292:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3294:	20 e0       	ldi	r18, 0x00	; 0
    3296:	30 e0       	ldi	r19, 0x00	; 0
    3298:	4a ef       	ldi	r20, 0xFA	; 250
    329a:	54 e4       	ldi	r21, 0x44	; 68
    329c:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    32a0:	dc 01       	movw	r26, r24
    32a2:	cb 01       	movw	r24, r22
    32a4:	8d 8b       	std	Y+21, r24	; 0x15
    32a6:	9e 8b       	std	Y+22, r25	; 0x16
    32a8:	af 8b       	std	Y+23, r26	; 0x17
    32aa:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    32ac:	6d 89       	ldd	r22, Y+21	; 0x15
    32ae:	7e 89       	ldd	r23, Y+22	; 0x16
    32b0:	8f 89       	ldd	r24, Y+23	; 0x17
    32b2:	98 8d       	ldd	r25, Y+24	; 0x18
    32b4:	20 e0       	ldi	r18, 0x00	; 0
    32b6:	30 e0       	ldi	r19, 0x00	; 0
    32b8:	40 e8       	ldi	r20, 0x80	; 128
    32ba:	5f e3       	ldi	r21, 0x3F	; 63
    32bc:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    32c0:	88 23       	and	r24, r24
    32c2:	2c f4       	brge	.+10     	; 0x32ce <CLCD_WriteData+0x8e>
		__ticks = 1;
    32c4:	81 e0       	ldi	r24, 0x01	; 1
    32c6:	90 e0       	ldi	r25, 0x00	; 0
    32c8:	9c 8b       	std	Y+20, r25	; 0x14
    32ca:	8b 8b       	std	Y+19, r24	; 0x13
    32cc:	3f c0       	rjmp	.+126    	; 0x334c <CLCD_WriteData+0x10c>
	else if (__tmp > 65535)
    32ce:	6d 89       	ldd	r22, Y+21	; 0x15
    32d0:	7e 89       	ldd	r23, Y+22	; 0x16
    32d2:	8f 89       	ldd	r24, Y+23	; 0x17
    32d4:	98 8d       	ldd	r25, Y+24	; 0x18
    32d6:	20 e0       	ldi	r18, 0x00	; 0
    32d8:	3f ef       	ldi	r19, 0xFF	; 255
    32da:	4f e7       	ldi	r20, 0x7F	; 127
    32dc:	57 e4       	ldi	r21, 0x47	; 71
    32de:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    32e2:	18 16       	cp	r1, r24
    32e4:	4c f5       	brge	.+82     	; 0x3338 <CLCD_WriteData+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32e6:	69 8d       	ldd	r22, Y+25	; 0x19
    32e8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    32ea:	8b 8d       	ldd	r24, Y+27	; 0x1b
    32ec:	9c 8d       	ldd	r25, Y+28	; 0x1c
    32ee:	20 e0       	ldi	r18, 0x00	; 0
    32f0:	30 e0       	ldi	r19, 0x00	; 0
    32f2:	40 e2       	ldi	r20, 0x20	; 32
    32f4:	51 e4       	ldi	r21, 0x41	; 65
    32f6:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    32fa:	dc 01       	movw	r26, r24
    32fc:	cb 01       	movw	r24, r22
    32fe:	bc 01       	movw	r22, r24
    3300:	cd 01       	movw	r24, r26
    3302:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3306:	dc 01       	movw	r26, r24
    3308:	cb 01       	movw	r24, r22
    330a:	9c 8b       	std	Y+20, r25	; 0x14
    330c:	8b 8b       	std	Y+19, r24	; 0x13
    330e:	0f c0       	rjmp	.+30     	; 0x332e <CLCD_WriteData+0xee>
    3310:	88 ec       	ldi	r24, 0xC8	; 200
    3312:	90 e0       	ldi	r25, 0x00	; 0
    3314:	9a 8b       	std	Y+18, r25	; 0x12
    3316:	89 8b       	std	Y+17, r24	; 0x11
    3318:	89 89       	ldd	r24, Y+17	; 0x11
    331a:	9a 89       	ldd	r25, Y+18	; 0x12
    331c:	01 97       	sbiw	r24, 0x01	; 1
    331e:	f1 f7       	brne	.-4      	; 0x331c <CLCD_WriteData+0xdc>
    3320:	9a 8b       	std	Y+18, r25	; 0x12
    3322:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3324:	8b 89       	ldd	r24, Y+19	; 0x13
    3326:	9c 89       	ldd	r25, Y+20	; 0x14
    3328:	01 97       	sbiw	r24, 0x01	; 1
    332a:	9c 8b       	std	Y+20, r25	; 0x14
    332c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    332e:	8b 89       	ldd	r24, Y+19	; 0x13
    3330:	9c 89       	ldd	r25, Y+20	; 0x14
    3332:	00 97       	sbiw	r24, 0x00	; 0
    3334:	69 f7       	brne	.-38     	; 0x3310 <CLCD_WriteData+0xd0>
    3336:	14 c0       	rjmp	.+40     	; 0x3360 <CLCD_WriteData+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3338:	6d 89       	ldd	r22, Y+21	; 0x15
    333a:	7e 89       	ldd	r23, Y+22	; 0x16
    333c:	8f 89       	ldd	r24, Y+23	; 0x17
    333e:	98 8d       	ldd	r25, Y+24	; 0x18
    3340:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3344:	dc 01       	movw	r26, r24
    3346:	cb 01       	movw	r24, r22
    3348:	9c 8b       	std	Y+20, r25	; 0x14
    334a:	8b 8b       	std	Y+19, r24	; 0x13
    334c:	8b 89       	ldd	r24, Y+19	; 0x13
    334e:	9c 89       	ldd	r25, Y+20	; 0x14
    3350:	98 8b       	std	Y+16, r25	; 0x10
    3352:	8f 87       	std	Y+15, r24	; 0x0f
    3354:	8f 85       	ldd	r24, Y+15	; 0x0f
    3356:	98 89       	ldd	r25, Y+16	; 0x10
    3358:	01 97       	sbiw	r24, 0x01	; 1
    335a:	f1 f7       	brne	.-4      	; 0x3358 <CLCD_WriteData+0x118>
    335c:	98 8b       	std	Y+16, r25	; 0x10
    335e:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_voidSetPinValue(CLCD_Control_Port,CLCD_EN_PIN, DIO_u8LOW);
    3360:	82 e0       	ldi	r24, 0x02	; 2
    3362:	62 e0       	ldi	r22, 0x02	; 2
    3364:	40 e0       	ldi	r20, 0x00	; 0
    3366:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
    336a:	80 e0       	ldi	r24, 0x00	; 0
    336c:	90 e0       	ldi	r25, 0x00	; 0
    336e:	a0 e8       	ldi	r26, 0x80	; 128
    3370:	bf e3       	ldi	r27, 0x3F	; 63
    3372:	8b 87       	std	Y+11, r24	; 0x0b
    3374:	9c 87       	std	Y+12, r25	; 0x0c
    3376:	ad 87       	std	Y+13, r26	; 0x0d
    3378:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    337a:	6b 85       	ldd	r22, Y+11	; 0x0b
    337c:	7c 85       	ldd	r23, Y+12	; 0x0c
    337e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3380:	9e 85       	ldd	r25, Y+14	; 0x0e
    3382:	20 e0       	ldi	r18, 0x00	; 0
    3384:	30 e0       	ldi	r19, 0x00	; 0
    3386:	4a ef       	ldi	r20, 0xFA	; 250
    3388:	54 e4       	ldi	r21, 0x44	; 68
    338a:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    338e:	dc 01       	movw	r26, r24
    3390:	cb 01       	movw	r24, r22
    3392:	8f 83       	std	Y+7, r24	; 0x07
    3394:	98 87       	std	Y+8, r25	; 0x08
    3396:	a9 87       	std	Y+9, r26	; 0x09
    3398:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    339a:	6f 81       	ldd	r22, Y+7	; 0x07
    339c:	78 85       	ldd	r23, Y+8	; 0x08
    339e:	89 85       	ldd	r24, Y+9	; 0x09
    33a0:	9a 85       	ldd	r25, Y+10	; 0x0a
    33a2:	20 e0       	ldi	r18, 0x00	; 0
    33a4:	30 e0       	ldi	r19, 0x00	; 0
    33a6:	40 e8       	ldi	r20, 0x80	; 128
    33a8:	5f e3       	ldi	r21, 0x3F	; 63
    33aa:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    33ae:	88 23       	and	r24, r24
    33b0:	2c f4       	brge	.+10     	; 0x33bc <CLCD_WriteData+0x17c>
		__ticks = 1;
    33b2:	81 e0       	ldi	r24, 0x01	; 1
    33b4:	90 e0       	ldi	r25, 0x00	; 0
    33b6:	9e 83       	std	Y+6, r25	; 0x06
    33b8:	8d 83       	std	Y+5, r24	; 0x05
    33ba:	3f c0       	rjmp	.+126    	; 0x343a <CLCD_WriteData+0x1fa>
	else if (__tmp > 65535)
    33bc:	6f 81       	ldd	r22, Y+7	; 0x07
    33be:	78 85       	ldd	r23, Y+8	; 0x08
    33c0:	89 85       	ldd	r24, Y+9	; 0x09
    33c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    33c4:	20 e0       	ldi	r18, 0x00	; 0
    33c6:	3f ef       	ldi	r19, 0xFF	; 255
    33c8:	4f e7       	ldi	r20, 0x7F	; 127
    33ca:	57 e4       	ldi	r21, 0x47	; 71
    33cc:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    33d0:	18 16       	cp	r1, r24
    33d2:	4c f5       	brge	.+82     	; 0x3426 <CLCD_WriteData+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33d4:	6b 85       	ldd	r22, Y+11	; 0x0b
    33d6:	7c 85       	ldd	r23, Y+12	; 0x0c
    33d8:	8d 85       	ldd	r24, Y+13	; 0x0d
    33da:	9e 85       	ldd	r25, Y+14	; 0x0e
    33dc:	20 e0       	ldi	r18, 0x00	; 0
    33de:	30 e0       	ldi	r19, 0x00	; 0
    33e0:	40 e2       	ldi	r20, 0x20	; 32
    33e2:	51 e4       	ldi	r21, 0x41	; 65
    33e4:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    33e8:	dc 01       	movw	r26, r24
    33ea:	cb 01       	movw	r24, r22
    33ec:	bc 01       	movw	r22, r24
    33ee:	cd 01       	movw	r24, r26
    33f0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33f4:	dc 01       	movw	r26, r24
    33f6:	cb 01       	movw	r24, r22
    33f8:	9e 83       	std	Y+6, r25	; 0x06
    33fa:	8d 83       	std	Y+5, r24	; 0x05
    33fc:	0f c0       	rjmp	.+30     	; 0x341c <CLCD_WriteData+0x1dc>
    33fe:	88 ec       	ldi	r24, 0xC8	; 200
    3400:	90 e0       	ldi	r25, 0x00	; 0
    3402:	9c 83       	std	Y+4, r25	; 0x04
    3404:	8b 83       	std	Y+3, r24	; 0x03
    3406:	8b 81       	ldd	r24, Y+3	; 0x03
    3408:	9c 81       	ldd	r25, Y+4	; 0x04
    340a:	01 97       	sbiw	r24, 0x01	; 1
    340c:	f1 f7       	brne	.-4      	; 0x340a <CLCD_WriteData+0x1ca>
    340e:	9c 83       	std	Y+4, r25	; 0x04
    3410:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3412:	8d 81       	ldd	r24, Y+5	; 0x05
    3414:	9e 81       	ldd	r25, Y+6	; 0x06
    3416:	01 97       	sbiw	r24, 0x01	; 1
    3418:	9e 83       	std	Y+6, r25	; 0x06
    341a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    341c:	8d 81       	ldd	r24, Y+5	; 0x05
    341e:	9e 81       	ldd	r25, Y+6	; 0x06
    3420:	00 97       	sbiw	r24, 0x00	; 0
    3422:	69 f7       	brne	.-38     	; 0x33fe <CLCD_WriteData+0x1be>
    3424:	14 c0       	rjmp	.+40     	; 0x344e <CLCD_WriteData+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3426:	6f 81       	ldd	r22, Y+7	; 0x07
    3428:	78 85       	ldd	r23, Y+8	; 0x08
    342a:	89 85       	ldd	r24, Y+9	; 0x09
    342c:	9a 85       	ldd	r25, Y+10	; 0x0a
    342e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3432:	dc 01       	movw	r26, r24
    3434:	cb 01       	movw	r24, r22
    3436:	9e 83       	std	Y+6, r25	; 0x06
    3438:	8d 83       	std	Y+5, r24	; 0x05
    343a:	8d 81       	ldd	r24, Y+5	; 0x05
    343c:	9e 81       	ldd	r25, Y+6	; 0x06
    343e:	9a 83       	std	Y+2, r25	; 0x02
    3440:	89 83       	std	Y+1, r24	; 0x01
    3442:	89 81       	ldd	r24, Y+1	; 0x01
    3444:	9a 81       	ldd	r25, Y+2	; 0x02
    3446:	01 97       	sbiw	r24, 0x01	; 1
    3448:	f1 f7       	brne	.-4      	; 0x3446 <CLCD_WriteData+0x206>
    344a:	9a 83       	std	Y+2, r25	; 0x02
    344c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    344e:	6d 96       	adiw	r28, 0x1d	; 29
    3450:	0f b6       	in	r0, 0x3f	; 63
    3452:	f8 94       	cli
    3454:	de bf       	out	0x3e, r29	; 62
    3456:	0f be       	out	0x3f, r0	; 63
    3458:	cd bf       	out	0x3d, r28	; 61
    345a:	cf 91       	pop	r28
    345c:	df 91       	pop	r29
    345e:	08 95       	ret

00003460 <CLCD_WriteChar>:

void CLCD_WriteChar(u8 Char){
    3460:	df 93       	push	r29
    3462:	cf 93       	push	r28
    3464:	0f 92       	push	r0
    3466:	cd b7       	in	r28, 0x3d	; 61
    3468:	de b7       	in	r29, 0x3e	; 62
    346a:	89 83       	std	Y+1, r24	; 0x01
	CLCD_WriteData(Char);
    346c:	89 81       	ldd	r24, Y+1	; 0x01
    346e:	0e 94 20 19 	call	0x3240	; 0x3240 <CLCD_WriteData>
}
    3472:	0f 90       	pop	r0
    3474:	cf 91       	pop	r28
    3476:	df 91       	pop	r29
    3478:	08 95       	ret

0000347a <CLCD_WriteString>:

void CLCD_WriteString(u8 * String){
    347a:	df 93       	push	r29
    347c:	cf 93       	push	r28
    347e:	00 d0       	rcall	.+0      	; 0x3480 <CLCD_WriteString+0x6>
    3480:	cd b7       	in	r28, 0x3d	; 61
    3482:	de b7       	in	r29, 0x3e	; 62
    3484:	9a 83       	std	Y+2, r25	; 0x02
    3486:	89 83       	std	Y+1, r24	; 0x01
    3488:	0a c0       	rjmp	.+20     	; 0x349e <CLCD_WriteString+0x24>
	while (*String != '\0'){
		CLCD_WriteData(*String);
    348a:	e9 81       	ldd	r30, Y+1	; 0x01
    348c:	fa 81       	ldd	r31, Y+2	; 0x02
    348e:	80 81       	ld	r24, Z
    3490:	0e 94 20 19 	call	0x3240	; 0x3240 <CLCD_WriteData>
		String++;
    3494:	89 81       	ldd	r24, Y+1	; 0x01
    3496:	9a 81       	ldd	r25, Y+2	; 0x02
    3498:	01 96       	adiw	r24, 0x01	; 1
    349a:	9a 83       	std	Y+2, r25	; 0x02
    349c:	89 83       	std	Y+1, r24	; 0x01
void CLCD_WriteChar(u8 Char){
	CLCD_WriteData(Char);
}

void CLCD_WriteString(u8 * String){
	while (*String != '\0'){
    349e:	e9 81       	ldd	r30, Y+1	; 0x01
    34a0:	fa 81       	ldd	r31, Y+2	; 0x02
    34a2:	80 81       	ld	r24, Z
    34a4:	88 23       	and	r24, r24
    34a6:	89 f7       	brne	.-30     	; 0x348a <CLCD_WriteString+0x10>
		CLCD_WriteData(*String);
		String++;
	}
}
    34a8:	0f 90       	pop	r0
    34aa:	0f 90       	pop	r0
    34ac:	cf 91       	pop	r28
    34ae:	df 91       	pop	r29
    34b0:	08 95       	ret

000034b2 <CLCD_GoTo>:

void CLCD_GoTo(u8 Row, u8 Col){
    34b2:	df 93       	push	r29
    34b4:	cf 93       	push	r28
    34b6:	00 d0       	rcall	.+0      	; 0x34b8 <CLCD_GoTo+0x6>
    34b8:	00 d0       	rcall	.+0      	; 0x34ba <CLCD_GoTo+0x8>
    34ba:	cd b7       	in	r28, 0x3d	; 61
    34bc:	de b7       	in	r29, 0x3e	; 62
    34be:	89 83       	std	Y+1, r24	; 0x01
    34c0:	6a 83       	std	Y+2, r22	; 0x02
	Col--;
    34c2:	8a 81       	ldd	r24, Y+2	; 0x02
    34c4:	81 50       	subi	r24, 0x01	; 1
    34c6:	8a 83       	std	Y+2, r24	; 0x02
	Row--;
    34c8:	89 81       	ldd	r24, Y+1	; 0x01
    34ca:	81 50       	subi	r24, 0x01	; 1
    34cc:	89 83       	std	Y+1, r24	; 0x01

	switch(Row)
    34ce:	89 81       	ldd	r24, Y+1	; 0x01
    34d0:	28 2f       	mov	r18, r24
    34d2:	30 e0       	ldi	r19, 0x00	; 0
    34d4:	3c 83       	std	Y+4, r19	; 0x04
    34d6:	2b 83       	std	Y+3, r18	; 0x03
    34d8:	8b 81       	ldd	r24, Y+3	; 0x03
    34da:	9c 81       	ldd	r25, Y+4	; 0x04
    34dc:	00 97       	sbiw	r24, 0x00	; 0
    34de:	31 f0       	breq	.+12     	; 0x34ec <CLCD_GoTo+0x3a>
    34e0:	2b 81       	ldd	r18, Y+3	; 0x03
    34e2:	3c 81       	ldd	r19, Y+4	; 0x04
    34e4:	21 30       	cpi	r18, 0x01	; 1
    34e6:	31 05       	cpc	r19, r1
    34e8:	31 f0       	breq	.+12     	; 0x34f6 <CLCD_GoTo+0x44>
    34ea:	09 c0       	rjmp	.+18     	; 0x34fe <CLCD_GoTo+0x4c>
	{
		case 0: CLCD_WriteInes(0x80+Col); break;
    34ec:	8a 81       	ldd	r24, Y+2	; 0x02
    34ee:	80 58       	subi	r24, 0x80	; 128
    34f0:	0e 94 10 18 	call	0x3020	; 0x3020 <CLCD_WriteInes>
    34f4:	04 c0       	rjmp	.+8      	; 0x34fe <CLCD_GoTo+0x4c>
		case 1: CLCD_WriteInes(0xC0+Col); break;
    34f6:	8a 81       	ldd	r24, Y+2	; 0x02
    34f8:	80 54       	subi	r24, 0x40	; 64
    34fa:	0e 94 10 18 	call	0x3020	; 0x3020 <CLCD_WriteInes>
	}
}
    34fe:	0f 90       	pop	r0
    3500:	0f 90       	pop	r0
    3502:	0f 90       	pop	r0
    3504:	0f 90       	pop	r0
    3506:	cf 91       	pop	r28
    3508:	df 91       	pop	r29
    350a:	08 95       	ret

0000350c <CLCD_DisplayClear>:

void CLCD_DisplayClear(void){
    350c:	df 93       	push	r29
    350e:	cf 93       	push	r28
    3510:	cd b7       	in	r28, 0x3d	; 61
    3512:	de b7       	in	r29, 0x3e	; 62
	CLCD_WriteInes(0x01);
    3514:	81 e0       	ldi	r24, 0x01	; 1
    3516:	0e 94 10 18 	call	0x3020	; 0x3020 <CLCD_WriteInes>
}
    351a:	cf 91       	pop	r28
    351c:	df 91       	pop	r29
    351e:	08 95       	ret

00003520 <ConvertNumToASCII>:

u8 ConvertNumToASCII(u8 Input){
    3520:	df 93       	push	r29
    3522:	cf 93       	push	r28
    3524:	0f 92       	push	r0
    3526:	cd b7       	in	r28, 0x3d	; 61
    3528:	de b7       	in	r29, 0x3e	; 62
    352a:	89 83       	std	Y+1, r24	; 0x01
	return Input+0x30;
    352c:	89 81       	ldd	r24, Y+1	; 0x01
    352e:	80 5d       	subi	r24, 0xD0	; 208
}
    3530:	0f 90       	pop	r0
    3532:	cf 91       	pop	r28
    3534:	df 91       	pop	r29
    3536:	08 95       	ret

00003538 <CLCD_ReverseNumber>:

s32 CLCD_ReverseNumber(s32 NUM){
    3538:	ef 92       	push	r14
    353a:	ff 92       	push	r15
    353c:	0f 93       	push	r16
    353e:	1f 93       	push	r17
    3540:	df 93       	push	r29
    3542:	cf 93       	push	r28
    3544:	cd b7       	in	r28, 0x3d	; 61
    3546:	de b7       	in	r29, 0x3e	; 62
    3548:	28 97       	sbiw	r28, 0x08	; 8
    354a:	0f b6       	in	r0, 0x3f	; 63
    354c:	f8 94       	cli
    354e:	de bf       	out	0x3e, r29	; 62
    3550:	0f be       	out	0x3f, r0	; 63
    3552:	cd bf       	out	0x3d, r28	; 61
    3554:	6d 83       	std	Y+5, r22	; 0x05
    3556:	7e 83       	std	Y+6, r23	; 0x06
    3558:	8f 83       	std	Y+7, r24	; 0x07
    355a:	98 87       	std	Y+8, r25	; 0x08
	u32 reverse=1;
    355c:	81 e0       	ldi	r24, 0x01	; 1
    355e:	90 e0       	ldi	r25, 0x00	; 0
    3560:	a0 e0       	ldi	r26, 0x00	; 0
    3562:	b0 e0       	ldi	r27, 0x00	; 0
    3564:	89 83       	std	Y+1, r24	; 0x01
    3566:	9a 83       	std	Y+2, r25	; 0x02
    3568:	ab 83       	std	Y+3, r26	; 0x03
    356a:	bc 83       	std	Y+4, r27	; 0x04
    356c:	36 c0       	rjmp	.+108    	; 0x35da <CLCD_ReverseNumber+0xa2>
	while(NUM!=0)
	{
		reverse=(reverse*10)+(NUM%10);
    356e:	89 81       	ldd	r24, Y+1	; 0x01
    3570:	9a 81       	ldd	r25, Y+2	; 0x02
    3572:	ab 81       	ldd	r26, Y+3	; 0x03
    3574:	bc 81       	ldd	r27, Y+4	; 0x04
    3576:	2a e0       	ldi	r18, 0x0A	; 10
    3578:	30 e0       	ldi	r19, 0x00	; 0
    357a:	40 e0       	ldi	r20, 0x00	; 0
    357c:	50 e0       	ldi	r21, 0x00	; 0
    357e:	bc 01       	movw	r22, r24
    3580:	cd 01       	movw	r24, r26
    3582:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
    3586:	7b 01       	movw	r14, r22
    3588:	8c 01       	movw	r16, r24
    358a:	8d 81       	ldd	r24, Y+5	; 0x05
    358c:	9e 81       	ldd	r25, Y+6	; 0x06
    358e:	af 81       	ldd	r26, Y+7	; 0x07
    3590:	b8 85       	ldd	r27, Y+8	; 0x08
    3592:	2a e0       	ldi	r18, 0x0A	; 10
    3594:	30 e0       	ldi	r19, 0x00	; 0
    3596:	40 e0       	ldi	r20, 0x00	; 0
    3598:	50 e0       	ldi	r21, 0x00	; 0
    359a:	bc 01       	movw	r22, r24
    359c:	cd 01       	movw	r24, r26
    359e:	0e 94 f6 1f 	call	0x3fec	; 0x3fec <__divmodsi4>
    35a2:	dc 01       	movw	r26, r24
    35a4:	cb 01       	movw	r24, r22
    35a6:	8e 0d       	add	r24, r14
    35a8:	9f 1d       	adc	r25, r15
    35aa:	a0 1f       	adc	r26, r16
    35ac:	b1 1f       	adc	r27, r17
    35ae:	89 83       	std	Y+1, r24	; 0x01
    35b0:	9a 83       	std	Y+2, r25	; 0x02
    35b2:	ab 83       	std	Y+3, r26	; 0x03
    35b4:	bc 83       	std	Y+4, r27	; 0x04
		NUM/=10;
    35b6:	8d 81       	ldd	r24, Y+5	; 0x05
    35b8:	9e 81       	ldd	r25, Y+6	; 0x06
    35ba:	af 81       	ldd	r26, Y+7	; 0x07
    35bc:	b8 85       	ldd	r27, Y+8	; 0x08
    35be:	2a e0       	ldi	r18, 0x0A	; 10
    35c0:	30 e0       	ldi	r19, 0x00	; 0
    35c2:	40 e0       	ldi	r20, 0x00	; 0
    35c4:	50 e0       	ldi	r21, 0x00	; 0
    35c6:	bc 01       	movw	r22, r24
    35c8:	cd 01       	movw	r24, r26
    35ca:	0e 94 f6 1f 	call	0x3fec	; 0x3fec <__divmodsi4>
    35ce:	da 01       	movw	r26, r20
    35d0:	c9 01       	movw	r24, r18
    35d2:	8d 83       	std	Y+5, r24	; 0x05
    35d4:	9e 83       	std	Y+6, r25	; 0x06
    35d6:	af 83       	std	Y+7, r26	; 0x07
    35d8:	b8 87       	std	Y+8, r27	; 0x08
	return Input+0x30;
}

s32 CLCD_ReverseNumber(s32 NUM){
	u32 reverse=1;
	while(NUM!=0)
    35da:	8d 81       	ldd	r24, Y+5	; 0x05
    35dc:	9e 81       	ldd	r25, Y+6	; 0x06
    35de:	af 81       	ldd	r26, Y+7	; 0x07
    35e0:	b8 85       	ldd	r27, Y+8	; 0x08
    35e2:	00 97       	sbiw	r24, 0x00	; 0
    35e4:	a1 05       	cpc	r26, r1
    35e6:	b1 05       	cpc	r27, r1
    35e8:	11 f6       	brne	.-124    	; 0x356e <CLCD_ReverseNumber+0x36>
	{
		reverse=(reverse*10)+(NUM%10);
		NUM/=10;
	}
	return reverse;
    35ea:	89 81       	ldd	r24, Y+1	; 0x01
    35ec:	9a 81       	ldd	r25, Y+2	; 0x02
    35ee:	ab 81       	ldd	r26, Y+3	; 0x03
    35f0:	bc 81       	ldd	r27, Y+4	; 0x04
}
    35f2:	bc 01       	movw	r22, r24
    35f4:	cd 01       	movw	r24, r26
    35f6:	28 96       	adiw	r28, 0x08	; 8
    35f8:	0f b6       	in	r0, 0x3f	; 63
    35fa:	f8 94       	cli
    35fc:	de bf       	out	0x3e, r29	; 62
    35fe:	0f be       	out	0x3f, r0	; 63
    3600:	cd bf       	out	0x3d, r28	; 61
    3602:	cf 91       	pop	r28
    3604:	df 91       	pop	r29
    3606:	1f 91       	pop	r17
    3608:	0f 91       	pop	r16
    360a:	ff 90       	pop	r15
    360c:	ef 90       	pop	r14
    360e:	08 95       	ret

00003610 <CLCD_WriteNum>:

void CLCD_WriteNum(u64 NUM) {
    3610:	af 92       	push	r10
    3612:	bf 92       	push	r11
    3614:	cf 92       	push	r12
    3616:	df 92       	push	r13
    3618:	ef 92       	push	r14
    361a:	ff 92       	push	r15
    361c:	0f 93       	push	r16
    361e:	1f 93       	push	r17
    3620:	df 93       	push	r29
    3622:	cf 93       	push	r28
    3624:	cd b7       	in	r28, 0x3d	; 61
    3626:	de b7       	in	r29, 0x3e	; 62
    3628:	60 97       	sbiw	r28, 0x10	; 16
    362a:	0f b6       	in	r0, 0x3f	; 63
    362c:	f8 94       	cli
    362e:	de bf       	out	0x3e, r29	; 62
    3630:	0f be       	out	0x3f, r0	; 63
    3632:	cd bf       	out	0x3d, r28	; 61
    3634:	29 87       	std	Y+9, r18	; 0x09
    3636:	3a 87       	std	Y+10, r19	; 0x0a
    3638:	4b 87       	std	Y+11, r20	; 0x0b
    363a:	5c 87       	std	Y+12, r21	; 0x0c
    363c:	6d 87       	std	Y+13, r22	; 0x0d
    363e:	7e 87       	std	Y+14, r23	; 0x0e
    3640:	8f 87       	std	Y+15, r24	; 0x0f
    3642:	98 8b       	std	Y+16, r25	; 0x10
	u64 reverse=1;
    3644:	81 e0       	ldi	r24, 0x01	; 1
    3646:	89 83       	std	Y+1, r24	; 0x01
    3648:	1a 82       	std	Y+2, r1	; 0x02
    364a:	1b 82       	std	Y+3, r1	; 0x03
    364c:	1c 82       	std	Y+4, r1	; 0x04
    364e:	1d 82       	std	Y+5, r1	; 0x05
    3650:	1e 82       	std	Y+6, r1	; 0x06
    3652:	1f 82       	std	Y+7, r1	; 0x07
    3654:	18 86       	std	Y+8, r1	; 0x08
	reverse = CLCD_ReverseNumber(NUM);
    3656:	89 85       	ldd	r24, Y+9	; 0x09
    3658:	9a 85       	ldd	r25, Y+10	; 0x0a
    365a:	ab 85       	ldd	r26, Y+11	; 0x0b
    365c:	bc 85       	ldd	r27, Y+12	; 0x0c
    365e:	bc 01       	movw	r22, r24
    3660:	cd 01       	movw	r24, r26
    3662:	0e 94 9c 1a 	call	0x3538	; 0x3538 <CLCD_ReverseNumber>
    3666:	dc 01       	movw	r26, r24
    3668:	cb 01       	movw	r24, r22
    366a:	89 83       	std	Y+1, r24	; 0x01
    366c:	9a 83       	std	Y+2, r25	; 0x02
    366e:	ab 83       	std	Y+3, r26	; 0x03
    3670:	bc 83       	std	Y+4, r27	; 0x04
    3672:	bb 0f       	add	r27, r27
    3674:	88 0b       	sbc	r24, r24
    3676:	98 2f       	mov	r25, r24
    3678:	dc 01       	movw	r26, r24
    367a:	8d 83       	std	Y+5, r24	; 0x05
    367c:	8e 83       	std	Y+6, r24	; 0x06
    367e:	8f 83       	std	Y+7, r24	; 0x07
    3680:	88 87       	std	Y+8, r24	; 0x08
    3682:	5e c0       	rjmp	.+188    	; 0x3740 <CLCD_WriteNum+0x130>
	while(reverse!=1)
	{
		CLCD_WriteData((reverse%10)+48);
    3684:	a9 80       	ldd	r10, Y+1	; 0x01
    3686:	ba 80       	ldd	r11, Y+2	; 0x02
    3688:	cb 80       	ldd	r12, Y+3	; 0x03
    368a:	dc 80       	ldd	r13, Y+4	; 0x04
    368c:	ed 80       	ldd	r14, Y+5	; 0x05
    368e:	fe 80       	ldd	r15, Y+6	; 0x06
    3690:	0f 81       	ldd	r16, Y+7	; 0x07
    3692:	18 85       	ldd	r17, Y+8	; 0x08
    3694:	2a 2d       	mov	r18, r10
    3696:	3b 2d       	mov	r19, r11
    3698:	4c 2d       	mov	r20, r12
    369a:	5d 2d       	mov	r21, r13
    369c:	6e 2d       	mov	r22, r14
    369e:	7f 2d       	mov	r23, r15
    36a0:	80 2f       	mov	r24, r16
    36a2:	91 2f       	mov	r25, r17
    36a4:	0f 2e       	mov	r0, r31
    36a6:	fa e0       	ldi	r31, 0x0A	; 10
    36a8:	af 2e       	mov	r10, r31
    36aa:	f0 2d       	mov	r31, r0
    36ac:	bb 24       	eor	r11, r11
    36ae:	cc 24       	eor	r12, r12
    36b0:	dd 24       	eor	r13, r13
    36b2:	ee 24       	eor	r14, r14
    36b4:	ff 24       	eor	r15, r15
    36b6:	00 e0       	ldi	r16, 0x00	; 0
    36b8:	10 e0       	ldi	r17, 0x00	; 0
    36ba:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <__umoddi3>
    36be:	a2 2e       	mov	r10, r18
    36c0:	b3 2e       	mov	r11, r19
    36c2:	c4 2e       	mov	r12, r20
    36c4:	d5 2e       	mov	r13, r21
    36c6:	e6 2e       	mov	r14, r22
    36c8:	f7 2e       	mov	r15, r23
    36ca:	08 2f       	mov	r16, r24
    36cc:	19 2f       	mov	r17, r25
    36ce:	2a 2d       	mov	r18, r10
    36d0:	3b 2d       	mov	r19, r11
    36d2:	4c 2d       	mov	r20, r12
    36d4:	5d 2d       	mov	r21, r13
    36d6:	6e 2d       	mov	r22, r14
    36d8:	7f 2d       	mov	r23, r15
    36da:	80 2f       	mov	r24, r16
    36dc:	91 2f       	mov	r25, r17
    36de:	82 2f       	mov	r24, r18
    36e0:	80 5d       	subi	r24, 0xD0	; 208
    36e2:	0e 94 20 19 	call	0x3240	; 0x3240 <CLCD_WriteData>
		reverse/=10;
    36e6:	a9 80       	ldd	r10, Y+1	; 0x01
    36e8:	ba 80       	ldd	r11, Y+2	; 0x02
    36ea:	cb 80       	ldd	r12, Y+3	; 0x03
    36ec:	dc 80       	ldd	r13, Y+4	; 0x04
    36ee:	ed 80       	ldd	r14, Y+5	; 0x05
    36f0:	fe 80       	ldd	r15, Y+6	; 0x06
    36f2:	0f 81       	ldd	r16, Y+7	; 0x07
    36f4:	18 85       	ldd	r17, Y+8	; 0x08
    36f6:	2a 2d       	mov	r18, r10
    36f8:	3b 2d       	mov	r19, r11
    36fa:	4c 2d       	mov	r20, r12
    36fc:	5d 2d       	mov	r21, r13
    36fe:	6e 2d       	mov	r22, r14
    3700:	7f 2d       	mov	r23, r15
    3702:	80 2f       	mov	r24, r16
    3704:	91 2f       	mov	r25, r17
    3706:	0f 2e       	mov	r0, r31
    3708:	fa e0       	ldi	r31, 0x0A	; 10
    370a:	af 2e       	mov	r10, r31
    370c:	f0 2d       	mov	r31, r0
    370e:	bb 24       	eor	r11, r11
    3710:	cc 24       	eor	r12, r12
    3712:	dd 24       	eor	r13, r13
    3714:	ee 24       	eor	r14, r14
    3716:	ff 24       	eor	r15, r15
    3718:	00 e0       	ldi	r16, 0x00	; 0
    371a:	10 e0       	ldi	r17, 0x00	; 0
    371c:	0e 94 6d 00 	call	0xda	; 0xda <__udivdi3>
    3720:	a2 2e       	mov	r10, r18
    3722:	b3 2e       	mov	r11, r19
    3724:	c4 2e       	mov	r12, r20
    3726:	d5 2e       	mov	r13, r21
    3728:	e6 2e       	mov	r14, r22
    372a:	f7 2e       	mov	r15, r23
    372c:	08 2f       	mov	r16, r24
    372e:	19 2f       	mov	r17, r25
    3730:	a9 82       	std	Y+1, r10	; 0x01
    3732:	ba 82       	std	Y+2, r11	; 0x02
    3734:	cb 82       	std	Y+3, r12	; 0x03
    3736:	dc 82       	std	Y+4, r13	; 0x04
    3738:	ed 82       	std	Y+5, r14	; 0x05
    373a:	fe 82       	std	Y+6, r15	; 0x06
    373c:	0f 83       	std	Y+7, r16	; 0x07
    373e:	18 87       	std	Y+8, r17	; 0x08
}

void CLCD_WriteNum(u64 NUM) {
	u64 reverse=1;
	reverse = CLCD_ReverseNumber(NUM);
	while(reverse!=1)
    3740:	89 81       	ldd	r24, Y+1	; 0x01
    3742:	81 30       	cpi	r24, 0x01	; 1
    3744:	09 f0       	breq	.+2      	; 0x3748 <CLCD_WriteNum+0x138>
    3746:	9e cf       	rjmp	.-196    	; 0x3684 <CLCD_WriteNum+0x74>
    3748:	8a 81       	ldd	r24, Y+2	; 0x02
    374a:	88 23       	and	r24, r24
    374c:	09 f0       	breq	.+2      	; 0x3750 <CLCD_WriteNum+0x140>
    374e:	9a cf       	rjmp	.-204    	; 0x3684 <CLCD_WriteNum+0x74>
    3750:	8b 81       	ldd	r24, Y+3	; 0x03
    3752:	88 23       	and	r24, r24
    3754:	09 f0       	breq	.+2      	; 0x3758 <CLCD_WriteNum+0x148>
    3756:	96 cf       	rjmp	.-212    	; 0x3684 <CLCD_WriteNum+0x74>
    3758:	8c 81       	ldd	r24, Y+4	; 0x04
    375a:	88 23       	and	r24, r24
    375c:	09 f0       	breq	.+2      	; 0x3760 <CLCD_WriteNum+0x150>
    375e:	92 cf       	rjmp	.-220    	; 0x3684 <CLCD_WriteNum+0x74>
    3760:	8d 81       	ldd	r24, Y+5	; 0x05
    3762:	88 23       	and	r24, r24
    3764:	09 f0       	breq	.+2      	; 0x3768 <CLCD_WriteNum+0x158>
    3766:	8e cf       	rjmp	.-228    	; 0x3684 <CLCD_WriteNum+0x74>
    3768:	8e 81       	ldd	r24, Y+6	; 0x06
    376a:	88 23       	and	r24, r24
    376c:	09 f0       	breq	.+2      	; 0x3770 <CLCD_WriteNum+0x160>
    376e:	8a cf       	rjmp	.-236    	; 0x3684 <CLCD_WriteNum+0x74>
    3770:	8f 81       	ldd	r24, Y+7	; 0x07
    3772:	88 23       	and	r24, r24
    3774:	09 f0       	breq	.+2      	; 0x3778 <CLCD_WriteNum+0x168>
    3776:	86 cf       	rjmp	.-244    	; 0x3684 <CLCD_WriteNum+0x74>
    3778:	88 85       	ldd	r24, Y+8	; 0x08
    377a:	88 23       	and	r24, r24
    377c:	09 f0       	breq	.+2      	; 0x3780 <CLCD_WriteNum+0x170>
    377e:	82 cf       	rjmp	.-252    	; 0x3684 <CLCD_WriteNum+0x74>
	{
		CLCD_WriteData((reverse%10)+48);
		reverse/=10;
	}
}
    3780:	60 96       	adiw	r28, 0x10	; 16
    3782:	0f b6       	in	r0, 0x3f	; 63
    3784:	f8 94       	cli
    3786:	de bf       	out	0x3e, r29	; 62
    3788:	0f be       	out	0x3f, r0	; 63
    378a:	cd bf       	out	0x3d, r28	; 61
    378c:	cf 91       	pop	r28
    378e:	df 91       	pop	r29
    3790:	1f 91       	pop	r17
    3792:	0f 91       	pop	r16
    3794:	ff 90       	pop	r15
    3796:	ef 90       	pop	r14
    3798:	df 90       	pop	r13
    379a:	cf 90       	pop	r12
    379c:	bf 90       	pop	r11
    379e:	af 90       	pop	r10
    37a0:	08 95       	ret

000037a2 <CLCD_PrintBinary>:

void CLCD_PrintBinary(u8 num){
    37a2:	df 93       	push	r29
    37a4:	cf 93       	push	r28
    37a6:	00 d0       	rcall	.+0      	; 0x37a8 <CLCD_PrintBinary+0x6>
    37a8:	0f 92       	push	r0
    37aa:	cd b7       	in	r28, 0x3d	; 61
    37ac:	de b7       	in	r29, 0x3e	; 62
    37ae:	8a 83       	std	Y+2, r24	; 0x02
	for(s8 i=7; i>=0; i--){
    37b0:	87 e0       	ldi	r24, 0x07	; 7
    37b2:	89 83       	std	Y+1, r24	; 0x01
    37b4:	1d c0       	rjmp	.+58     	; 0x37f0 <CLCD_PrintBinary+0x4e>
		CLCD_WriteData(GET_BIT(num,i)?'1':'0');
    37b6:	8a 81       	ldd	r24, Y+2	; 0x02
    37b8:	28 2f       	mov	r18, r24
    37ba:	30 e0       	ldi	r19, 0x00	; 0
    37bc:	89 81       	ldd	r24, Y+1	; 0x01
    37be:	99 27       	eor	r25, r25
    37c0:	87 fd       	sbrc	r24, 7
    37c2:	90 95       	com	r25
    37c4:	a9 01       	movw	r20, r18
    37c6:	02 c0       	rjmp	.+4      	; 0x37cc <CLCD_PrintBinary+0x2a>
    37c8:	55 95       	asr	r21
    37ca:	47 95       	ror	r20
    37cc:	8a 95       	dec	r24
    37ce:	e2 f7       	brpl	.-8      	; 0x37c8 <CLCD_PrintBinary+0x26>
    37d0:	ca 01       	movw	r24, r20
    37d2:	81 70       	andi	r24, 0x01	; 1
    37d4:	90 70       	andi	r25, 0x00	; 0
    37d6:	88 23       	and	r24, r24
    37d8:	19 f0       	breq	.+6      	; 0x37e0 <CLCD_PrintBinary+0x3e>
    37da:	51 e3       	ldi	r21, 0x31	; 49
    37dc:	5b 83       	std	Y+3, r21	; 0x03
    37de:	02 c0       	rjmp	.+4      	; 0x37e4 <CLCD_PrintBinary+0x42>
    37e0:	80 e3       	ldi	r24, 0x30	; 48
    37e2:	8b 83       	std	Y+3, r24	; 0x03
    37e4:	8b 81       	ldd	r24, Y+3	; 0x03
    37e6:	0e 94 20 19 	call	0x3240	; 0x3240 <CLCD_WriteData>
		reverse/=10;
	}
}

void CLCD_PrintBinary(u8 num){
	for(s8 i=7; i>=0; i--){
    37ea:	89 81       	ldd	r24, Y+1	; 0x01
    37ec:	81 50       	subi	r24, 0x01	; 1
    37ee:	89 83       	std	Y+1, r24	; 0x01
    37f0:	89 81       	ldd	r24, Y+1	; 0x01
    37f2:	88 23       	and	r24, r24
    37f4:	04 f7       	brge	.-64     	; 0x37b6 <CLCD_PrintBinary+0x14>
		CLCD_WriteData(GET_BIT(num,i)?'1':'0');
	}
}
    37f6:	0f 90       	pop	r0
    37f8:	0f 90       	pop	r0
    37fa:	0f 90       	pop	r0
    37fc:	cf 91       	pop	r28
    37fe:	df 91       	pop	r29
    3800:	08 95       	ret

00003802 <CLCD_Draw_Char>:
u8 arr_myname[4][8] ={  {0x00,0x04,0x0F,0x01,0x1F,0x00,0x00,0x00},
						{0x00,0x01,0x01,0x01,0x1F,0x00,0x00,0x00},
						{0x00,0x00,0x0E,0x0A,0x0F,0x02,0x04,0x08},
						{0x00,0x00,0x02,0x02,0x0E,0x00,0x00,0x00}
					 };
void CLCD_Draw_Char(u8 Address_Data){
    3802:	df 93       	push	r29
    3804:	cf 93       	push	r28
    3806:	00 d0       	rcall	.+0      	; 0x3808 <CLCD_Draw_Char+0x6>
    3808:	0f 92       	push	r0
    380a:	cd b7       	in	r28, 0x3d	; 61
    380c:	de b7       	in	r29, 0x3e	; 62
    380e:	8b 83       	std	Y+3, r24	; 0x03
	CLCD_WriteInes(0x40); //Set CCGram
    3810:	80 e4       	ldi	r24, 0x40	; 64
    3812:	0e 94 10 18 	call	0x3020	; 0x3020 <CLCD_WriteInes>
	for(u8 i=0; i<4; i++){
    3816:	1a 82       	std	Y+2, r1	; 0x02
    3818:	20 c0       	rjmp	.+64     	; 0x385a <CLCD_Draw_Char+0x58>
		for(u8 j=0; j<8; j++){
    381a:	19 82       	std	Y+1, r1	; 0x01
    381c:	18 c0       	rjmp	.+48     	; 0x384e <CLCD_Draw_Char+0x4c>
			CLCD_WriteData(arr_myname[i][j]);
    381e:	8a 81       	ldd	r24, Y+2	; 0x02
    3820:	48 2f       	mov	r20, r24
    3822:	50 e0       	ldi	r21, 0x00	; 0
    3824:	89 81       	ldd	r24, Y+1	; 0x01
    3826:	28 2f       	mov	r18, r24
    3828:	30 e0       	ldi	r19, 0x00	; 0
    382a:	ca 01       	movw	r24, r20
    382c:	88 0f       	add	r24, r24
    382e:	99 1f       	adc	r25, r25
    3830:	88 0f       	add	r24, r24
    3832:	99 1f       	adc	r25, r25
    3834:	88 0f       	add	r24, r24
    3836:	99 1f       	adc	r25, r25
    3838:	82 0f       	add	r24, r18
    383a:	93 1f       	adc	r25, r19
    383c:	fc 01       	movw	r30, r24
    383e:	e5 58       	subi	r30, 0x85	; 133
    3840:	fe 4f       	sbci	r31, 0xFE	; 254
    3842:	80 81       	ld	r24, Z
    3844:	0e 94 20 19 	call	0x3240	; 0x3240 <CLCD_WriteData>
						{0x00,0x00,0x02,0x02,0x0E,0x00,0x00,0x00}
					 };
void CLCD_Draw_Char(u8 Address_Data){
	CLCD_WriteInes(0x40); //Set CCGram
	for(u8 i=0; i<4; i++){
		for(u8 j=0; j<8; j++){
    3848:	89 81       	ldd	r24, Y+1	; 0x01
    384a:	8f 5f       	subi	r24, 0xFF	; 255
    384c:	89 83       	std	Y+1, r24	; 0x01
    384e:	89 81       	ldd	r24, Y+1	; 0x01
    3850:	88 30       	cpi	r24, 0x08	; 8
    3852:	28 f3       	brcs	.-54     	; 0x381e <CLCD_Draw_Char+0x1c>
						{0x00,0x00,0x0E,0x0A,0x0F,0x02,0x04,0x08},
						{0x00,0x00,0x02,0x02,0x0E,0x00,0x00,0x00}
					 };
void CLCD_Draw_Char(u8 Address_Data){
	CLCD_WriteInes(0x40); //Set CCGram
	for(u8 i=0; i<4; i++){
    3854:	8a 81       	ldd	r24, Y+2	; 0x02
    3856:	8f 5f       	subi	r24, 0xFF	; 255
    3858:	8a 83       	std	Y+2, r24	; 0x02
    385a:	8a 81       	ldd	r24, Y+2	; 0x02
    385c:	84 30       	cpi	r24, 0x04	; 4
    385e:	e8 f2       	brcs	.-70     	; 0x381a <CLCD_Draw_Char+0x18>
		for(u8 j=0; j<8; j++){
			CLCD_WriteData(arr_myname[i][j]);
		}
	}
	CLCD_WriteInes(0x80); //set DDRAM
    3860:	80 e8       	ldi	r24, 0x80	; 128
    3862:	0e 94 10 18 	call	0x3020	; 0x3020 <CLCD_WriteInes>
	CLCD_WriteData(Address_Data);
    3866:	8b 81       	ldd	r24, Y+3	; 0x03
    3868:	0e 94 20 19 	call	0x3240	; 0x3240 <CLCD_WriteData>
}
    386c:	0f 90       	pop	r0
    386e:	0f 90       	pop	r0
    3870:	0f 90       	pop	r0
    3872:	cf 91       	pop	r28
    3874:	df 91       	pop	r29
    3876:	08 95       	ret

00003878 <CLCD_printHEXNum>:

void CLCD_printHEXNum(u8 num){
    3878:	df 93       	push	r29
    387a:	cf 93       	push	r28
    387c:	cd b7       	in	r28, 0x3d	; 61
    387e:	de b7       	in	r29, 0x3e	; 62
    3880:	2b 97       	sbiw	r28, 0x0b	; 11
    3882:	0f b6       	in	r0, 0x3f	; 63
    3884:	f8 94       	cli
    3886:	de bf       	out	0x3e, r29	; 62
    3888:	0f be       	out	0x3f, r0	; 63
    388a:	cd bf       	out	0x3d, r28	; 61
    388c:	8e 83       	std	Y+6, r24	; 0x06
	u8 st[] = "0x";
    388e:	ce 01       	movw	r24, r28
    3890:	03 96       	adiw	r24, 0x03	; 3
    3892:	98 87       	std	Y+8, r25	; 0x08
    3894:	8f 83       	std	Y+7, r24	; 0x07
    3896:	e0 e6       	ldi	r30, 0x60	; 96
    3898:	f0 e0       	ldi	r31, 0x00	; 0
    389a:	fa 87       	std	Y+10, r31	; 0x0a
    389c:	e9 87       	std	Y+9, r30	; 0x09
    389e:	f3 e0       	ldi	r31, 0x03	; 3
    38a0:	fb 87       	std	Y+11, r31	; 0x0b
    38a2:	e9 85       	ldd	r30, Y+9	; 0x09
    38a4:	fa 85       	ldd	r31, Y+10	; 0x0a
    38a6:	00 80       	ld	r0, Z
    38a8:	89 85       	ldd	r24, Y+9	; 0x09
    38aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    38ac:	01 96       	adiw	r24, 0x01	; 1
    38ae:	9a 87       	std	Y+10, r25	; 0x0a
    38b0:	89 87       	std	Y+9, r24	; 0x09
    38b2:	ef 81       	ldd	r30, Y+7	; 0x07
    38b4:	f8 85       	ldd	r31, Y+8	; 0x08
    38b6:	00 82       	st	Z, r0
    38b8:	8f 81       	ldd	r24, Y+7	; 0x07
    38ba:	98 85       	ldd	r25, Y+8	; 0x08
    38bc:	01 96       	adiw	r24, 0x01	; 1
    38be:	98 87       	std	Y+8, r25	; 0x08
    38c0:	8f 83       	std	Y+7, r24	; 0x07
    38c2:	9b 85       	ldd	r25, Y+11	; 0x0b
    38c4:	91 50       	subi	r25, 0x01	; 1
    38c6:	9b 87       	std	Y+11, r25	; 0x0b
    38c8:	eb 85       	ldd	r30, Y+11	; 0x0b
    38ca:	ee 23       	and	r30, r30
    38cc:	51 f7       	brne	.-44     	; 0x38a2 <CLCD_printHEXNum+0x2a>
	u8 Upper =0 , Lower = 0;
    38ce:	1a 82       	std	Y+2, r1	; 0x02
    38d0:	19 82       	std	Y+1, r1	; 0x01
	Upper = num >>4;
    38d2:	8e 81       	ldd	r24, Y+6	; 0x06
    38d4:	82 95       	swap	r24
    38d6:	8f 70       	andi	r24, 0x0F	; 15
    38d8:	8a 83       	std	Y+2, r24	; 0x02
	Lower = num &0x0f;
    38da:	8e 81       	ldd	r24, Y+6	; 0x06
    38dc:	8f 70       	andi	r24, 0x0F	; 15
    38de:	89 83       	std	Y+1, r24	; 0x01
	CLCD_WriteString(st);
    38e0:	ce 01       	movw	r24, r28
    38e2:	03 96       	adiw	r24, 0x03	; 3
    38e4:	0e 94 3d 1a 	call	0x347a	; 0x347a <CLCD_WriteString>

	if (Upper < 10){
    38e8:	8a 81       	ldd	r24, Y+2	; 0x02
    38ea:	8a 30       	cpi	r24, 0x0A	; 10
    38ec:	28 f4       	brcc	.+10     	; 0x38f8 <CLCD_printHEXNum+0x80>
		CLCD_WriteData(Upper + '0');
    38ee:	8a 81       	ldd	r24, Y+2	; 0x02
    38f0:	80 5d       	subi	r24, 0xD0	; 208
    38f2:	0e 94 20 19 	call	0x3240	; 0x3240 <CLCD_WriteData>
    38f6:	04 c0       	rjmp	.+8      	; 0x3900 <CLCD_printHEXNum+0x88>
	}
	else {
		CLCD_WriteData(Upper + 'A'-10);
    38f8:	8a 81       	ldd	r24, Y+2	; 0x02
    38fa:	89 5c       	subi	r24, 0xC9	; 201
    38fc:	0e 94 20 19 	call	0x3240	; 0x3240 <CLCD_WriteData>
	}
	if (Lower < 10){
    3900:	89 81       	ldd	r24, Y+1	; 0x01
    3902:	8a 30       	cpi	r24, 0x0A	; 10
    3904:	28 f4       	brcc	.+10     	; 0x3910 <CLCD_printHEXNum+0x98>
		CLCD_WriteData(Lower + '0');
    3906:	89 81       	ldd	r24, Y+1	; 0x01
    3908:	80 5d       	subi	r24, 0xD0	; 208
    390a:	0e 94 20 19 	call	0x3240	; 0x3240 <CLCD_WriteData>
    390e:	04 c0       	rjmp	.+8      	; 0x3918 <CLCD_printHEXNum+0xa0>
	}
	else {
		CLCD_WriteData(Lower + 'A'-10);
    3910:	89 81       	ldd	r24, Y+1	; 0x01
    3912:	89 5c       	subi	r24, 0xC9	; 201
    3914:	0e 94 20 19 	call	0x3240	; 0x3240 <CLCD_WriteData>
	}
}
    3918:	2b 96       	adiw	r28, 0x0b	; 11
    391a:	0f b6       	in	r0, 0x3f	; 63
    391c:	f8 94       	cli
    391e:	de bf       	out	0x3e, r29	; 62
    3920:	0f be       	out	0x3f, r0	; 63
    3922:	cd bf       	out	0x3d, r28	; 61
    3924:	cf 91       	pop	r28
    3926:	df 91       	pop	r29
    3928:	08 95       	ret

0000392a <BushButton_voidInit>:
 *      Author: hp
 */

#include "BushButton_Interface.h"

void BushButton_voidInit(Button *button){
    392a:	df 93       	push	r29
    392c:	cf 93       	push	r28
    392e:	00 d0       	rcall	.+0      	; 0x3930 <BushButton_voidInit+0x6>
    3930:	cd b7       	in	r28, 0x3d	; 61
    3932:	de b7       	in	r29, 0x3e	; 62
    3934:	9a 83       	std	Y+2, r25	; 0x02
    3936:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPinDirection(BUSHBUTTON_PORT, button->button_pin, DIO_u8INPUT);
    3938:	e9 81       	ldd	r30, Y+1	; 0x01
    393a:	fa 81       	ldd	r31, Y+2	; 0x02
    393c:	90 81       	ld	r25, Z
    393e:	83 e0       	ldi	r24, 0x03	; 3
    3940:	69 2f       	mov	r22, r25
    3942:	40 e0       	ldi	r20, 0x00	; 0
    3944:	0e 94 80 12 	call	0x2500	; 0x2500 <DIO_voidSetPinDirection>
}
    3948:	0f 90       	pop	r0
    394a:	0f 90       	pop	r0
    394c:	cf 91       	pop	r28
    394e:	df 91       	pop	r29
    3950:	08 95       	ret

00003952 <BushButton_voidRead>:

u8 BushButton_voidRead(Button *button){
    3952:	df 93       	push	r29
    3954:	cf 93       	push	r28
    3956:	cd b7       	in	r28, 0x3d	; 61
    3958:	de b7       	in	r29, 0x3e	; 62
    395a:	61 97       	sbiw	r28, 0x11	; 17
    395c:	0f b6       	in	r0, 0x3f	; 63
    395e:	f8 94       	cli
    3960:	de bf       	out	0x3e, r29	; 62
    3962:	0f be       	out	0x3f, r0	; 63
    3964:	cd bf       	out	0x3d, r28	; 61
    3966:	99 8b       	std	Y+17, r25	; 0x11
    3968:	88 8b       	std	Y+16, r24	; 0x10
	u8 local_u8Read = DIO_u8GetPinValue(BUSHBUTTON_PORT, button->button_pin);
    396a:	e8 89       	ldd	r30, Y+16	; 0x10
    396c:	f9 89       	ldd	r31, Y+17	; 0x11
    396e:	90 81       	ld	r25, Z
    3970:	83 e0       	ldi	r24, 0x03	; 3
    3972:	69 2f       	mov	r22, r25
    3974:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <DIO_u8GetPinValue>
    3978:	8f 87       	std	Y+15, r24	; 0x0f
	if (local_u8Read == 0){
    397a:	8f 85       	ldd	r24, Y+15	; 0x0f
    397c:	88 23       	and	r24, r24
    397e:	09 f0       	breq	.+2      	; 0x3982 <BushButton_voidRead+0x30>
    3980:	79 c0       	rjmp	.+242    	; 0x3a74 <BushButton_voidRead+0x122>
    3982:	80 e0       	ldi	r24, 0x00	; 0
    3984:	90 e0       	ldi	r25, 0x00	; 0
    3986:	a6 e1       	ldi	r26, 0x16	; 22
    3988:	b3 e4       	ldi	r27, 0x43	; 67
    398a:	8b 87       	std	Y+11, r24	; 0x0b
    398c:	9c 87       	std	Y+12, r25	; 0x0c
    398e:	ad 87       	std	Y+13, r26	; 0x0d
    3990:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3992:	6b 85       	ldd	r22, Y+11	; 0x0b
    3994:	7c 85       	ldd	r23, Y+12	; 0x0c
    3996:	8d 85       	ldd	r24, Y+13	; 0x0d
    3998:	9e 85       	ldd	r25, Y+14	; 0x0e
    399a:	20 e0       	ldi	r18, 0x00	; 0
    399c:	30 e0       	ldi	r19, 0x00	; 0
    399e:	4a ef       	ldi	r20, 0xFA	; 250
    39a0:	54 e4       	ldi	r21, 0x44	; 68
    39a2:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    39a6:	dc 01       	movw	r26, r24
    39a8:	cb 01       	movw	r24, r22
    39aa:	8f 83       	std	Y+7, r24	; 0x07
    39ac:	98 87       	std	Y+8, r25	; 0x08
    39ae:	a9 87       	std	Y+9, r26	; 0x09
    39b0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    39b2:	6f 81       	ldd	r22, Y+7	; 0x07
    39b4:	78 85       	ldd	r23, Y+8	; 0x08
    39b6:	89 85       	ldd	r24, Y+9	; 0x09
    39b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    39ba:	20 e0       	ldi	r18, 0x00	; 0
    39bc:	30 e0       	ldi	r19, 0x00	; 0
    39be:	40 e8       	ldi	r20, 0x80	; 128
    39c0:	5f e3       	ldi	r21, 0x3F	; 63
    39c2:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    39c6:	88 23       	and	r24, r24
    39c8:	2c f4       	brge	.+10     	; 0x39d4 <BushButton_voidRead+0x82>
		__ticks = 1;
    39ca:	81 e0       	ldi	r24, 0x01	; 1
    39cc:	90 e0       	ldi	r25, 0x00	; 0
    39ce:	9e 83       	std	Y+6, r25	; 0x06
    39d0:	8d 83       	std	Y+5, r24	; 0x05
    39d2:	3f c0       	rjmp	.+126    	; 0x3a52 <BushButton_voidRead+0x100>
	else if (__tmp > 65535)
    39d4:	6f 81       	ldd	r22, Y+7	; 0x07
    39d6:	78 85       	ldd	r23, Y+8	; 0x08
    39d8:	89 85       	ldd	r24, Y+9	; 0x09
    39da:	9a 85       	ldd	r25, Y+10	; 0x0a
    39dc:	20 e0       	ldi	r18, 0x00	; 0
    39de:	3f ef       	ldi	r19, 0xFF	; 255
    39e0:	4f e7       	ldi	r20, 0x7F	; 127
    39e2:	57 e4       	ldi	r21, 0x47	; 71
    39e4:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    39e8:	18 16       	cp	r1, r24
    39ea:	4c f5       	brge	.+82     	; 0x3a3e <BushButton_voidRead+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    39ec:	6b 85       	ldd	r22, Y+11	; 0x0b
    39ee:	7c 85       	ldd	r23, Y+12	; 0x0c
    39f0:	8d 85       	ldd	r24, Y+13	; 0x0d
    39f2:	9e 85       	ldd	r25, Y+14	; 0x0e
    39f4:	20 e0       	ldi	r18, 0x00	; 0
    39f6:	30 e0       	ldi	r19, 0x00	; 0
    39f8:	40 e2       	ldi	r20, 0x20	; 32
    39fa:	51 e4       	ldi	r21, 0x41	; 65
    39fc:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    3a00:	dc 01       	movw	r26, r24
    3a02:	cb 01       	movw	r24, r22
    3a04:	bc 01       	movw	r22, r24
    3a06:	cd 01       	movw	r24, r26
    3a08:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a0c:	dc 01       	movw	r26, r24
    3a0e:	cb 01       	movw	r24, r22
    3a10:	9e 83       	std	Y+6, r25	; 0x06
    3a12:	8d 83       	std	Y+5, r24	; 0x05
    3a14:	0f c0       	rjmp	.+30     	; 0x3a34 <BushButton_voidRead+0xe2>
    3a16:	88 ec       	ldi	r24, 0xC8	; 200
    3a18:	90 e0       	ldi	r25, 0x00	; 0
    3a1a:	9c 83       	std	Y+4, r25	; 0x04
    3a1c:	8b 83       	std	Y+3, r24	; 0x03
    3a1e:	8b 81       	ldd	r24, Y+3	; 0x03
    3a20:	9c 81       	ldd	r25, Y+4	; 0x04
    3a22:	01 97       	sbiw	r24, 0x01	; 1
    3a24:	f1 f7       	brne	.-4      	; 0x3a22 <BushButton_voidRead+0xd0>
    3a26:	9c 83       	std	Y+4, r25	; 0x04
    3a28:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a2a:	8d 81       	ldd	r24, Y+5	; 0x05
    3a2c:	9e 81       	ldd	r25, Y+6	; 0x06
    3a2e:	01 97       	sbiw	r24, 0x01	; 1
    3a30:	9e 83       	std	Y+6, r25	; 0x06
    3a32:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a34:	8d 81       	ldd	r24, Y+5	; 0x05
    3a36:	9e 81       	ldd	r25, Y+6	; 0x06
    3a38:	00 97       	sbiw	r24, 0x00	; 0
    3a3a:	69 f7       	brne	.-38     	; 0x3a16 <BushButton_voidRead+0xc4>
    3a3c:	14 c0       	rjmp	.+40     	; 0x3a66 <BushButton_voidRead+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a3e:	6f 81       	ldd	r22, Y+7	; 0x07
    3a40:	78 85       	ldd	r23, Y+8	; 0x08
    3a42:	89 85       	ldd	r24, Y+9	; 0x09
    3a44:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a46:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a4a:	dc 01       	movw	r26, r24
    3a4c:	cb 01       	movw	r24, r22
    3a4e:	9e 83       	std	Y+6, r25	; 0x06
    3a50:	8d 83       	std	Y+5, r24	; 0x05
    3a52:	8d 81       	ldd	r24, Y+5	; 0x05
    3a54:	9e 81       	ldd	r25, Y+6	; 0x06
    3a56:	9a 83       	std	Y+2, r25	; 0x02
    3a58:	89 83       	std	Y+1, r24	; 0x01
    3a5a:	89 81       	ldd	r24, Y+1	; 0x01
    3a5c:	9a 81       	ldd	r25, Y+2	; 0x02
    3a5e:	01 97       	sbiw	r24, 0x01	; 1
    3a60:	f1 f7       	brne	.-4      	; 0x3a5e <BushButton_voidRead+0x10c>
    3a62:	9a 83       	std	Y+2, r25	; 0x02
    3a64:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(150);
		if (local_u8Read == 0){
    3a66:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a68:	88 23       	and	r24, r24
    3a6a:	59 f4       	brne	.+22     	; 0x3a82 <BushButton_voidRead+0x130>
			button->button = Button_PRESSESD;
    3a6c:	e8 89       	ldd	r30, Y+16	; 0x10
    3a6e:	f9 89       	ldd	r31, Y+17	; 0x11
    3a70:	11 82       	std	Z+1, r1	; 0x01
    3a72:	07 c0       	rjmp	.+14     	; 0x3a82 <BushButton_voidRead+0x130>
		}
	}else if (local_u8Read == 1){
    3a74:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a76:	81 30       	cpi	r24, 0x01	; 1
    3a78:	21 f4       	brne	.+8      	; 0x3a82 <BushButton_voidRead+0x130>
		button->button = Button_RELEASED;
    3a7a:	e8 89       	ldd	r30, Y+16	; 0x10
    3a7c:	f9 89       	ldd	r31, Y+17	; 0x11
    3a7e:	81 e0       	ldi	r24, 0x01	; 1
    3a80:	81 83       	std	Z+1, r24	; 0x01
	}
	return button->button;
    3a82:	e8 89       	ldd	r30, Y+16	; 0x10
    3a84:	f9 89       	ldd	r31, Y+17	; 0x11
    3a86:	81 81       	ldd	r24, Z+1	; 0x01
}
    3a88:	61 96       	adiw	r28, 0x11	; 17
    3a8a:	0f b6       	in	r0, 0x3f	; 63
    3a8c:	f8 94       	cli
    3a8e:	de bf       	out	0x3e, r29	; 62
    3a90:	0f be       	out	0x3f, r0	; 63
    3a92:	cd bf       	out	0x3d, r28	; 61
    3a94:	cf 91       	pop	r28
    3a96:	df 91       	pop	r29
    3a98:	08 95       	ret

00003a9a <SevenSegment_voidInit>:
#include "SEVEN_SEGMENT_Interface.h"
#include "util/delay.h"

u32 SSD_Arr[10] = {ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};

void SevenSegment_voidInit(){
    3a9a:	df 93       	push	r29
    3a9c:	cf 93       	push	r28
    3a9e:	cd b7       	in	r28, 0x3d	; 61
    3aa0:	de b7       	in	r29, 0x3e	; 62
	DIO_voidSetPortDirection(SEVEN_SEGMENT_PORT, 0xff);
    3aa2:	81 e0       	ldi	r24, 0x01	; 1
    3aa4:	6f ef       	ldi	r22, 0xFF	; 255
    3aa6:	0e 94 84 14 	call	0x2908	; 0x2908 <DIO_voidSetPortDirection>
	DIO_voidSetPortDirection(SEVEN_SEGMENT_PORT2, 0xff);
    3aaa:	82 e0       	ldi	r24, 0x02	; 2
    3aac:	6f ef       	ldi	r22, 0xFF	; 255
    3aae:	0e 94 84 14 	call	0x2908	; 0x2908 <DIO_voidSetPortDirection>
}
    3ab2:	cf 91       	pop	r28
    3ab4:	df 91       	pop	r29
    3ab6:	08 95       	ret

00003ab8 <SevenSegment_voidDispaly>:

void SevenSegment_voidDispaly(u8 Copy_u8Seconds){
    3ab8:	df 93       	push	r29
    3aba:	cf 93       	push	r28
    3abc:	cd b7       	in	r28, 0x3d	; 61
    3abe:	de b7       	in	r29, 0x3e	; 62
    3ac0:	a0 97       	sbiw	r28, 0x20	; 32
    3ac2:	0f b6       	in	r0, 0x3f	; 63
    3ac4:	f8 94       	cli
    3ac6:	de bf       	out	0x3e, r29	; 62
    3ac8:	0f be       	out	0x3f, r0	; 63
    3aca:	cd bf       	out	0x3d, r28	; 61
    3acc:	88 a3       	std	Y+32, r24	; 0x20
	u8 i;
	if (Copy_u8Seconds < 10){
    3ace:	88 a1       	ldd	r24, Y+32	; 0x20
    3ad0:	8a 30       	cpi	r24, 0x0A	; 10
    3ad2:	08 f0       	brcs	.+2      	; 0x3ad6 <SevenSegment_voidDispaly+0x1e>
    3ad4:	90 c0       	rjmp	.+288    	; 0x3bf6 <SevenSegment_voidDispaly+0x13e>
		for(i = Copy_u8Seconds; i > 0; i--)
    3ad6:	88 a1       	ldd	r24, Y+32	; 0x20
    3ad8:	8f 8f       	std	Y+31, r24	; 0x1f
    3ada:	88 c0       	rjmp	.+272    	; 0x3bec <SevenSegment_voidDispaly+0x134>
		{
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[i]);
    3adc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3ade:	88 2f       	mov	r24, r24
    3ae0:	90 e0       	ldi	r25, 0x00	; 0
    3ae2:	88 0f       	add	r24, r24
    3ae4:	99 1f       	adc	r25, r25
    3ae6:	88 0f       	add	r24, r24
    3ae8:	99 1f       	adc	r25, r25
    3aea:	fc 01       	movw	r30, r24
    3aec:	e5 56       	subi	r30, 0x65	; 101
    3aee:	fe 4f       	sbci	r31, 0xFE	; 254
    3af0:	80 81       	ld	r24, Z
    3af2:	91 81       	ldd	r25, Z+1	; 0x01
    3af4:	a2 81       	ldd	r26, Z+2	; 0x02
    3af6:	b3 81       	ldd	r27, Z+3	; 0x03
    3af8:	98 2f       	mov	r25, r24
    3afa:	81 e0       	ldi	r24, 0x01	; 1
    3afc:	69 2f       	mov	r22, r25
    3afe:	0e 94 c6 14 	call	0x298c	; 0x298c <DIO_voidSetPortValue>
    3b02:	80 e0       	ldi	r24, 0x00	; 0
    3b04:	90 e0       	ldi	r25, 0x00	; 0
    3b06:	aa ef       	ldi	r26, 0xFA	; 250
    3b08:	b3 e4       	ldi	r27, 0x43	; 67
    3b0a:	89 8f       	std	Y+25, r24	; 0x19
    3b0c:	9a 8f       	std	Y+26, r25	; 0x1a
    3b0e:	ab 8f       	std	Y+27, r26	; 0x1b
    3b10:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b12:	69 8d       	ldd	r22, Y+25	; 0x19
    3b14:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3b16:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3b18:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3b1a:	20 e0       	ldi	r18, 0x00	; 0
    3b1c:	30 e0       	ldi	r19, 0x00	; 0
    3b1e:	4a ef       	ldi	r20, 0xFA	; 250
    3b20:	54 e4       	ldi	r21, 0x44	; 68
    3b22:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    3b26:	dc 01       	movw	r26, r24
    3b28:	cb 01       	movw	r24, r22
    3b2a:	8d 8b       	std	Y+21, r24	; 0x15
    3b2c:	9e 8b       	std	Y+22, r25	; 0x16
    3b2e:	af 8b       	std	Y+23, r26	; 0x17
    3b30:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3b32:	6d 89       	ldd	r22, Y+21	; 0x15
    3b34:	7e 89       	ldd	r23, Y+22	; 0x16
    3b36:	8f 89       	ldd	r24, Y+23	; 0x17
    3b38:	98 8d       	ldd	r25, Y+24	; 0x18
    3b3a:	20 e0       	ldi	r18, 0x00	; 0
    3b3c:	30 e0       	ldi	r19, 0x00	; 0
    3b3e:	40 e8       	ldi	r20, 0x80	; 128
    3b40:	5f e3       	ldi	r21, 0x3F	; 63
    3b42:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    3b46:	88 23       	and	r24, r24
    3b48:	2c f4       	brge	.+10     	; 0x3b54 <SevenSegment_voidDispaly+0x9c>
		__ticks = 1;
    3b4a:	81 e0       	ldi	r24, 0x01	; 1
    3b4c:	90 e0       	ldi	r25, 0x00	; 0
    3b4e:	9c 8b       	std	Y+20, r25	; 0x14
    3b50:	8b 8b       	std	Y+19, r24	; 0x13
    3b52:	3f c0       	rjmp	.+126    	; 0x3bd2 <SevenSegment_voidDispaly+0x11a>
	else if (__tmp > 65535)
    3b54:	6d 89       	ldd	r22, Y+21	; 0x15
    3b56:	7e 89       	ldd	r23, Y+22	; 0x16
    3b58:	8f 89       	ldd	r24, Y+23	; 0x17
    3b5a:	98 8d       	ldd	r25, Y+24	; 0x18
    3b5c:	20 e0       	ldi	r18, 0x00	; 0
    3b5e:	3f ef       	ldi	r19, 0xFF	; 255
    3b60:	4f e7       	ldi	r20, 0x7F	; 127
    3b62:	57 e4       	ldi	r21, 0x47	; 71
    3b64:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    3b68:	18 16       	cp	r1, r24
    3b6a:	4c f5       	brge	.+82     	; 0x3bbe <SevenSegment_voidDispaly+0x106>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b6c:	69 8d       	ldd	r22, Y+25	; 0x19
    3b6e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3b70:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3b72:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3b74:	20 e0       	ldi	r18, 0x00	; 0
    3b76:	30 e0       	ldi	r19, 0x00	; 0
    3b78:	40 e2       	ldi	r20, 0x20	; 32
    3b7a:	51 e4       	ldi	r21, 0x41	; 65
    3b7c:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    3b80:	dc 01       	movw	r26, r24
    3b82:	cb 01       	movw	r24, r22
    3b84:	bc 01       	movw	r22, r24
    3b86:	cd 01       	movw	r24, r26
    3b88:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b8c:	dc 01       	movw	r26, r24
    3b8e:	cb 01       	movw	r24, r22
    3b90:	9c 8b       	std	Y+20, r25	; 0x14
    3b92:	8b 8b       	std	Y+19, r24	; 0x13
    3b94:	0f c0       	rjmp	.+30     	; 0x3bb4 <SevenSegment_voidDispaly+0xfc>
    3b96:	88 ec       	ldi	r24, 0xC8	; 200
    3b98:	90 e0       	ldi	r25, 0x00	; 0
    3b9a:	9a 8b       	std	Y+18, r25	; 0x12
    3b9c:	89 8b       	std	Y+17, r24	; 0x11
    3b9e:	89 89       	ldd	r24, Y+17	; 0x11
    3ba0:	9a 89       	ldd	r25, Y+18	; 0x12
    3ba2:	01 97       	sbiw	r24, 0x01	; 1
    3ba4:	f1 f7       	brne	.-4      	; 0x3ba2 <SevenSegment_voidDispaly+0xea>
    3ba6:	9a 8b       	std	Y+18, r25	; 0x12
    3ba8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3baa:	8b 89       	ldd	r24, Y+19	; 0x13
    3bac:	9c 89       	ldd	r25, Y+20	; 0x14
    3bae:	01 97       	sbiw	r24, 0x01	; 1
    3bb0:	9c 8b       	std	Y+20, r25	; 0x14
    3bb2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3bb4:	8b 89       	ldd	r24, Y+19	; 0x13
    3bb6:	9c 89       	ldd	r25, Y+20	; 0x14
    3bb8:	00 97       	sbiw	r24, 0x00	; 0
    3bba:	69 f7       	brne	.-38     	; 0x3b96 <SevenSegment_voidDispaly+0xde>
    3bbc:	14 c0       	rjmp	.+40     	; 0x3be6 <SevenSegment_voidDispaly+0x12e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3bbe:	6d 89       	ldd	r22, Y+21	; 0x15
    3bc0:	7e 89       	ldd	r23, Y+22	; 0x16
    3bc2:	8f 89       	ldd	r24, Y+23	; 0x17
    3bc4:	98 8d       	ldd	r25, Y+24	; 0x18
    3bc6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3bca:	dc 01       	movw	r26, r24
    3bcc:	cb 01       	movw	r24, r22
    3bce:	9c 8b       	std	Y+20, r25	; 0x14
    3bd0:	8b 8b       	std	Y+19, r24	; 0x13
    3bd2:	8b 89       	ldd	r24, Y+19	; 0x13
    3bd4:	9c 89       	ldd	r25, Y+20	; 0x14
    3bd6:	98 8b       	std	Y+16, r25	; 0x10
    3bd8:	8f 87       	std	Y+15, r24	; 0x0f
    3bda:	8f 85       	ldd	r24, Y+15	; 0x0f
    3bdc:	98 89       	ldd	r25, Y+16	; 0x10
    3bde:	01 97       	sbiw	r24, 0x01	; 1
    3be0:	f1 f7       	brne	.-4      	; 0x3bde <SevenSegment_voidDispaly+0x126>
    3be2:	98 8b       	std	Y+16, r25	; 0x10
    3be4:	8f 87       	std	Y+15, r24	; 0x0f
}

void SevenSegment_voidDispaly(u8 Copy_u8Seconds){
	u8 i;
	if (Copy_u8Seconds < 10){
		for(i = Copy_u8Seconds; i > 0; i--)
    3be6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3be8:	81 50       	subi	r24, 0x01	; 1
    3bea:	8f 8f       	std	Y+31, r24	; 0x1f
    3bec:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3bee:	88 23       	and	r24, r24
    3bf0:	09 f0       	breq	.+2      	; 0x3bf4 <SevenSegment_voidDispaly+0x13c>
    3bf2:	74 cf       	rjmp	.-280    	; 0x3adc <SevenSegment_voidDispaly+0x24>
    3bf4:	b3 c0       	rjmp	.+358    	; 0x3d5c <SevenSegment_voidDispaly+0x2a4>
		{
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[i]);
			_delay_ms(500);
		}
	} else if (Copy_u8Seconds < 99){
    3bf6:	88 a1       	ldd	r24, Y+32	; 0x20
    3bf8:	83 36       	cpi	r24, 0x63	; 99
    3bfa:	08 f0       	brcs	.+2      	; 0x3bfe <SevenSegment_voidDispaly+0x146>
    3bfc:	af c0       	rjmp	.+350    	; 0x3d5c <SevenSegment_voidDispaly+0x2a4>
		u8 fnum,snum;
		for(i = Copy_u8Seconds; i > 0; i--)
    3bfe:	88 a1       	ldd	r24, Y+32	; 0x20
    3c00:	8f 8f       	std	Y+31, r24	; 0x1f
    3c02:	a8 c0       	rjmp	.+336    	; 0x3d54 <SevenSegment_voidDispaly+0x29c>
		{
			fnum = i/10;
    3c04:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3c06:	9a e0       	ldi	r25, 0x0A	; 10
    3c08:	69 2f       	mov	r22, r25
    3c0a:	0e 94 ea 1f 	call	0x3fd4	; 0x3fd4 <__udivmodqi4>
    3c0e:	8e 8f       	std	Y+30, r24	; 0x1e
			snum = i%10;
    3c10:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3c12:	9a e0       	ldi	r25, 0x0A	; 10
    3c14:	69 2f       	mov	r22, r25
    3c16:	0e 94 ea 1f 	call	0x3fd4	; 0x3fd4 <__udivmodqi4>
    3c1a:	89 2f       	mov	r24, r25
    3c1c:	8d 8f       	std	Y+29, r24	; 0x1d
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[fnum]);
    3c1e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3c20:	88 2f       	mov	r24, r24
    3c22:	90 e0       	ldi	r25, 0x00	; 0
    3c24:	88 0f       	add	r24, r24
    3c26:	99 1f       	adc	r25, r25
    3c28:	88 0f       	add	r24, r24
    3c2a:	99 1f       	adc	r25, r25
    3c2c:	fc 01       	movw	r30, r24
    3c2e:	e5 56       	subi	r30, 0x65	; 101
    3c30:	fe 4f       	sbci	r31, 0xFE	; 254
    3c32:	80 81       	ld	r24, Z
    3c34:	91 81       	ldd	r25, Z+1	; 0x01
    3c36:	a2 81       	ldd	r26, Z+2	; 0x02
    3c38:	b3 81       	ldd	r27, Z+3	; 0x03
    3c3a:	98 2f       	mov	r25, r24
    3c3c:	81 e0       	ldi	r24, 0x01	; 1
    3c3e:	69 2f       	mov	r22, r25
    3c40:	0e 94 c6 14 	call	0x298c	; 0x298c <DIO_voidSetPortValue>
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT2, SSD_Arr[snum]);
    3c44:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3c46:	88 2f       	mov	r24, r24
    3c48:	90 e0       	ldi	r25, 0x00	; 0
    3c4a:	88 0f       	add	r24, r24
    3c4c:	99 1f       	adc	r25, r25
    3c4e:	88 0f       	add	r24, r24
    3c50:	99 1f       	adc	r25, r25
    3c52:	fc 01       	movw	r30, r24
    3c54:	e5 56       	subi	r30, 0x65	; 101
    3c56:	fe 4f       	sbci	r31, 0xFE	; 254
    3c58:	80 81       	ld	r24, Z
    3c5a:	91 81       	ldd	r25, Z+1	; 0x01
    3c5c:	a2 81       	ldd	r26, Z+2	; 0x02
    3c5e:	b3 81       	ldd	r27, Z+3	; 0x03
    3c60:	98 2f       	mov	r25, r24
    3c62:	82 e0       	ldi	r24, 0x02	; 2
    3c64:	69 2f       	mov	r22, r25
    3c66:	0e 94 c6 14 	call	0x298c	; 0x298c <DIO_voidSetPortValue>
    3c6a:	80 e0       	ldi	r24, 0x00	; 0
    3c6c:	90 e0       	ldi	r25, 0x00	; 0
    3c6e:	aa ef       	ldi	r26, 0xFA	; 250
    3c70:	b3 e4       	ldi	r27, 0x43	; 67
    3c72:	8b 87       	std	Y+11, r24	; 0x0b
    3c74:	9c 87       	std	Y+12, r25	; 0x0c
    3c76:	ad 87       	std	Y+13, r26	; 0x0d
    3c78:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c7a:	6b 85       	ldd	r22, Y+11	; 0x0b
    3c7c:	7c 85       	ldd	r23, Y+12	; 0x0c
    3c7e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3c80:	9e 85       	ldd	r25, Y+14	; 0x0e
    3c82:	20 e0       	ldi	r18, 0x00	; 0
    3c84:	30 e0       	ldi	r19, 0x00	; 0
    3c86:	4a ef       	ldi	r20, 0xFA	; 250
    3c88:	54 e4       	ldi	r21, 0x44	; 68
    3c8a:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    3c8e:	dc 01       	movw	r26, r24
    3c90:	cb 01       	movw	r24, r22
    3c92:	8f 83       	std	Y+7, r24	; 0x07
    3c94:	98 87       	std	Y+8, r25	; 0x08
    3c96:	a9 87       	std	Y+9, r26	; 0x09
    3c98:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3c9a:	6f 81       	ldd	r22, Y+7	; 0x07
    3c9c:	78 85       	ldd	r23, Y+8	; 0x08
    3c9e:	89 85       	ldd	r24, Y+9	; 0x09
    3ca0:	9a 85       	ldd	r25, Y+10	; 0x0a
    3ca2:	20 e0       	ldi	r18, 0x00	; 0
    3ca4:	30 e0       	ldi	r19, 0x00	; 0
    3ca6:	40 e8       	ldi	r20, 0x80	; 128
    3ca8:	5f e3       	ldi	r21, 0x3F	; 63
    3caa:	0e 94 56 10 	call	0x20ac	; 0x20ac <__ltsf2>
    3cae:	88 23       	and	r24, r24
    3cb0:	2c f4       	brge	.+10     	; 0x3cbc <SevenSegment_voidDispaly+0x204>
		__ticks = 1;
    3cb2:	81 e0       	ldi	r24, 0x01	; 1
    3cb4:	90 e0       	ldi	r25, 0x00	; 0
    3cb6:	9e 83       	std	Y+6, r25	; 0x06
    3cb8:	8d 83       	std	Y+5, r24	; 0x05
    3cba:	3f c0       	rjmp	.+126    	; 0x3d3a <SevenSegment_voidDispaly+0x282>
	else if (__tmp > 65535)
    3cbc:	6f 81       	ldd	r22, Y+7	; 0x07
    3cbe:	78 85       	ldd	r23, Y+8	; 0x08
    3cc0:	89 85       	ldd	r24, Y+9	; 0x09
    3cc2:	9a 85       	ldd	r25, Y+10	; 0x0a
    3cc4:	20 e0       	ldi	r18, 0x00	; 0
    3cc6:	3f ef       	ldi	r19, 0xFF	; 255
    3cc8:	4f e7       	ldi	r20, 0x7F	; 127
    3cca:	57 e4       	ldi	r21, 0x47	; 71
    3ccc:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__gtsf2>
    3cd0:	18 16       	cp	r1, r24
    3cd2:	4c f5       	brge	.+82     	; 0x3d26 <SevenSegment_voidDispaly+0x26e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3cd4:	6b 85       	ldd	r22, Y+11	; 0x0b
    3cd6:	7c 85       	ldd	r23, Y+12	; 0x0c
    3cd8:	8d 85       	ldd	r24, Y+13	; 0x0d
    3cda:	9e 85       	ldd	r25, Y+14	; 0x0e
    3cdc:	20 e0       	ldi	r18, 0x00	; 0
    3cde:	30 e0       	ldi	r19, 0x00	; 0
    3ce0:	40 e2       	ldi	r20, 0x20	; 32
    3ce2:	51 e4       	ldi	r21, 0x41	; 65
    3ce4:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <__mulsf3>
    3ce8:	dc 01       	movw	r26, r24
    3cea:	cb 01       	movw	r24, r22
    3cec:	bc 01       	movw	r22, r24
    3cee:	cd 01       	movw	r24, r26
    3cf0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3cf4:	dc 01       	movw	r26, r24
    3cf6:	cb 01       	movw	r24, r22
    3cf8:	9e 83       	std	Y+6, r25	; 0x06
    3cfa:	8d 83       	std	Y+5, r24	; 0x05
    3cfc:	0f c0       	rjmp	.+30     	; 0x3d1c <SevenSegment_voidDispaly+0x264>
    3cfe:	88 ec       	ldi	r24, 0xC8	; 200
    3d00:	90 e0       	ldi	r25, 0x00	; 0
    3d02:	9c 83       	std	Y+4, r25	; 0x04
    3d04:	8b 83       	std	Y+3, r24	; 0x03
    3d06:	8b 81       	ldd	r24, Y+3	; 0x03
    3d08:	9c 81       	ldd	r25, Y+4	; 0x04
    3d0a:	01 97       	sbiw	r24, 0x01	; 1
    3d0c:	f1 f7       	brne	.-4      	; 0x3d0a <SevenSegment_voidDispaly+0x252>
    3d0e:	9c 83       	std	Y+4, r25	; 0x04
    3d10:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d12:	8d 81       	ldd	r24, Y+5	; 0x05
    3d14:	9e 81       	ldd	r25, Y+6	; 0x06
    3d16:	01 97       	sbiw	r24, 0x01	; 1
    3d18:	9e 83       	std	Y+6, r25	; 0x06
    3d1a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d1c:	8d 81       	ldd	r24, Y+5	; 0x05
    3d1e:	9e 81       	ldd	r25, Y+6	; 0x06
    3d20:	00 97       	sbiw	r24, 0x00	; 0
    3d22:	69 f7       	brne	.-38     	; 0x3cfe <SevenSegment_voidDispaly+0x246>
    3d24:	14 c0       	rjmp	.+40     	; 0x3d4e <SevenSegment_voidDispaly+0x296>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d26:	6f 81       	ldd	r22, Y+7	; 0x07
    3d28:	78 85       	ldd	r23, Y+8	; 0x08
    3d2a:	89 85       	ldd	r24, Y+9	; 0x09
    3d2c:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d2e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3d32:	dc 01       	movw	r26, r24
    3d34:	cb 01       	movw	r24, r22
    3d36:	9e 83       	std	Y+6, r25	; 0x06
    3d38:	8d 83       	std	Y+5, r24	; 0x05
    3d3a:	8d 81       	ldd	r24, Y+5	; 0x05
    3d3c:	9e 81       	ldd	r25, Y+6	; 0x06
    3d3e:	9a 83       	std	Y+2, r25	; 0x02
    3d40:	89 83       	std	Y+1, r24	; 0x01
    3d42:	89 81       	ldd	r24, Y+1	; 0x01
    3d44:	9a 81       	ldd	r25, Y+2	; 0x02
    3d46:	01 97       	sbiw	r24, 0x01	; 1
    3d48:	f1 f7       	brne	.-4      	; 0x3d46 <SevenSegment_voidDispaly+0x28e>
    3d4a:	9a 83       	std	Y+2, r25	; 0x02
    3d4c:	89 83       	std	Y+1, r24	; 0x01
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[i]);
			_delay_ms(500);
		}
	} else if (Copy_u8Seconds < 99){
		u8 fnum,snum;
		for(i = Copy_u8Seconds; i > 0; i--)
    3d4e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3d50:	81 50       	subi	r24, 0x01	; 1
    3d52:	8f 8f       	std	Y+31, r24	; 0x1f
    3d54:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3d56:	88 23       	and	r24, r24
    3d58:	09 f0       	breq	.+2      	; 0x3d5c <SevenSegment_voidDispaly+0x2a4>
    3d5a:	54 cf       	rjmp	.-344    	; 0x3c04 <SevenSegment_voidDispaly+0x14c>
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT, SSD_Arr[fnum]);
			DIO_voidSetPortValue(SEVEN_SEGMENT_PORT2, SSD_Arr[snum]);
			_delay_ms(500);
		}
	}
}
    3d5c:	a0 96       	adiw	r28, 0x20	; 32
    3d5e:	0f b6       	in	r0, 0x3f	; 63
    3d60:	f8 94       	cli
    3d62:	de bf       	out	0x3e, r29	; 62
    3d64:	0f be       	out	0x3f, r0	; 63
    3d66:	cd bf       	out	0x3d, r28	; 61
    3d68:	cf 91       	pop	r28
    3d6a:	df 91       	pop	r29
    3d6c:	08 95       	ret

00003d6e <LED_voidInit>:

#include "../../01-LIB/STD_TYPES.h"
#include "../../04-MCAL/01-DIO/DIO_Interface.h"
#include "../01-LED/LED_Interface.h"

void LED_voidInit(u8 u8PinNum){
    3d6e:	df 93       	push	r29
    3d70:	cf 93       	push	r28
    3d72:	0f 92       	push	r0
    3d74:	cd b7       	in	r28, 0x3d	; 61
    3d76:	de b7       	in	r29, 0x3e	; 62
    3d78:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPinDirection(LED_PORT, u8PinNum, DIO_u8OUTPUT);
    3d7a:	81 e0       	ldi	r24, 0x01	; 1
    3d7c:	69 81       	ldd	r22, Y+1	; 0x01
    3d7e:	41 e0       	ldi	r20, 0x01	; 1
    3d80:	0e 94 80 12 	call	0x2500	; 0x2500 <DIO_voidSetPinDirection>
}
    3d84:	0f 90       	pop	r0
    3d86:	cf 91       	pop	r28
    3d88:	df 91       	pop	r29
    3d8a:	08 95       	ret

00003d8c <LEDs_voidInit>:

void LEDs_voidInit(u8 u8PinNum){
    3d8c:	df 93       	push	r29
    3d8e:	cf 93       	push	r28
    3d90:	0f 92       	push	r0
    3d92:	cd b7       	in	r28, 0x3d	; 61
    3d94:	de b7       	in	r29, 0x3e	; 62
    3d96:	89 83       	std	Y+1, r24	; 0x01
	//DDRC = 0b00000111; //output(C0,C1,C2)
	DIO_voidSetPortDirection(LED_PORT, u8PinNum);
    3d98:	81 e0       	ldi	r24, 0x01	; 1
    3d9a:	69 81       	ldd	r22, Y+1	; 0x01
    3d9c:	0e 94 84 14 	call	0x2908	; 0x2908 <DIO_voidSetPortDirection>
}
    3da0:	0f 90       	pop	r0
    3da2:	cf 91       	pop	r28
    3da4:	df 91       	pop	r29
    3da6:	08 95       	ret

00003da8 <LED_voidON>:

void LED_voidON(u8 u8PinNum){
    3da8:	df 93       	push	r29
    3daa:	cf 93       	push	r28
    3dac:	0f 92       	push	r0
    3dae:	cd b7       	in	r28, 0x3d	; 61
    3db0:	de b7       	in	r29, 0x3e	; 62
    3db2:	89 83       	std	Y+1, r24	; 0x01
	//PORTC = 0b00000001; //high(C0,C1,C2)
	DIO_voidSetPinValue(LED_PORT, u8PinNum, DIO_u8HIGH);
    3db4:	81 e0       	ldi	r24, 0x01	; 1
    3db6:	69 81       	ldd	r22, Y+1	; 0x01
    3db8:	41 e0       	ldi	r20, 0x01	; 1
    3dba:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
}
    3dbe:	0f 90       	pop	r0
    3dc0:	cf 91       	pop	r28
    3dc2:	df 91       	pop	r29
    3dc4:	08 95       	ret

00003dc6 <LEDs_voidON>:

void LEDs_voidON(u8 u8PinNum){
    3dc6:	df 93       	push	r29
    3dc8:	cf 93       	push	r28
    3dca:	0f 92       	push	r0
    3dcc:	cd b7       	in	r28, 0x3d	; 61
    3dce:	de b7       	in	r29, 0x3e	; 62
    3dd0:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPortValue(LED_PORT, u8PinNum);
    3dd2:	81 e0       	ldi	r24, 0x01	; 1
    3dd4:	69 81       	ldd	r22, Y+1	; 0x01
    3dd6:	0e 94 c6 14 	call	0x298c	; 0x298c <DIO_voidSetPortValue>
}
    3dda:	0f 90       	pop	r0
    3ddc:	cf 91       	pop	r28
    3dde:	df 91       	pop	r29
    3de0:	08 95       	ret

00003de2 <LED_voidOFF>:

void LED_voidOFF(u8 u8PinNum){
    3de2:	df 93       	push	r29
    3de4:	cf 93       	push	r28
    3de6:	0f 92       	push	r0
    3de8:	cd b7       	in	r28, 0x3d	; 61
    3dea:	de b7       	in	r29, 0x3e	; 62
    3dec:	89 83       	std	Y+1, r24	; 0x01
	//PORTC = 0b00000000; //low(C0,C1,C2)
	DIO_voidSetPinValue(LED_PORT, u8PinNum, DIO_u8LOW);
    3dee:	81 e0       	ldi	r24, 0x01	; 1
    3df0:	69 81       	ldd	r22, Y+1	; 0x01
    3df2:	40 e0       	ldi	r20, 0x00	; 0
    3df4:	0e 94 82 13 	call	0x2704	; 0x2704 <DIO_voidSetPinValue>
}
    3df8:	0f 90       	pop	r0
    3dfa:	cf 91       	pop	r28
    3dfc:	df 91       	pop	r29
    3dfe:	08 95       	ret

00003e00 <LEDs_voidOFF>:

void LEDs_voidOFF(u8 u8PinNum){
    3e00:	df 93       	push	r29
    3e02:	cf 93       	push	r28
    3e04:	0f 92       	push	r0
    3e06:	cd b7       	in	r28, 0x3d	; 61
    3e08:	de b7       	in	r29, 0x3e	; 62
    3e0a:	89 83       	std	Y+1, r24	; 0x01
	DIO_voidSetPortValue(LED_PORT, u8PinNum);
    3e0c:	81 e0       	ldi	r24, 0x01	; 1
    3e0e:	69 81       	ldd	r22, Y+1	; 0x01
    3e10:	0e 94 c6 14 	call	0x298c	; 0x298c <DIO_voidSetPortValue>
}
    3e14:	0f 90       	pop	r0
    3e16:	cf 91       	pop	r28
    3e18:	df 91       	pop	r29
    3e1a:	08 95       	ret

00003e1c <main>:
#include "../03-HAL/01-LED/LED_Interface.h"
#include "../03-HAL/04-CLCD/CLCD_Interface.h"
#include "../03-HAL/05-KPD/KPD_Interface.h"
#include "util/delay.h"

int main(void){
    3e1c:	af 92       	push	r10
    3e1e:	bf 92       	push	r11
    3e20:	cf 92       	push	r12
    3e22:	df 92       	push	r13
    3e24:	ef 92       	push	r14
    3e26:	ff 92       	push	r15
    3e28:	0f 93       	push	r16
    3e2a:	1f 93       	push	r17
    3e2c:	df 93       	push	r29
    3e2e:	cf 93       	push	r28
    3e30:	cd b7       	in	r28, 0x3d	; 61
    3e32:	de b7       	in	r29, 0x3e	; 62
    3e34:	61 97       	sbiw	r28, 0x11	; 17
    3e36:	0f b6       	in	r0, 0x3f	; 63
    3e38:	f8 94       	cli
    3e3a:	de bf       	out	0x3e, r29	; 62
    3e3c:	0f be       	out	0x3f, r0	; 63
    3e3e:	cd bf       	out	0x3d, r28	; 61
	KPD_init();
    3e40:	0e 94 00 16 	call	0x2c00	; 0x2c00 <KPD_init>
	CLCD_init();
    3e44:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <CLCD_init>
	u8 KeyPressed;
	u32 num,var_1,var_2,sum=0;
    3e48:	19 82       	std	Y+1, r1	; 0x01
    3e4a:	1a 82       	std	Y+2, r1	; 0x02
    3e4c:	1b 82       	std	Y+3, r1	; 0x03
    3e4e:	1c 82       	std	Y+4, r1	; 0x04

	while(1){
		KeyPressed = KPD_GetPressedKey();
    3e50:	0e 94 29 16 	call	0x2c52	; 0x2c52 <KPD_GetPressedKey>
    3e54:	89 8b       	std	Y+17, r24	; 0x11
		if(KeyPressed != 0){
    3e56:	89 89       	ldd	r24, Y+17	; 0x11
    3e58:	88 23       	and	r24, r24
    3e5a:	d1 f3       	breq	.-12     	; 0x3e50 <main+0x34>
			CLCD_WriteData(KeyPressed);
    3e5c:	89 89       	ldd	r24, Y+17	; 0x11
    3e5e:	0e 94 20 19 	call	0x3240	; 0x3240 <CLCD_WriteData>
			if(KeyPressed >= '0' && KeyPressed <= '9'){
    3e62:	89 89       	ldd	r24, Y+17	; 0x11
    3e64:	80 33       	cpi	r24, 0x30	; 48
    3e66:	10 f1       	brcs	.+68     	; 0x3eac <main+0x90>
    3e68:	89 89       	ldd	r24, Y+17	; 0x11
    3e6a:	8a 33       	cpi	r24, 0x3A	; 58
    3e6c:	f8 f4       	brcc	.+62     	; 0x3eac <main+0x90>
				num = (num * 10) + (KeyPressed- 48);
    3e6e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3e70:	9e 85       	ldd	r25, Y+14	; 0x0e
    3e72:	af 85       	ldd	r26, Y+15	; 0x0f
    3e74:	b8 89       	ldd	r27, Y+16	; 0x10
    3e76:	2a e0       	ldi	r18, 0x0A	; 10
    3e78:	30 e0       	ldi	r19, 0x00	; 0
    3e7a:	40 e0       	ldi	r20, 0x00	; 0
    3e7c:	50 e0       	ldi	r21, 0x00	; 0
    3e7e:	bc 01       	movw	r22, r24
    3e80:	cd 01       	movw	r24, r26
    3e82:	0e 94 cb 1f 	call	0x3f96	; 0x3f96 <__mulsi3>
    3e86:	9b 01       	movw	r18, r22
    3e88:	ac 01       	movw	r20, r24
    3e8a:	89 89       	ldd	r24, Y+17	; 0x11
    3e8c:	88 2f       	mov	r24, r24
    3e8e:	90 e0       	ldi	r25, 0x00	; 0
    3e90:	c0 97       	sbiw	r24, 0x30	; 48
    3e92:	aa 27       	eor	r26, r26
    3e94:	97 fd       	sbrc	r25, 7
    3e96:	a0 95       	com	r26
    3e98:	ba 2f       	mov	r27, r26
    3e9a:	82 0f       	add	r24, r18
    3e9c:	93 1f       	adc	r25, r19
    3e9e:	a4 1f       	adc	r26, r20
    3ea0:	b5 1f       	adc	r27, r21
    3ea2:	8d 87       	std	Y+13, r24	; 0x0d
    3ea4:	9e 87       	std	Y+14, r25	; 0x0e
    3ea6:	af 87       	std	Y+15, r26	; 0x0f
    3ea8:	b8 8b       	std	Y+16, r27	; 0x10
    3eaa:	5e c0       	rjmp	.+188    	; 0x3f68 <main+0x14c>
			}
			else if(KeyPressed == '+'){
    3eac:	89 89       	ldd	r24, Y+17	; 0x11
    3eae:	8b 32       	cpi	r24, 0x2B	; 43
    3eb0:	69 f4       	brne	.+26     	; 0x3ecc <main+0xb0>
				var_1 = num;
    3eb2:	8d 85       	ldd	r24, Y+13	; 0x0d
    3eb4:	9e 85       	ldd	r25, Y+14	; 0x0e
    3eb6:	af 85       	ldd	r26, Y+15	; 0x0f
    3eb8:	b8 89       	ldd	r27, Y+16	; 0x10
    3eba:	89 87       	std	Y+9, r24	; 0x09
    3ebc:	9a 87       	std	Y+10, r25	; 0x0a
    3ebe:	ab 87       	std	Y+11, r26	; 0x0b
    3ec0:	bc 87       	std	Y+12, r27	; 0x0c
				num = 0;
    3ec2:	1d 86       	std	Y+13, r1	; 0x0d
    3ec4:	1e 86       	std	Y+14, r1	; 0x0e
    3ec6:	1f 86       	std	Y+15, r1	; 0x0f
    3ec8:	18 8a       	std	Y+16, r1	; 0x10
    3eca:	4e c0       	rjmp	.+156    	; 0x3f68 <main+0x14c>
			}
			else if(KeyPressed == '='){
    3ecc:	89 89       	ldd	r24, Y+17	; 0x11
    3ece:	8d 33       	cpi	r24, 0x3D	; 61
    3ed0:	09 f0       	breq	.+2      	; 0x3ed4 <main+0xb8>
    3ed2:	4a c0       	rjmp	.+148    	; 0x3f68 <main+0x14c>
				if(sum != 0){
    3ed4:	89 81       	ldd	r24, Y+1	; 0x01
    3ed6:	9a 81       	ldd	r25, Y+2	; 0x02
    3ed8:	ab 81       	ldd	r26, Y+3	; 0x03
    3eda:	bc 81       	ldd	r27, Y+4	; 0x04
    3edc:	00 97       	sbiw	r24, 0x00	; 0
    3ede:	a1 05       	cpc	r26, r1
    3ee0:	b1 05       	cpc	r27, r1
    3ee2:	89 f0       	breq	.+34     	; 0x3f06 <main+0xea>
					sum +=num;
    3ee4:	89 81       	ldd	r24, Y+1	; 0x01
    3ee6:	9a 81       	ldd	r25, Y+2	; 0x02
    3ee8:	ab 81       	ldd	r26, Y+3	; 0x03
    3eea:	bc 81       	ldd	r27, Y+4	; 0x04
    3eec:	2d 85       	ldd	r18, Y+13	; 0x0d
    3eee:	3e 85       	ldd	r19, Y+14	; 0x0e
    3ef0:	4f 85       	ldd	r20, Y+15	; 0x0f
    3ef2:	58 89       	ldd	r21, Y+16	; 0x10
    3ef4:	82 0f       	add	r24, r18
    3ef6:	93 1f       	adc	r25, r19
    3ef8:	a4 1f       	adc	r26, r20
    3efa:	b5 1f       	adc	r27, r21
    3efc:	89 83       	std	Y+1, r24	; 0x01
    3efe:	9a 83       	std	Y+2, r25	; 0x02
    3f00:	ab 83       	std	Y+3, r26	; 0x03
    3f02:	bc 83       	std	Y+4, r27	; 0x04
    3f04:	18 c0       	rjmp	.+48     	; 0x3f36 <main+0x11a>
				}
				else{
					var_2 = num;
    3f06:	8d 85       	ldd	r24, Y+13	; 0x0d
    3f08:	9e 85       	ldd	r25, Y+14	; 0x0e
    3f0a:	af 85       	ldd	r26, Y+15	; 0x0f
    3f0c:	b8 89       	ldd	r27, Y+16	; 0x10
    3f0e:	8d 83       	std	Y+5, r24	; 0x05
    3f10:	9e 83       	std	Y+6, r25	; 0x06
    3f12:	af 83       	std	Y+7, r26	; 0x07
    3f14:	b8 87       	std	Y+8, r27	; 0x08
					sum = var_1 + var_2;
    3f16:	29 85       	ldd	r18, Y+9	; 0x09
    3f18:	3a 85       	ldd	r19, Y+10	; 0x0a
    3f1a:	4b 85       	ldd	r20, Y+11	; 0x0b
    3f1c:	5c 85       	ldd	r21, Y+12	; 0x0c
    3f1e:	8d 81       	ldd	r24, Y+5	; 0x05
    3f20:	9e 81       	ldd	r25, Y+6	; 0x06
    3f22:	af 81       	ldd	r26, Y+7	; 0x07
    3f24:	b8 85       	ldd	r27, Y+8	; 0x08
    3f26:	82 0f       	add	r24, r18
    3f28:	93 1f       	adc	r25, r19
    3f2a:	a4 1f       	adc	r26, r20
    3f2c:	b5 1f       	adc	r27, r21
    3f2e:	89 83       	std	Y+1, r24	; 0x01
    3f30:	9a 83       	std	Y+2, r25	; 0x02
    3f32:	ab 83       	std	Y+3, r26	; 0x03
    3f34:	bc 83       	std	Y+4, r27	; 0x04

				}
				CLCD_DisplayClear();
    3f36:	0e 94 86 1a 	call	0x350c	; 0x350c <CLCD_DisplayClear>
				CLCD_GoTo(1,1);
    3f3a:	81 e0       	ldi	r24, 0x01	; 1
    3f3c:	61 e0       	ldi	r22, 0x01	; 1
    3f3e:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <CLCD_GoTo>
				CLCD_WriteNum(sum);
    3f42:	89 81       	ldd	r24, Y+1	; 0x01
    3f44:	9a 81       	ldd	r25, Y+2	; 0x02
    3f46:	ab 81       	ldd	r26, Y+3	; 0x03
    3f48:	bc 81       	ldd	r27, Y+4	; 0x04
    3f4a:	5c 01       	movw	r10, r24
    3f4c:	6d 01       	movw	r12, r26
    3f4e:	ee 24       	eor	r14, r14
    3f50:	ff 24       	eor	r15, r15
    3f52:	87 01       	movw	r16, r14
    3f54:	2a 2d       	mov	r18, r10
    3f56:	3b 2d       	mov	r19, r11
    3f58:	4c 2d       	mov	r20, r12
    3f5a:	5d 2d       	mov	r21, r13
    3f5c:	6e 2d       	mov	r22, r14
    3f5e:	7f 2d       	mov	r23, r15
    3f60:	80 2f       	mov	r24, r16
    3f62:	91 2f       	mov	r25, r17
    3f64:	0e 94 08 1b 	call	0x3610	; 0x3610 <CLCD_WriteNum>
			}
			if (KeyPressed == 'C'){
    3f68:	89 89       	ldd	r24, Y+17	; 0x11
    3f6a:	83 34       	cpi	r24, 0x43	; 67
    3f6c:	09 f0       	breq	.+2      	; 0x3f70 <main+0x154>
    3f6e:	70 cf       	rjmp	.-288    	; 0x3e50 <main+0x34>
				sum = 0;
    3f70:	19 82       	std	Y+1, r1	; 0x01
    3f72:	1a 82       	std	Y+2, r1	; 0x02
    3f74:	1b 82       	std	Y+3, r1	; 0x03
    3f76:	1c 82       	std	Y+4, r1	; 0x04
				num = 0;
    3f78:	1d 86       	std	Y+13, r1	; 0x0d
    3f7a:	1e 86       	std	Y+14, r1	; 0x0e
    3f7c:	1f 86       	std	Y+15, r1	; 0x0f
    3f7e:	18 8a       	std	Y+16, r1	; 0x10
		    	var_1 = 0;
    3f80:	19 86       	std	Y+9, r1	; 0x09
    3f82:	1a 86       	std	Y+10, r1	; 0x0a
    3f84:	1b 86       	std	Y+11, r1	; 0x0b
    3f86:	1c 86       	std	Y+12, r1	; 0x0c
		    	var_1 = 0;
    3f88:	19 86       	std	Y+9, r1	; 0x09
    3f8a:	1a 86       	std	Y+10, r1	; 0x0a
    3f8c:	1b 86       	std	Y+11, r1	; 0x0b
    3f8e:	1c 86       	std	Y+12, r1	; 0x0c
				CLCD_DisplayClear();
    3f90:	0e 94 86 1a 	call	0x350c	; 0x350c <CLCD_DisplayClear>
    3f94:	5d cf       	rjmp	.-326    	; 0x3e50 <main+0x34>

00003f96 <__mulsi3>:
    3f96:	62 9f       	mul	r22, r18
    3f98:	d0 01       	movw	r26, r0
    3f9a:	73 9f       	mul	r23, r19
    3f9c:	f0 01       	movw	r30, r0
    3f9e:	82 9f       	mul	r24, r18
    3fa0:	e0 0d       	add	r30, r0
    3fa2:	f1 1d       	adc	r31, r1
    3fa4:	64 9f       	mul	r22, r20
    3fa6:	e0 0d       	add	r30, r0
    3fa8:	f1 1d       	adc	r31, r1
    3faa:	92 9f       	mul	r25, r18
    3fac:	f0 0d       	add	r31, r0
    3fae:	83 9f       	mul	r24, r19
    3fb0:	f0 0d       	add	r31, r0
    3fb2:	74 9f       	mul	r23, r20
    3fb4:	f0 0d       	add	r31, r0
    3fb6:	65 9f       	mul	r22, r21
    3fb8:	f0 0d       	add	r31, r0
    3fba:	99 27       	eor	r25, r25
    3fbc:	72 9f       	mul	r23, r18
    3fbe:	b0 0d       	add	r27, r0
    3fc0:	e1 1d       	adc	r30, r1
    3fc2:	f9 1f       	adc	r31, r25
    3fc4:	63 9f       	mul	r22, r19
    3fc6:	b0 0d       	add	r27, r0
    3fc8:	e1 1d       	adc	r30, r1
    3fca:	f9 1f       	adc	r31, r25
    3fcc:	bd 01       	movw	r22, r26
    3fce:	cf 01       	movw	r24, r30
    3fd0:	11 24       	eor	r1, r1
    3fd2:	08 95       	ret

00003fd4 <__udivmodqi4>:
    3fd4:	99 1b       	sub	r25, r25
    3fd6:	79 e0       	ldi	r23, 0x09	; 9
    3fd8:	04 c0       	rjmp	.+8      	; 0x3fe2 <__udivmodqi4_ep>

00003fda <__udivmodqi4_loop>:
    3fda:	99 1f       	adc	r25, r25
    3fdc:	96 17       	cp	r25, r22
    3fde:	08 f0       	brcs	.+2      	; 0x3fe2 <__udivmodqi4_ep>
    3fe0:	96 1b       	sub	r25, r22

00003fe2 <__udivmodqi4_ep>:
    3fe2:	88 1f       	adc	r24, r24
    3fe4:	7a 95       	dec	r23
    3fe6:	c9 f7       	brne	.-14     	; 0x3fda <__udivmodqi4_loop>
    3fe8:	80 95       	com	r24
    3fea:	08 95       	ret

00003fec <__divmodsi4>:
    3fec:	97 fb       	bst	r25, 7
    3fee:	09 2e       	mov	r0, r25
    3ff0:	05 26       	eor	r0, r21
    3ff2:	0e d0       	rcall	.+28     	; 0x4010 <__divmodsi4_neg1>
    3ff4:	57 fd       	sbrc	r21, 7
    3ff6:	04 d0       	rcall	.+8      	; 0x4000 <__divmodsi4_neg2>
    3ff8:	14 d0       	rcall	.+40     	; 0x4022 <__udivmodsi4>
    3ffa:	0a d0       	rcall	.+20     	; 0x4010 <__divmodsi4_neg1>
    3ffc:	00 1c       	adc	r0, r0
    3ffe:	38 f4       	brcc	.+14     	; 0x400e <__divmodsi4_exit>

00004000 <__divmodsi4_neg2>:
    4000:	50 95       	com	r21
    4002:	40 95       	com	r20
    4004:	30 95       	com	r19
    4006:	21 95       	neg	r18
    4008:	3f 4f       	sbci	r19, 0xFF	; 255
    400a:	4f 4f       	sbci	r20, 0xFF	; 255
    400c:	5f 4f       	sbci	r21, 0xFF	; 255

0000400e <__divmodsi4_exit>:
    400e:	08 95       	ret

00004010 <__divmodsi4_neg1>:
    4010:	f6 f7       	brtc	.-4      	; 0x400e <__divmodsi4_exit>
    4012:	90 95       	com	r25
    4014:	80 95       	com	r24
    4016:	70 95       	com	r23
    4018:	61 95       	neg	r22
    401a:	7f 4f       	sbci	r23, 0xFF	; 255
    401c:	8f 4f       	sbci	r24, 0xFF	; 255
    401e:	9f 4f       	sbci	r25, 0xFF	; 255
    4020:	08 95       	ret

00004022 <__udivmodsi4>:
    4022:	a1 e2       	ldi	r26, 0x21	; 33
    4024:	1a 2e       	mov	r1, r26
    4026:	aa 1b       	sub	r26, r26
    4028:	bb 1b       	sub	r27, r27
    402a:	fd 01       	movw	r30, r26
    402c:	0d c0       	rjmp	.+26     	; 0x4048 <__udivmodsi4_ep>

0000402e <__udivmodsi4_loop>:
    402e:	aa 1f       	adc	r26, r26
    4030:	bb 1f       	adc	r27, r27
    4032:	ee 1f       	adc	r30, r30
    4034:	ff 1f       	adc	r31, r31
    4036:	a2 17       	cp	r26, r18
    4038:	b3 07       	cpc	r27, r19
    403a:	e4 07       	cpc	r30, r20
    403c:	f5 07       	cpc	r31, r21
    403e:	20 f0       	brcs	.+8      	; 0x4048 <__udivmodsi4_ep>
    4040:	a2 1b       	sub	r26, r18
    4042:	b3 0b       	sbc	r27, r19
    4044:	e4 0b       	sbc	r30, r20
    4046:	f5 0b       	sbc	r31, r21

00004048 <__udivmodsi4_ep>:
    4048:	66 1f       	adc	r22, r22
    404a:	77 1f       	adc	r23, r23
    404c:	88 1f       	adc	r24, r24
    404e:	99 1f       	adc	r25, r25
    4050:	1a 94       	dec	r1
    4052:	69 f7       	brne	.-38     	; 0x402e <__udivmodsi4_loop>
    4054:	60 95       	com	r22
    4056:	70 95       	com	r23
    4058:	80 95       	com	r24
    405a:	90 95       	com	r25
    405c:	9b 01       	movw	r18, r22
    405e:	ac 01       	movw	r20, r24
    4060:	bd 01       	movw	r22, r26
    4062:	cf 01       	movw	r24, r30
    4064:	08 95       	ret

00004066 <__prologue_saves__>:
    4066:	2f 92       	push	r2
    4068:	3f 92       	push	r3
    406a:	4f 92       	push	r4
    406c:	5f 92       	push	r5
    406e:	6f 92       	push	r6
    4070:	7f 92       	push	r7
    4072:	8f 92       	push	r8
    4074:	9f 92       	push	r9
    4076:	af 92       	push	r10
    4078:	bf 92       	push	r11
    407a:	cf 92       	push	r12
    407c:	df 92       	push	r13
    407e:	ef 92       	push	r14
    4080:	ff 92       	push	r15
    4082:	0f 93       	push	r16
    4084:	1f 93       	push	r17
    4086:	cf 93       	push	r28
    4088:	df 93       	push	r29
    408a:	cd b7       	in	r28, 0x3d	; 61
    408c:	de b7       	in	r29, 0x3e	; 62
    408e:	ca 1b       	sub	r28, r26
    4090:	db 0b       	sbc	r29, r27
    4092:	0f b6       	in	r0, 0x3f	; 63
    4094:	f8 94       	cli
    4096:	de bf       	out	0x3e, r29	; 62
    4098:	0f be       	out	0x3f, r0	; 63
    409a:	cd bf       	out	0x3d, r28	; 61
    409c:	09 94       	ijmp

0000409e <__epilogue_restores__>:
    409e:	2a 88       	ldd	r2, Y+18	; 0x12
    40a0:	39 88       	ldd	r3, Y+17	; 0x11
    40a2:	48 88       	ldd	r4, Y+16	; 0x10
    40a4:	5f 84       	ldd	r5, Y+15	; 0x0f
    40a6:	6e 84       	ldd	r6, Y+14	; 0x0e
    40a8:	7d 84       	ldd	r7, Y+13	; 0x0d
    40aa:	8c 84       	ldd	r8, Y+12	; 0x0c
    40ac:	9b 84       	ldd	r9, Y+11	; 0x0b
    40ae:	aa 84       	ldd	r10, Y+10	; 0x0a
    40b0:	b9 84       	ldd	r11, Y+9	; 0x09
    40b2:	c8 84       	ldd	r12, Y+8	; 0x08
    40b4:	df 80       	ldd	r13, Y+7	; 0x07
    40b6:	ee 80       	ldd	r14, Y+6	; 0x06
    40b8:	fd 80       	ldd	r15, Y+5	; 0x05
    40ba:	0c 81       	ldd	r16, Y+4	; 0x04
    40bc:	1b 81       	ldd	r17, Y+3	; 0x03
    40be:	aa 81       	ldd	r26, Y+2	; 0x02
    40c0:	b9 81       	ldd	r27, Y+1	; 0x01
    40c2:	ce 0f       	add	r28, r30
    40c4:	d1 1d       	adc	r29, r1
    40c6:	0f b6       	in	r0, 0x3f	; 63
    40c8:	f8 94       	cli
    40ca:	de bf       	out	0x3e, r29	; 62
    40cc:	0f be       	out	0x3f, r0	; 63
    40ce:	cd bf       	out	0x3d, r28	; 61
    40d0:	ed 01       	movw	r28, r26
    40d2:	08 95       	ret

000040d4 <_exit>:
    40d4:	f8 94       	cli

000040d6 <__stop_program>:
    40d6:	ff cf       	rjmp	.-2      	; 0x40d6 <__stop_program>
